generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model TwoFactorHistory {
  id          Int      @id @default(autoincrement())
  companyId   Int      @map("company_id")
  passcode    String
  userId      Int      @map("user_id")
  requestDate DateTime @map("request_date")
  isConfirmed Int      @map("is_confirmed")
  company     Company  @relation(fields: [companyId], references: [id])

  @@map("2fa_history")
}

model ThirdPartyAccess {
  id          Int     @id @default(autoincrement())
  occupier    Int
  companyId   Int     @map("occupier")
  companyName String  @map("company_name")
  email       String
  passcode    Int
  firstName   String  @map("first_name")
  lastName    String  @map("last_name")
  logo        String
  accessId    Int     @map("access_id")
  company     Company @relation(fields: [companyId], references: [id])

  @@map("3rd_party_access")
}

model AcceptEmailToken {
  id        Int     @id @default(autoincrement())
  companyId Int     @map("company_id")
  email     String
  token     Int
  company   Company @relation(fields: [companyId], references: [id])

  @@map("accept_email_token")
}

model AccountBalance {
  id                 Int     @id @default(autoincrement())
  contactId          Int?    @unique @map("contact_id")
  companyId          Int     @map("company_id")
  insuranceCompanyId Int     @map("insurance_companyId")
  balance            Float
  imported           Int
  company            Company @relation(fields: [companyId], references: [id])

  @@index([companyId], name: "companyId")
  @@map("account_balance")
}

model AccountBalanceLog {
  id                 Int    @id @default(autoincrement())
  companyId          Int    @map("company_id")
  contactId          Int    @map("contact_id")
  insuranceCompanyId Int    @map("insurance_companyId")
  amount             Float
  dateTime           Int    @map("date_time")
  productId          Int?   @map("product_id")
  description        String
  saleId             Int    @map("sale_id")
  referralId         Int    @map("referral_id")
  imported           Int
  refSaleId          Int    @map("ref_saleId")

  @@index([companyId], name: "comnpany_id")
  @@index([companyId, dateTime], name: "company_time")
  @@map("account_balance_log")
}

model AccountManager {
  id                 Int       @id @default(autoincrement())
  organisationName   String?   @map("organisation_name")
  organisationStatus Int       @map("organisation_status")
  organisationType   Int?      @map("organisation_type")
  organisationNumber String?   @map("organisation_number")
  organisationOwner  Int?      @map("organisation_owner")
  address1           String?
  address2           String?
  address3           String?
  town               String?
  county             String?
  postCode           String?   @map("post_code")
  country            String?
  tel                String?
  altTel             String?   @map("alt_tel")
  email              String?
  fax                String?
  website            String?
  slaContract        Int?      @map("sla_contract")
  vatRegId           String    @map("vat_reg_id")
  createdDate        DateTime? @map("created_date")
  modifiedDate       DateTime? @map("modified_date")
  occupier           Int?
  conPer1            String    @map("con_per_1")
  conNum1            String    @map("con_num_1")
  conPer2            String    @map("con_per_2")
  conNum2            String    @map("con_num_2")
  conPer3            String    @map("con_per_3")
  conNum3            String    @map("con_num_3")

  @@map("account_manager")
}

model AcLog {
  id        Int      @id @default(autoincrement())
  urlId     Int      @map("url_id")
  actionId  Int      @map("action_id")
  critical  Boolean
  occupier  Int
  userId    Int      @map("user_id")
  date      DateTime
  humanize  String?
  userAgent String   @map("user_agent")
  ipv4      Int
  rowAff    Int      @map("row_aff")
  rowId     Int      @map("row_id")
  rowData   String?  @map("row_data")

  @@index([actionId], name: "action")
  @@index([humanize], name: "humanize")
  @@index([occupier], name: "occupier")
  @@index([rowAff], name: "rowAff")
  @@index([rowId], name: "rowId")
  @@index([urlId, actionId], name: "urlId")
  @@index([userId], name: "userId")
  @@map("ac_logs")
}

model AcLogAction {
  id           Int     @id @default(autoincrement())
  pabauid      String
  actionName   String  @map("action_name")
  actionStatus Boolean @map("action_status")
  command      String
  tableAff     String  @map("table_aff")
  rowAff       Int     @map("row_aff")
  rowId        Int     @map("row_id")

  @@index([actionName], name: "actionName")
  @@index([actionStatus], name: "actionStatus")
  @@index([command], name: "command")
  @@index([tableAff], name: "tableAff")
  @@map("ac_log_actions")
}

model AcLogUrl {
  id      Int    @id @default(autoincrement())
  url     String
  file    String
  referer String

  @@index([file], name: "file")
  @@index([referer], name: "referer")
  @@index([url], name: "url")
  @@map("ac_log_urls")
}

model Company {
  id               Int                  @id @default(autoincrement())
  user             String
  digit8           Int
  admin            Int
  creationDate     DateTime             @map("creation_date")
  image            String
  slug             String?              @unique
  remoteUrl        String?              @map("remote_url")
  remoteConnect    String?              @map("remote_connect")
  cronEnabled      Boolean?             @map("cron_enabled")
  migrated         Int?
  details          CompanyDetails?
  subscription     CompanySubscription?
  TwoFactorHistory TwoFactorHistory[]
  ThirdPartyAccess ThirdPartyAccess[]
  AcceptEmailToken AcceptEmailToken[]
  AccountBalance   AccountBalance[]
  MarketingSource  MarketingSource[]
  CmCase           CmCase[]
  CmCaseReply      CmCaseReply[]
  CmCampaign       CmCampaign[]
  User             User[]
  Candidate        Candidate[]

  @@map("admin")
}

model AdvertCampaign {
  id               Int    @id @default(autoincrement())
  advertName       String @map("advert_name")
  advertType       String @map("advert_type")
  campaignBudget   String @map("campaign_budget")
  campaignInterval String @map("campaign_interval")
  campaignAudience String @map("campaign_audience")
  campaignId       Int    @map("campaign_id")
  cid              Int
  attachId         Int    @map("attach_id")
  engagement       String
  advertReach      Int    @map("advert_reach")
  Clicks           Int
  start            String
  end              String
  url              String
  attachedBy       String @map("attached_by")
  attachTime       String @map("attach_time")

  @@map("advert_campaign")
}

model ApiDebug {
  id           Int      @id @default(autoincrement())
  dataReceived String   @map("data_received")
  companyId    Int      @map("company_id")
  apiCode      Int      @map("api_code")
  createdDate  DateTime @map("created_date")
  dataType     String   @map("data_type")

  @@map("api_debug")
}

model ApiKey {
  id           Int      @id @default(autoincrement())
  companyId    Int      @map("company_id")
  apiKey       String   @map("api_key")
  appType      String   @map("app_type")
  createdDate  DateTime @map("created_date")
  contacts     Int      @default(0)
  bookings     Int      @default(0)
  invoices     Int      @default(0)
  locations    Int      @default(0)
  services     Int      @default(0)
  staff        Int      @default(0)
  financials   Int
  leads        Int
  medicalForms Int      @map("medical_forms")
  reports      Int      @default(0)

  @@map("api_key")
}

model AppBeforeAfter {
  id        Int    @id @default(autoincrement())
  companyId Int    @map("company_id")
  contactId Int    @map("contact_id")
  beforeImg String @map("before_img")
  afterImg  String @map("after_img")
  passKey   String @map("pass_key")

  @@map("app_before_after")
}

model AppPermission {
  id      Int    @id @default(autoincrement())
  company Int
  appid   String

  @@index([appid, company], name: "app_company")
  @@index([company], name: "company")
  @@map("app_permissions")
}

model AppSubscription {
  id          Int    @id @default(autoincrement())
  keyValue    String @map("key_value")
  name        String
  Description String
  price       Float

  @@index([keyValue], name: "keyValue")
  @@map("app_subscriptions")
}

model AppSubscriptionsCompanyPrice {
  id          Int    @id @default(autoincrement())
  occupier    Int
  appKeyValue String @map("app_key_value")
  price       Float

  @@index([appKeyValue], name: "appKeyValue")
  @@map("app_subscriptions_company_prices")
}

model AttachmentHelperLite {
  id        Int    @id @default(autoincrement())
  contactId Int    @map("contact_id")
  f         String
  x         String
  type      Int

  @@map("attachment_helper_lite")
}

model AtAnswer {
  id         Int    @id @default(autoincrement())
  questionId Int    @map("question_id")
  name       String
  image      String

  @@map("at_answers")
}

model SecondAtAnswer {
  id         Int    @id @default(autoincrement())
  questionId Int    @map("question_id")
  name       String

  @@map("at_answers2")
}

model AtConcern {
  id     Int    @id @default(autoincrement())
  name   String
  image  String
  region String

  @@map("at_concerns")
}

// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
// model at_concern_choices {
// company_id Int
// concern_id Int
// }

// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
// model at_concern_relations {
// company_id Int
// concern_id Int
// product_id Int
// }

model AtQuestion {
  id        Int    @id @default(autoincrement())
  companyId Int    @map("company_id")
  name      String
  order     Int
  region    String

  @@map("at_questions")
}

model SecondAtQuestion {
  id        Int    @id @default(autoincrement())
  companyId Int    @map("company_id")
  name      String
  type      String

  @@map("at_questions2")
}

model AtQuestionsRelation {
  companyId Int @map("company_id")
  answerId  Int @map("answer_id")
  productId Int @map("product_id")

  @@id([companyId, answerId, productId])
  @@map("at_question_relations")
}

model AtQuizTake {
  id        Int      @id @default(autoincrement())
  companyId Int      @map("company_id")
  name      String
  email     String
  takeDate  DateTime @map("take_date")
  answers   String
  concerns  String
  answers2  String
  products  String

  @@map("at_quiz_takes")
}

model AtSetting {
  id         Int    @id @default(autoincrement())
  companyId  Int    @map("company_id")
  logo       String
  background String
  fontFamily String @map("font_family")

  @@map("at_settings")
}

model AtTreatment {
  id          Int    @id @default(autoincrement())
  companyId   Int    @map("company_id")
  name        String
  image       String
  description String

  @@map("at_treatments")
}

model AutomationAction {
  id         Int    @id @default(autoincrement())
  triggerId  Int    @map("trigger_id")
  company    Int
  code       String
  actionData String @map("action_data")
  order      Int

  @@index([company], name: "company")
  @@map("automation_actions")
}

model AutomationDelay {
  id            Int      @id @default(autoincrement())
  actionRows    String   @map("action_rows")
  dataArray     String   @map("data_array")
  code          String
  company       Int
  delay         Int
  dateQueued    DateTime @map("date_queued")
  appointmentId Int?     @map("appointment_id")

  @@index([company], name: "company")
  @@index([dateQueued], name: "dateQueued")
  @@index([delay], name: "delay")
  @@map("automation_delay")
}

model AutomationFolder {
  id          Int    @id @default(autoincrement())
  companyId   Int    @map("company_id")
  name        String
  description String

  @@map("automation_folders")
}

model AutomationLog {
  id          Int      @id @default(autoincrement())
  company     Int
  dateCreated DateTime @default(now()) @map("date_created")
  message     String
  parentId    Int?     @map("parent_id")
  uid         Int?

  @@map("automation_log")
}

model AutomationRule {
  id          Int       @id @default(autoincrement())
  name        String
  company     Int
  active      Boolean   @default(false)
  source      String
  dateStart   DateTime? @map("date_start")
  dateEnd     DateTime? @map("date_end")
  description String
  needsConfig Int       @map("needs_config")
  folderId    Int       @default(1) @map("folder_id")

  @@index([active], name: "active")
  @@index([company], name: "company")
  @@index([dateEnd], name: "dateEnd")
  @@index([dateStart], name: "dateStart")
  @@map("automation_rules")
}

model AutomationTrigger {
  id          Int    @id @default(autoincrement())
  ruleId      Int    @map("rule_id")
  name        String
  company     Int
  code        String
  triggerData String @map("trigger_data")
  order       Int

  @@index([code], name: "code")
  @@index([company], name: "company")
  @@index([ruleId], name: "ruleId")
  @@map("automation_triggers")
}

model AvilableDatesLog {
  id       Int      @id @default(autoincrement())
  occupier String
  uid      Int
  date     DateTime
  start    DateTime
  end      DateTime

  @@map("available_dates_log")
}

model BacsAccount {
  id            Int    @id @default(autoincrement())
  bankTag       String @map("bank_tag")
  compId        Int    @map("comp_id")
  branchName    String @map("branch_name")
  accountHolder String @map("account_holder")
  accountNo     Int    @map("account_no")
  sortCode      String @map("sort_code")

  @@map("bacs_account")
}

model Batch {
  id           Int       @id @default(autoincrement())
  companyId    Int       @map("company_id")
  orderId      Int       @default(0) @map("order_id")
  orderItemId  String?   @map("order_item_id")
  batchNo      String    @map("batch_no")
  qty          Int
  uid          Int
  creationDate DateTime  @map("creation_date")
  expiryDate   DateTime? @map("expiry_date")

  @@index([batchNo], name: "batchNo")
  @@index([companyId], name: "companyId")
  @@index([orderId], name: "orderId")
  @@map("batches")
}

model BatchItem {
  id            Int      @id @default(autoincrement())
  batchId       Int      @map("batch_id")
  companyId     Int      @map("company_id")
  productId     Int      @map("product_id")
  usageDate     DateTime @map("usage_date")
  patientId     Int      @map("patient_id")
  createdById   Int      @map("created_by_id")
  qty           Int      @default(0)
  appointmentId Int      @map("appointment_id")
  batchFlag     Int      @default(0) @map("batch_flag")

  @@map("batch_items")
}

model BlockReason {
  id          Int     @id @default(autoincrement())
  reasonName  String  @map("reason_name")
  occupier    String
  isActive    Int     @map("is_active")
  blockColor  String  @map("block_color")
  isPaid      Int     @map("is_paid")
  defaultTime String? @map("default_time")
  type        Int     @default(0)
  customId    Int     @map("custom_id")

  @@index([isActive], name: "isActive")
  @@index([occupier], name: "occupier")
  @@map("block_reason")
}

model BnfDrug {
  id                Int     @id @default(autoincrement())
  url               String
  page              String
  drugName          String  @map("drug_name")
  indicationsDosage String? @map("indications_dosage")
  contraIndications String? @map("contra_indications")
  cautions          String?
  sideEffects       String? @map("side_effects")
  pregnancy         String?
  breastFeeding     String? @map("breast_feeding")
  prescribingInfo   String? @map("prescribing_info")
  patientAdvice     String? @map("patient_advice")
  directions        String?
  specificInfo      String? @map("specific_info")

  @@map("bnf_drugs")
}

model BodyChartTemplate {
  id           Int      @id @default(autoincrement())
  templateName String   @map("template_name")
  templateUrl  String   @map("template_url")
  tags         String
  occupier     Int
  uid          Int
  creationDate DateTime @default(now()) @map("creation_date")
  chartOrder   Int      @default(0) @map("chart_order")
  templateType Int      @default(1) @map("template_type")

  @@map("body_chart_templates")
}

model BookingSetting {
  id                            Int      @id @default(autoincrement())
  occupier                      Int
  emailMode                     Int      @map("email_mode")
  smsMode                       Int      @map("sms_mode")
  emailId                       Int?     @map("email_id")
  emailConfirmId                Int      @map("email_confirm_id")
  smsId                         Int      @map("sms_id")
  emailReminderId               Int      @map("email_reminder_id")
  autoCal                       Int?     @map("auto_cal")
  autoEmail                     Int?     @map("auto_email")
  autoSms                       Int?     @map("auto_sms")
  autoCon                       Int?     @map("auto_con")
  feedbackMode                  Int      @map("feedback_mode")
  feedbackId                    Int      @map("feedback_id")
  smsName                       String   @map("sms_name")
  feedbackDaysAfter             Int      @map("feedback_days_after")
  feedbackSendTime              DateTime @map("feedback_sendTime")
  reminderMode                  Int      @map("reminder_mode")
  daysBefore                    Int      @default(0) @map("days_before")
  sendTime                      DateTime @map("sendTime")
  smsDaysBefore                 Int      @map("sms_daysBefore")
  smsSendTime                   DateTime @map("sms_sendTime")
  classSmsDaysBefore            Int      @map("class_sms_daysBefore")
  classSmsSendTime              DateTime @map("class_sms_sendTime")
  roomSupport                   Int      @default(0) @map("room_support")
  feedbackFromemail             String   @map("feedback_fromemail")
  confirmFromemail              String   @map("confirm_fromemail")
  smsFrom                       String?  @map("sms_from")
  reminderFromemail             String   @map("reminder_fromemail")
  sendSms                       Int      @map("send_sms")
  sendEmail                     Int      @map("send_email")
  sendReminder                  Int      @map("send_reminder")
  sendFeedback                  Int      @map("send_feedback")
  attachInvoice                 Int      @map("attach_invoice")
  startTime                     String   @map("start_time")
  endTime                       String   @map("end_time")
  bookingEmails                 String   @map("booking_emails")
  slotInterval                  Int      @default(15) @map("slot_interval")
  fontColor                     String   @map("font_color")
  disableSecondCal              Int      @map("disable_second_cal")
  fontSize                      Int      @default(13) @map("font_size")
  disableTime                   Int      @map("disable_time")
  lockTimer                     Int      @default(120) @map("lock_timer")
  disableSurname                Int      @map("disable_surname")
  arrivedColor                  String   @default("#FF0000") @map("arrived_color")
  completeColor                 String   @default("#00ff00") @map("complete_color")
  cancelSmsNotify               Int      @map("cancel_sms_notify")
  cancelEmailNotify             Int      @default(1) @map("cancel_email_notify")
  rescheduleSmsNotify           Int      @map("reschedule_sms_notify")
  rescheduleEmailNotify         Int      @default(1) @map("reschedule_email_notify")
  noshowEmailNotify             Int      @map("noshow_email_notify")
  classNoshowEmailNotify        Int      @map("class_noshowEmailNotify")
  classRescheduleEmailNotify    Int      @map("class_rescheduleEmailNotify")
  classReminderEmailNotify      Int      @map("class_reminder_email_notify")
  classNoshowSmsNotify          Int      @map("class_noshowSmsNotify")
  classRescheduleSmsNotify      Int      @map("class_rescheduleSmsNotify")
  classReminderSmsNotify        Int      @map("class_reminder_sms_notify")
  noshowSmsNotify               Int      @map("noshow_sms_notify")
  locationSupport               Int      @default(1) @map("location_support")
  noshowCount                   Int      @default(3) @map("noshow_count")
  rescheduleSmsFrom             String   @map("reschedule_smsFrom")
  rescheduleSmsTmpl             Int      @map("reschedule_sms_tmpl")
  rescheduleEmailFrom           String   @map("reschedule_email_from")
  rescheduleEmailTmpl           Int      @map("reschedule_email_tmpl")
  cancelSmsFrom                 String   @map("cancel_smsFrom")
  cancelSmsTmpl                 Int      @map("cancel_sms_tmpl")
  cancelEmailFrom               String   @map("cancel_email_from")
  cancelEmailTmpl               Int      @map("cancel_email_tmpl")
  smsConfirmId                  Int      @map("sms_confirm_id")
  noshowEmailFrom               String   @map("noshow_email_from")
  noshowEmailTmpl               Int      @map("noshow_email_tmpl")
  classNoshowEmailTmpl          Int      @map("class_noshowEmailTmpl")
  classRescheduleEmailTmpl      Int      @map("class_rescheduleEmailTmpl")
  classReminderEmailTmpl        Int      @map("class_reminder_email_tmpl")
  classNoshowSmsTmpl            Int      @map("class_noshowSmsTmpl")
  classRescheduleSmsTmpl        Int      @map("class_rescheduleSmsTmpl")
  classReminderSmsTmpl          Int      @map("class_reminder_sms_tmpl")
  noshowSmsFrom                 String   @map("noshow_smsFrom")
  noshowSmsTmpl                 Int      @map("noshow_sms_tmpl")
  columnTotal                   Int      @map("column_total")
  tooltipHead                   String   @default("full_name") @map("tooltip_head")
  tooltipBody                   String   @default("[\"service_name\",\"employee\",\"appt_duration\",\"created_by\",\"modifiedBy\",\"appt_note\"]") @map("tooltip_body")
  apptHead                      String   @default("full_name") @map("appt_head")
  apptBody                      String   @default("[\"service_name\",\"appt_loc\",\"appt_note\"]") @map("appt_body")
  holidayResetDate              Int?     @map("holiday_reset_date")
  holidayUsualDay               String?  @map("holiday_usual_day")
  holidayPerMonth               String?  @map("holiday_per_month")
  holidayDefault                String?  @map("holiday_default")
  groupBookingChangeEmailEnable Int?     @map("group_booking_change_email_enable")
  groupBookingChangeTemplateId  Int?     @map("group_booking_change_template_id")
  groupBookingCancelEmailEnable Boolean  @map("group_booking_cancel_email_enable")
  groupBookingCancelTemplateId  Int      @map("group_booking_cancel_template_id")
  packageUsedEmailEnable        Int      @map("package_used_email_enable")
  packageUsedTemplateId         Int      @map("package_used_template_id")
  disableIcs                    Int?     @default(0) @map("disable_ics")
  initials                      Int      @default(0)
  disableServiceFilter          Int      @default(0) @map("disable_service_filter")
  disableBookByPackage          Int      @default(0) @map("disable_book_by_package")
  allowOverlappingAppts         Int      @default(0) @map("allow_overlapping_appts")
  modifiedBy                    Int      @map("modified_by")
  modifiedDate                  DateTime @map("modified_date")
  conferenceReminderId          Int?     @map("conference_reminder_id")

  @@index([emailId], name: "emailId")
  @@index([emailReminderId], name: "emailReminderId")
  @@index([occupier], name: "occupier")
  @@map("bookings_settings")
}

model BookingMaster {
  id            Int                           @id @default(autoincrement())
  classId       String                        @map("class_id")
  userId        String                        @map("user_id")
  bookingDate   String?                       @map("booking_date")
  paymentStatus booking_master_payment_status @map("payment_status")
  cancelStatus  booking_master_cancel_status  @map("cancel_status")
  cancelDate    String                        @map("cancel_date")
  companyId     String                        @map("company_id")
  classCurrency String?                       @map("class_currency")
  classPrice    String?                       @map("class_price")
  checkedIn     Int                           @map("checked_in")
  payedBy       String                        @map("payed_by")
  waiting       Int

  @@index([classId], name: "classId")
  @@index([userId], name: "userId")
  @@map("booking_master")
}

model BookingStatus {
  id         Int                         @id @default(autoincrement())
  name       String
  value      String
  icon       String
  iconColor  String                      @map("icon_color")
  companyId  Int                         @map("company_id")
  indicator  booking_statuses_indicator? @default(EMPTY_ENUM_VALUE)
  basicField Boolean                     @map("basic_field")
  ord        Float
  trackTime  Boolean                     @default(false) @map("track_time")

  @@unique([value, companyId], name: "value")
  @@map("booking_statuses")
}

model BookingStatusChange {
  id        Int       @id @default(autoincrement())
  bookingId Int       @map("booking_id")
  status    String
  startDate DateTime  @map("start_date")
  endDate   DateTime? @map("end_date")
  companyId Int       @map("company_id")
  userId    Int       @map("user_id")

  @@index([bookingId], name: "bookingId")
  @@index([status], name: "status")
  @@map("booking_status_changes")
}

model BookitProGeneral {
  id                      Int                                   @id @default(autoincrement())
  occupier                String
  advanceTime             String                                @map("advance_time")
  enablePayments          String                                @map("enable_payments")
  paypalAddress           String                                @map("paypal_address")
  receiveEmail            String                                @map("receive_email")
  createInvoice           String                                @map("create_invoice")
  deposit                 Float
  showPrices              String                                @map("show_prices")
  showDuration            String                                @map("show_duration")
  showDescription         Boolean                               @default(false) @map("show_description")
  headerColor             String                                @map("header_color")
  bookingEmails           String                                @map("booking_emails")
  onlineColor             String                                @map("online_color")
  warningMessage          String                                @map("warning_message")
  allowCancel             Int                                   @map("allow_cancel")
  disableFacebook         Int                                   @map("disable_facebook")
  interval                Int                                   @default(15)
  disableExtraInformation Int                                   @map("disable_extra_information")
  couponActive            Int                                   @map("coupon_active")
  paymentApiUrl           String                                @map("payment_api_url")
  accountDeposit          Float                                 @map("account_deposit")
  replaceJobTitles        Int                                   @map("replace_job_titles")
  hideFacebookShare       Int                                   @map("hide_facebook_share")
  enableBookings          Int                                   @map("enable_bookings")
  defaultPayment          String                                @default("Card") @map("default_payment")
  registrationOptional    Int                                   @map("registration_optional")
  consultationsOnly       Boolean?                              @default(false) @map("consultations_only")
  onlyExisting            Boolean                               @default(false) @map("only_existing")
  stripeReciever          Int                                   @map("stripe_reciever")
  stripePublicKey         String                                @map("stripe_public_key")
  stripePrivateKey        String                                @map("stripe_private_key")
  offlineMessage          String                                @map("offline_message")
  disableLocations        Int                                   @map("disable_locations")
  theme                   String                                @default("classic")
  promoCodes              Boolean                               @default(true) @map("promo_codes")
  termsConditions         String                                @map("terms_conditions")
  gaAnalytics             String                                @map("ga_analytics")
  gtManager               String?                               @map("gt_manager")
  fbCode                  String                                @map("fb_code")
  fbEvent                 String                                @map("fb_event")
  docSharedTemplate       Int                                   @map("doc_shared_template")
  classesEmailConfirm     Int                                   @map("classes_email_confirm")
  sageVendor              String                                @map("sage_vendor")
  sageUsername            String                                @map("sage_username")
  sagePassword            String                                @map("sage_password")
  gcPublicKey             String                                @map("gc_public_key")
  gcPrivateKey            String                                @map("gc_private_key")
  enableTitle             Int?                                  @default(0) @map("enable_title")
  groupByRegion           Boolean                               @default(false) @map("group_by_region")
  useNewConnect           Boolean                               @default(false) @map("use_new_connect")
  disableReviews          Int                                   @map("disable_reviews")
  allowRating             Boolean                               @default(true) @map("allow_rating")
  showCatPhotos           Boolean                               @default(true) @map("show_cat_photos")
  classColumns            String                                @map("class_columns")
  noVatPrices             Boolean                               @default(false) @map("no_vat_prices")
  integrationMethod       bookitpro_general_integration_method? @map("integration_method")
  rollingDeposit          Int                                   @map("rolling_deposit")
  oneTouchBook            Boolean                               @default(false) @map("one_touch_book")
  newStripe               Int                                   @default(1) @map("new_stripe")
  enableMasterCat         Boolean                               @default(true) @map("enable_master_cat")
  stripeFee               Float                                 @default(1.00) @map("stripe_fee")
  reccuringSearchBtn      String                                @default("default") @map("reccuring_search_btn")
  forceNewExistingPatient Boolean                               @default(false) @map("force_new_existing_patient")
  redirectUrl             String                                @map("redirect_url")
  connectUrl              String?                               @map("connect_url")

  @@map("bookitpro_general")
}

model BookitProSlider {
  id       Int    @id @default(autoincrement())
  slider1  String
  slider2  String
  slider3  String
  slider4  String
  occupier String

  @@map("bookitpro_slider")
}

model BookmarkedPage {
  id        Int    @id @default(autoincrement())
  uid       Int
  link      String
  companyid Int
  title     String
  icon      String

  @@map("bookmarked_pages")
}

model BugLog {
  id         Int    @id @default(autoincrement())
  bugMessage String @map("bug_message")
  datetime   Int
  uid        Int
  relatedId  Int    @map("related_id")

  @@map("bug_log")
}

model CalendarView {
  id                     Int    @id @default(autoincrement())
  occupier               Int
  userId                 Int    @map("user_id")
  viewMode               String
  dayViewMode            String
  employeesViewMode      String
  employeeGroupsViewMode String
  locationsViewMode      String
  roomsViewMode          String
  serviceMastersViewMode String
  serviceGroupsViewMode  String
  servicesViewMode       String
  appointmentSize        Int    @default(15)
  favoriteName           String @map("favorite_name")
  favoriteShared         Int    @default(0) @map("favorite_shared")
  favorite               Int    @default(0)
  favoriteId             Int    @default(-1) @map("favorite_id")

  @@index([occupier], name: "occupier")
  @@index([userId], name: "userId")
  @@map("calendar_views")
}

model CalRangeRequest {
  id        Int      @id @default(autoincrement())
  minutes   Int
  companyId Int      @map("company_id")
  startDate DateTime @map("start_date")
  endDate   DateTime @map("end_date")

  @@map("cal_range_requests")
}

model CampaignAttachment {
  id             Int    @id @default(autoincrement())
  campaignId     Int    @map("campaign_id")
  occupier       Int
  attachTime     String @map("attach_time")
  attachUserName String @map("attach_user_name")
  attachmentType String @map("attachment_type")
  attachId       Int    @map("attach_id")

  @@map("campaign_attachments")
}

model CancellationPolicy {
  id                      Int       @id @default(autoincrement())
  isActive                Int       @map("is_active")
  policyType              Int       @default(0) @map("policy_type")
  policyAction            Int       @map("policy_action")
  policyValue             Float     @default(0.00) @map("policy_value")
  policyNotice            String    @map("policy_notice")
  policyMessage           String?   @map("policy_message")
  policyOverride          Int       @map("policy_override")
  paymentProtection       Int       @map("payment_protection")
  advancedCancellationFee Int       @map("advanced_cancellation_fee")
  noShowFee               Int       @map("no_show_fee")
  occupier                Int
  creationDate            DateTime? @map("creation_date")
  modifiedDate            DateTime? @map("modified_date")

  @@map("cancellation_policy")
}

model MarketingSource {
  id         Int     @id @default(autoincrement())
  sourceName String  @map("source_name")
  companyId  Int     @map("occupier")
  customId   Int     @map("custom_id")
  public     Int
  imported   Int
  company    Company @relation(fields: [companyId], references: [id])

  @@index([companyId], name: "companyId")
  @@index([public], name: "public")
  @@index([sourceName], name: "sourceName")
  @@map("marketing_sources")
}

model MediaLlibraryAttachment {
  id                   Int      @id @default(autoincrement())
  fileUrl              String   @map("file_url")
  companyId            Int      @map("company_id")
  contactId            Int      @map("contact_id")
  communicationId      Int      @default(0) @map("communication_id")
  medicalFormContactId Int      @default(0) @map("medical_form_contact_id")
  contactAttachmentId  Int      @default(0) @map("contact_attachment_id")
  salesId              Int      @default(0) @map("sales_id")
  statementId          Int      @default(0) @map("statement_id")
  creationDate         DateTime @map("creation_date")

  @@index([communicationId], name: "communicationId")
  @@index([companyId], name: "companyId")
  @@index([contactAttachmentId], name: "contactAttachmentId")
  @@index([contactId], name: "contactId")
  @@index([medicalFormContactId], name: "medical_form_contact_id")
  @@index([salesId], name: "salesId")
  @@map("media_library_attachments")
}

model CancelReason {
  id                      Int      @id @default(autoincrement())
  reasonName              String   @map("reason_name")
  occupier                String
  lateCancel              Int      @map("late_cancel")
  applyCancellationPolicy Int      @map("apply_cancellation_policy")
  createdAt               DateTime @map("created_at")
  modifiedAt              DateTime @map("modified_at")

  @@index([occupier], name: "occupier")
  @@map("cancel_reason")
}

model Candidate {
  id              Int      @id @default(autoincrement())
  contactId       Int      @map("contact_id")
  createdDate     DateTime @map("created_date")
  openingId       Int      @map("opening_id")
  rating          Int      @default(1)
  candidateStatus String?  @default("WAITING") @map("candidate_status")
  jobReferences   String   @map("job_references")
  howHeard        String   @map("how_heard")
  referredBy      String   @map("referred_by")
  coverLetter     String   @map("cover_letter")
  resume          String
  dateAvailable   DateTime @map("date_available")
  linkedin        String
  companyId       Int?     @map("company_id")
  company         Company? @relation(fields: [companyId], references: [id])

  @@map("candidate")
}

model CardType {
  id                     Int   @id @default(autoincrement())
  companyId              Int   @map("company_id")
  mastercard             Int
  visa                   Int
  amex                   Int
  visaCredit             Int   @map("visa_credit")
  maestro                Int
  worldpay               Int
  visaCreditCharge       Float @map("visaCredit_charge")
  amexCreditCharge       Float @map("amex_credit_charge")
  mastercardCreditCharge Float @map("mastercard_credit_charge")
  enableReference        Int   @map("enable_reference")

  @@index([companyId], name: "companyId")
  @@map("card_types")
}

model CashupReport {
  id                    Int      @id @default(autoincrement())
  companyId             Int      @map("company_id")
  staffId               Int      @map("staff_id")
  locationId            Int      @default(0) @map("location_id")
  floatAmount           Float    @map("float_amount")
  openingBalance        Float    @map("opening_balance")
  cashAmount            Float    @map("cash_amount")
  cashActual            Float    @map("cash_actual")
  cashDifference        Float    @map("cash_difference")
  chequeAmount          Float    @map("cheque_amount")
  chequeActual          Float    @map("cheque_actual")
  chequeDifference      Float    @map("cheque_difference")
  cardAmount            Float    @map("card_amount")
  cardActual            Float    @map("card_actual")
  cardDifference        Float    @map("card_difference")
  giftvoucherAmount     Float    @map("giftvoucher_amount")
  giftvoucherActual     Float    @map("giftvoucher_actual")
  giftvoucherDifference Float    @map("giftvoucher_difference")
  comments              String
  cashupDate            DateTime @map("cashup_date")
  financeId             Int      @map("finance_id")

  @@index([cashupDate], name: "cashupDate")
  @@map("cashup_report")
}

model CashupReportCustom {
  id               Int      @id @default(autoincrement())
  companyId        String   @map("company_id")
  locationId       Int      @default(0) @map("location_id")
  cashupDate       DateTime @map("cashup_date")
  customType       String   @map("custom_type")
  customAmount     Float    @map("custom_amount")
  customActual     Float    @map("custom_actual")
  customDifference Float    @map("custom_difference")
  cardType         String   @map("card_type")

  @@map("cashup_report_custom")
}

model CheckinAppt {
  id         Int    @id @default(autoincrement())
  apptId     Int    @map("appt_id")
  spotifyUri String @map("spotify_uri")

  @@map("checkin_appts")
}

model CheckinAverages {
  id             Int @id @default(autoincrement())
  uid            Int
  productId      Int @map("product_id")
  avgTimeSeconds Int @map("avg_time_seconds")

  @@index([productId], name: "productId")
  @@index([uid], name: "uid")
  @@index([uid, productId], name: "uid_product")
  @@map("checkin_averages")
}

model CheckinAveragesIdle {
  id                   Int    @id @default(autoincrement())
  username             String @unique
  uid                  Int
  avg                  Float?
  retailutilisationAvg Float? @map("retailutilisation_avg")

  @@map("checkin_averages_idle")
}

model CheckinProduct {
  id           Int       @id @default(autoincrement())
  queueId      Int       @map("queue_id")
  productId    Int       @map("product_id")
  dateStart    DateTime? @map("date_start")
  dateEnd      DateTime? @map("date_end")
  invProductId Int       @default(0) @map("inv_productId")

  @@index([queueId], name: "queueId")
  @@map("checkin_products")
}

model CheckinQueue {
  id           Int       @id @default(autoincrement())
  uid          Int
  beenBefore   Boolean   @map("been_before")
  dateStart    DateTime  @map("date_start")
  accepted     Boolean   @default(false)
  isLunch      Boolean   @default(false) @map("is_lunch")
  name         String
  dateAccepted DateTime? @map("date_accepted")
  dateEnd      DateTime? @map("date_end")
  wasAnyone    Boolean   @map("was_anyone")
  finalise     Boolean?
  smsNumber    String?   @map("sms_number")
  smsSent      DateTime? @map("sms_sent")
  smsWanted    Boolean?  @map("sms_wanted")
  skips        Int       @default(0)
  connectId    Int?      @map("connect_id")
  order        Int
  spotifyUri   String?   @map("spotify_uri")
  dateBinned   DateTime? @map("date_binned")

  @@index([accepted], name: "accepted")
  @@index([dateAccepted], name: "dateAccepted")
  @@index([dateEnd], name: "dateEnd")
  @@index([dateStart], name: "dateStart")
  @@index([finalise], name: "finalise")
  @@index([uid], name: "uid")
  @@map("checkin_queue")
}

model ClasstypeMaster {
  ctypeId               Int     @id @default(autoincrement()) @map("ctype_id")
  ctypeName             String? @map("ctype_name")
  ctypeCompid           String  @map("ctype_compid")
  ctypeDate             String  @map("ctype_date")
  ctypeColor            String  @map("ctype_color")
  ctypeDescription      String  @map("ctype_description")
  paymentOptionDisabled Int     @map("payment_option_disabled")
  creditOptionDisabled  Int     @map("credit_option_disabled")

  @@map("classtype_master")
}

model ClassCategory {
  id           Int       @id @default(autoincrement())
  code         String
  name         String
  occupier     Int?
  uid          Int?
  createdDate  DateTime? @map("created_date")
  modifiedDate DateTime? @map("modified_date")

  @@map("class_categories")
}

model ClassGuests {
  id           Int    @id @default(autoincrement())
  guestName    String @map("guest_name")
  signingDate  Int    @map("signing_date")
  classId      Int    @map("class_id")
  companyId    Int    @map("company_id")
  cancelStatus Int    @map("cancel_status")
  mobile       String

  @@map("class_guests")
}

model ClassMaster {
  cId              Int                     @id @default(autoincrement()) @map("c_id")
  cCompanyid       Int?                    @map("c_companyid")
  cType            Int?                    @map("c_type")
  cTeacher         Int?                    @map("c_teacher")
  cLocation        Int?                    @map("c_location")
  cRoom            Int?                    @map("c_room")
  cSlots           String?                 @map("c_slots")
  cPrice           Float?                  @map("c_price")
  cDate            String?                 @map("c_date")
  cTime            String?                 @map("c_time")
  cDuration        String?                 @map("c_duration")
  cDay             String?                 @map("c_day")
  cExptime         String?                 @map("c_exptime")
  cBook            String?                 @map("c_book")
  cEmpty           String?                 @map("c_empty")
  cFormattime      String?                 @map("c_formattime")
  cStartformattime String?                 @map("c_startformattime")
  classPay         class_master_class_pay? @map("class_pay")
  cancelStatus     Int                     @map("cancel_status")
  productId        Int                     @map("product_id")
  signInType       String                  @map("sign_in_type")

  @@map("class_master")
}

model ClassNotes {
  id       Int    @id @default(autoincrement())
  classId  Int    @map("class_id")
  note     String
  author   String
  public   Int
  avatar   String
  postDate String @map("post_date")

  @@map("class_notes")
}

model CompanyDetails {
  detailsId              Int                      @id @default(autoincrement()) @map("details_id")
  companyId              Int                      @map("company_id")
  companyName            String                   @map("company_name")
  subscription           String
  industrySector         String                   @map("industry_sector")
  employees              String
  website                String
  street                 String
  city                   String
  county                 String
  postCode               String                   @map("post_code")
  country                String                   @default("United Kingdom")
  phone                  String
  fax                    String
  infoEmail              String                   @map("info_email")
  admin                  Int
  logo                   String
  currency               String                   @default("GBP")
  facebookPage           String                   @map("facebook_page")
  twitterPage            String                   @map("twitter_page")
  headOffice             Int                      @map("head_office")
  footerLogo             String                   @map("footer_logo")
  headerLogo             String                   @map("header_logo")
  vat                    String
  dateFormat             String                   @default("d/m/Y") @map("date_format")
  weekStartDay           String                   @default("sunday") @map("week_start_day")
  autoSms                Int                      @default(1) @map("auto_sms")
  smsActive              Int                      @map("sms_active")
  dbLock                 Int                      @map("db_lock")
  stockManager           String                   @map("stock_manager")
  companyNotes           String                   @map("company_notes")
  timezoneId             Int                      @default(511) @map("timezone_id")
  convertedValue         Float                    @map("converted_value")
  enable2fa              Int                      @map("enable_2fa")
  enableAd               Int                      @default(0) @map("enable_ad")
  enableAdCode           String?                  @map("enableAd_code")
  enableIpFilter         Int?                     @map("enable_ip_filter")
  demoMode               Int                      @map("demo_mode")
  linkedinPage           String                   @map("linkedin_page")
  youtubePage            String                   @map("youtube_page")
  isSurgical             Int                      @map("is_surgical")
  privateTreatmentNotes  Int                      @map("private_treatment_notes")
  acceptInsurance        Int                      @map("accept_insurance")
  phonePrefix            Int                      @map("phone_prefix")
  taxName                company_details_tax_name @default(VAT) @map("tax_name")
  secureMedicalForms     Int                      @default(1) @map("secure_medical_forms")
  debrandLogo            Int                      @map("debrand_logo")
  defaultSearch          String                   @default("contact") @map("default_search")
  calendarVersion        String                   @map("calendar_version")
  contactTermSingular    String                   @default("Patient") @map("contact_term_singular")
  contactTermPlural      String                   @default("Patients") @map("contact_term_plural")
  flagEnabled            Int                      @default(1) @map("flag_enabled")
  lockPrescription       Int                      @map("lock_prescription")
  showReportLogo         Boolean                  @default(false) @map("show_report_logo")
  rotaVersion            String                   @map("rota_version")
  useGoogleAuth          Boolean                  @default(false) @map("use_google_auth")
  employeeClockTrack     Boolean                  @default(false) @map("employee_clock_track")
  slug                   String?                  @unique
  defaultInvTemplateId   Int                      @map("default_inv_template_id")
  diagnosisCodesType     String                   @default("icd10") @map("diagnosis_codes_type")
  appendClientPref       Int                      @map("append_client_pref")
  capitalSurname         Boolean                  @default(false) @map("capital_surname")
  disablePrescriptions   Int                      @map("disable_prescriptions")
  cyclesDisplay          Int                      @default(0) @map("cycles_display")
  enableSensData         Int                      @map("enable_sens_data")
  classTermSingular      String                   @default("Class") @map("class_term_singular")
  classTermPlural        String                   @default("Classes") @map("class_term_plural")
  sensitiveDataQuestion  Int                      @default(2) @map("sensitive_data_question")
  legacyConsultations    Boolean                  @default(false) @map("legacy_consultations")
  classTeacherSingular   String                   @default("Teacher") @map("class_teacher_singular")
  employeeTermSingular   String                   @default("Employee") @map("employee_term_singular")
  employeeTermPlural     String                   @default("Employees") @map("employee_term_plural")
  medicalApprovals       Int                      @map("medical_approvals")
  newReports             Int                      @map("new_reports")
  mergeBookingsTabs      Boolean                  @default(false) @map("merge_bookings_tabs")
  preferencesSms         Int                      @default(1) @map("preferences_sms")
  preferencesEmail       Int                      @default(1) @map("preferences_email")
  preferencesPost        Int                      @default(1) @map("preferences_post")
  preferencesNewsletters Int                      @default(1) @map("preferences_newsletters")
  healthcodeLive         Boolean?                 @map("healthcode_live")
  lockExport             Int                      @map("lock_export")
  language               String
  completedSetup         Boolean                  @default(false) @map("completed_setup")
  timezone               Timezone                 @relation(fields: [timezoneId], references: [timezoneId])
  company                Company                  @relation(fields: [companyId], references: [id])

  @@index([companyId], name: "companyId")
  @@index([timezoneId], name: "timezoneId")
  @@map("company_details")
}

model CompanySubscription {
  licenseId              Int       @id @default(autoincrement()) @map("license_id")
  companyId              Int       @map("company_id")
  company                Company   @relation(fields: [companyId], references: [id])
  licenseType            Int       @map("license_type")
  licenseExpiry          DateTime  @map("license_expiry")
  active                 Int
  code                   String
  maxUserCount           Int       @map("max_user_count")
  uid                    Int
  suspendSms             Int       @map("suspend_sms")
  smsRate                Float     @default(0.080) @map("sms_rate")
  setupStage             String    @map("setup_stage")
  disableSms             Int       @map("disable_sms")
  paymentId              String    @map("payment_id")
  warningLevel           String    @map("warning_level")
  subscriptionName       String    @map("subscription_name")
  subscriptionFee        Float     @map("subscription_fee")
  suspendedOn            String    @map("suspended_on")
  demoAccount            Int       @map("demo_account")
  suspensionReason       String    @map("suspension_reason")
  pabauScore             Int       @map("pabau_score")
  gcEmail                String    @map("gc_email")
  paymentBounces         Int       @map("payment_bounces")
  trainingStatus         Int       @map("training_status")
  setupStatus            Int       @map("setup_status")
  orderSheet             Int       @map("order_sheet")
  completeAccount        Int       @map("complete_account")
  completeNotes          String    @map("complete_notes")
  detailsStatus          Int       @map("details_status")
  trainingDate           String    @map("training_date")
  billCycle              DateTime  @map("bill_cycle")
  renewInterval          String    @default("month") @map("renew_interval")
  excludeReports         Int       @map("exclude_reports")
  subStartDate           DateTime  @map("sub_start_date")
  priceRange             String    @default("uk_pricing") @map("price_range")
  stripeCustomerId       String    @map("stripe_customer_id")
  stripeSubscriptionId   String    @map("stripe_subscription_id")
  trial                  Boolean   @default(false)
  storage                Float     @default(2000.00)
  freeUsers              Int       @map("free_users")
  gcCustomerId           String    @map("gc_customer_id")
  lowCreditAmount        Int       @default(5) @map("low_credit_amount")
  lowSmsAction           Int       @default(2) @map("low_sms_action")
  activityLogs           Int       @map("activity_logs")
  accountLive            Int       @map("account_live")
  discount               Float
  gcPlanId               String    @map("gc_plan_id")
  supportPlan            String    @map("support_plan")
  supportFee             Float     @map("support_fee")
  gcSupportPlanId        String    @map("gc_supportPlan_id")
  enterpriseUserCost     Float     @default(12.00) @map("enterprise_user_cost")
  gcEnterprisePlanId     String    @map("gc_enterprise_plan_id")
  enterpriseFee          Float     @map("enterprise_fee")
  gcAmount               Float     @map("gc_amount")
  leaveAlert             Boolean   @default(false) @map("leave_alert")
  stripeFee              Float     @default(1.60) @map("stripe_fee")
  stripeFeeType          String    @default("percentage") @map("stripeFee_type")
  previousSystem         String    @map("previous_system")
  amGroup                String    @map("am_group")
  phoneSupport           Int       @default(1) @map("phone_support")
  slackSupport           Int       @default(0) @map("slack_support")
  whatsappSupport        Int       @default(0) @map("whatsapp_support")
  multipleLocations      Int       @map("multiple_locations")
  commissionRate         Float     @map("commission_rate")
  liveServer             String    @default("crm.pabau.com") @map("live_server")
  sandboxServer          String    @map("sandbox_server")
  serverCompId           Int       @map("server_comp_id")
  partnerId              String    @map("partner_id")
  advancedMarketingAddon Int       @map("advanced_marketing_addon")
  freeMonths             Int?      @default(0) @map("free_months")
  hideInComps            Boolean?  @default(false) @map("hide_in_comps")
  amStartDate            DateTime? @map("am_start_date")
  trainerId              Int?      @map("trainer_id")
  onboarderId            Int?      @map("onboarder_id")
  isReferral             Int?      @default(0) @map("is_referral")

  @@index([companyId], name: "companyId")
  @@index([licenseType], name: "lic_type")
  @@map("company_subscription")
}

model Timezone {
  timezoneId     Int              @id @default(autoincrement()) @map("timezone_id")
  label          String
  phpFormat      String           @map("php_format")
  dbFormat       String           @map("db_format")
  offsetSeconds  Int              @map("offset_seconds")
  supported      Boolean
  CompanyDetails CompanyDetails[]

  @@map("timezone")
}

model ClassProduct {
  id            Int       @id @default(autoincrement())
  code          String
  name          String
  unit          String?
  size          String
  productOrder  Int?      @map("product_order")
  um            String
  cost          Float?
  price         Float
  alertQuantity Int       @default(20) @map("alert_quantity")
  image         String?   @default("no_image.jpg")
  categoryId    Int       @map("category_id")
  occupier      Int?
  uid           Int?
  createdDate   DateTime? @map("created_date")
  modifiedDate  DateTime? @map("modified_date")
  productDesc   String    @map("product_desc")

  @@map("class_products")
}

//
model ClassSmsHistory {
  id       Int    @id @default(autoincrement())
  classId  Int    @map("class_id")
  userId   Int    @map("user_id")
  message  String
  datetime String

  @@map("class_sms_history")
}

//
model ClassTemplateSetting {
  id                             Int       @id @default(autoincrement())
  companyId                      Int       @default(0) @map("company_id")
  classWaitListTemplateEnable    Int?      @default(0) @map("class_wait_list_template_enable")
  classWaitListTemplateId        Int?      @default(0) @map("class_wait_list_template_id")
  classWaitListSmsTemplateEnable Int       @default(0) @map("class_wait_list_sms_template_enable")
  classWaitListSmsTemplateId     Int       @default(0) @map("class_wait_list_sms_template_id")
  uid                            Int?
  creationDate                   DateTime? @map("creation_date")
  modifiedDate                   DateTime? @map("modified_date")

  @@map("class_template_settings")
}

//
model CleverpinSetting {
  id        Int    @id @default(autoincrement())
  imageUrl  String @map("image_url")
  companyId Int    @map("company_id")

  @@map("cleverpin_settings")
}

//
model ClientFormSetting {
  id                Int @id @default(autoincrement())
  companyId         Int @map("company_id")
  enableMedical     Int @map("enable_medical")
  formId            Int @map("form_id")
  notSeenMonths     Int @map("not_seen_months")
  enableNewAndOld   Int @map("enable_new_and_old")
  checkedByDefault  Int @map("checked_by_default")
  newClientTemplate Int @map("new_client_template")
  notSeenTemplate   Int @map("not_seen_template")

  @@map("client_form_settings")
}

//
model ClinicalSoftware {
  id         Int    @id @default(autoincrement())
  name       String
  difficulty Int
  frequency  Int

  @@map("clinical_softwares")
}

//
model ClockinBreak {
  breakTimeId    Int @id @default(autoincrement()) @map("break_time_id")
  clockId        Int @map("clock_id")
  breakTimeStart Int @default(0) @map("break_time_start")
  breakTimeOut   Int @default(0) @map("break_time_out")

  @@map("clockin_break")
}

model ClockinLongpoll {
  id         Int     @id @default(autoincrement())
  clockedOut Boolean @map("clocked_out")
  uid        Int
  occupier   Int

  @@index([occupier], name: "occupier")
  @@map("clockin_longpoll")
}

model ClockinTimesheet {
  clockId          Int     @id @default(autoincrement()) @map("clock_id")
  staffUid         Int     @map("staff_uid")
  companyId        Int     @map("company_id")
  clockin          Int
  clockout         Int
  totalBreakTime   Int     @default(0) @map("total_break_time")
  totalWorkingTime Int     @default(0) @map("total_working_time")
  notes            String
  approved         Boolean
  staffName        String  @map("staff_name")
  ipAddress        String  @map("ip_address")

  @@index([companyId], name: "companyId")
  @@index([staffUid], name: "staffUid")
  @@index([companyId, staffUid], name: "uid_occupier")
  @@map("clockin_timesheets")
}

model CmAccountNote {
  ID          Int                     @id @default(autoincrement())
  OwnerID     Int
  AccountID   Int
  Note        String
  Status      cm_account_notes_status @default(Enable)
  CreatedDate DateTime
  IpAddress   Int

  @@map("cm_account_notes")
}

model CmAppointmentsCustomImportHelper {
  id                  Int     @id @default(autoincrement())
  occupier            Int
  customAppointmentId Int     @map("custom_appointmentId")
  customContactName   String  @map("custom_contact_name")
  customFieldName     String  @map("custom_field_name")
  customFieldValue    String? @map("custom_field_value")
  added               Int
  appointmentId       Int     @map("appointment_id")

  @@index([customAppointmentId], name: "customAppointmentId")
  @@map("cm_appointments_custom_import_helper")
}

model CmAppointmentCustom {
  id               Int    @id @default(autoincrement())
  appointmentId    Int    @map("appointment_id")
  occupier         Int
  customFieldId    Int    @map("custom_field_id")
  customFieldValue String @map("custom_field_value")
  imported         Int

  @@index([appointmentId], name: "appointmentId")
  @@index([customFieldId], name: "customFieldId")
  @@index([customFieldValue], name: "customFieldValue")
  @@index([occupier], name: "occupier")
  @@map("cm_appointment_custom")
}

model CmAuthorization {
  id            Int    @id @default(autoincrement())
  companyId     Int    @map("company_id")
  appointmentId Int    @map("appointment_id")
  contactId     Int    @map("contact_id")
  title         String
  totalSessions Int    @map("total_sessions")
  diagnosisCode String @map("diagnosis_code")

  @@map("cm_authorization")
}

model CmBookingNote {
  ID            Int                     @id @default(autoincrement())
  OwnerID       Int
  AppointmentID Int
  Note          String
  Status        cm_booking_notes_status @default(Enable)
  CreatedDate   DateTime
  IpAddress     Int

  @@map("cm_booking_notes")
}

model CmCase {
  id          Int     @id @default(autoincrement())
  caseNumber  String  @map("case_number")
  type        String?
  contact     String?
  email       String?
  subject     String?
  phone       String?
  request     String?
  critical    String?
  description String?
  relatedTo   Int?    @map("related_to")
  moduleType  Int?    @map("module_type")
  userId      Int?    @map("user_id")
  module2Type Int?    @map("module2_type")
  user2Id     Int?    @map("user2_id")
  ownerid     Int?
  status      String?
  priority    String?
  reason      String?
  reportedBy  String? @map("reported_by")
  comments    String?
  CreatedDate Int?
  IpAddress   String?
  companyId   Int     @map("occupier")
  company     Company @relation(fields: [companyId], references: [id])

  @@map("cm_cases")
}

model CmCaseNote {
  ID          Int                  @id @default(autoincrement())
  OwnerID     Int
  CaseID      Int
  Note        String
  Status      cm_case_notes_status @default(Enable)
  CreatedDate DateTime
  IpAddress   Int

  @@map("cm_case_notes")
}

model CmCaseReply {
  ID          Int      @id @default(autoincrement())
  OwnerID     Int
  CaseID      Int
  Description String
  CreatedDate DateTime
  IpAddress   Int
  CompanyID   Int
  company     Company  @relation(fields: [CompanyID], references: [id])

  @@map("cm_case_replies")
}

model CmCampaign {
  ID               Int      @id @default(autoincrement())
  OwnerID          String
  CompaignName     String
  Type             Int
  Status           Int
  StartDate        DateTime
  EndDate          DateTime
  ExpectedRevenue  String
  BudgetedCost     String
  ActualCost       String
  ExpectedResponse String
  NumSent          String
  Description      String
  CreatedDate      DateTime
  IpAddress        Int
  companyId        Int      @map("Occupier")
  company          Company  @relation(fields: [companyId], references: [id])

  @@map("cm_compaigns")
}

model CmCampaignNote {
  ID          Int                      @id @default(autoincrement())
  OwnerID     Int
  BookingID   Int
  Note        String
  Status      cm_compaign_notes_status @default(Enable)
  CreatedDate DateTime
  IpAddress   Int

  @@map("cm_compaign_notes")
}

model CmContact {
  ID                       Int                         @id @default(autoincrement())
  Avatar                   String
  OwnerID                  Int
  Salutation               String                      @default("None")
  Fname                    String
  Occupier                 Int
  locationId               Int                         @default(0) @map("location_id")
  Email                    String
  Phone                    String
  OtherPhone               String
  Mobile                   String
  Assistant                String
  ReportsTo                String
  LeadSource               String
  Lname                    String
  Title                    String
  Department               String
  HomePhone                String
  Fax                      String
  DOB                      DateTime?
  AsstPhone                String
  EmailOptOut              cm_contacts_EmailOptOut     @default(No)
  SkypeId                  String
  AddToQuickBooks          cm_contacts_AddToQuickBooks @default(No)
  SecondaryEmail           String
  Twitter                  String
  MailingStreet            String
  OtherStreet              String
  MailingCity              String
  OtherCity                String
  MailingProvince          String
  OtherProvince            String
  MailingPostal            String
  OtherPostal              String
  MailingCountry           String
  OtherCountry             String
  Description              String
  Status                   cm_contacts_status          @default(Enable)
  CreatedDate              DateTime
  IpAddress                Int
  fbimg                    String
  MarketingSource          Int
  RefferalSource           String?
  LeadID                   Int
  groupTag                 String                      @map("group_tag")
  politeNotice             String                      @map("polite_notice")
  customId                 String                      @map("custom_id")
  gender                   String
  MarketingOptInAll        Int?
  MarketingOptInEmail      Int?
  MarketingOptInPhone      Int?
  MarketingOptInPost       Int?
  MarketingOptInText       Int?
  notesDrop                String                      @map("notes_drop")
  imported                 Int
  alertsDrop               String                      @map("alerts_drop")
  MarketingSourceRelated   Int
  customerReference        String                      @map("customer_reference")
  MarketingOptInNewsletter Int                         @default(1)
  customMarketingSource    String                      @map("custom_marketing_source")
  insurerId                Int                         @map("insurer_id")
  isActive                 Int                         @default(1) @map("is_active")
  xeroContactId            String                      @map("xero_contact_id")
  isAmbassador             Int                         @default(0) @map("is_ambassador")
  UpdatedDate              DateTime
  xeroUpdatedDate          DateTime                    @map("xero_updated_date")
  discountType             Int                         @map("discount_type")
  customClinicId           Int                         @map("custom_clinic_id")
  ambassadorId             Int                         @map("ambassador_id")
  contractId               Int                         @map("contract_id")
  privacyPolicy            String                      @map("privacy_policy")
  needToKnows              Boolean                     @default(false) @map("need_to_knows")
  contactType              Int                         @default(0) @map("contact_type")

  @@index([CreatedDate], name: "CreatedDate")
  @@index([Email], name: "Email")
  @@index([Fname], name: "Fname")
  @@index([LeadID], name: "LeadID")
  @@index([Lname], name: "Lname")
  @@index([Mobile], name: "Mobile")
  @@index([Occupier], name: "Occupier")
  @@index([Occupier, isActive], name: "Occupier_2")
  @@index([OwnerID], name: "OwnerID")
  @@index([Fname, Lname, Occupier], name: "cm_leads_index")
  @@index([contractId], name: "contractId")
  @@index([customId], name: "customId")
  @@index([customerReference], name: "customerReference")
  @@index([isActive], name: "isActive")
  @@index([OwnerID, Occupier], name: "owner_company")
  @@map("cm_contacts")
}

model CmContactsAlertsImportHelper {
  id              Int    @id @default(autoincrement())
  contactCustomId Int    @map("contact_custom_id")
  alert           String
  date            String
  customUserName  String @map("custom_user_name")
  occupier        String
  imported        Int
  customUserId    Int    @map("custom_user_id")
  added           Int

  @@index([contactCustomId], name: "contactCustomId")
  @@map("cm_contacts_alerts_import_helper")
}

model CmContactsBackupHb {
  ID                     Int                                   @id @default(autoincrement())
  Avatar                 String
  OwnerID                Int
  Salutation             String                                @default("None")
  Fname                  String
  Occupier               Int
  Email                  String
  Phone                  String
  OtherPhone             String
  Mobile                 String
  Assistant              String
  ReportsTo              String
  LeadSource             String
  Lname                  String
  Title                  String
  Department             String
  HomePhone              String
  Fax                    String
  DOB                    DateTime?
  AsstPhone              String
  EmailOptOut            cm_contacts_backup_hb_EmailOptOut     @default(No)
  SkypeId                String
  AddToQuickBooks        cm_contacts_backup_hb_AddToQuickBooks @default(No)
  SecondaryEmail         String
  Twitter                String
  MailingStreet          String
  OtherStreet            String
  MailingCity            String
  OtherCity              String
  MailingProvince        String
  OtherProvince          String
  MailingPostal          String
  OtherPostal            String
  MailingCountry         String
  OtherCountry           String
  Description            String
  Status                 cm_contacts_backup_hb_status          @default(Enable)
  CreatedDate            DateTime
  IpAddress              Int
  fbimg                  String
  MarketingSource        Int
  RefferalSource         String?
  LeadID                 Int
  groupTag               String                                @map("group_tag")
  politeNotice           String                                @map("polite_notice")
  customId               Int                                   @map("custom_id")
  gender                 String
  MarketingOptInAll      Int?
  MarketingOptInEmail    Int?
  MarketingOptInPhone    Int?
  MarketingOptInPost     Int?
  MarketingOptInText     Int?
  notesDrop              String                                @map("notes_drop")
  imported               Int
  alertsDrop             String                                @map("alerts_drop")
  MarketingSourceRelated Int
  customerReference      String                                @map("customer_reference")

  @@index([Occupier, customId], name: "CustomIDBusiness")
  @@index([LeadID], name: "LeadID")
  @@index([Occupier], name: "Occupier")
  @@index([Fname, Lname, Occupier], name: "cm_leads_index")
  @@index([Fname, Lname, Phone, Mobile], name: "contact_smart")
  @@index([OwnerID, Occupier], name: "owner_company")
  @@index([Fname, Lname], name: "smart_search_primary")
  @@map("cm_contacts_backup_hb")
}

model CmContactsCustom {
  id               Int    @id @default(autoincrement())
  contactId        Int    @map("contact_id")
  occupier         Int
  customFieldId    Int    @map("custom_field_id")
  customFieldLabel String @map("custom_field_label")
  customFieldValue String @map("custom_field_value")
  imported         Int
  oldValue         String @map("old_value")

  @@index([contactId], name: "contactId")
  @@index([customFieldId], name: "customFieldId")
  @@index([occupier], name: "occupier")
  @@map("cm_contacts_custom")
}

model CmContactsCustomImportHelper {
  id                Int     @id @default(autoincrement())
  occupier          Int
  customContactId   Int     @map("custom_contactId")
  customContactName String  @map("custom_contact_name")
  customFieldName   String  @map("custom_field_name")
  customFieldValue  String? @map("custom_field_value")
  added             Int
  contactId         Int     @map("contact_id")

  @@index([customContactId], name: "customContactId")
  @@index([customContactName], name: "customContactName")
  @@index([customFieldValue], name: "customFieldValue")
  @@index([occupier], name: "occupier")
  @@map("cm_contacts_custom_import_helper")
}

model CmContactsImportDisabled {
  id       Int @id @default(autoincrement())
  occupier Int
  customId Int @map("custom_id")
  disabled Int

  @@index([customId], name: "customId")
  @@map("cm_contacts_import_disabled")
}

model CmContactsImportHelper {
  id          Int    @id @default(autoincrement())
  contactName String @map("contact_name")
  Email       String
  occupier    String

  @@map("cm_contacts_import_helper")
}

model CmContactsImportHelper2 {
  id                   Int      @id @default(autoincrement())
  Salutation           String
  FirstName            String   @map("First Name")
  LastName             String   @map("Last Name")
  Email                String
  Mobile               String
  Home                 String
  OtherPhone           String
  Fax                  String
  Address1             String
  Address2             String
  City                 String
  County               String
  Country              String
  Postcode             String
  DOB                  String
  Gender               String
  Notes                String
  groupTag             String   @map("group_tag")
  customId             String   @map("custom_id")
  occupier             String
  imported             Int
  MarketingOptInAll    Int
  MarketingOptInEmail  Int
  MarketingOptInPhone  Int
  MarketingOptInPost   Int
  MarketingOptInText   Int
  category             String
  patientNo            String   @map("patient_no")
  marketingSource      String   @map("marketing_source")
  alerts               String
  nextOfKin            String   @map("next_of_kin")
  CreatedDate          DateTime
  UpdatedDate          DateTime
  Insurer              String
  GPName               String   @map("GP Name")
  GPAddress            String   @map("GP Address")
  clinicId             Int      @map("clinic_id")
  isActive             Int      @default(1) @map("is_active")
  customUserName       String   @map("custom_user_name")
  marketingSourceOther String   @map("marketingSource_other")
  dateClosed           String   @map("date_closed")
  contactId            Int      @map("contact_id")

  @@index([customId], name: "customId")
  @@index([customId, occupier], name: "customId_2")
  @@index([occupier], name: "occupier")
  @@map("cm_contacts_import_helper2")
}

model CmContactsJson {
  id          Int      @id @default(autoincrement())
  occupier    Int
  clientsJson String   @map("clients_json")
  dateUpdated DateTime @default(now()) @map("date_updated")

  @@map("cm_contacts_json")
}

model CmContactsLocations {
  id         Int @id @default(autoincrement())
  companyId  Int @map("company_id")
  contactId  Int @map("contact_id")
  locationId Int @map("location_id")

  @@map("cm_contacts_locations")
}

model CmContactsNotesImportHelper {
  id                Int    @id @default(autoincrement())
  contactCustomId   Int    @map("contact_custom_id")
  note              String
  date              String
  customUserName    String @map("custom_user_name")
  occupier          String
  imported          Int
  customUserId      Int    @map("custom_userId")
  added             Int
  customContactName String @map("custom_contact_name")
  contactId         Int    @map("contact_id")
  userId            Int    @map("user_id")

  @@index([contactCustomId], name: "contactCustomId")
  @@index([customContactName], name: "customContactName")
  @@index([customUserName], name: "customUserName")
  @@map("cm_contacts_notes_import_helper")
}

model CmContactsSearch {
  id      Int    @id @default(autoincrement())
  string  String
  company Int
  result  Int

  @@index([company, string], name: "string")
  @@map("cm_contacts_search")
}

model CmContactsTravels {
  id              Int      @id @default(autoincrement())
  contactId       Int      @map("contact_id")
  countryId       Int      @map("country_id")
  startDate       DateTime @map("start_date")
  endDate         DateTime @map("end_date")
  companyId       Int      @map("company_id")
  duration        String
  mode            Int
  uid             Int
  medicalRecordId Int      @map("medical_record_id")
  creationDate    DateTime @map("creation_date")
  modifiedDate    DateTime @map("modified_date")

  @@map("cm_contacts_travels")
}

model CmContactsViewed {
  id        Int      @id @default(autoincrement())
  contactId Int      @map("contact_id")
  userId    Int      @map("user_id")
  occupier  String
  date      DateTime

  @@index([contactId], name: "contactId")
  @@index([userId], name: "userId")
  @@map("cm_contacts_viewed")
}

model CmContactAlerts {
  ID                  Int                      @id @default(autoincrement())
  OwnerID             Int
  ContactID           Int
  Note                String
  Status              cm_contact_alerts_status @default(Enable)
  CreatedDate         DateTime
  IpAddress           Int
  Critical            Int
  medicalConditionsId Int                      @default(0) @map("medical_conditions_id")

  @@index([ContactID], name: "ContactID")
  @@map("cm_contact_alerts")
}

model CmContactMedicalConditions {
  id                 Int     @id @default(autoincrement())
  companyId          Int     @map("company_id")
  contactId          Int     @map("contact_id")
  medicalConditionId Int     @map("medical_condition_id")
  medicalRecordId    Int     @map("medical_record_id")
  isActive           Boolean @default(true) @map("is_active")

  @@map("cm_contact_medical_conditions")
}

model CmContactNotes {
  ID          Int                     @id @default(autoincrement())
  OwnerID     Int
  ContactID   Int
  Note        String
  Status      cm_contact_notes_status @default(Enable)
  CreatedDate DateTime
  IpAddress   String
  imported    Boolean                 @default(false)

  @@index([ContactID], name: "ContactID")
  @@map("cm_contact_notes")
}

model CmContactViews {
  id        Int    @id @default(autoincrement())
  companyId Int    @map("company_id")
  viewName  String @map("view_name")
  viewData  String @map("view_data")

  @@map("cm_contact_views")
}

model CmContactViewStaff {
  id        Int @id @default(autoincrement())
  viewId    Int @map("view_id")
  staffId   Int @map("staff_id")
  companyId Int @map("company_id")

  @@map("cm_contact_view_staff")
}

model CmCoupons {
  id                Int      @id @default(autoincrement())
  couponTitle       String   @map("coupon_title")
  couponDetails     String   @map("coupon_details")
  couponImage       String   @map("coupon_image")
  couponStartDate   String   @map("coupon_start_date")
  couponExpiryDate  String   @map("coupon_expiry_date")
  couponCode        String   @map("coupon_code")
  couponAmount      String   @map("coupon_amount")
  couponRateType    String   @map("coupon_rate_type")
  couponCreatedDate DateTime @map("coupon_created_date")
  company           String
  createdBy         Int      @map("created_by")
  couponImpressions Int      @map("coupon_impressions")
  couponsSent       Int      @map("coupons_sent")
  couponMaxAmount   Int      @map("coupon_max_amount")

  @@map("cm_coupons")
}

model CmCouponClaimed {
  id            Int      @id @default(autoincrement())
  couponId      Int      @map("coupon_id")
  claimDate     DateTime @map("claim_date")
  claimFullName String   @map("claim_full_name")
  claimEmail    String   @map("claim_email")
  active        Int

  @@map("cm_coupon_claimed")
}

model CmCouponClicks {
  id        Int      @id @default(autoincrement())
  couponId  Int      @map("coupon_id")
  clickDate DateTime @map("click_date")

  @@map("cm_coupon_clicks")
}

model CmDrugs {
  id          Int      @id @default(autoincrement())
  name        String
  occupier    Int
  dosage      String
  units       String
  frequency   String
  route       String
  comment     String
  isActive    Boolean  @map("is_active")
  productId   Int      @map("product_id")
  lotNumber   String   @map("lot_number")
  expiryDate  DateTime @map("expiry_date")
  fieldOrder  Int?     @default(0) @map("field_order")
  isVaccine   Int      @map("is_vaccine")
  isRequired  Int      @map("is_required")
  customId    String   @map("custom_id")
  maxAge      Int      @map("max_age")
  minAge      Int      @map("min_age")
  nathnacLink String   @map("nathnac_link")
  travaxLink  String   @map("travax_link")

  @@map("cm_drugs")
}

model CmExtraGym {
  id          Int    @id @default(autoincrement())
  contactId   Int    @map("contact_id")
  primaryGoal String @map("primary_goal")
  introClass  String @map("intro_class")
  ageGroup    String @map("age_group")
  occupier    Int
  skillLevel  String @map("skill_level")
  membership  String

  @@map("cm_extra_gym")
}

model CmExtraPatient {
  id              Int    @id @default(autoincrement())
  contactId       Int    @map("contact_id")
  nhsNumber       Int    @map("nhs_number")
  gp              String
  surgeon         String
  occupier        Int
  dateOfDeath     String @map("date_of_death")
  externalClinic  String @map("external_clinic")
  assignedClinic  String @map("assigned_clinic")
  treatmentGroup  Int    @map("treatment_group")
  assignedDiary   Int    @map("assigned_diary")
  marketingSource Int    @map("marketing_source")
  referralSource  Int    @map("referral_source")

  @@map("cm_extra_patient")
}

model CmExtraSalon {
  id             Int    @id @default(autoincrement())
  contactId      Int    @map("contact_id")
  primaryService String @map("primary_service")
  hairLength     String @map("hair_length")
  hairTexture    String @map("hair_texture")
  occupier       Int
  skinType       String @map("skin_type")

  @@map("cm_extra_salon")
}

model CmInvoiceNotes {
  ID          Int                     @id @default(autoincrement())
  OwnerID     Int
  InvoiceID   Int
  Note        String
  Status      cm_invoice_notes_status @default(Enable)
  CreatedDate DateTime
  IpAddress   Int

  @@map("cm_invoice_notes")
}

model CmLeads {
  ID                       Int                  @id @default(autoincrement())
  Avatar                   String
  OwnerID                  Int
  ContactID                Int
  Salutation               String
  Fname                    String
  Lname                    String
  DOB                      DateTime
  Title                    String
  LeadCompany              String
  Occupier                 Int
  Email                    String
  Phone                    String
  Fax                      String
  Mobile                   String
  Website                  String
  LeadSource               Int
  LeadStatus               Int
  Industry                 String
  NoOfEmp                  String
  AnualRevenue             String
  Rating                   Int
  EmailOptOut              cm_leads_EmailOptOut @default(No)
  SkypeId                  String
  SecondaryEmail           String
  Twitter                  String
  MailingStreet            String
  MailingCity              String
  MailingProvince          String
  MailingPostal            String
  MailingCountry           String
  Description              String
  EnumStatus               cm_leads_EnumStatus  @default(Open)
  Status                   cm_leads_status      @default(Enable)
  CreatedDate              DateTime
  MarketingOptInAll        Int
  MarketingOptInEmail      Int
  MarketingOptInPhone      Int
  MarketingOptInPost       Int
  MarketingOptInText       Int
  MarketingOptInNewsletter Int
  IpAddress                String
  fbimg                    String
  LastUpdated              String
  customTag1               String               @map("custom_tag1")
  onlineCapture            Int                  @map("online_capture")
  captureId                Int                  @map("capture_id")
  oldLeadStatus            Int                  @map("old_LeadStatus")
  customId                 String               @map("custom_id")
  imported                 Int
  ConvertDate              DateTime
  groupId                  Int                  @map("group_id")
  firstInteraction         DateTime             @map("first_interaction")
  latestInteraction        DateTime             @map("latest_interaction")
  locationId               Int                  @default(0) @map("location_id")
  needToKnows              Int                  @default(1) @map("need_to_knows")

  @@index([Email], name: "Email")
  @@index([Fname], name: "Fname")
  @@index([LeadStatus], name: "LeadStatus")
  @@index([Lname], name: "Lname")
  @@index([OwnerID], name: "OwnerID")
  @@index([Fname, Lname, Occupier], name: "cm_contacts_index")
  @@index([Occupier], name: "occupier")
  @@map("cm_leads")
}

model CmLeadsCustom {
  id               Int    @id @default(autoincrement())
  leadId           Int    @map("lead_id")
  occupier         Int
  customFieldId    Int    @map("custom_field_id")
  customFieldLabel String @map("custom_field_label")
  customFieldValue String @map("custom_field_value")
  imported         Int
  oldValue         String @map("old_value")

  @@index([customFieldId], name: "customFieldId")
  @@index([leadId], name: "leadId")
  @@index([occupier], name: "occupier")
  @@map("cm_leads_custom")
}

model CmLeadsFieldsOrder {
  id        Int    @id @default(autoincrement())
  fieldId   Int    @map("field_id")
  fieldName String @map("field_name")
  occupier  Int
  orderId   Int    @map("order_id")
  isMore    Int    @map("is_more")

  @@map("cm_leads_fields_order")
}

model CmLeadsGroups {
  id             Int     @id @default(autoincrement())
  name           String
  companyId      Int     @map("company_id")
  isDefault      Boolean @map("is_default")
  defaultView    Int     @map("default_view")
  restrictView   Boolean @map("restrict_view")
  autoAssignUser Int     @default(1) @map("auto_assign_user")

  @@map("cm_leads_groups")
}

model CmLeadGroupServices {
  id          Int    @id @default(autoincrement())
  groupId     Int    @map("group_id")
  serviceName String @map("service_name")
  companyId   Int    @map("company_id")

  @@map("cm_lead_group_services")
}

model CmLeadGroupStaff {
  id        Int @id @default(autoincrement())
  groupId   Int @map("group_id")
  staffId   Int @map("staff_id")
  companyId Int @map("company_id")

  @@map("cm_lead_group_staff")
}

model CmLeadNotes {
  ID          Int                  @id @default(autoincrement())
  OwnerID     Int
  LeadID      Int
  Note        String
  Status      cm_lead_notes_status @default(Enable)
  CreatedDate DateTime
  IpAddress   Int

  @@index([LeadID], name: "LeadID")
  @@index([OwnerID], name: "OwnerID")
  @@map("cm_lead_notes")
}

model CmLinkprw {
  ID          Int              @id @default(autoincrement())
  postId      Int
  url         String
  video       cm_linkprw_video @default(dbgenerated("0"))
  videoIframe String
  title       String
  content     String
  thumb       String
  hrefurl     String
  imageId     String

  @@map("cm_linkprw")
}

model CmLocationsCustom {
  id               Int    @id @default(autoincrement())
  locationId       Int    @map("location_id")
  customFieldId    Int    @map("custom_field_id")
  customFieldValue String @map("custom_field_value")
  occupier         Int

  @@map("cm_locations_custom")
}

model CmMedicalConditions {
  id       Int    @id @default(autoincrement())
  name     String
  occupier Int
  customId String @map("custom_id")
  isCommon Int    @map("is_common")

  @@index([name], name: "name")
  @@map("cm_medical_conditions")
}

model CmNotesCustom {
  id               Int      @id @default(autoincrement())
  contactId        Int      @map("contact_id")
  occupier         Int
  user             Int
  customFieldId    Int      @map("custom_field_id")
  customFieldLabel String   @map("custom_field_label")
  customFieldValue String   @map("custom_field_value")
  createdDate      DateTime @default(now()) @map("created_date")
  imported         Boolean  @default(false)
  isRead           Boolean  @default(false) @map("is_read")

  @@map("cm_notes_custom")
}

model CmOpportunity {
  id             Int      @id @default(autoincrement())
  companyId      Int      @map("company_id")
  contactId      Int      @map("contact_id")
  appointmentId  Int      @map("appointment_id")
  createdDate    DateTime @default(now()) @map("created_date")
  updatedDate    DateTime @default(now()) @map("updated_date")
  createdBy      Int      @map("created_by")
  status         Int      @default(0)
  pipelineId     Int      @map("pipeline_id")
  currentStageId Int      @map("current_stage_id")
  closureId      Int      @map("closure_id")

  @@map("cm_opportunity")
}

model CmPaymentsCustom {
  id               Int    @id @default(autoincrement())
  paymentId        Int    @map("payment_id")
  occupier         Int
  customFieldId    Int    @map("custom_field_id")
  customFieldValue String @map("custom_field_value")
  imported         Int

  @@index([customFieldId], name: "customFieldId")
  @@index([customFieldValue], name: "customFieldValue")
  @@index([occupier], name: "occupier")
  @@index([paymentId], name: "paymentId")
  @@map("cm_payments_custom")
}

model CmPoll {
  ID       Int    @id @default(autoincrement())
  Question String

  @@map("cm_poll")
}

model CmPollAnswer {
  cmPollAnswerId Int @id @default(autoincrement()) @map("cm_poll_answer_id")
  pollId         Int
  userId         Int
  optionId       Int
  time           Int

  @@index([pollId, userId], name: "poll_user")
  @@map("cm_poll_answer")
}

model CmPollOption {
  ID     Int    @id @default(autoincrement())
  pollId Int
  Answer String

  @@map("cm_poll_option")
}

model CmPotentials {
  ID               Int                  @id @default(autoincrement())
  OwnerID          String
  Occupier         String
  PotentialName    String
  Amount           String
  ClosingDate      String
  PotentialCompany String
  Stage            Int
  Probability      String
  Type             String
  NextStep         String
  ExpectedRevenue  String
  LeadSource       Int
  ContactID        Int
  Description      String
  Status           cm_potentials_status @default(Enable)
  CreatedDate      DateTime
  IpAddress        Int
  LeadID           Int

  @@index([LeadID], name: "LeadID")
  @@index([Occupier], name: "occupier")
  @@map("cm_potentials")
}

model CmPotentialNotes {
  ID          Int                       @id @default(autoincrement())
  OwnerID     Int
  PotentialID Int
  Note        String
  Status      cm_potential_notes_status @default(Enable)
  CreatedDate DateTime
  IpAddress   Int

  @@map("cm_potential_notes")
}

model CmPotentialStages {
  ID              Int      @id @default(autoincrement())
  PotentialID     String
  Amount          String
  ClosingDate     String
  Stage           Int
  Probability     String
  ExpectedRevenue String
  CreatedDate     DateTime
  IpAddress       Int

  @@map("cm_potential_stages")
}

model CmProductsCustom {
  id               Int    @id @default(autoincrement())
  productId        Int    @map("product_id")
  occupier         Int
  customFieldId    Int    @map("custom_field_id")
  customFieldValue String @map("custom_field_value")

  @@index([customFieldId], name: "customFieldId")
  @@index([occupier], name: "occupier")
  @@index([productId], name: "productId")
  @@map("cm_products_custom")
}

model CmPurchaseItems {
  id             Int    @id @default(autoincrement())
  orderId        Int    @map("order_id")
  productId      Int    @map("product_id")
  quantity       Int
  costPrice      Float? @map("cost_price")
  amountReceived Int    @map("amount_received")

  @@map("cm_purchase_items")
}

model CmPurchaseOrder {
  id                 Int       @id @default(autoincrement())
  orderNo            String    @map("order_no")
  date               Int
  status             String
  companyId          Int       @map("company_id")
  locationId         Int?      @default(0) @map("location_id")
  userId             Int       @map("user_id")
  supplierId         Int       @map("supplier_id")
  supplierStatus     String    @map("supplier_status")
  deliveryDate       DateTime? @map("delivery_date")
  notes              String
  isHidden           Int       @default(0) @map("is_hidden")
  destinationArrival String    @map("destination_arrival")
  freightTerms       String    @map("freight_terms")
  termsOfPayment     String    @map("terms_of_payment")
  currency           String
  tags               String
  categoryId         Int       @map("category_id")
  lpoNumber          String    @map("lpo_number")
  grnNumber          String    @map("grn_number")

  @@map("cm_purchase_order")
}

model CmRefs {
  id                     Int      @id @default(autoincrement())
  refby                  Int
  refto                  Int
  date                   DateTime
  status                 String
  occupier               Int      @default(0)
  sentToEmail            String   @map("sent_to_email")
  sentToSms              Int      @map("sent_to_sms")
  reffererThankedEmail   Int      @map("refferer_thanked_email")
  reffererThankedSms     Int      @map("refferer_thanked_sms")
  reffererThankedVoucher Int      @map("refferer_thanked_voucher")
  reffereeThankedEmail   Int      @map("refferee_thanked_email")
  reffereeThankedSms     Int      @map("refferee_thanked_sms")
  refereeThankedVoucher  Int      @map("referee_thanked_voucher")
  sentToName             String   @map("sent_to_name")
  referredByName         String   @map("referred_by_name")

  @@map("cm_refs")
}

model CmRotaCustom {
  id               Int    @id @default(autoincrement())
  rotaId           Int    @map("rota_id")
  occupier         Int
  customFieldId    Int    @map("custom_field_id")
  customFieldValue String @map("custom_field_value")
  imported         Int

  @@index([rotaId], name: "rotaId")
  @@map("cm_rota_custom")
}

model CmSalesCustom {
  id               Int    @id @default(autoincrement())
  saleId           Int    @map("sale_id")
  occupier         Int
  customFieldId    Int    @map("custom_field_id")
  customFieldValue String @map("custom_field_value")
  imported         Int

  @@index([customFieldId], name: "customFieldId")
  @@index([customFieldValue], name: "customFieldValue")
  @@index([saleId], name: "saleId")
  @@map("cm_sales_custom")
}

model CmServicesCustom {
  id               Int    @id @default(autoincrement())
  serviceId        Int    @map("service_id")
  occupier         Int
  customFieldId    Int    @map("custom_field_id")
  customFieldValue String @map("custom_field_value")

  @@index([customFieldId], name: "customFieldId")
  @@index([occupier], name: "occupier")
  @@index([serviceId], name: "serviceId")
  @@map("cm_services_custom")
}

model CmSolutionNotes {
  ID          Int                      @id @default(autoincrement())
  OwnerID     Int
  SolutionID  Int
  Note        String
  Status      cm_solution_notes_status @default(Enable)
  CreatedDate DateTime
  IpAddress   Int

  @@map("cm_solution_notes")
}

model CmStaffCommission {
  id             Int    @id @default(autoincrement())
  companyId      Int    @map("company_id")
  staffId        Int    @map("staff_id")
  pabauId        Int    @map("pabau_id")
  employeeName   String @map("employee_name")
  commissionType String @map("commission_type")
  tier1From      Float  @map("tier_1_from")
  tier1To        Float  @map("tier_1_to")
  tier1Percent   String @map("tier_1_percent")
  tier2From      Float  @map("tier_2_from")
  tier2To        Float  @map("tier_2_to")
  tier2Percent   String @map("tier_2_percent")
  tier3From      Float  @map("tier_3_from")
  tier3To        Float  @map("tier_3_to")
  tier3Percent   Float  @map("tier_3_percent")
  tier4From      Float  @map("tier_4_from")
  tier4To        Float  @map("tier_4_to")
  tier4Percent   String @map("tier_4_percent")
  tier5From      Float  @map("tier_5_from")
  tier5To        Float  @map("tier_5_to")
  tier5Percent   String @map("tier_5_percent")

  @@map("cm_staff_commission")
}

model CmStaffCustom {
  id               Int    @id @default(autoincrement())
  staffId          Int    @map("staff_id")
  occupier         Int
  customFieldId    Int    @map("custom_field_id")
  customFieldLabel String @map("custom_field_label")
  customFieldValue String @map("custom_field_value")
  imported         Int
  oldValue         String @map("old_value")

  @@index([customFieldId], name: "customFieldId")
  @@index([staffId], name: "lead_id")
  @@index([occupier], name: "occupier")
  @@map("cm_staff_custom")
}

model CmStaffDocuments {
  ID      Int      @id @default(autoincrement())
  StaffID Int
  Date    DateTime
  Name    String
  Type    Int
  File    String

  @@map("cm_staff_documents")
}

model CmStaffEmergency {
  ID            Int    @id @default(autoincrement())
  StaffID       Int
  ContactName   String
  Relationship  String
  Address1      String
  Address2      String
  City          String
  St            String
  Zip           String
  HomePhone     String
  WorkPhone     String
  CellPhone     String
  ContactName2  String
  Relationship2 String
  Address12     String
  Address22     String
  City2         String
  St2           String
  Zip2          String
  HomePhone2    String
  WorkPhone2    String
  CellPhone2    String
  PhysicianName String
  Phone         String
  SpecialNotes  String

  @@index([StaffID], name: "StaffID")
  @@map("cm_staff_emergency")
}

model CmStaffEvaluations {
  ID          Int      @id @default(autoincrement())
  StaffID     Int
  Date        DateTime
  Description String
  Initials    String
  Comments    String

  @@map("cm_staff_evaluations")
}

model CmStaffEvaluationCats {
  ID        Int    @id @default(autoincrement())
  EvalID    Int
  EvalCatID Int
  Comments  String
  Score     Float

  @@index([EvalID, EvalCatID], name: "EvalID")
  @@map("cm_staff_evaluation_cats")
}

model CmStaffGeneral {
  ID                Int                         @id @default(autoincrement())
  OwnerID           String
  Occupier          String
  Avatar            String
  Fname             String
  Lname             String
  MI                String
  Birthdate         DateTime?
  SSN               String
  Address1          String
  Address2          String
  City              String
  St                String
  Zip               String
  Country           String
  HomePhone         String
  WorkPhone         String
  CellPhone         String
  Fax               String
  Email             String
  Status            Int
  EmployeeNumber    String
  HireDate          DateTime
  RenewalDate       DateTime
  maxVacationDays   Int?                        @map("max_vacation_days")
  Location          String
  Position          Int
  Department        Int
  Manager           Int
  W4Status          Int
  Exemptions        String
  Gender            Int
  EEOCode           Int
  EEOCategory       Int
  NextReview        DateTime
  EnumStatus        cm_staff_general_EnumStatus @default(Enable)
  CreatedDate       DateTime
  IpAddress         Int
  pabauId           Int                         @map("pabau_id")
  DefaultLocation   Int
  consultationFee   Float                       @map("consultation_fee")
  deletedOn         String                      @map("deleted_on")
  secretary         String
  secretaryEnable   Boolean                     @map("secretary_enable")
  Salutation        String
  commissionSheetId Int                         @map("commission_sheet_id")

  @@index([Position], name: "Position")
  @@index([pabauId], name: "id_index")
  @@index([Occupier], name: "occupier")
  @@map("cm_staff_general")
}

model CmStaffIncidents {
  ID      Int                     @id @default(autoincrement())
  StaffID Int
  Date    String
  Type    cm_staff_incidents_Type @default(Accident)
  Title   String
  lateBy  Int?                    @default(0) @map("late_by")
  Notes   String

  @@map("cm_staff_incidents")
}

model CmStaffNotes {
  ID           Int    @id @default(autoincrement())
  StaffID      Int    @unique
  Dependents   String
  Education    String
  Hobbies      String
  Training     String
  Volunteer    String
  Prescription String

  @@map("cm_staff_notes")
}

model CmStaffPayrolls {
  ID                 Int                           @id @default(autoincrement())
  StaffID            Int
  StartDate          DateTime
  Transaction        Int
  TransactionRate    Float
  TransactionTime    Float
  Note               String
  PostedBy           String
  NewBalance         Float
  AccountType        cm_staff_payrolls_AccountType @default(vacation)
  LengthOfAbsence    String
  LengthOfAbsenceVal String

  @@map("cm_staff_payrolls")
}

model CmStaffSeparation {
  ID               Int      @id @default(autoincrement())
  StaffID          Int
  Date             DateTime
  Rehire           String
  SeparationReason Int
  Comments         String
  EnrolDate        DateTime
  DeclinedDate     DateTime
  PaymentAmount    String
  EndDate          DateTime
  Notes            String

  @@index([StaffID], name: "StaffID")
  @@map("cm_staff_separation")
}

model CmStaffTrainings {
  ID        Int    @id @default(autoincrement())
  StaffID   Int
  Title     String
  Category  String
  Type      String
  StartDate String
  EndDate   String
  Hours     String
  Cost      String
  Note      String
  Agency    String
  Location  String

  @@map("cm_staff_trainings")
}

model CmStaffUsers {
  ID      Int      @id @default(autoincrement())
  StaffID Int      @unique
  Field1  String
  Value1  String
  Field2  String
  Value2  String
  Field3  String
  Value3  String
  Field4  String
  Value4  String
  Field5  String
  Value5  String
  Field6  String
  Value6  String
  Field7  String
  Value7  String
  Field8  String
  Value8  String
  Field9  String
  Value9  String
  Field10 String
  Value10 String
  Field11 String
  Value11 DateTime
  Field12 String
  Value12 DateTime
  Field13 String
  Value13 DateTime
  Field14 String
  Value14 DateTime
  Field15 String
  Value15 DateTime
  Field16 String
  Value16 String
  Field17 String
  Value17 String
  Field18 String
  Value18 String
  Field19 String
  Value19 String
  Field20 String
  Value20 String

  @@map("cm_staff_users")
}

model CmStaffWages {
  ID       Int                 @id @default(autoincrement())
  StaffID  Int
  Date     DateTime
  Position Int
  Rate     String
  Type     cm_staff_wages_Type @default(Hourly)
  Note     String

  @@map("cm_staff_wages")
}

model CmTagging {
  ID     Int    @id @default(autoincrement())
  postId Int
  type   String
  tagId  Int    @map("tag_id")

  @@map("cm_tagging")
}

model CmTasks {
  ID             Int             @id @default(autoincrement())
  occupier       String
  userid         String
  title          String
  description    String
  attachment     String
  status         cm_tasks_status @default(Enable)
  CreatedDate    DateTime
  EditedDate     DateTime
  customTaskName String          @map("custom_task_name")

  @@map("cm_tasks")
}

model CmTaskAssignment {
  ID          Int                           @id @default(autoincrement())
  taskid      Int
  assignedby  String
  assignedto  String
  taskStatus  cm_task_assignment_taskStatus @default(Pending)
  CreatedDate DateTime

  @@map("cm_task_assignment")
}

model CmTaskNotes {
  ID          Int                  @id @default(autoincrement())
  OwnerID     Int
  TaskID      Int
  Note        String
  Status      cm_task_notes_status @default(Enable)
  CreatedDate DateTime
  IpAddress   Int

  @@map("cm_task_notes")
}

model CmVaccines {
  id                 Int      @id @default(autoincrement())
  cmDrugsId          Int      @map("cm_drugs_id")
  name               String
  scheduleDay        String   @map("schedule_day")
  coverMonths        String   @map("cover_months")
  recallTypeIds      String   @map("recall_type_ids")
  administrationDate DateTime @map("administration_date")
  lastModified       DateTime @map("last_modified")
  modifiedBy         Int      @map("modified_by")
  companyId          Int      @map("company_id")
  fieldOrder         Int      @map("field_order")
  isDeleted          Int      @default(0) @map("is_deleted")

  @@unique([cmDrugsId, name, companyId], name: "vaccine_id")
  @@index([name], name: "name")
  @@map("cm_vaccines")
}

model CmVaccinesTypes {
  id         Int    @id @default(autoincrement())
  name       String
  fieldOrder Int    @map("field_order")
  companyId  Int    @map("company_id")

  @@map("cm_vaccines_types")
}

model CmVaccineDisease {
  id         Int @id @default(autoincrement())
  companyId  Int @map("company_id")
  vaccineId  Int @map("vaccine_id")
  diseaseId  Int @map("disease_id")
  imported   Int
  isRequired Int @map("is_required")

  @@map("cm_vaccine_disease")
}

model CmVouchers {
  id                   Int                @id @default(autoincrement())
  code                 String?
  type                 cm_vouchers_type?
  description          String
  amount               Float?
  valid                cm_vouchers_valid?
  dateFrom             DateTime?          @map("date_from")
  dateTo               DateTime?          @map("date_to")
  timeFrom             DateTime?          @map("time_from")
  timeTo               DateTime?          @map("time_to")
  expiryDate           DateTime?          @map("expiry_date")
  every                cm_vouchers_every?
  occupier             Int?
  purchasedFor         String             @map("purchased_for")
  purchasedBy          String?            @map("purchased_by")
  status               String
  remainingBalance     Float              @map("remaining_balance")
  leadId               Int                @map("lead_id")
  voucherContactEmail  String             @map("voucher_contact_email")
  voucherContactMobile Int                @map("voucher_contact_mobile")
  purchaseDate         DateTime           @map("purchase_date")
  purchaserContactId   Int                @map("purchaser_contact_id")
  purchasedForId       Int                @map("purchased_for_id")
  imported             Int
  voucherType          Int                @map("voucher_type")
  salesId              Int                @map("sales_id")
  smsCampaignId        Int                @map("sms_campaign_id")
  templateId           Int                @map("template_id")

  @@index([occupier], name: "occupier")
  @@index([purchasedForId], name: "purchased_for_id")
  @@index([purchaserContactId], name: "purchaserContactId")
  @@map("cm_vouchers")
}

model CmVouchersImportHelper {
  id                Int      @id @default(autoincrement())
  occupier          Int
  imported          Int
  customContactId   Int      @map("custom_contactId")
  customContactName String   @map("custom_contact_name")
  customId          String   @map("custom_id")
  dateFrom          DateTime @map("date_from")
  dateTo            DateTime @map("date_to")
  customUserName    String   @map("custom_user_name")
  amount            String
  remaining         String
  contactId         Int      @map("contact_id")
  dateSold          DateTime @map("date_sold")
  code              String

  @@map("cm_vouchers_import_helper")
}

model CmVoucherHistory {
  id         Int   @id @default(autoincrement())
  voucherId  Int   @map("voucher_id")
  amountUsed Float @map("amount_used")
  saleId     Int   @map("sale_id")

  @@map("cm_voucher_history")
}

model CmWallposts {
  ID          Int                  @id @default(autoincrement())
  userId      Int
  company     Int
  description String
  attachment  Boolean
  linkprw     cm_wallposts_linkprw @default(dbgenerated("0"))
  postTime    Int                  @map("post_time")
  status      cm_wallposts_status  @default(Enable)
  ipAddress   Int

  @@map("cm_wallposts")
}

model CmWallpostComment {
  ID          Int    @id @default(autoincrement())
  activitytId Int
  userId      Int
  comment     String
  time        Int
  ipAddress   Int

  @@map("cm_wallpost_comment")
}

model CmWallpostFiles {
  ID       Int     @id @default(autoincrement())
  postId   Int
  filetype Boolean
  filename String
  original String

  @@map("cm_wallpost_files")
}

model CmWallpostPinned {
  postId          Int      @id @default(autoincrement()) @map("post_id")
  occupier        Int
  userPosted      Int      @map("user_posted")
  userTarget      Int      @map("user_target")
  fromPabau       String?  @map("from_pabau")
  fromSource      String   @map("from_source")
  title           String
  message         String?
  url             String
  dateExpires     DateTime @map("date_expires")
  dateCreated     DateTime @map("date_created")
  colorBackground String   @map("color_background")
  colorText       String   @map("color_text")
  iconImage       String   @map("icon_image")

  @@map("cm_wallpost_pinned")
}

model CodeSet {
  id        Int    @id @default(autoincrement())
  setName   String @map("set_name")
  companyId Int    @map("company_id")
  layers    Int

  @@map("code_set")
}

model ColumnFilter {
  id         Int    @id @default(autoincrement())
  occupier   Int
  userId     Int    @map("user_id")
  filterType String @map("filter_type")
  filterData String @map("filter_data")

  @@map("column_filter")
}

model CommissionAmendment {
  id               Int       @id @default(autoincrement())
  partnerCompanyId Int       @map("partner_companyId")
  fromDate         DateTime  @map("from_date")
  toDate           DateTime  @map("to_date")
  amount           Float
  description      String
  companyId        Int       @map("company_id")
  uid              Int
  creationDate     DateTime  @map("creation_date")
  modifiedDate     DateTime? @map("modified_date")

  @@index([companyId], name: "companyId")
  @@index([partnerCompanyId], name: "partnerCompanyId")
  @@map("commission_amendment")
}

model CommissionSheet {
  id          Int    @id @default(autoincrement())
  sheetName   String @map("sheet_name")
  companyId   Int    @map("company_id")
  description String
  type        Int    @default(0)

  @@map("commission_sheet")
}

model CommissionSheetSettings {
  id                 Int       @id @default(autoincrement())
  companyId          Int       @map("company_id")
  productsCol        String?   @map("products_col")
  chargeClientCol    String?   @map("charge_client_col")
  facilityFeeCol     String?   @map("facility_fee_col")
  facilityFee2Col    String?   @map("facility_fee2_col")
  deductConsumCol    String?   @map("deduct_consum_col")
  payoutEmpCol       String?   @map("payout_emp_col")
  productsActive     Int?      @default(1) @map("products_active")
  chargeClientActive Int?      @default(1) @map("charge_client_active")
  facilityFeeActive  Int?      @default(1) @map("facility_fee_active")
  facilityFee2Active Int?      @default(1) @map("facility_fee2_active")
  deductConsumActive Int?      @default(1) @map("deduct_consum_active")
  payoutEmpActive    Int?      @default(1) @map("payout_emp_active")
  creationDate       DateTime? @map("creation_date")
  modifiedDate       DateTime? @map("modified_date")

  @@map("commission_sheet_settings")
}

model communications {
  id                        Int                          @id @default(autoincrement())
  companyId                 Int                          @map("company_id")
  fromAddress               String                       @map("from_address")
  uid                       Int
  locationId                Int                          @map("location_id")
  type                      communications_type
  secure                    Boolean                      @default(false)
  date                      DateTime
  communicationsContentId   Int                          @map("communications_content_id")
  relatedId                 Int?                         @map("related_id")
  relatedType               communications_related_type? @map("related_type")
  CommunicationsContent     CommunicationsContent       @relation(fields: [communicationsContentId], references: [id])
  communications_recipients CommunicationsRecipients[]

  @@index([communicationsContentId], name: "communicationsContentId")
  @@index([companyId, uid], name: "companyId")
  @@index([date], name: "date")
}

model CommunicationsContent {
  id             Int              @id @default(autoincrement())
  companyId      Int              @map("company_id")
  hash           String
  subject        String?
  body           String
  communications communications[]

  @@unique([companyId, hash], name: "companyId")
  @@map("communications_content")
}

model CommunicationsHashes {
  id                       Int                       @id @default(autoincrement())
  commRecipientId          Int                       @map("comm_recipient_id")
  hash                     String
  CommunicationsRecipients CommunicationsRecipients @relation(fields: [commRecipientId], references: [id])

  @@index([commRecipientId], name: "communications_hashes_fk")
  @@index([hash], name: "hash")
  @@map("communications_hashes")
}

model CommunicationsProviders {
  id                        Int                        @id @default(autoincrement())
  code                      String                     @unique
  name                      String
  communications_recipients CommunicationsRecipients[]

  @@map("communications_providers")
}

model CommunicationsRecipients {
  id                      Int                                      @id @default(autoincrement())
  communicationsId        Int                                      @map("communications_id")
  recipientId             Int                                      @map("recipient_id")
  recipientType           communications_recipients_recipient_type @map("recipient_type")
  remoteKey               String?                                  @map("remote_key")
  deliveredResult         String?                                  @map("delivered_result")
  readCount               Int                                      @default(0) @map("read_count")
  toAddress               String                                   @map("to_address")
  cc                      String
  providerId              Int                                      @map("provider_id")
  status                  String?
  mergeValues             String                                   @map("merge_values")
  communications          communications                           @relation(fields: [communicationsId], references: [id])
  CommunicationsProviders CommunicationsProviders                 @relation(fields: [providerId], references: [id])
  communications_hashes   CommunicationsHashes[]

  @@index([communicationsId], name: "communicationsId")
  @@index([providerId], name: "communications_providerId")
  @@index([recipientId], name: "contact_id")
  @@index([remoteKey], name: "remoteKey")
  @@map("communications_recipients")
}

model CommunicationIdPairs {
  id           Int     @id @default(autoincrement())
  oldId        Int     @unique @map("old_id")
  newId        Int     @map("new_id")
  type         Boolean
  failed       Int
  callLogFixed Boolean @default(false) @map("call_log_fixed")

  @@map("communication_id_pairs")
}

model CommunicationLog {
  id                Int     @id @default(autoincrement())
  status            String
  subject           String
  sentby            String
  source            String
  to                String
  companyid         Int
  emailBy           String  @map("email_by")
  message           String
  date              Int
  communicationType String  @map("communication_type")
  contactId         Int     @map("contact_id")
  siteSection       String  @map("site_section")
  customId          Int     @map("custom_id")
  contactCustomId   Int     @map("contact_custom_id")
  imported          Int
  PractitionerId    Int     @map("Practitioner_id")
  UserId            Int     @map("User_id")
  emailRead         Int     @map("email_read")
  resultLog         String  @map("result_log")
  templateId        Int     @map("template_id")
  header            String
  footer            String
  smsDeliveryStatus String  @map("sms_delivery_status")
  mandrillEmailId   String  @map("mandrill_email_id")
  mandrilStatus     String  @map("mandril_status")
  sensitiveData     Boolean @map("sensitive_data")
  cc                String
  bookingId         Int     @map("booking_id")

  @@index([companyid], name: "company_index")
  @@index([contactCustomId], name: "contact_custom_id")
  @@index([contactId], name: "contactId_in")
  @@index([mandrillEmailId], name: "mandrillEmailId")
  @@map("communication_log")
}

model CommunicationLogAppointments {
  id              Int       @id @default(autoincrement())
  communicationId Int       @map("communication_id")
  apptId          Int       @map("appt_id")
  creationDate    DateTime? @map("creation_date")
  modifiedDate    DateTime? @map("modified_date")

  @@map("communication_log_appointments")
}

model CommunicationLogAttachments {
  id              Int    @id @default(autoincrement())
  communicationId Int    @map("communication_id")
  occupier        String
  contactId       Int    @map("contact_id")
  fileUrl         String @map("file_url")

  @@index([communicationId], name: "communicationId")
  @@index([contactId], name: "contactId")
  @@index([occupier], name: "occupier")
  @@map("communication_log_attachments")
}

model CommunicationLogEmail {
  id          Int      @id @default(autoincrement())
  fromEmailId Int      @map("from_email_id")
  templateId  Int      @map("template_id")
  contactId   Int      @map("contact_id")
  companyId   Int      @map("company_id")
  sentDate    DateTime @map("sent_date")
  status      Int

  @@map("communication_log_email")
}

model CommunicationLogFails {
  id       Int    @id @default(autoincrement())
  sqlQuery String @map("sql_query")

  @@map("communication_log_fails")
}

model CommunicationLogLetterRecipient {
  id              Int    @id @default(autoincrement())
  communicationId Int    @map("communication_id")
  recipientType   String @map("recipient_type")
  recipient       Int

  @@map("communication_log_letter_recipient")
}

model CommunicationReceipient {
  id              Int       @id @default(autoincrement())
  communicationId Int?      @map("communication_id")
  receipientId    String?   @map("receipient_id")
  creationDate    DateTime? @map("creation_date")

  @@map("communication_receipient")
}

model CompanyAppSubscriptions {
  id          Int    @id @default(autoincrement())
  occupier    Int
  appKeyValue String @map("app_key_value")
  gcAppPlanId String @map("gc_app_plan_id")
  appFee      Float  @map("app_fee")

  @@map("company_app_subscriptions")
}

model CompanyAttachedProducts {
  id                Int  @id @default(autoincrement())
  companyServicesId Int? @map("company_services_id")
  productId         Int? @map("product_id")

  @@index([productId], name: "pro_id")
  @@index([companyServicesId], name: "ser")
  @@map("company_attached_products")
}

model CompanyBdaySettings {
  bdayId          Int                          @id @default(autoincrement()) @map("bday_id")
  bdayCid         Int                          @map("bday_cid")
  bdayBefore      Int                          @map("bday_before")
  bdayFile        String                       @map("bday_file")
  bdayUpdate      Int                          @map("bday_update")
  bdayESender     Int?                         @map("bday_eSender")
  bdayESubject    String                       @map("bday_eSubject")
  bdayEMessage    String                       @map("bday_eMessage")
  status          company_bday_settings_status
  emailActivated  Int                          @map("email_activated")
  smsActivated    Int                          @map("sms_activated")
  bdaySMessage    String                       @map("bday_sMessage")
  bdaySName       String                       @map("bday_sName")
  bdayBeforeSms   Int                          @map("bdayBefore_sms")
  module          String                       @default("contacts")
  emailTemplateId Int                          @map("email_template_id")
  smsTemplateId   Int                          @map("sms_template_id")

  @@map("company_bday_settings")
}

model CompanyBranches {
  id                Int     @id @default(autoincrement())
  groupId           Int     @map("group_id")
  companyId         Int     @map("company_id")
  address           String
  street            String
  city              String
  county            String
  name              String
  postcode          String
  onlineBookings    Int     @map("online_bookings")
  phone             String
  website           String
  isActive          Int     @map("is_active")
  bookableOnline    Int     @map("bookable_online")
  calendarBookable  Int     @map("calendar_bookable")
  isDefault         Boolean @map("is_default")
  lat               Float
  lng               Float
  customId          String  @map("custom_id")
  email             String
  sendConfEmail     Int     @map("send_conf_email")
  showOnline        Int     @default(1) @map("show_online")
  locOrder          Int     @map("loc_order")
  region            String
  invoiceTemplateId Int     @default(0) @map("invoice_template_id")
  color             String
  notifyOnLead      Boolean @default(false) @map("notify_on_lead")
  notice            String?

  @@index([companyId], name: "companyId")
  @@index([groupId], name: "groupId")
  @@map("company_branches")
}

model CompanyBranchesAttachments {
  id          Int                               @id @default(autoincrement())
  companyId   Int                               @default(0) @map("company_id")
  locationId  Int                               @default(0) @map("location_id")
  type        company_branches_attachments_type
  url         String
  description String

  @@map("company_branches_attachments")
}

model CompanyBranchesMergeTags {
  id         Int    @id @default(autoincrement())
  companyId  Int    @default(0) @map("company_id")
  locationId Int    @default(0) @map("location_id")
  tagName    String @map("tag_name")
  tagValue   String @map("tag_value")
  tagType    String @default("") @map("tag_type")

  @@map("company_branches_merge_tags")
}

model CompanyBranchGroups {
  id         Int     @id @default(autoincrement())
  name       String?
  sharedData Int     @map("shared_data")
  companyId  Int     @map("company_id")

  @@map("company_branch_groups")
}

model CompanyBranchVariables {
  id          Int       @id @default(autoincrement())
  branchId    Int       @map("branch_id")
  key         String
  value       String
  dateCreated DateTime  @default(now()) @map("date_created")
  dateUpdated DateTime? @map("date_updated")

  @@unique([branchId, key], name: "branchId")
  @@map("company_branch_variables")
}

model CompanyDepartments {
  id         Int    @id @default(autoincrement())
  company    Int
  department String

  @@map("company_departments")
}

model CompanyEmails {
  companyId       Int    @map("company_id")
  companyEmail    String @map("company_email")
  addedBy         String @map("added_by")
  emailId         Int    @id @default(autoincrement()) @map("email_id")
  sendersName     String @map("senders_name")
  confirmed       Int
  hash            String
  defaultEmail    Int    @map("default_email")
  enterpriseEmail Int    @map("enterprise_email")
  mergeTags       String @map("merge_tags")

  @@map("companyEmails")
}

model CompanyFormBuilderDetails {
  id          Int       @id @default(autoincrement())
  companyId   Int       @map("company_id")
  formName    String?   @map("form_name")
  formDirName Int?      @map("form_dir_name")
  createdBy   Int?      @map("created_by")
  createdDate DateTime? @map("created_date")

  @@map("company_form_builder_details")
}

model CompanyGaFiltering {
  id             Int @id @default(autoincrement())
  companyId      Int @map("company_id")
  ipv4RangeStart Int @map("ipv4_range_start")
  ipv4RangeEnd   Int @map("ipv4_range_end")

  @@unique([companyId, ipv4RangeStart, ipv4RangeEnd], name: "unique_range_per_company")
  @@map("company_ga_filtering")
}

model CompanyGroups {
  ID                Int    @id @default(autoincrement())
  Name              String
  occupier          String
  categoryProductId Int    @map("category_product_id")
  catOrder          Int    @map("cat_order")
  image             String
  onlineEnabled     Int    @map("online_enabled")
  groupColor        String @map("group_color")
  importId          Int    @map("import_id")
  equipmentId       Int    @map("equipment_id")
  depositAmount     Float  @map("deposit_amount")
  taxId             Int    @map("tax_id")
  masterCatId       Int    @map("master_cat_id")
  companyPositionId Int    @default(0) @map("company_position_id")

  @@map("company_groups")
}

model CompanyHits {
  id        Int    @id @default(autoincrement())
  companyId Int    @unique @map("company_id")
  hits      Int
  file      String

  @@map("company_hits")
}

model CompanyIpFiltering {
  ipFilteringId  Int    @id @default(autoincrement()) @map("ip_filtering_id")
  companyId      Int    @map("company_id")
  ipv4RangeStart String @map("ipv4_range_start")
  ipv4RangeEnd   String @map("ipv4_range_end")

  @@map("company_ip_filtering")
}

model CompanyLicTypes {
  id          Int    @id @default(autoincrement())
  title       String
  description String

  @@map("company_lic_types")
}

model CompanyLocations {
  id       Int    @id @default(autoincrement())
  company  Int
  location String

  @@index([company], name: "company")
  @@map("company_locations")
}

model CompanyLog {
  id       Int      @id @default(autoincrement())
  logDate  DateTime @default(now()) @map("log_date")
  text     String
  category String
  severe   Boolean
  company  Int

  @@index([company], name: "company")
  @@map("company_log")
}

model CompanyMailserver {
  id        Int    @id @default(autoincrement())
  companyId Int    @map("company_id")
  host      String
  port      Int
  secure    String
  username  String
  password  String

  @@map("company_mailserver")
}

model CompanyMaster {
  compId          Int     @id @default(autoincrement()) @map("comp_id")
  compUsername    String? @map("comp_username")
  compPassword    String? @map("comp_password")
  compTitle       String? @map("comp_title")
  compCurrency    String? @map("comp_currency")
  compLogo        String? @map("comp_logo")
  compPaypalemail String? @map("comp_paypalemail")
  compBackground  String? @map("comp_background")
  loginTimeout    Int     @map("login_timeout")
  defaultPage     String  @map("default_page")

  @@map("company_master")
}

model CompanyMeta {
  id        Int    @id @default(autoincrement())
  companyId Int    @map("company_id")
  metaName  String @map("meta_name")
  metaValue String @map("meta_value")

  @@unique([companyId, metaName], name: "companyId")
  @@map("company_meta")
}

model CompanyNotes {
  id          Int      @id @default(autoincrement())
  companyId   Int      @map("company_id")
  userId      Int      @map("user_id")
  note        String
  createdDate DateTime @default(now()) @map("created_date")
  isAlert     Boolean  @map("is_alert")

  @@map("company_notes")
}

model CompanyPermissions {
  id        Int    @id @default(autoincrement())
  companyid Int
  section   String

  @@index([companyid], name: "company")
  @@map("company_permissions")
}

model CompanyPolicies {
  id            Int    @id @default(autoincrement())
  companyId     Int    @unique @map("company_id")
  privacyPolicy String @map("privacy_policy")

  @@map("company_policies")
}

model CompanyPositions {
  id       Int    @id @default(autoincrement())
  company  Int
  position String

  @@index([company], name: "company")
  @@map("company_positions")
}

model CompanyRooms {
  id           Int     @id @default(autoincrement())
  company      Int
  description  String
  slots        Int
  allServices  Int     @map("all_services")
  isActive     Int     @map("is_active")
  allLocations Boolean @default(true) @map("all_locations")
  fieldOrder   Int     @map("field_order")
  roomFeeType  String  @map("roomFee_type")
  roomFee      Float   @default(0.00) @map("room_fee")
  prodId       Int     @default(0) @map("prod_id")
  imported     Int     @default(0)
  customId     String  @map("custom_id")

  @@index([company], name: "company")
  @@map("company_rooms")
}

model CompanyRoomsLocations {
  id         Int @id @default(autoincrement())
  roomId     Int @map("room_id")
  locationId Int @map("location_id")

  @@map("company_rooms_locations")
}

model CompanyRoomsServices {
  id            Int    @id @default(autoincrement())
  roomId        Int    @map("room_id")
  serviceId     Int    @map("service_id")
  occupier      String
  priorityOrder Int    @map("priority_order")
  imported      Int

  @@index([roomId], name: "roomId")
  @@index([roomId], name: "roomId_2")
  @@index([serviceId], name: "serviceId")
  @@index([serviceId], name: "serviceId_2")
  @@map("company_rooms_services")
}

model CompanyServices {
  id                    Int                              @id @default(autoincrement())
  company               Int
  service               String
  duration              String
  description           String
  price                 Float
  disabledusers         String?
  color                 String?
  groupId               Int                              @map("group_id")
  onlineBook            Int                              @default(1) @map("online_book")
  productId             Int                              @map("product_id")
  imported              Int
  communicationTemplate Int                              @map("communication_template")
  serviceOrder          Int                              @map("service_order")
  smsMode               Int                              @map("sms_mode")
  smsName               String                           @map("sms_name")
  smsDaysAfter          Int                              @map("sms_days_after")
  smsSendTime           String                           @map("sms_send_time")
  smsId                 Int                              @map("sms_id")
  treatmentGroupId      Int                              @map("treatment_groupId")
  customId              String                           @map("custom_id")
  posOnly               Int                              @map("pos_only")
  prepTime              Int                              @map("prep_time")
  finishTime            Int                              @map("finish_time")
  depositAmount         Float                            @map("deposit_amount")
  friendlyName          String                           @map("friendly_name")
  maxClients            Int                              @default(0) @map("max_clients")
  defaultRoomId         Int                              @map("default_room_id")
  followUpPeriod        Int                              @map("follow_up_period")
  depositType           company_services_deposit_type    @default(inherit) @map("deposit_type")
  maxModels             Int                              @map("max_models")
  availability          company_services_availability    @default(ANY)
  forceCreditPayment    Int                              @default(0) @map("force_credit_payment")
  disabledLocations     String                           @map("disabled_locations")
  addonServices         String                           @map("addon_services")
  serviceParticipants   String?                          @map("service_participants")
  withSummaryTitle      String?                          @map("with_summary_title")
  onlineBookType        company_services_online_book_type @default(ALL) @map("onlineBook_type")
  procCode              String                           @map("proc_code")
  durationDay           Int                              @default(0) @map("duration_day")
  invoiceText           String?                          @map("invoice_text")
  invoiceItemName       String?                          @map("invoice_item_name")
  onlineOnlyService     Int                              @map("online_only_service")

  @@index([company], name: "company_index")
  @@index([groupId], name: "group_index")
  @@index([posOnly], name: "posOnly")
  @@index([productId], name: "product_index")
  @@index([service], name: "service")
  @@map("company_services")
}

model CompanyServicesBackup {
  id                    Int                                  @id @default(autoincrement())
  company               Int
  service               String
  duration              String
  description           String
  price                 Float
  disabledusers         String?
  color                 String?
  groupId               Int                                  @map("group_id")
  onlineBook            Int                                  @default(1) @map("online_book")
  productId             Int                                  @map("product_id")
  imported              Int
  communicationTemplate Int                                  @map("communication_template")
  serviceOrder          Int                                  @map("service_order")
  smsMode               Int                                  @map("sms_mode")
  smsName               String                               @map("sms_name")
  smsDaysAfter          Int                                  @map("sms_days_after")
  smsSendTime           String                               @map("sms_send_time")
  smsId                 Int                                  @map("sms_id")
  treatmentGroupId      Int                                  @map("treatment_groupId")
  customId              String                               @map("custom_id")
  posOnly               Int                                  @map("pos_only")
  prepTime              Int                                  @map("prep_time")
  finishTime            Int                                  @map("finish_time")
  depositAmount         Float                                @map("deposit_amount")
  friendlyName          String                               @map("friendly_name")
  maxClients            Int                                  @default(0) @map("max_clients")
  defaultRoomId         Int                                  @map("default_room_id")
  followUpPeriod        Int                                  @map("follow_up_period")
  depositType           company_services_backup_deposit_type @map("deposit_type")
  maxModels             Int                                  @map("max_models")
  availability          company_services_backup_availability @default(ANY)

  @@map("company_services_backup")
}

model CompanyServicesBundleItems {
  id        Int    @id @default(autoincrement())
  occupier  Int
  serviceId Int    @map("service_id")
  itemType  String @map("item_type")
  itemId    Int    @map("item_id")
  itemQty   Int    @map("item_qty")

  @@index([itemId], name: "itemId")
  @@index([itemType], name: "itemType")
  @@index([occupier], name: "occupier")
  @@index([serviceId], name: "serviceId")
  @@map("company_services_bundle_items")
}

model CompanyServicesDefaultRooms {
  id           Int     @id @default(autoincrement())
  defaultRooms String? @map("default_rooms")
  occupier     Int?
  groupId      Int?    @map("group_id")

  @@map("company_services_defaultRooms")
}

model CompanyServicesEquipment {
  id                Int    @id @default(autoincrement())
  companyId         String @map("company_id")
  serviceId         Int    @map("service_id")
  equipmentId       Int    @map("equipment_id")
  equipmentQuantity Int    @map("equipment_quantity")
  priorityOrder     Int    @map("priority_order")

  @@index([companyId], name: "companyId")
  @@map("company_services_equipment")
}

model CompanyServicesImportHelper {
  id       Int    @id @default(autoincrement())
  service  String
  customId String @map("custom_id")
  color    String
  occupier Int
  imported Int

  @@map("company_services_import_helper")
}

model CompanyServicesMedicalForms {
  id        Int @id @default(autoincrement())
  companyId Int @map("company_id")
  serviceId Int @default(0) @map("service_id")
  formId    Int @map("form_id")

  @@map("company_services_medical_forms")
}

model CompanyServicesPositionPrice {
  id                Int       @id @default(autoincrement())
  companyServicesId Int?      @map("company_services_id")
  positionId        Int?      @map("position_id")
  positionName      String?   @map("position_name")
  price             Float?
  occupier          Int?
  createdDate       DateTime? @map("created_date")
  modifiedDate      DateTime? @map("modified_date")

  @@index([companyServicesId], name: "companyServicesId")
  @@index([occupier], name: "occupier")
  @@map("company_services_position_price")
}

model CompanyServicesPositionTimings {
  id                Int       @id @default(autoincrement())
  companyServicesId Int?      @map("company_services_id")
  positionId        Int?      @map("position_id")
  positionName      String?   @map("position_name")
  duration          String?
  occupier          Int?
  createdDate       DateTime? @map("created_date")
  modifiedDate      DateTime? @map("modified_date")

  @@index([companyServicesId], name: "companyServicesId")
  @@index([occupier], name: "occupier")
  @@index([positionId], name: "positionId")
  @@index([positionName], name: "positionName")
  @@map("company_services_position_timings")
}

model CompanyServicesPriorityRooms {
  id            Int @id @default(autoincrement())
  occupier      Int
  serviceId     Int @map("service_id")
  roomId        Int @map("room_id")
  priorityOrder Int @map("priority_order")

  @@index([occupier], name: "occupier")
  @@index([roomId], name: "roomId")
  @@index([serviceId], name: "serviceId")
  @@map("company_services_priority_rooms")
}

model CompanyServicesRetailProducts {
  id                  Int @id @default(autoincrement())
  occupier            Int
  serviceId           Int @map("service_id")
  productId           Int @map("product_id")
  quantity            Int
  consumableDeduction Int @default(0) @map("consumable_deduction")

  @@index([occupier], name: "occupier")
  @@index([productId], name: "productId")
  @@index([serviceId], name: "serviceId")
  @@map("company_services_retail_products")
}

model CompanyServicesUsersTiers {
  id                    Int    @id @default(autoincrement())
  serviceId             Int    @map("service_id")
  userId                Int    @map("user_id")
  companyId             Int    @map("company_id")
  price                 Float?
  duration              String
  staffCommission       Float? @default(0.00) @map("staff_commission")
  participantCommission Float? @default(0.00) @map("participant_commission")

  @@index([companyId], name: "companyId")
  @@index([serviceId], name: "serviceId")
  @@index([userId], name: "userId")
  @@map("company_services_users_tiers")
}

model CompanyVariables {
  id          Int      @id @default(autoincrement())
  company     Int
  key         String
  value       String
  dateCreated DateTime @default(now()) @map("date_created")

  @@unique([company, key], name: "company")
  @@map("company_variables")
}

model CompEmailsSendCriteria {
  id           Int                                     @id @default(autoincrement())
  interestArea comp_emails_send_criteria_interest_area @default(master_category) @map("interest_area")
  areaItemId   Int                                     @map("area_item_id")
  commId       Int                                     @map("comm_id")
  companyId    Int                                     @map("company_id")

  @@map("comp_emails_send_criteria")
}

model CompSmsSendCriteria {
  id           Int                                  @id @default(autoincrement())
  interestArea comp_sms_send_criteria_interest_area @default(master_category) @map("interest_area")
  areaItemId   Int                                  @map("area_item_id")
  commId       Int                                  @map("comm_id")
  companyId    Int                                  @map("company_id")

  @@map("comp_sms_send_criteria")
}

model config {
  id       Int    @id @default(autoincrement())
  name     String
  value    String
  occupier Int
}

model ConfigureVoucherSettings {
  id           Int       @id @default(autoincrement())
  value        Float?
  expiryDate   String?   @map("expiry_date")
  enable       Int?
  occupier     Int?
  uid          Int?
  createdDate  DateTime? @map("created_date")
  modifiedDate DateTime? @map("modified_date")

  @@map("configure_voucher_settings")
}

model ConnectBookingsLog {
  id            Int      @id @default(autoincrement())
  appointmentId Int      @map("appointment_id")
  contactId     Int      @map("contact_id")
  mobile        Int
  browser       String
  dateTracked   DateTime @map("date_tracked")
  companyId     Int      @map("company_id")

  @@index([appointmentId], name: "appointmentId")
  @@map("connect_bookings_log")
}

model ConnectCard {
  id        Int    @id @default(autoincrement())
  expiry    String
  name      String
  cvv       Int
  uid       Int
  companyId Int    @map("company_id")
  card      String
  cardType  String @map("card_type")

  @@map("connect_card")
}

model ConnectFields {
  id        Int    @id @default(autoincrement())
  occupier  Int
  firstName String @map("first_name")
  lastName  String @map("last_name")
  mobile    String
  address   String
  city      String
  county    String
  postcode  String
  country   String

  @@map("connect_fields")
}

model ConnectGeneral {
  id                      Int    @id @default(autoincrement())
  username                String
  advance                 String
  notify                  String
  login                   String
  employee                String
  date                    String
  occupier                String
  paypalAddress           String @map("paypal_address")
  paypalCurrency          String @map("paypal_currency")
  templateId              Int    @map("template_id")
  fromEmail               String @map("from_email")
  paymentApiUrl           String @map("payment_api_url")
  signature               String
  serviceOrder            String @map("service_order")
  smsTemplateId           Int    @map("sms_templateId")
  enableEmailNotification Int    @map("enable_email_notification")
  enableSmsNotification   Int    @map("enable_sms_notification")
  passwordTemplateId      Int    @map("password_templateId")
  clientTemplateId        Int    @map("client_templateId")

  @@map("connect_general")
}

model ConnectRegistrationFields {
  id         Int    @id @default(autoincrement())
  companyId  Int    @map("company_id")
  fieldsData String @map("fields_data")

  @@map("connect_registration_fields")
}

model ConnectStats {
  id           Int      @id @default(autoincrement())
  companyId    Int      @map("company_id")
  userId       Int      @map("user_id")
  date         DateTime
  ipAddress    String   @map("ip_address")
  stepLocation Int      @default(0) @map("step_location")
  stepService  Int      @default(0) @map("step_service")
  stepEmployee Int      @default(0) @map("step_employee")
  stepDate     Int      @default(0) @map("step_date")
  stepLogin    Int      @default(0) @map("step_login")
  converted    Int      @default(0)

  @@map("connect_stats")
}

model ConnectTheme {
  id              Int    @id @default(autoincrement())
  occupier        String
  title           String
  bgcolor         String
  bgimage         String
  logoimage       String
  customtitle     String
  customcontent   String
  headercolor     String
  footercolor     String
  buttoncolor     String
  boxshadowcolor  String
  timecolor       String
  fontcolor       String
  buttontextcolor String
  linkcolor       String

  @@map("connect_theme")
}

model ConnectUserLog {
  id        Int    @id @default(autoincrement())
  contactId Int    @map("contact_id")
  date      Int
  companyId Int    @map("company_id")
  ipAddress String @map("ip_address")

  @@map("connect_user_log")
}

model ConsultationTheme {
  id              Int    @id @default(autoincrement())
  companyId       Int    @map("company_id")
  headerTheme     String @map("header_theme")
  logo            String
  buttonCol       String @map("button_col")
  backgroundImage String @map("background_image")
  videoUrl        String @map("video_url")
  introMessage    String @map("intro_message")

  @@map("consultation_theme")
}

model ContactAttachment {
  id              Int     @id @default(autoincrement())
  linkref         String
  contactId       Int     @map("contact_id")
  companyId       Int     @map("company_id")
  date            Int
  attachName      String  @map("attach_name")
  userId          Int     @map("user_id")
  attachmentType  String  @map("attachment_type")
  connectPublic   Int     @map("connect_public")
  websitePublic   Int     @map("website_public")
  attachmentTitle String  @map("attachment_title")
  cloud           Boolean @default(false)
  customId        Int     @map("custom_id")
  originalPath    String  @map("original_path")
  imported        Int
  bookingId       Int     @map("booking_id")
  photoType       String  @map("photo_type")
  attachmentSize  String  @map("attachment_size")
  broken          Int
  brokenCheck     Int     @map("broken_check")
  oldLinkref      String  @map("old_linkref")
  inFolder        Int     @map("in_folder")
  customContactId Int     @map("custom_contactId")
  albumId         Int     @map("album_id")
  medicalFormId   Int     @map("medical_form_id")
  tags            String
  medicalUniqid   String  @map("medical_uniqid")

  @@index([bookingId], name: "bookingId")
  @@index([cloud], name: "cloud")
  @@index([contactId], name: "contactId")
  @@index([customId], name: "customId")
  @@index([linkref], name: "linkref")
  @@index([medicalUniqid], name: "medicalUniqid")
  @@map("contact_attachment")
}

model ContactAttachmentBackup {
  id              Int     @id
  linkref         String
  contactId       Int     @map("contact_id")
  companyId       Int     @map("company_id")
  date            Int
  attachName      String  @map("attach_name")
  attachmentType  String  @map("attachment_type")
  connectPublic   Int     @map("connect_public")
  websitePublic   Int     @map("website_public")
  attachmentTitle String  @map("attachment_title")
  cloud           Boolean @default(false)
  customId        Int     @map("custom_id")
  originalPath    String  @map("original_path")
  imported        Int
  bookingId       Int     @map("booking_id")
  photoType       String  @map("photo_type")
  attachmentSize  String  @map("attachment_size")
  broken          Int
  brokenCheck     Int     @map("broken_check")
  oldLinkref      String  @map("old_linkref")
  inFolder        Int     @map("in_folder")
  added           Int

  @@index([cloud], name: "cloud")
  @@index([contactId], name: "contactId")
  @@index([customId], name: "customId")
  @@index([linkref], name: "linkref")
  @@map("contact_attachment_backup")
}

model ContactAttachmentHistoryTrigger {
  id                  Int      @id @default(autoincrement())
  mode                String
  contactAttachmentId Int      @map("contact_attachment_id")
  linkref             String
  contactId           Int      @map("contact_id")
  companyId           Int      @map("company_id")
  date                Int
  attachName          String   @map("attach_name")
  attachmentType      String   @map("attachment_type")
  connectPublic       Int      @map("connect_public")
  websitePublic       Int      @map("website_public")
  attachmentTitle     String   @map("attachment_title")
  cloud               Boolean  @default(false)
  customId            Int      @map("custom_id")
  originalPath        String   @map("original_path")
  imported            Int
  bookingId           Int      @map("booking_id")
  photoType           String   @map("photo_type")
  attachmentSize      String   @map("attachment_size")
  broken              Int
  brokenCheck         Int      @map("broken_check")
  oldLinkref          String   @map("old_linkref")
  inFolder            Int      @map("in_folder")
  dateChanged         DateTime @default(now()) @map("date_changed")

  @@map("contact_attachment_history_trigger")
}

model ContactAttachmentMissing {
  id       Int    @id @default(autoincrement())
  occupier Int
  fileName String @map("file_name")
  date     String
  missing  Int

  @@map("contact_attachment_missing")
}

model ContactAttachmentRestore {
  id              Int     @id
  linkref         String
  contactId       Int     @map("contact_id")
  companyId       Int     @map("company_id")
  date            Int
  attachName      String  @map("attach_name")
  attachmentType  String  @map("attachment_type")
  connectPublic   Int     @map("connect_public")
  websitePublic   Int     @map("website_public")
  attachmentTitle String  @map("attachment_title")
  cloud           Boolean @default(false)
  customId        Int     @map("custom_id")
  originalPath    String  @map("original_path")
  imported        Int
  bookingId       Int     @map("booking_id")
  photoType       String  @map("photo_type")
  attachmentSize  String  @map("attachment_size")
  broken          Int
  brokenCheck     Int     @map("broken_check")
  oldLinkref      String  @map("old_linkref")
  inFolder        Int     @map("in_folder")
  customContactId Int     @map("custom_contactId")

  @@index([bookingId], name: "bookingId")
  @@index([cloud], name: "cloud")
  @@index([contactId], name: "contactId")
  @@index([customId], name: "customId")
  @@index([linkref], name: "linkref")
  @@map("contact_attachment_restore")
}

model ContactImagesImportHelper {
  id              Int      @id @default(autoincrement())
  customContactId Int      @map("custom_contact_id")
  Fname           String
  Lname           String
  customUserName  String   @map("custom_user_name")
  imageUrl        String   @map("image_url")
  createdDate     DateTime @map("created_date")
  occupier        Int
  imported        Int
  added           Int
  notFound        Int      @map("not_found")

  @@map("contact_images_import_helper")
}

model ContactInsurance {
  id               Int    @id @default(autoincrement())
  contactId        Int    @map("contact_id")
  providerNumber   Int    @map("provider_number")
  authCode         String @map("auth_code")
  membershipNumber String @map("membership_number")
  chargeType       String @map("charge_type")
  companyId        Int    @map("company_id")
  imported         Int

  @@index([contactId], name: "contactId")
  @@map("contact_insurance")
}

model ContactInsurer {
  id        Int @id @default(autoincrement())
  contactId Int @map("contact_id")
  companyId Int @map("company_id")
  insurerId Int @map("insurer_id")

  @@map("contact_insurer")
}

model ContactMeta {
  id        Int    @id @default(autoincrement())
  contactId Int    @map("contact_id")
  metaName  String @map("meta_name")
  metaValue String @map("meta_value")

  @@unique([contactId, metaName], name: "contactId")
  @@map("contact_meta")
}

model ContactPackages {
  id             Int      @id @default(autoincrement())
  contactId      Int      @map("contact_id")
  packageId      Int      @map("package_id")
  invoiceId      Int?     @map("invoice_id")
  activationDate DateTime @map("activation_date")
  expirationDate DateTime @map("expiration_date")
  occupier       String
  CreatedDate    DateTime
  soldBy         Int      @map("sold_by")
  code           String
  voided         Int
  voidedBy       Int      @map("voided_by")
  customStatus   String   @map("custom_status")
  imported       Int
  packageCode    String   @map("package_code")
  oldInvoiceId   Int      @map("old_invoiceId")
  customId       Int      @map("custom_id")

  @@index([contactId], name: "contactId")
  @@index([packageId], name: "packageId")
  @@map("contact_packages")
}

model ContactPackageUsed {
  id               Int      @id @default(autoincrement())
  contactPackageId Int      @map("contact_package_id")
  dateCreated      DateTime @map("date_created")
  bookingId        Int      @map("booking_id")
  status           String
  bookTake         Int      @map("book_take")
  cancelTake       Int      @map("cancel_take")
  occupier         Int
  bookingMasterId  Int      @map("booking_master_id")
  oldBookingId     Int      @map("old_bookingId")

  @@index([bookingId], name: "bookingId")
  @@index([contactPackageId], name: "contactPackageId")
  @@index([occupier], name: "occupier")
  @@map("contact_package_used")
}

model ContactRelations {
  id            Int     @id @default(autoincrement())
  mainContactId Int     @map("main_contact_id")
  relContactId  Int     @map("rel_contact_id")
  relationId    Int     @map("relation_id")
  imported      Boolean @default(false)

  @@map("contact_relations")
}

model ContactRelationsTypes {
  id           Int    @id @default(autoincrement())
  reverseIs    Int    @map("reverse_is")
  relationName String @map("relation_name")
  companyId    Int    @map("company_id")

  @@map("contact_relations_types")
}

model ContactTypes {
  id            Int     @id @default(autoincrement())
  companyId     Int     @map("company_id")
  name          String
  minimalFields Boolean @default(false) @map("minimal_fields")

  @@map("contact_types")
}

model ContactZipFiles {
  id             Int      @id @default(autoincrement())
  occupier       String
  contactId      Int      @map("contact_id")
  fileName       String   @map("file_name")
  linkhref       String
  status         Int
  userId         Int      @map("user_id")
  dateAdded      DateTime @map("date_added")
  dateProcessing DateTime @map("date_processing")
  dateProcessed  DateTime @map("date_processed")

  @@map("contact_zip_files")
}

model ContractFolders {
  id          Int    @id @default(autoincrement())
  companyId   Int    @map("company_id")
  name        String
  description String

  @@map("contract_folders")
}

model ConvertedBalances {
  id        Int @id @default(autoincrement())
  time      Int
  saleId    Int @map("sale_id")
  companyId Int @map("company_id")

  @@map("converted_balances")
}

model countries {
  CountryCode            String
  countryName            String @map("country_name")
  Currency               String
  Continent              String
  countryId              Int    @id @default(autoincrement()) @map("country_id")
  phonePrefix            Int    @map("phone_prefix")
  smsBaseRate            Float  @map("sms_base_rate")
  dateFormat             String @map("date_format")
  taxName                String @map("tax_name")
  smsMultiplier          Float  @map("sms_multiplier")
  generalInformation     String @map("general_information")
  vaccineRecommendations String @map("vaccine_recommendations")
  otherRisks             String @map("other_risks")
  outbreaks              String
  malaria                String
  nathnacUrl             String @map("nathnac_url")
  travaxUrl              String @map("travax_url")
  gmapsUrl               String @map("gmaps_url")
  customId               String @map("custom_id")
}

model country {
  id         Int    @id @default(autoincrement())
  name       String
  iso2       String
  iso3       String
  iso3Number Int    @map("iso3_number")
}

model CountryDisease {
  id        Int    @id @default(autoincrement())
  companyId Int    @map("company_id")
  countryId Int    @map("country_id")
  diseaseId Int    @map("disease_id")
  riskLevel String @map("risk_level")
  imported  Int

  @@map("country_disease")
}

model course {
  id                Int    @id @default(autoincrement())
  courseName        String @map("course_name")
  courseDescription String @map("course_description")
  sectionId         Int    @map("section_id")
  order             Int
  duration          String
  videoLink         String @map("video_link")
  categoryId        Int    @map("category_id")
  audio             Int
  comingSoon        Int    @map("coming_soon")
  createdDate       String @map("created_date")
  zendeskArticle    String @map("zendesk_article")
}

model CourseCategory {
  id              Int    @id @default(autoincrement())
  categoryName    String @map("category_name")
  order           Int
  description     String
  hidden          Int
  courseGoal      String @map("course_goal")
  comingSoon      Int    @map("coming_soon")
  preCat          Int    @map("pre_cat")
  categorySection String @map("category_section")

  @@map("course_category")
}

model CourseComplete {
  id           Int @id @default(autoincrement())
  uid          Int
  completeDate Int @map("complete_date")
  categoryId   Int @map("category_id")

  @@map("course_complete")
}

model CourseSection {
  id          Int    @id @default(autoincrement())
  sectionName String @map("section_name")
  order       Int
  categoryId  Int    @map("category_id")

  @@map("course_section")
}

model CourseTaken {
  id          Int @id @default(autoincrement())
  uid         Int
  dateStarted Int @map("date_started")

  @@map("course_taken")
}

model CourseUserSeen {
  id        Int @id @default(autoincrement())
  dateSeen  Int @map("date_seen")
  uid       Int
  companyId Int @map("company_id")
  vid       Int
  cid       Int

  @@map("course_user_seen")
}

model CourseVideoWatched {
  id           Int @id @default(autoincrement())
  uid          Int
  completeDate Int @map("complete_date")
  videoId      Int @map("video_id")

  @@map("course_video_watched")
}

model CpPathways {
  id                Int               @id @default(autoincrement())
  pathwayName       String            @map("pathway_name")
  companyId         Int               @map("company_id")
  description       String
  isActive          Int               @map("is_active")
  order             Int?              @default(0)
  cp_pathways_taken CpPathwaysTaken[]
  cp_steps          CpSteps[]

  @@map("cp_pathways")
}

model CpPathwaysTaken {
  id             Int                      @id @default(autoincrement())
  pathwayId      Int                      @map("pathway_id")
  contactId      Int                      @map("contact_id")
  bookingId      Int                      @map("booking_id")
  startedOn      DateTime                 @default(now()) @map("started_on")
  status         cp_pathways_taken_status @default(ACTIVE)
  comment        String
  CpPathways     CpPathways              @relation(fields: [pathwayId], references: [id])
  cp_steps_taken CpStepsTaken[]

  @@index([pathwayId, contactId], name: "pathwayId")
  @@map("cp_pathways_taken")
}

model CpSteps {
  id             Int            @id @default(autoincrement())
  companyId      Int            @map("company_id")
  name           String
  createdDate    DateTime       @map("created_date")
  step           cp_steps_step
  order          Int
  itemId         Int            @map("item_id")
  pathwayId      Int            @map("pathway_id")
  canSkip        Int            @map("can_skip")
  displayTime    Int            @default(0) @map("display_time")
  otherValue     String         @map("other_value")
  description    String
  whoDoesThis    String?        @map("who_does_this")
  CpPathways     CpPathways    @relation(fields: [pathwayId], references: [id])
  cp_steps_taken CpStepsTaken[]

  @@index([pathwayId], name: "pathwayId")
  @@map("cp_steps")
}

model CpStepsTaken {
  id              Int                   @id @default(autoincrement())
  stepId          Int                   @map("step_id")
  pathTakenId     Int                   @map("path_taken_id")
  contactId       Int                   @map("contact_id")
  date            DateTime              @default(now())
  time            String?
  status          cp_steps_taken_status
  recordId        Int                   @map("record_id")
  CpPathwaysTaken CpPathwaysTaken     @relation(fields: [pathTakenId], references: [id])
  CpSteps         CpSteps              @relation(fields: [stepId], references: [id])

  @@unique([stepId, pathTakenId], name: "stepId_3")
  @@index([pathTakenId], name: "pathTakenId")
  @@index([stepId, contactId], name: "stepId")
  @@index([stepId], name: "stepId_2")
  @@map("cp_steps_taken")
}

model CreditBalance {
  creditBalanceId Int    @id @default(autoincrement()) @map("credit_balance_id")
  company         String
  balance         Float  @default(5.00)
  balanceCurrency Float  @map("balance_currency")
  auto            Int

  @@index([company], name: "company")
  @@map("credit_balance")
}

model CreditNoteType {
  id             Int     @id @default(autoincrement())
  companyId      Int     @map("company_id")
  name           String
  code           Int
  prefix         String? @default("CN")
  quickAccess    Boolean @default(false) @map("quick_access")
  creditNoteType Boolean @default(false) @map("credit_note_type")
  isDisabled     Boolean @default(false) @map("is_disabled")

  @@map("credit_note_type")
}

model CreditTracking {
  ctId     Int    @id @default(autoincrement()) @map("ct_id")
  ctUid    Int    @map("ct_uid")
  ctAmount Float  @map("ct_amount")
  ctDate   Int    @map("ct_date")
  ctTxid   String @map("ct_txid")
  status   String

  @@map("credit_tracking")
}

model CrmDbLogs {
  id         Int      @id @default(autoincrement())
  sqlQuery   String   @unique @map("sql_query")
  waitTime   Float    @default(0) @map("wait_time")
  totalHits  Int      @map("total_hits")
  requestUri String   @map("request_uri")
  createdAt  DateTime @default(now()) @map("created_at")
  modifiedAt DateTime @map("modified_at")
  companyId  Int      @unique @map("company_id")

  @@map("crm_db_logs")
}

model CronJobs {
  id          Int              @id @default(autoincrement())
  company     Int
  user        Int
  settings    String
  file        String
  status      cron_jobs_status @default(Queued)
  dateUpdated DateTime?        @map("date_updated")
  dateCreated DateTime         @default(now()) @map("date_created")

  @@map("cron_jobs")
}

model CronJobsLog {
  id          Int       @id @default(autoincrement())
  dateUpdated DateTime? @map("date_updated")
  dateCreated DateTime  @default(now()) @map("date_created")
  company     Int
  text        String
  severity    Int       @default(0)
  ref         Int

  @@index([company], name: "company")
  @@map("cron_jobs_log")
}

model CronLogs {
  id   Int      @id @default(autoincrement())
  type String
  date DateTime

  @@map("cron_logs")
}

model currencies {
  ID            Int    @id @default(autoincrement())
  code          String
  symbol        String
  name          String
  plural        String
  decimaldigits Int
  rounding      Int
}

model CustomerUsers {
  id        Int      @id @default(autoincrement())
  firstname String
  lastname  String
  username  String
  password  String
  date      DateTime
  type      String
  city      String
  gender    String
  dob       DateTime
  mobile    String
  active    Int
  country   String
  uid       Int
  fbActive  Int      @map("fb_active")
  companyid Int

  @@map("customer_users")
}

model CustomCodes {
  id          Int    @id @default(autoincrement())
  companyId   Int    @map("company_id")
  codeSetId   Int    @map("code_set_id")
  code        String
  layer1      String @map("layer_1")
  layer2      String @map("layer_2")
  layer3      String @map("layer_3")
  layer4      String @map("layer_4")
  layer5      String @map("layer_5")
  description String
  icd9        String
  icd10       String
  osics10     String
  isFav       Int    @map("is_fav")

  @@map("custom_codes")
}

// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
// model custom_fields_display {
// field_id   Int
// depends_on Int
// value      String
// company_id Int
// }

model CustomFieldActions {
  id             Int    @id @default(autoincrement())
  companyId      Int    @map("company_id")
  customFieldId  Int    @map("custom_field_id")
  actionName     String @map("action_name")
  triggerValue   String @map("trigger_value")
  templateId     Int    @map("template_id")
  additionalData String @map("additional_data")

  @@index([triggerValue], name: "triggerValue")
  @@map("custom_field_actions")
}

model cycles {
  id                   Int      @id @default(autoincrement())
  occupier             Int
  userId               Int      @map("user_id")
  contactId            Int      @map("contact_id")
  cycleName            String   @map("cycle_name")
  type                 String
  diagnosisCodeId      Int      @map("diagnosis_code_id")
  medicalFormContactId Int      @map("medical_form_contact_id")
  status               String
  quantity             Int
  authCode             String   @map("auth_code")
  startDate            DateTime @map("start_date")
  endDate              DateTime @map("end_date")
  dateCreated          DateTime @map("date_created")
}

model CycleAppointment {
  id          Int      @id @default(autoincrement())
  cycleId     Int      @map("cycle_id")
  apptId      Int      @map("appt_id")
  dateCreated DateTime @map("date_created")
  occupier    Int

  @@index([apptId], name: "apptId")
  @@index([cycleId], name: "cycleId")
  @@map("cycle_appointment")
}

model DailyReportTemp {
  id        Int      @id @default(autoincrement())
  companyId Int      @map("company_id")
  uid       Int
  type      Int      @default(0)
  date      DateTime

  @@map("daily_report_temp")
}

model dashboard {
  userID       Int
  jdashStorage String
  page         String
  id           Int    @id @default(autoincrement())
}

model DataDebug {
  id         Int      @id @default(autoincrement())
  output     String?
  contFormat String   @default("") @map("cont_format")
  eventDate  DateTime @default(now()) @map("event_date")

  @@map("data_debug")
}

model DebtManageCommunication {
  id              Int       @id @default(autoincrement())
  invoiceId       Int       @map("invoice_id")
  communicationId Int       @map("communication_id")
  letterNo        Int       @map("letter_no")
  type            Int
  occupier        Int
  uid             Int
  creationDate    DateTime? @map("creation_date")
  modifiedDate    DateTime? @map("modified_date")

  @@map("debt_manage_communication")
}

model DeleteTrack {
  id      Int    @id @default(autoincrement())
  details String
  userId  Int    @map("user_id")
  date    Int
  ip      String

  @@map("delete_track")
}

model DiagnosisCode {
  id                   Int    @id @default(autoincrement())
  osics10Code          String @map("osics10_code")
  osics10Region        String @map("osics10_region")
  osics10Parent        String @map("osics10_parent")
  oscis10Specific      String @map("oscis10_specific")
  osics10Detail        String @map("osics10_detail")
  icdInjuryCode        String @map("icd_injury_code")
  icdInjuryDescription String @map("icd_injury_description")
  icdParent            String @map("icd_parent")
  icd10                String
  companyId            Int    @map("company_id")
  isFavourite          Int    @map("is_favourite")
  icd9                 String

  @@map("diagnosis_code")
}

model DigestSettings {
  id            Int      @id @default(autoincrement())
  companyId     Int      @map("company_id")
  enabled       Int
  frequency     String
  includedUsers String   @map("included_users")
  LastSent      DateTime
  endWeek       Int      @map("end_week")

  @@map("digest_settings")
}

model DisableContactFields {
  id        Int @id @default(autoincrement())
  companyId Int @map("company_id")
  gender    Int

  @@map("disable_contact_fields")
}

model disease {
  id          Int      @id @default(autoincrement())
  companyId   Int      @map("company_id")
  diseaseName String   @map("disease_name")
  createDate  DateTime @default(now()) @map("create_date")
  comments    String
  deleted     Int
  customId    String   @map("custom_id")
  imported    Int
  travaxLink  String   @map("travax_link")
  nathnacLink String   @map("nathnac_link")
}

model DontBirthdayMe {
  id        Int @id @default(autoincrement())
  contactId Int @map("contact_id")
  companyId Int @map("company_id")

  @@index([contactId, companyId], name: "contactId")
  @@map("dont_birthday_me")
}

model DrinksSettings {
  id        Int    @id @default(autoincrement())
  drinkName String @map("drink_name")
  companyId Int    @map("company_id")

  @@map("drinks_settings")
}

model Drugs {
  id               Int     @id @default(autoincrement())
  externalId       String? @map("_id")
  dosage           String?
  legalClass       String?
  name             String?
  sortOrder        Int?
  sectionName      String?
  subSectionName   String?
  manufacturerName String?
  pharmaClass      String?
  ingredients      String?
  price            String?
  quantities       String?
  generic          String?
  indications      String?
  warning          String?
  interactions     String?
  contraint        String?
  sideEffects      String?
  term             String?
}

model EfficiencyReportTemp {
  id             Int      @id @default(autoincrement())
  companyId      Int      @map("company_id")
  uid            Int
  uname          String
  date           DateTime
  totalTime      Int      @default(0) @map("total_time")
  workStart      DateTime @map("work_start")
  customersTotal Int      @default(0) @map("customers_total")
  customers910   Int      @default(0) @map("customers_9_10")
  customers1011  Int      @default(0) @map("customers_10_11")
  customers1112  Int      @default(0) @map("customers_11_12")
  customers1213  Int      @default(0) @map("customers_12_13")
  customers1314  Int      @default(0) @map("customers_13_14")
  customers1415  Int      @default(0) @map("customers_14_15")
  customers1516  Int      @default(0) @map("customers_15_16")
  customers1617  Int      @default(0) @map("customers_16_17")
  customers1718  Int      @default(0) @map("customers_17_18")
  customers1819  Int      @default(0) @map("customers_18_19")
  break910       Int      @default(0) @map("break_9_10")
  break1011      Int      @default(0) @map("break_10_11")
  break1112      Int      @default(0) @map("break_11_12")
  break1213      Int      @default(0) @map("break_12_13")
  break1314      Int      @default(0) @map("break_13_14")
  break1415      Int      @default(0) @map("break_14_15")
  break1516      Int      @default(0) @map("break_15_16")
  break1617      Int      @default(0) @map("break_16_17")
  break1718      Int      @default(0) @map("break_17_18")
  break1819      Int      @default(0) @map("break_18_19")
  idle910        Int      @default(60) @map("idle_9_10")
  idle1011       Int      @default(60) @map("idle_10_11")
  idle1112       Int      @default(60) @map("idle_11_12")
  idle1213       Int      @default(60) @map("idle_12_13")
  idle1314       Int      @default(60) @map("idle_13_14")
  idle1415       Int      @default(60) @map("idle_14_15")
  idle1516       Int      @default(60) @map("idle_15_16")
  idle1617       Int      @default(60) @map("idle_16_17")
  idle1718       Int      @default(60) @map("idle_17_18")
  idle1819       Int      @default(60) @map("idle_18_19")
  avail910       Int      @default(0) @map("avail_9_10")
  avail1011      Int      @default(0) @map("avail_10_11")
  avail1112      Int      @default(0) @map("avail_11_12")
  avail1213      Int      @default(0) @map("avail_12_13")
  avail1314      Int      @default(0) @map("avail_13_14")
  avail1415      Int      @default(0) @map("avail_14_15")
  avail1516      Int      @default(0) @map("avail_15_16")
  avail1617      Int      @default(0) @map("avail_16_17")
  avail1718      Int      @default(0) @map("avail_17_18")
  avail1819      Int      @default(0) @map("avail_18_19")
  work910        Int      @default(0) @map("work_9_10")
  work1011       Int      @default(0) @map("work_10_11")
  work1112       Int      @default(0) @map("work_11_12")
  work1213       Int      @default(0) @map("work_12_13")
  work1314       Int      @default(0) @map("work_13_14")
  work1415       Int      @default(0) @map("work_14_15")
  work1516       Int      @default(0) @map("work_15_16")
  work1617       Int      @default(0) @map("work_16_17")
  work1718       Int      @default(0) @map("work_17_18")
  work1819       Int      @default(0) @map("work_18_19")
  late910        Int      @default(0) @map("late_9_10")
  late1011       Int      @default(0) @map("late_10_11")
  late1112       Int      @default(0) @map("late_11_12")
  late1213       Int      @default(0) @map("late_12_13")
  late1314       Int      @default(0) @map("late_13_14")
  late1415       Int      @default(0) @map("late_14_15")
  late1516       Int      @default(0) @map("late_15_16")
  late1617       Int      @default(0) @map("late_16_17")
  late1718       Int      @default(0) @map("late_17_18")
  late1819       Int      @default(0) @map("late_18_19")

  @@map("efficiency_report_temp")
}

model EmailtemplateAttachments {
  id         Int    @id @default(autoincrement())
  templateId Int    @map("template_id")
  file       String

  @@index([templateId], name: "templateId")
  @@map("emailtemplate_attachments")
}

model EmailBlacklist {
  emailId       Int    @id @default(autoincrement()) @map("email_id")
  emailAddress  String @unique @map("email_address")
  emailAction   String @map("email_action")
  notifyCompany Int    @map("notify_company")

  @@map("email_blacklist")
}

model EngageClosureServices {
  id        Int @id @default(autoincrement())
  meterId   Int @map("meter_id")
  serviceId Int @map("service_id")

  @@map("engage_closure_services")
}

model EngageConnects {
  id        Int      @id @default(autoincrement())
  contactId Int      @map("contact_id")
  groupId   Int      @map("group_id")
  sendTime  DateTime @map("send_time")

  @@map("engage_connects")
}

model EngageConnectsFollowup {
  id        Int      @id @default(autoincrement())
  contactId Int      @map("contact_id")
  groupId   Int      @map("group_id")
  sendTime  DateTime @map("send_time")

  @@map("engage_connects_followup")
}

model EngageCustomMeters {
  id        Int    @id @default(autoincrement())
  companyId Int    @map("company_id")
  name      String

  @@map("engage_custom_meters")
}

model EngageFollowups {
  id             Int      @id @default(autoincrement())
  serviceId      Int      @map("service_id")
  smsTemplate    Int      @map("sms_template")
  emailTemplate  Int      @map("email_template")
  followupPeriod Int      @map("followup_period")
  followupMethod String   @map("followup_method")
  contacts       String
  createdDate    DateTime @map("created_date")
  completed      Boolean

  @@map("engage_followups")
}

model EngageGeneralSettings {
  companyId    Int     @id @map("company_id")
  autoEngage   Boolean @map("auto_engage")
  autoFollowup Boolean @map("auto_followup")
  revenueSince Int     @map("revenue_since")
  defaultView  String  @default("categories") @map("default_view")

  @@map("engage_general_settings")
}

model EngageLogs {
  id        Int      @id @default(autoincrement())
  company   Int
  succeeded Int
  skipped   Int
  type      String
  eventId   Int      @map("event_id")
  date      DateTime
  test      Boolean  @default(true)

  @@map("engage_logs")
}

model EngageMeterServices {
  id        Int @id @default(autoincrement())
  meterId   Int @map("meter_id")
  serviceId Int @map("service_id")

  @@map("engage_meter_services")
}

model EngageSettings {
  serviceId        Int      @id @map("service_id")
  settingType      String   @default("category") @map("setting_type")
  companyId        Int      @map("company_id")
  active           Boolean  @default(false)
  smsTemplate      Int      @map("sms_template")
  emailTemplate    Int      @map("email_template")
  lostPeriod       Int      @map("lost_period")
  method           String
  customerSince    DateTime @map("customer_since")
  negativeFeedback Int      @map("negative_feedback")
  ignoreSmsOptout  Boolean  @default(true) @map("ignore_sms_optout")
  noApptsMin       Int      @map("no_appts_min")
  noApptsMax       Int      @map("no_appts_max")
  amountPaidMin    Int      @map("amount_paid_min")
  amountPaidMax    Int      @map("amount_paid_max")
  clientStatus     String   @default("any") @map("client_status")
  lastEngaged      Int      @map("last_engaged")
  customerOf       Int      @map("customer_of")
  birthday         DateTime
  gender           String   @default("any")
  ageMin           Int      @map("age_min")
  ageMax           Int      @map("age_max")
  notes            String
  fwSmsTemplate    Int      @map("fw_smsTemplate")
  fwEmailTemplate  Int      @map("fw_emailTemplate")
  fwPeriod         Int      @map("fw_period")
  fwMethod         String   @map("fw_method")

  @@map("engage_settings")
}

model equipment {
  id            Int    @id @default(autoincrement())
  companyId     Int    @map("company_id")
  equipmentName String @map("equipment_name")
  quantity      Int
  isActive      Int    @map("is_active")
  fieldOrder    Int?   @default(0) @map("field_order")
}

model events {
  eventid    Int      @id @default(autoincrement())
  brand      String
  date       DateTime
  title      String
  // This type is currently not supported by the Prisma Client.
  // description Unsupported("blob")
  imgid      Int
  featured   Int
  venue      String
  company    String
  address    String
  start      String
  end        String
  price      Int
  postcode   String
  city       String
  coverPhoto String   @map("cover_photo")
  deleted    Int
}

model ExternalGuest {
  id        Int    @id @default(autoincrement())
  companyId Int    @default(0) @map("company_id")
  Name      String
  Email     String

  @@index([companyId], name: "companyId")
  @@map("external_guest")
}

model FacebookPages {
  id        Int   @id @default(autoincrement())
  fbPageId  Float @map("fb_page_id")
  companyId Int   @map("company_id")

  @@unique([fbPageId, companyId], name: "fbPageId")
  @@map("facebook_pages")
}

// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
// model face_body_diagram_settings {
// id               Int
// face_diagram_url String?
// body_diagram_url String?
// occupier         Int?
// uid              Int?
// creation_date    DateTime?
// modified_date    DateTime?
// }

model FailedImport {
  id       Int    @id @default(autoincrement())
  fileName String @map("file_name")
  col0     String
  col1     String
  col2     String
  col3     String

  @@map("failed_import")
}

model FileHits {
  id   Int    @id @default(autoincrement())
  file String @unique
  hits Int

  @@map("file_hits")
}

model FinanceAccounts {
  id           Int      @id @default(autoincrement())
  companyId    Int      @map("company_id")
  accountName  String   @map("account_name")
  creationDate DateTime @map("creation_date")

  @@map("finance_accounts")
}

model FinanceHistory {
  FinanceID         Int      @id @default(autoincrement())
  userId            Int?     @map("user_id")
  RecordType        String?  @map("Record_Type")
  Date              DateTime
  LinkedDocument    String?  @map("Linked_Document")
  Reference         String?
  Amount            Float
  Company           Int
  taxId             Int?     @default(0) @map("tax_id")
  status            Int?     @default(1)
  invoiceId         Int?     @map("invoice_id")
  commissionSheetId Int?     @map("commission_sheet_id")
  staffId           Int?     @map("staff_id")
  accountId         Int?     @default(0) @map("account_id")
  debtor            String?
  whoExpense        String?  @map("who_expense")
  whatExpense       String?  @map("what_expense")
  locationId        Int      @map("location_id")
  bankRef           String?  @map("bank_ref")
  comments          String?
  matchedWith       String?  @map("matched_with")
  disputeFlag       Int?     @default(0) @map("dispute_flag")

  @@map("finance_history")
}

model FinanceHistoryPayment {
  id            Int      @id @default(autoincrement())
  amount        Float
  paymentTypeId String   @map("payment_type_id")
  companyId     Int      @map("company_id")
  entryDate     DateTime @map("entry_date")
  financeId     Int      @map("finance_id")
  comments      String?

  @@map("finance_history_payment")
}

model FinancialStatements {
  id           Int       @id @default(autoincrement())
  statementNo  Int       @map("statement_no")
  url          String
  contactId    Int       @map("contact_id")
  insurerId    Int       @default(0) @map("insurer_id")
  occupier     Int
  creationDate DateTime? @map("creation_date")

  @@index([contactId], name: "contactId")
  @@index([occupier], name: "occupier")
  @@map("financial_statements")
}

model FingerprintsUsers {
  id          Int       @id @default(autoincrement())
  uid         Int
  fingerprint String?
  enrolled    DateTime?
  lastScanned DateTime? @map("last_scanned")

  @@index([uid], name: "uid")
  @@map("fingerprints_users")
}

model FlaggedItems {
  id          Int    @id @default(autoincrement())
  targetId    Int    @map("target_id")
  type        String
  description String
  raisedBy    String @map("raised_by")

  @@map("flagged_items")
}

model FollowNotif {
  id         Int    @id @default(autoincrement())
  userId     Int    @map("user_id")
  campaignId Int    @map("campaign_id")
  type       String
  followDate Int    @map("follow_date")

  @@map("follow_notif")
}

model FormBuilderDetail {
  id         Int     @id @default(autoincrement())
  occupier   Int
  formId     Int     @map("form_id")
  fieldName  String? @default("") @map("field_name")
  fieldValue String? @map("field_value")
  inputId    Int     @map("input_id")
  entrydate  Int
  ref        Int
  ip         String
  email      String?

  @@map("form_builder_detail")
}

model GiftCardTypes {
  id            Int    @id @default(autoincrement())
  companyId     Int    @map("company_id")
  createdDate   Int    @map("created_date")
  displayName   String @map("display_name")
  startDate     Int    @map("start_date")
  endDate       Int    @map("end_date")
  defaultPrice  Float  @map("default_price")
  defaultValue  Float  @map("default_value")
  templateTheme String @map("template_theme")
  isActive      Int    @map("is_active")
  description   String
  terms         String

  @@index([companyId], name: "companyId")
  @@map("gift_card_types")
}

model GlobalMeta {
  id    Int    @id @default(autoincrement())
  name  String @unique
  value String

  @@map("global_meta")
}

model GlCodes {
  id          Int                  @id @default(autoincrement())
  companyId   Int                  @map("company_id")
  code        String
  description gl_codes_description
  relatedTo   Int                  @map("related_to")

  @@index([companyId], name: "companyId")
  @@index([relatedTo], name: "relatedTo")
  @@map("gl_codes")
}

model GocardlessBills {
  primaryId        Int    @id @default(autoincrement()) @map("primary_id")
  id               String @unique
  amount           Float
  gocardlessFees   Float  @map("gocardless_fees")
  partnerFees      Float  @map("partner_fees")
  currency         String
  createdAt        String @map("created_at")
  description      String
  otherId          Int    @map("other_id")
  name             String
  paidAt           String @map("paid_at")
  status           String
  merchantId       String @map("merchant_id")
  userId           String @map("user_id")
  sourceType       String @map("source_type")
  sourceId         String @map("source_id")
  uri              String
  canBeRetried     String @map("can_be_retried")
  payoutId         String @map("payout_id")
  isSetupFee       String @map("is_setup_fee")
  chargeCustomerAt String @map("charge_customer_at")

  @@map("gocardless_bills")
}

model GocardlessEvents {
  id                Int      @id @default(autoincrement())
  companyId         Int      @map("company_id")
  contactId         Int      @map("contact_id")
  amount            Float
  paymentStatus     String   @map("payment_status")
  dtime             DateTime
  gcEmail           String   @map("gc_email")
  paymentId         String?  @unique @map("payment_id")
  afterBankTransver Int      @default(0) @map("after_bank_transver")
  saleId            Int      @map("sale_id")
  eventData         String   @map("event_data")

  @@map("gocardless_events")
}

model GocardlessMerchants {
  id          Int     @id @default(autoincrement())
  companyId   Int     @unique @map("company_id")
  accessToken String? @map("access_token")
  merchantId  String? @map("merchant_id")
  paymentId   Int     @map("payment_id")
  billerId    Int     @map("biller_id")

  @@map("gocardless_merchants")
}

model GocardlessMerchants3 {
  id          Int     @id @default(autoincrement())
  companyId   Int     @unique @map("company_id")
  uid         Int
  accessToken String  @map("access_token")
  merchantId  String  @map("merchant_id")
  eventLogId  String? @map("event_log_id")

  @@map("gocardless_merchants3")
}

model GocardlessPayments {
  id          Int      @id @default(autoincrement())
  invId       Int      @map("inv_id")
  companyId   Int      @map("company_id")
  paymentId   String   @map("payment_id")
  createdDate DateTime @default(now()) @map("created_date")

  @@map("gocardless_payments")
}

model GocardlessSubscriptions {
  id                Int       @id @default(autoincrement())
  subscriptionUrl   String?   @map("subscription_url")
  billsUrl          String?   @map("bills_url")
  contactId         Int       @map("contact_id")
  planId            Int?      @map("plan_id")
  amount            Int
  intervalLength    Int       @map("interval_length")
  intervalUnit      String    @map("interval_unit")
  intervalCount     Int       @map("interval_count")
  name              String
  description       String?
  setupFee          Int       @map("setup_fee")
  createdAt         DateTime? @map("created_at")
  currency          String?
  expiresAt         DateTime? @map("expires_at")
  merchantId        String    @map("merchant_id")
  nextIntervalStart DateTime? @map("next_interval_start")
  startAt           DateTime? @map("start_at")
  initiatedAt       DateTime? @map("initiated_at")
  status            String?
  goUserId          String?   @map("go_user_id")
  goSubscriptionId  String?   @map("go_subscription_id")

  @@map("gocardless_subscriptions")
}

model GpDetails {
  gpId       Int     @id @default(autoincrement()) @map("gp_id")
  companyId  Int     @default(0) @map("company_id")
  gpName     String  @map("gp_name")
  gpSurgery  String? @map("gp_surgery")
  gpAddress1 String  @map("gp_address1")
  gpAddress2 String  @map("gp_address2")
  gpAddress3 String  @map("gp_address3")
  gpAddress4 String  @map("gp_address4")
  gpAddress5 String  @map("gp_address5")
  gpPostcode String  @map("gp_postcode")
  gpEmail    String? @map("gp_email")
  gpPhone    String  @map("gp_phone")
  gpRatings  String? @map("gp_ratings")

  @@map("gp_details")
}

model GpDetailsOld {
  gpId       Int     @id @default(autoincrement()) @map("gp_id")
  companyId  Int     @default(0) @map("company_id")
  gpName     String  @map("gp_name")
  gpAddress1 String  @map("gp_address1")
  gpAddress2 String  @map("gp_address2")
  gpAddress3 String  @map("gp_address3")
  gpAddress4 String  @map("gp_address4")
  gpAddress5 String  @map("gp_address5")
  gpPostcode String  @map("gp_postcode")
  gpPhone    String  @map("gp_phone")
  gpRatings  String? @map("gp_ratings")

  @@map("gp_details_old")
}

model GpDetailsTemp {
  gpId       Int     @id @default(autoincrement()) @map("gp_id")
  companyId  Int     @default(0) @map("company_id")
  gpName     String  @map("gp_name")
  gpAddress1 String  @map("gp_address1")
  gpAddress2 String  @map("gp_address2")
  gpAddress3 String  @map("gp_address3")
  gpAddress4 String  @map("gp_address4")
  gpAddress5 String  @map("gp_address5")
  gpPostcode String  @map("gp_postcode")
  gpPhone    String  @map("gp_phone")
  gpRatings  String? @map("gp_ratings")

  @@map("gp_details_temp")
}

model groups {
  groupId            Int                    @id @default(autoincrement()) @map("group_id")
  userId             Int?                   @map("user_id")
  fbUserId           Int?                   @map("fb_userId")
  fbGroupId          Int?                   @map("fb_group_id")
  groupName          String?                @map("group_name")
  groupData          String?                @map("group_data")
  authDate           DateTime?              @map("auth_date")
  groupPostable      groups_group_postable? @default(YES) @map("group_postable")
  groupBookmarkOrder Int?                   @map("group_bookmark_order")

  @@unique([fbGroupId, fbUserId, userId], name: "fb_group_id")
}

model guestlist {
  guestlistid    Int      @id @default(autoincrement())
  name           String
  nop            Int
  date           DateTime
  ip             String
  occupier       String
  mobile         String
  email          String
  location       String
  submissionDate DateTime @map("submission_date")
}

model GuruSettings {
  id        Int @id @default(autoincrement())
  days      Int
  companyId Int @map("company_id")

  @@map("guru_settings")
}

model HealthcodeInsurers {
  id        Int     @id @default(autoincrement())
  companyId Int     @map("company_id")
  code      String
  name      String
  edi       Boolean
  me        Boolean

  @@map("healthcode_insurers")
}

model HealthcodePayeeCodes {
  id             Int    @id @default(autoincrement())
  practitionerId Int    @map("practitioner_id")
  insurerId      Int    @map("insurer_id")
  code           String
  locationId     Int    @map("location_id")
  companyId      Int    @map("company_id")

  @@unique([practitionerId, insurerId, locationId], name: "the_unqiueness")
  @@index([companyId], name: "companyId")
  @@map("healthcode_payee_codes")
}

model HealthcodeRemittances {
  id                    Int     @id @default(autoincrement())
  uid                   Int
  company               Int
  Status                String
  MsgId                 String
  MsgIssueDate          String
  MsgSender             String
  MsgRecipient          String
  Insurer               String
  ProviderNo            String
  PaymentReference      String
  ProcessDate           String
  PaymentDate           String
  PaymentMethod         String
  BankAccountHash       String
  Cuid                  String
  CHClaimNo             String
  PayorClaimNo          String
  InvoiceNo             String
  InvoiceDate           String
  ClaimAmt              String
  PaidAmt               String
  PrevPaidAmt           String
  ShortAmt              String
  InvoiceRef            String
  RegistrationNo        String
  PatientInitials       String
  PatientNameFamilyName String  @map("PatientName_FamilyName")
  PatientNameMiddleName String? @map("PatientName_MiddleName")
  PatientNameGivenName  String? @map("PatientName_GivenName")
  BankSortCode          String?

  @@unique([MsgId, ProviderNo, Cuid], name: "MsgId")
  @@index([company], name: "company")
  @@map("healthcode_remittances")
}

model HealthcodeSubmittals {
  id               Int                          @id @default(autoincrement())
  companyId        Int                          @map("company_id")
  dataJson         String                       @map("data_json")
  dataXml          String?                      @map("data_xml")
  dataSoap         String?                      @map("data_soap")
  dateInserted     DateTime                     @default(now()) @map("date_inserted")
  status           healthcode_submittals_status @default(Pending)
  responseData     String?                      @map("response_data")
  invoiceId        Int                          @unique @map("invoice_id")
  dateUpdated      DateTime?                    @map("date_updated")
  structuredErrors String?                      @map("structured_errors")
  healthcodeId     String?                      @map("healthcode_id")

  @@index([companyId], name: "companyId")
  @@map("healthcode_submittals")
}

model HolidayRequests {
  id              Int      @id @default(autoincrement())
  companyId       Int      @map("company_id")
  staffId         Int      @map("staff_id")
  requestId       Int      @map("request_id")
  holidayFrom     DateTime @map("holiday_from")
  holidayTo       DateTime @map("holiday_to")
  status          String
  leaveType       String   @map("leave_type")
  approvedBy      Int      @map("approved_by")
  staffComments   String   @map("staff_comments")
  seen            Int
  rejectedBy      Int?     @map("rejected_by")
  approveComments String?  @map("approve_comments")
  rejectComments  String?  @map("reject_comments")

  @@map("holiday_requests")
}

model HourlyReportTemp {
  id              Int      @id @default(autoincrement())
  companyId       Int      @map("company_id")
  uid             Int
  uname           String
  date            DateTime
  customersTotal  Int      @default(0) @map("customers_total")
  customers910    Int      @default(0) @map("customers_9_10")
  customers1011   Int      @default(0) @map("customers_10_11")
  customers1112   Int      @default(0) @map("customers_11_12")
  customers1213   Int      @default(0) @map("customers_12_13")
  customers1314   Int      @default(0) @map("customers_13_14")
  customers1415   Int      @default(0) @map("customers_14_15")
  customers1516   Int      @default(0) @map("customers_15_16")
  customers1617   Int      @default(0) @map("customers_16_17")
  customers1718   Int      @default(0) @map("customers_17_18")
  customers1819   Int      @default(0) @map("customers_18_19")
  haircutsTotal   Int      @default(0) @map("haircuts_total")
  haircuts910     Int      @default(0) @map("haircuts_9_10")
  haircuts1011    Int      @default(0) @map("haircuts_10_11")
  haircuts1112    Int      @default(0) @map("haircuts_11_12")
  haircuts1213    Int      @default(0) @map("haircuts_12_13")
  haircuts1314    Int      @default(0) @map("haircuts_13_14")
  haircuts1415    Int      @default(0) @map("haircuts_14_15")
  haircuts1516    Int      @default(0) @map("haircuts_15_16")
  haircuts1617    Int      @default(0) @map("haircuts_16_17")
  haircuts1718    Int      @default(0) @map("haircuts_17_18")
  haircuts1819    Int      @default(0) @map("haircuts_18_19")
  haircutsPTotal  Int      @default(0) @map("haircuts_p_total")
  haircutsP910    Int      @default(0) @map("haircuts_p_9_10")
  haircutsP1011   Int      @default(0) @map("haircuts_p_10_11")
  haircutsP1112   Int      @default(0) @map("haircuts_p_11_12")
  haircutsP1213   Int      @default(0) @map("haircuts_p_12_13")
  haircutsP1314   Int      @default(0) @map("haircuts_p_13_14")
  haircutsP1415   Int      @default(0) @map("haircuts_p_14_15")
  haircutsP1516   Int      @default(0) @map("haircuts_p_15_16")
  haircutsP1617   Int      @default(0) @map("haircuts_p_16_17")
  haircutsP1718   Int      @default(0) @map("haircuts_p_17_18")
  haircutsP1819   Int      @default(0) @map("haircuts_p_18_19")
  shavesTotal     Int      @default(0) @map("shaves_total")
  shaves910       Int      @default(0) @map("shaves_9_10")
  shaves1011      Int      @default(0) @map("shaves_10_11")
  shaves1112      Int      @default(0) @map("shaves_11_12")
  shaves1213      Int      @default(0) @map("shaves_12_13")
  shaves1314      Int      @default(0) @map("shaves_13_14")
  shaves1415      Int      @default(0) @map("shaves_14_15")
  shaves1516      Int      @default(0) @map("shaves_15_16")
  shaves1617      Int      @default(0) @map("shaves_16_17")
  shaves1718      Int      @default(0) @map("shaves_17_18")
  shaves1819      Int      @default(0) @map("shaves_18_19")
  beardsTotal     Int      @default(0) @map("beards_total")
  beards910       Int      @default(0) @map("beards_9_10")
  beards1011      Int      @default(0) @map("beards_10_11")
  beards1112      Int      @default(0) @map("beards_11_12")
  beards1213      Int      @default(0) @map("beards_12_13")
  beards1314      Int      @default(0) @map("beards_13_14")
  beards1415      Int      @default(0) @map("beards_14_15")
  beards1516      Int      @default(0) @map("beards_15_16")
  beards1617      Int      @default(0) @map("beards_16_17")
  beards1718      Int      @default(0) @map("beards_17_18")
  beards1819      Int      @default(0) @map("beards_18_19")
  avgWaitTime910  Float    @default(0.00) @map("avg_wait_time_9_10")
  avgWaitTime1011 Float    @default(0.00) @map("avg_wait_time_10_11")
  avgWaitTime1112 Float    @default(0.00) @map("avg_wait_time_11_12")
  avgWaitTime1213 Float    @default(0.00) @map("avg_wait_time_12_13")
  avgWaitTime1314 Float    @default(0.00) @map("avg_wait_time_13_14")
  avgWaitTime1415 Float    @default(0.00) @map("avg_wait_time_14_15")
  avgWaitTime1516 Float    @default(0.00) @map("avg_wait_time_15_16")
  avgWaitTime1617 Float    @default(0.00) @map("avg_wait_time_16_17")
  avgWaitTime1718 Float    @default(0.00) @map("avg_wait_time_17_18")
  avgWaitTime1819 Float    @default(0.00) @map("avg_wait_time_18_19")
  revenueTotal    Float    @default(0.00) @map("revenue_total")
  revenue910      Float    @default(0.00) @map("revenue_9_10")
  revenue1011     Float    @default(0.00) @map("revenue_10_11")
  revenue1112     Float    @default(0.00) @map("revenue_11_12")
  revenue1213     Float    @default(0.00) @map("revenue_12_13")
  revenue1314     Float    @default(0.00) @map("revenue_13_14")
  revenue1415     Float    @default(0.00) @map("revenue_14_15")
  revenue1516     Float    @default(0.00) @map("revenue_15_16")
  revenue1617     Float    @default(0.00) @map("revenue_16_17")
  revenue1718     Float    @default(0.00) @map("revenue_17_18")
  revenue1819     Float    @default(0.00) @map("revenue_18_19")

  @@map("hourly_report_temp")
}

model icd10 {
  id              Int    @id @default(autoincrement())
  code            String
  description     String
  fullDescription String @map("full_description")
  hfExclude       String @map("hf_exclude")
}

model icd9 {
  id   Int    @id @default(autoincrement())
  code String @unique
  desc String
}

model ImporterConfiguration {
  id           Int    @id @default(autoincrement())
  softwareName String @map("software_name")
  clientModule Int    @map("client_module")
  staffModule  Int    @map("staff_module")

  @@map("importer_configuration")
}

model ImportContactsHb {
  id            Int      @id @default(autoincrement())
  Fname         String
  Lname         String
  Email         String
  Phone         String
  Mobile        String
  OtherPhone    String
  DOB           DateTime
  Note          String
  gender        String
  MailingStreet String
  customId      Int      @map("custom_id")
  inserted      Int

  @@map("import_contacts_hb")
}

model ImportCustomHelper {
  id         Int    @id @default(autoincrement())
  customId   String @map("custom_id")
  customName String @map("custom_name")
  helperType String @map("helper_type")
  companyId  Int    @map("company_id")

  @@index([customId], name: "customId")
  @@index([customName], name: "customName")
  @@map("import_custom_helper")
}

model ImportDetails {
  id           Int      @id @default(autoincrement())
  companyId    Int      @map("company_id")
  importType   String   @map("import_type")
  date         DateTime
  fileName     String   @map("file_name")
  oldName      String   @map("old_name")
  entries      Int
  emptyRows    Int      @map("empty_rows")
  key          Int
  linkref      String
  jsonData     String   @map("json_data")
  importStatus Int      @map("import_status")
  startDate    DateTime @map("start_date")
  endDate      DateTime @map("end_date")
  insMatch     Int      @map("ins_match")
  conMatch     Int      @map("con_match")
  proMatch     Int      @map("pro_match")
  dobMatch     Int      @map("dob_match")
  memMatch     Int      @map("mem_match")
  apptProc     Int      @map("appt_proc")
  treatMatch   Int      @map("treat_match")
  apptIssue    Int      @map("appt_issue")
  apptRoom     Int      @map("appt_room")
  apptCon      Int      @map("appt_con")
  apptSer      Int      @map("appt_ser")
  apptUse      Int      @map("appt_use")
  rotaProc     Int      @map("rota_proc")
  rotaUse      Int      @map("rota_use")
  rotaLoc      Int      @map("rota_loc")
  rotaRoom     Int      @map("rota_room")
  classProc    Int      @map("class_proc")
  classmProc   Int      @map("classm_proc")
  servCat      Int      @map("serv_cat")
  prodCat      Int      @map("prod_cat")
  apptLoc      Int      @map("appt_loc")
  apptBookout  Int      @map("appt_bookout")
  leftToMatch  Int      @map("left_to_match")
  conMar       Int      @map("con_mar")
  invProc      Int      @map("inv_proc")
  invLoc       Int      @map("inv_loc")
  invHelp      Int      @map("inv_help")
  invBiller    Int      @map("inv_biller")

  @@map("import_details")
}

model ImportHelperAttachment {
  id             Int      @id @default(autoincrement())
  col0           String
  col1           String
  col2           String
  col3           String
  col4           String
  col5           String
  col6           String
  col7           String
  col8           String
  companyId      Int      @map("company_id")
  batchNo        String   @map("batch_no")
  fullUrl        String   @map("full_url")
  contactId      Int      @map("contact_id")
  sync           Int
  attachId       Int      @map("attach_id")
  systemId       Int      @map("system_id")
  attachDate     DateTime @map("attach_date")
  col15          String
  col9           String
  uploaderId     Int      @map("uploader_id")
  col16          String
  col17          String
  col18          String
  col19          String
  col20          String
  actualFileName String   @map("actual_file_name")

  @@index([col3], name: "col3")
  @@index([companyId], name: "companyId")
  @@index([companyId], name: "companyId_2")
  @@index([companyId], name: "companyId_3")
  @@index([id], name: "id")
  @@map("import_helper_attachment")
}

model IncomeTrack {
  id      Int    @id @default(autoincrement())
  count   Int
  type    String
  revenue Float

  @@map("income_track")
}

model indicators {
  id          Int       @id @default(autoincrement())
  name        String?
  description String?
  createdDate DateTime? @map("created_date")
  updatedDate DateTime? @map("updated_date")
  sql         String?
}

model InsuranceCpAmount {
  id         Int   @id @default(autoincrement())
  contractId Int   @map("contract_id")
  productId  Int   @map("product_id")
  price      Float
  price0     Float @default(0.00) @map("price_0")
  price1     Float @default(0.00) @map("price_1")
  price2     Float @default(0.00) @map("price_2")
  price3     Float @default(0.00) @map("price_3")
  price4     Float @default(0.00) @map("price_4")
  price5     Float @default(0.00) @map("price_5")
  price6     Float @default(0.00) @map("price_6")
  companyId  Int   @map("company_id")

  @@index([companyId], name: "companyId")
  @@map("insurance_cp_amount")
}

model InsuranceDetails {
  id            Int     @id @default(autoincrement())
  companyId     Int     @map("company_id")
  insurerName   String  @map("insurer_name")
  phone         String
  website       String
  city          String
  street        String
  county        String
  postCode      String  @map("post_code")
  email         String
  isActive      Int     @default(1) @map("is_active")
  image         String
  country       String
  street2       String
  providerNo    String  @map("provider_no")
  imported      Int
  healthcodeId  Int?    @map("healthcode_id")
  cycleQuantity Int     @map("cycle_quantity")
  customId      Int     @map("custom_id")
  companyType   String  @map("company_type")
  hcIdentifier  String  @map("hc_identifier")
  xeroContactId String? @map("xero_contact_id")

  @@index([companyId], name: "companyId")
  @@map("insurance_details")
}

model InsurerContracts {
  id                       Int                             @id @default(autoincrement())
  name                     String
  insurerId                Int                             @map("insurer_id")
  companyId                Int                             @map("company_id")
  folderId                 Int                             @default(1) @map("folder_id")
  contractType             insurer_contracts_contract_type @default(INSURANCE) @map("contract_type")
  active                   Boolean                         @default(true)
  showBankDetails          Boolean                         @default(true) @map("show_bank_details")
  bankAccount              String                          @map("bank_account")
  bankNumber               String                          @map("bank_number")
  sortCode                 String                          @map("sort_code")
  bankName                 String                          @map("bank_name")
  iban                     String
  swift                    String
  vatNumber                String                          @map("vat_number")
  imported                 Int
  privateContract          Boolean                         @default(false) @map("private_contract")
  employeeId               Int                             @map("employee_id")
  fullAddress              String                          @map("full_address")
  registeredCompanyAddress String                          @map("registered_company_address")
  defaultAddressTo         Boolean                         @default(false) @map("default_address_to")
  invoiceTemplateId        Int?                            @map("invoice_template_id")
  locationId               Int                             @map("location_id")
  lastUpdate               DateTime                        @map("last_update")
  mpRuleName               String                          @map("mp_rule_name")
  ruleType                 Int                             @map("rule_type")
  secondService            Float                           @map("second_service")
  furtherService           Float                           @map("further_service")
  actionTaxId              Int                             @map("action_tax_id")
  customIdTemplate         String?                         @map("customId_template")
  invoicePrefix            String?                         @map("invoice_prefix")
  invoiceStartingNum       Int                             @map("invoice_starting_num")
  customId                 Int                             @map("custom_id")

  @@index([insurerId], name: "insurerId")
  @@map("insurer_contracts")
}

model InsurerValidation {
  id        Int    @id @default(autoincrement())
  code      String
  rule      String
  regex     String
  reference String

  @@map("insurer_validation")
}

model IntelliGoalSettings {
  id           Int       @id @default(autoincrement())
  staffId      Int       @map("staff_id")
  occupier     Int
  year         Int
  goalType     Int       @map("goal_type")
  typeId       Int       @map("type_id")
  jan          String?
  feb          String?
  mar          String?
  april        String?
  may          String?
  june         String?
  july         String?
  august       String?
  sept         String?
  oct          String?
  nov          String?
  dec          String?
  creationDate DateTime? @map("creation_date")
  modifiedDate DateTime? @map("modified_date")

  @@index([id], name: "id")
  @@map("intelli_goal_settings")
}

model IntelliTiles {
  id          Int    @id @default(autoincrement())
  categoryId  Int    @map("category_id")
  name        String
  uniqueName  String @map("unique_name")
  mode        String
  orderNumber Int    @map("order_number")
  valueType   String @map("value_type")
  icon        String
  tileType    String @map("tile_type")
  typeData    String @map("type_data")

  @@map("intelli_tiles")
}

model IntelliTilesCategory {
  id          Int    @id @default(autoincrement())
  name        String
  orderNumber Int    @map("order_number")
  isActive    Int    @map("is_active")

  @@map("intelli_tiles_category")
}

model IntelliUserTiles {
  id          Int @id @default(autoincrement())
  tileId      Int @map("tile_id")
  occupier    Int
  userId      Int @map("user_id")
  relatedId   Int @map("related_id")
  orderNumber Int @map("order_number")

  @@map("intelli_user_tiles")
}

model InventoryCount {
  id                 Int    @id @default(autoincrement())
  companyId          Int    @map("company_id")
  staffId            Int    @map("staff_id")
  dateStarted        Int    @map("date_started")
  dateCommitted      Int    @map("date_committed")
  dateCompleted      Int    @map("date_completed")
  notes              String
  countType          String @map("count_type")
  countName          String @map("count_name")
  status             String
  countingCategories String @map("counting_categories")
  locationId         Int    @map("location_id")

  @@map("inventory_count")
}

model InventoryDiscrepancy {
  id        Int    @id @default(autoincrement())
  companyId Int    @map("company_id")
  staffId   Int    @map("staff_id")
  productId Int    @map("product_id")
  overage   String
  shortage  String
  countId   Int    @map("count_id")
  draft     Int    @default(0)
  counted   Int

  @@map("inventory_discrepancy")
}

model invoices {
  id             Int    @id @default(autoincrement())
  clientName     String @map("client_name")
  clientEmail    String @map("client_email")
  clientPhone    String @map("client_phone")
  clientAddress  String @map("client_address")
  clientLocation String @map("client_location")
  paymentMethod  String @map("payment_method")
  vat            Int
  total          String
  currency       String
  date           Int
  occupier       String
  ref            Int
  dueDate        String @map("due_date")
  deposit        Int
}

model InvoiceCompanies {
  id               Int             @id @default(autoincrement())
  companyName      String          @map("company_name")
  companyId        Int             @map("company_id")
  payableTo        String          @map("payable_to")
  logo             String
  company_details  CompanyDetails?
  largerLogo       String          @map("larger_logo")
  branchLocationId Int             @map("branch_location_id")
  logoPosition     String          @default("left") @map("logo_position")

  @@map("invoice_companies")
}

model InvoiceDistributions {
  id           Int       @id @default(autoincrement())
  name         String
  description  String?
  allowEdit    Int       @default(0) @map("allow_edit")
  setAsDefault Int       @default(0) @map("set_as_default")
  occupier     Int
  uid          Int?
  creationDate DateTime? @map("creation_date")
  modifiedDate DateTime? @map("modified_date")

  @@map("invoice_distributions")
}

model InvoiceDistributionsSubCat {
  id             Int       @id @default(autoincrement())
  distributionId Int       @map("distribution_id")
  name           String
  value          Float?
  description    String?
  occupier       Int
  uid            Int?
  creationDate   DateTime? @map("creation_date")
  modifiedDate   DateTime? @map("modified_date")

  @@map("invoice_distributions_sub_cat")
}

model InvoiceDistProducts {
  id           Int       @id @default(autoincrement())
  catId        Int       @map("cat_id")
  distId       Int       @map("dist_id")
  productId    Int?      @map("product_id")
  tax          Int?      @default(0)
  fee          Float     @default(0.00)
  occupier     Int
  uid          Int?
  creationDate DateTime? @map("creation_date")
  modifiedDate DateTime? @map("modified_date")

  @@map("invoice_dist_products")
}

model InvoiceTemplates {
  id                 Int      @id @default(autoincrement())
  name               String
  type               Int?     @default(1)
  description        String
  style              String
  activity           String
  appearance         String
  paymentInformation String   @map("payment_information")
  header             String
  footer             String
  dateCreated        DateTime @map("date_created")
  dateUpdated        DateTime @map("date_updated")
  occupier           Int
  stripeButton       Int      @map("stripe_button")

  @@map("invoice_templates")
}

model InvBillers {
  id            Int       @id @default(autoincrement())
  name          String
  company       String
  cui           String
  reg           String
  cnp           String
  serie         String
  accountNo     String    @map("account_no")
  bank          String
  address       String
  city          String
  state         String
  postalCode    String    @map("postal_code")
  country       String
  phone         String
  email         String
  logo          String
  invoiceFooter String    @map("invoice_footer")
  occupier      Int?
  uid           Int?
  createdDate   DateTime? @map("created_date")
  modifiedDate  DateTime? @map("modified_date")
  customId      Int       @map("custom_id")
  imported      Int
  qualification String
  isDisabled    Int       @map("is_disabled")

  @@index([occupier], name: "occupier")
  @@index([uid], name: "uid")
  @@map("inv_billers")
}

model InvCategories {
  id               Int       @id @default(autoincrement())
  code             String
  name             String
  order            Int?
  categoryType     String?   @default("retail") @map("category_type")
  occupier         Int?
  uid              Int?
  createdDate      DateTime? @map("created_date")
  modifiedDate     DateTime? @map("modified_date")
  customId         Int       @map("custom_id")
  PriceListGroupId Int       @map("PriceListGroup_id")
  imported         Int
  technical        Int
  image            String
  disabled         Int
  taxId            Int       @map("tax_id")
  masterCatId      Int       @map("master_cat_id")

  @@index([categoryType], name: "categoryType")
  @@index([masterCatId], name: "masterCatId")
  @@index([occupier], name: "occupier_index")
  @@index([uid], name: "uid_index")
  @@map("inv_categories")
}

model InvContainer {
  id            Int       @id @default(autoincrement())
  referenceNo   String    @map("reference_no")
  containerName String    @map("container_name")
  note          String
  occupier      Int?
  uid           Int?
  createdBy     Int?      @map("created_by")
  modifiedBy    Int?      @map("modified_by")
  createdDate   DateTime? @map("created_date")
  modifiedDate  DateTime? @map("modified_date")

  @@map("inv_container")
}

model InvInsPayments {
  id          Int      @id @default(autoincrement())
  companyId   Int      @map("company_id")
  insurerId   Int      @map("insurer_id")
  paymentId   Int      @default(0) @map("payment_id")
  amount      Float
  createdBy   Int      @map("created_by")
  createdOn   DateTime @map("created_on")
  paymentType String?  @default("0") @map("payment_type")
  paidAmount  Float?   @default(0.00) @map("paid_amount")
  remaining   Float?   @default(0.00)
  refNumber   String   @map("ref_number")

  @@map("inv_ins_payments")
}

model InvLots {
  id           Int       @id @default(autoincrement())
  referenceNo  String    @map("reference_no")
  lotName      String    @map("lot_name")
  note         String?
  color        String?
  category     Int?
  containerId  Int?      @map("container_id")
  occupier     Int?
  rolls        Int
  uid          Int?
  createdBy    Int?      @map("created_by")
  modifiedBy   Int?      @map("modified_by")
  createdDate  DateTime? @map("created_date")
  modifiedDate DateTime? @map("modified_date")

  @@map("inv_lots")
}

model InvMovement {
  id          Int    @id @default(autoincrement())
  companyId   Int    @map("company_id")
  locationId  Int    @default(0) @map("location_id")
  date        Int
  type        String
  quantity    Int
  newQuantity Int    @map("new_quantity")
  enteredBy   Int    @map("entered_by")
  productId   Int    @map("product_id")
  description String
  roomId      Int    @map("room_id")
  saleItemId  Int    @map("sale_item_id")
  contactId   Int    @map("contact_id")

  @@index([companyId], name: "companyId")
  @@index([productId], name: "productId")
  @@index([roomId], name: "roomId")
  @@index([saleItemId], name: "sale_id")
  @@map("inv_movement")
}

model InvPayments {
  id                Int      @id @default(autoincrement())
  from              String
  date              Int
  amount            Float
  invoice           Int
  pmethod           String
  accountBalance    Int?     @default(0) @map("account_balance")
  contactId         Int?     @default(0) @map("contact_id")
  occupier          Int
  orderId           Int?     @default(0) @map("order_id")
  uid               Int
  cardType          String   @map("card_type")
  chargeAmount      Float    @map("charge_amount")
  cardDigits        Int      @map("card_digits")
  datetime          DateTime
  note              String
  newWay2           Int      @map("new_way2")
  newWay3           Int      @map("new_way3")
  refNum            String   @map("ref_num")
  customPmethod     String   @map("custom_pmethod")
  xeroPaymentId     String   @map("xero_paymentId")
  isInsurance       Int?     @default(0) @map("is_insurance")
  paymentId         Int?     @default(0) @map("payment_id")
  customId          Int      @map("custom_id")
  imported          Int
  customContactId   Int      @map("custom_contactId")
  customContactName String   @map("custom_contact_name")
  customInvoiceId   Int      @map("custom_invoice_id")
  insurerId         Int      @map("insurer_id")
  isCreditNote      Int      @map("is_credit_note")

  @@index([contactId], name: "contactId")
  @@index([date], name: "date")
  @@index([invoice], name: "invoice")
  @@index([occupier], name: "occupier")
  @@index([pmethod], name: "pmethod")
  @@map("inv_payments")
}

model InvPaymentsHelper {
  id                Int      @id @default(autoincrement())
  from              String
  date              Int
  amount            Float
  invoice           Int
  pmethod           String
  accountBalance    Int?     @default(0) @map("account_balance")
  contactId         Int?     @default(0) @map("contact_id")
  occupier          Int
  orderId           Int?     @default(0) @map("order_id")
  uid               Int
  cardType          String   @map("card_type")
  chargeAmount      Float    @map("charge_amount")
  newWay            Int      @map("new_way")
  datetime          DateTime
  note              String
  newWay2           Int      @map("newWay2")
  newWay3           Int      @map("newWay3")
  refNum            String   @map("ref_num")
  customPmethod     String   @map("custom_pmethod")
  xeroPaymentId     String   @map("xero_paymentId")
  isInsurance       Int?     @default(0) @map("is_insurance")
  paymentId         Int?     @default(0) @map("payment_id")
  customId          Int      @map("custom_id")
  imported          Int
  customContactId   Int      @map("custom_contactId")
  customContactName String   @map("custom_contact_name")
  customInvoiceId   Int      @map("custom_invoice_id")
  insurerId         Int      @map("insurer_id")

  @@index([invoice], name: "invoice")
  @@index([occupier], name: "occupier")
  @@map("inv_payments_helper")
}

model InvPaymentsUnallocated {
  id                Int      @id @default(autoincrement())
  occupier          Int
  contactId         Int      @map("contact_id")
  amount            Float
  pmethod           String
  date              Int
  insurerId         Int      @map("insurer_id")
  customId          Int      @map("custom_id")
  customContactId   Int      @map("custom_contactId")
  customInsurerId   Int      @map("custom_insurerId")
  customContactName String   @map("custom_contact_name")
  dateTime          DateTime @map("date_time")
  reference         String
  chargeAmount      Float    @map("charge_amount")
  imported          Int

  @@index([customContactId], name: "custom_contact_id")
  @@index([customContactName], name: "customContact_name")
  @@index([customInsurerId], name: "custom_insurer_id")
  @@map("inv_payments_unallocated")
}

model InvPaymentType {
  id           Int       @id @default(autoincrement())
  name         String?
  eposDisplay  Int?      @map("epos_display")
  description  String?
  companyId    Int       @map("occupier")
  uid          Int?
  createdDate  DateTime? @map("created_date")
  modifiedDate DateTime? @map("modified_date")
  isActive     Int       @map("is_active")
  isMoney      Int       @map("is_money")
  type         String    @default("money")

  @@index([companyId], name: "occupier")
  @@map("inv_payment_types")
}

model InvProducts {
  id                     Int       @id @default(autoincrement())
  code                   String
  name                   String
  sku                    String?
  unit                   String?
  size                   String
  productOrder           Int?      @map("product_order")
  um                     String
  cost                   Float?
  price                  Float
  alertQuantity          Int       @default(20) @map("alert_quantity")
  showOnWebsite          String?   @default("No") @map("show_on_website")
  image                  String?   @default("no_image.jpg")
  categoryId             Int       @map("category_id")
  supplierId             Int?      @default(0) @map("supplier_id")
  note                   String?
  occupier               Int?
  uid                    Int?
  createdDate            DateTime? @map("created_date")
  modifiedDate           DateTime? @map("modified_date")
  Description            String
  customId               String    @map("custom_id")
  categoryCustomId       Int       @map("category_customId")
  PriceListGroupId       Int       @map("PriceListGroup_id")
  VATRateId              Int       @map("VATRate_id")
  imported               Int
  oldBarcode             String    @map("old_barcode")
  maxLevel               Int       @map("max_level")
  isActive               Int       @default(1) @map("is_active")
  productPoints          Int       @map("product_points")
  openSale               Int       @map("open_sale")
  newImported            Int       @map("new_imported")
  sageNominalCode        String    @map("sage_nominal_code")
  procedureDate          DateTime  @map("procedure_date")
  productAccountCodeXero String    @map("product_account_code_xero")
  allowNegativeQty       Boolean   @default(false) @map("allow_negative_qty")

  @@index([VATRateId], name: "VATRateId")
  @@index([categoryId], name: "category_index")
  @@index([occupier], name: "company_index")
  @@index([isActive], name: "isActive")
  @@index([name], name: "name")
  @@index([productOrder], name: "productOrder")
  @@map("inv_products")
}

model InvProductsImportHelper {
  id       Int    @id @default(autoincrement())
  customId Int    @map("custom_id")
  name     String
  price    Float?
  occupier String

  @@index([customId], name: "customId")
  @@map("inv_products_import_helper")
}

model InvProductsTest {
  id               Int       @id @default(autoincrement())
  code             String
  name             String
  sku              String?
  unit             String?
  size             String
  productOrder     Int?      @map("product_order")
  um               String
  cost             Float?
  price            Float
  alertQuantity    Int       @default(20) @map("alert_quantity")
  showOnWebsite    String?   @default("No") @map("show_on_website")
  image            String?   @default("no_image.jpg")
  categoryId       Int       @map("category_id")
  supplierId       Int?      @default(0) @map("supplier_id")
  note             String?
  occupier         Int?
  uid              Int?
  createdDate      DateTime? @map("created_date")
  modifiedDate     DateTime? @map("modified_date")
  Description      String
  customId         Int       @map("custom_id")
  categoryCustomId Int       @map("category_customId")
  PriceListGroupId Int       @map("PriceListGroup_id")
  VATRateId        Int       @map("VATRate_id")
  imported         Int
  oldBarcode       String    @map("old_barcode")
  maxLevel         Int       @map("max_level")
  isActive         Int       @default(1) @map("is_active")
  productPoints    Int       @map("product_points")
  openSale         Int       @map("open_sale")
  newImported      Int       @map("new_imported")
  sageNominalCode  String    @map("sage_nominal_code")

  @@map("inv_products_test")
}

model InvPurchases {
  id           Int       @id @default(autoincrement())
  referenceNo  String    @map("reference_no")
  warehouseId  Int       @map("warehouse_id")
  supplierId   Int       @map("supplier_id")
  supplierName String    @map("supplier_name")
  date         DateTime
  note         String
  total        Float
  occupier     Int?
  uid          Int?
  createdDate  DateTime? @map("created_date")
  modifiedDate DateTime? @map("modified_date")

  @@map("inv_purchases")
}

model InvPurchaseItems {
  id           Int       @id @default(autoincrement())
  purchaseId   Int       @map("purchase_id")
  productId    Int       @map("product_id")
  productCode  String    @map("product_code")
  productName  String    @map("product_name")
  quantity     Int
  unitPrice    Float     @map("unit_price")
  taxAmount    Float?    @map("tax_amount")
  grossTotal   Float     @map("gross_total")
  occupier     Int?
  uid          Int?
  createdDate  DateTime? @map("created_date")
  modifiedDate DateTime? @map("modified_date")

  @@map("inv_purchase_items")
}

model InvQuotes {
  id           Int       @id @default(autoincrement())
  date         DateTime?
  guid         String
  bookingId    Int       @map("booking_id")
  customerId   Int       @map("customer_id")
  customerName String?   @map("customer_name")
  locationId   Int       @default(0) @map("location_id")
  total        Float
  occupier     Int
  uid          Int?
  creationDate DateTime? @map("creation_date")
  modifiedDate DateTime? @map("modified_date")

  @@index([bookingId], name: "bookingId")
  @@index([customerId], name: "customerId")
  @@index([locationId], name: "locationId")
  @@index([occupier], name: "occupier")
  @@index([uid], name: "uid")
  @@map("inv_quotes")
}

model InvQuotesItems {
  id          Int     @id @default(autoincrement())
  quoteId     Int     @map("quote_id")
  serviceId   Int     @default(0) @map("service_id")
  productId   Int     @map("product_id")
  productCode String? @map("product_code")
  productName String? @map("product_name")
  productUnit String? @map("product_unit")
  price       Float
  qty         Int
  soldBy      Int?    @map("sold_by")
  occupier    Int

  @@index([occupier], name: "occupier")
  @@index([productId], name: "productId")
  @@index([quoteId], name: "quoteId")
  @@index([serviceId], name: "serviceId")
  @@map("inv_quotes_items")
}

model InvQuotePreview {
  id             Int      @id @default(autoincrement())
  quoteId        Int      @map("quote_id")
  templateId     Int      @map("template_id")
  distributionId Int      @map("distribution_id")
  date           DateTime
  url            String
  formData       String?  @map("form_data")
  comments       String
  companyId      Int      @map("company_id")
  uid            Int
  creationDate   DateTime @map("creation_date")
  modifiedDate   DateTime @map("modified_date")

  @@map("inv_quote_preview")
}

model InvRolls {
  id             Int       @id @default(autoincrement())
  lotId          Int?      @map("lot_id")
  lotReferenceNo String?   @map("lot_reference_no")
  color          String?
  weight         String?
  meters         String?
  fabric         Int?
  rolls          Int?
  productCode    String?   @map("product_code")
  note           String?
  occupier       Int?
  uid            Int?
  createdBy      Int?      @map("created_by")
  modifiedBy     Int?      @map("modified_by")
  createdDate    DateTime? @map("created_date")
  modifiedDate   DateTime? @map("modified_date")

  @@map("inv_rolls")
}

model InvSales {
  id                Int       @id @default(autoincrement())
  referenceNo       String    @map("reference_no")
  warehouseId       Int?      @map("warehouse_id")
  billerId          Int       @map("biller_id")
  billerName        String    @map("biller_name")
  customerId        Int       @map("customer_id")
  customerName      String    @map("customer_name")
  date              DateTime
  note              String?
  invTotal          Float     @map("inv_total")
  totalTax          Float     @map("total_tax")
  total             Float
  paidAmount        Float?    @map("paid_amount")
  storeDiscount     Float?    @map("store_discount")
  discountAmount    Float     @default(0.00) @map("discount_amount")
  accountAmount     Float?    @map("account_amount")
  loyaltyCardNum    String?   @map("loyalty_card_num")
  loyaltyCardAmount String?   @map("loyalty_card_amount")
  voucherNo         String?   @map("voucher_no")
  voucherAmount     Float?    @map("voucher_amount")
  invoiceType       Int       @map("invoice_type")
  inType            String    @map("in_type")
  totalTax2         Float     @map("totalTax2")
  taxRate2Id        Int       @map("tax_rate2_id")
  shippingRate      Float     @map("shipping_rate")
  shippingRateId    Int       @map("shippingRate_id")
  delivery          Int?      @default(0)
  deliveryDate      DateTime? @map("delivery_date")
  byEmail           Int?      @default(0) @map("by_email")
  bySms             Int?      @default(0) @map("by_sms")
  tip               Float?    @default(0.00)
  occupier          Int?
  uid               Int?
  createdDate       DateTime? @map("created_date")
  modifiedDate      DateTime? @map("modified_date")
  paidBy            String?   @map("paid_by")
  bookingId         Int       @map("booking_id")
  quaserBookingId   Int       @map("quaser_bookingId")
  invoiceBit        Int       @map("invoice_bit")
  customId          String    @map("custom_id")
  contactCustomId   String    @map("contact_custom_id")
  PractitionerId    Int       @map("Practitioner_id")
  UserId            Int       @map("User_id")
  TreatmentId       Int       @map("Treatment_id")
  imported          Int
  VATDrop           Float     @map("VAT_drop")
  orderId           Int?      @default(0) @map("order_id")
  void              Boolean   @default(false)
  guid              String?
  oldPaidBy         String    @map("old_paidBy")
  loyaltyPoints     Int       @map("loyalty_points")
  xeroInvoiceId     String    @map("xero_invoice_id")
  xeroUpdatedDate   DateTime  @map("xero_updated_date")
  splitCount        Int       @default(1) @map("split_count")
  splitGuid         String    @map("split_guid")
  insurerContractId Int       @default(0) @map("insurer_contractId")
  lockSale          Int       @map("lock_sale")
  locationId        Int       @map("location_id")
  contractId        Int       @map("contract_id")
  isOk              Boolean   @default(false) @map("is_ok")
  refundTo          Int       @map("refund_to")
  creditRefId       Int       @default(0) @map("credit_ref_id")
  creditAmount      Float     @map("credit_amount")
  creditType        Int       @default(0) @map("credit_type")
  issuerId          Int?      @map("issuer_id")

  @@index([billerId], name: "billerId_index")
  @@index([bookingId], name: "bookingId")
  @@index([contactCustomId], name: "contact_custom_id")
  @@index([createdDate], name: "createdDate_index")
  @@index([customId], name: "customId")
  @@index([customerId], name: "customerId")
  @@index([date], name: "date")
  @@index([guid], name: "guid")
  @@index([insurerContractId], name: "insurerContractId")
  @@index([occupier], name: "occupier")
  @@index([occupier, date], name: "occupier_2")
  @@index([orderId], name: "orderId")
  @@index([paidBy], name: "paidBy")
  @@index([uid], name: "uid")
  @@index([warehouseId], name: "warehouseId_index")
  @@map("inv_sales")
}

model InvSalesAudit {
  id          Int      @id @default(autoincrement())
  mode        String
  guid        String?
  saleId      Int      @map("sale_id")
  customerId  Int      @map("customer_id")
  date        DateTime
  dateDeleted DateTime @map("date_deleted")

  @@map("inv_sales_audit")
}

model InvSalesImport {
  id                   Int    @id @default(autoincrement())
  occupier             String
  imported             Int
  date                 String
  billerName           String @map("biller_name")
  customerName         String @map("customer_name")
  productName          String @map("product_name")
  customId             String @map("custom_id")
  quantity             Int
  total                Float
  referenceNo          String @map("reference_no")
  customContactId      String @map("custom_contactId")
  unitPrice            String @map("unit_price")
  customPractitionerId Int    @map("custom_practitioner_id")
  paymentMethod        String @map("payment_method")
  valTax               Float  @map("val_tax")
  discount             Float
  customId2            Int    @map("customId2")
  customCategoryName   String @map("custom_category_name")
  payedAmount          Float  @map("payed_amount")
  description          String
  added                Int
  note                 String
  productCode          String @map("product_code")
  customClinicId       Int    @map("custom_clinic_id")
  contactId            Int    @map("contact_id")
  invoiceDue           String @map("invoice_due")
  status               String
  locationName         String @map("location_name")
  locationId           Int    @map("location_id")

  @@index([billerName], name: "billerName")
  @@index([customContactId], name: "customContactId")
  @@index([customId], name: "customId")
  @@index([customerName], name: "customerName")
  @@map("inv_sales_import")
}

model InvSalesImportEclinic {
  id       Int @id @default(autoincrement())
  occupier Int
  customId Int @map("custom_id")
  total    Int

  @@map("inv_sales_import_eclinic")
}

model InvSalesPartPay {
  id       Int     @id @default(autoincrement())
  salesId  Int?    @map("sales_id")
  type     String?
  amount   Float?
  orderId  Int?    @default(0) @map("order_id")
  occupier Int?    @default(0)

  @@index([salesId], name: "inv_sales_part_pay_salesId_index")
  @@index([occupier], name: "occupier")
  @@index([orderId], name: "orderId")
  @@index([type], name: "type")
  @@map("inv_sales_part_pay")
}

model InvSalesRefund {
  id                Int       @id @default(autoincrement())
  referenceNo       String    @map("reference_no")
  warehouseId       Int?      @map("warehouse_id")
  billerId          Int       @map("biller_id")
  billerName        String    @map("biller_name")
  customerId        Int       @map("customer_id")
  customerName      String    @map("customer_name")
  date              DateTime
  note              String?
  refundNote        String?   @map("refund_note")
  invTotal          Float     @map("inv_total")
  totalTax          Float     @map("total_tax")
  total             Float
  paidAmount        Float?    @map("paid_amount")
  storeDiscount     Float?    @map("store_discount")
  discountAmount    String?   @map("discount_amount")
  accountAmount     Float?    @map("account_amount")
  loyaltyCardNum    String?   @map("loyalty_card_num")
  loyaltyCardAmount String?   @map("loyalty_card_amount")
  voucherNo         String?   @map("voucher_no")
  voucherAmount     Float?    @map("voucher_amount")
  invoiceType       Int       @map("invoice_type")
  inType            String    @map("in_type")
  totalTax2         Float     @map("totalTax2")
  taxRate2Id        Int       @map("tax_rate2_id")
  shippingRate      Float?    @map("shipping_rate")
  shippingRateId    Int?      @map("shippingRate_id")
  delivery          Int?
  deliveryDate      DateTime? @map("delivery_date")
  tip               Float?    @default(0.00)
  byEmail           Int?      @map("by_email")
  bySms             Int?      @map("by_sms")
  occupier          Int?
  uid               Int?
  createdDate       DateTime? @map("created_date")
  modifiedDate      DateTime? @map("modified_date")
  paidBy            String?   @map("paid_by")
  refundBy          Int?      @map("refund_by")
  bookingId         Int?      @map("booking_id")

  @@map("inv_sales_refund")
}

model InvSalesRefundProduct {
  id                Int       @id @default(autoincrement())
  salesRefundItemId Int?      @map("sales_refund_item_id")
  refundAmount      Float?    @map("refund_amount")
  qty               String?
  note              String?
  paymentMode       String?   @map("payment_mode")
  occupier          Int?
  uid               Int?
  createdDate       DateTime? @map("created_date")
  modifiedDate      DateTime? @map("modified_date")

  @@map("inv_sales_refund_product")
}

model InvSaleItems {
  id                  Int       @id @default(autoincrement())
  saleId              Int       @map("sale_id")
  productId           Int       @map("product_id")
  productCode         String    @map("product_code")
  productName         String    @map("product_name")
  productUnit         String    @map("product_unit")
  taxRateId           Int       @map("tax_rate_id")
  tax                 String
  quantity            Float
  unitPrice           Float     @map("unit_price")
  grossTotal          Float     @map("gross_total")
  valTax              Float     @map("val_tax")
  occupier            Int?
  uid                 Int?
  staffPurchase       Int?      @map("staff_purchase")
  createdDate         DateTime? @map("created_date")
  modifiedDate        DateTime? @map("modified_date")
  customId            Int       @map("custom_id")
  saleCustomId        Int       @map("sale_custom_id")
  contactCustomId     Int       @map("contact_custom_id")
  productCustomId     Int       @map("product_custom_id")
  PractitionerId      Int       @map("Practitioner_id")
  ThreatmentId        Int       @map("Threatment_id")
  UserId              Int       @map("User_id")
  VATId               Int       @map("VAT_id")
  LineDiscount        Float
  imported            Int
  UnitDiscount        Float
  discountReason      String?   @map("discount_reason")
  productCategoryId   Int?      @map("product_category_id")
  productCategoryName String?   @map("product_category_name")
  productCategoryType String?   @map("product_category_type")
  fromPos             Int       @map("from_pos")
  taxTotal            Float     @map("tax_total")
  customProductName   String    @map("custom_productName")
  bookingId           Int?      @map("booking_id")

  @@index([createdDate], name: "createdDate_index")
  @@index([customId], name: "customId")
  @@index([occupier], name: "occupier")
  @@index([productId], name: "productId_index")
  @@index([productName], name: "productName")
  @@index([saleCustomId], name: "sale_customId_index")
  @@index([saleId], name: "saleId_index")
  @@index([uid], name: "uid_index")
  @@map("inv_sale_items")
}

model InvSaleNotes {
  invSaleId   Int      @id @map("inv_sale_id")
  note        String
  createdBy   Int      @map("created_by")
  createdDate DateTime @map("created_date")

  @@map("inv_sale_notes")
}

model InvSaleRefundItems {
  id           Int       @id @default(autoincrement())
  saleId       Int       @map("sale_id")
  productId    Int       @map("product_id")
  productCode  String    @map("product_code")
  productName  String    @map("product_name")
  productUnit  String    @map("product_unit")
  taxRateId    Int       @map("tax_rate_id")
  tax          String
  quantity     Int
  unitPrice    Float     @map("unit_price")
  grossTotal   Float     @map("gross_total")
  valTax       Float     @map("val_tax")
  occupier     Int?
  uid          Int?
  createdDate  DateTime? @map("created_date")
  modifiedDate DateTime? @map("modified_date")

  @@map("inv_sale_refund_items")
}

model InvSettings {
  settingId           Int       @id @default(autoincrement()) @map("setting_id")
  logo                String
  siteName            String    @map("site_name")
  language            String
  defaultWarehouse    Int       @map("default_warehouse")
  currencyPrefix      String    @map("currency_prefix")
  defaultInvoiceType  Int       @map("default_invoice_type")
  defaultTaxRate      Int       @map("default_tax_rate")
  rowsPerPage         Int       @map("rows_per_page")
  noOfRows            Int       @map("no_of_rows")
  totalRows           Int       @map("total_rows")
  orderBy             Int?      @default(1) @map("order_by")
  productOrderBy      Int?      @default(1) @map("product_orderBy")
  version             String    @default("1.2")
  defaultTaxRate2     Int       @default(0) @map("defaultTaxRate2")
  calculateVat        String?   @map("calculate_vat")
  vat                 String?   @default("20")
  tabPrint            String?   @map("tab_print")
  tip                 Int?      @default(0)
  unpaidInvoice       Int?      @default(0) @map("unpaid_invoice")
  redirectUrl         String?   @map("redirect_url")
  occupier            Int?
  uid                 Int?
  createdDate         DateTime? @map("created_date")
  modifiedDate        DateTime? @map("modified_date")
  enableTaxes         Int       @map("enable_taxes")
  enableOnlinePayment Int       @map("enable_online_payment")

  @@map("inv_settings")
}

model InvShippingRates {
  id           Int       @id @default(autoincrement())
  name         String
  rate         Float
  type         String
  occupier     Int?
  uid          Int?
  createdDate  DateTime? @map("created_date")
  modifiedDate DateTime? @map("modified_date")

  @@map("inv_shipping_rates")
}

model InvSplitSale {
  id       Int   @id @default(autoincrement())
  occupier Int
  saleId   Int   @map("sale_id")
  billerId Int   @map("biller_id")
  amount   Float

  @@map("inv_split_sale")
}

model InvTaxRates {
  id              Int       @id @default(autoincrement())
  name            String
  rate            Float
  type            String
  occupier        Int?
  uid             Int?
  createdDate     DateTime? @map("created_date")
  modifiedDate    DateTime? @map("modified_date")
  isActive        Int       @map("is_active")
  description     String
  dateConstrained Boolean   @default(false) @map("date_constrained")
  startDate       Int       @map("start_date")
  endDate         Int       @map("end_date")
  showOnReceipt   Int       @map("show_on_receipt")
  customId        Int       @map("custom_id")

  @@index([occupier], name: "occupier")
  @@map("inv_tax_rates")
}

model InvWarehouses {
  id           Int       @id @default(autoincrement())
  code         String
  name         String
  address      String
  city         String
  occupier     Int?
  uid          Int?
  createdDate  DateTime? @map("created_date")
  modifiedDate DateTime? @map("modified_date")

  @@map("inv_warehouses")
}

model InvWarehousesProducts {
  id           Int       @id @default(autoincrement())
  productId    Int       @map("product_id")
  warehouseId  Int       @map("warehouse_id")
  locationId   Int       @default(0) @map("location_id")
  quantity     Int
  occupier     Int?
  uid          Int?
  createdDate  DateTime? @map("created_date")
  modifiedDate DateTime? @map("modified_date")
  expiryDate   DateTime  @map("expiry_date")
  batchCode    String    @map("batch_code")
  description  String

  @@index([locationId], name: "locationId")
  @@index([occupier], name: "occupier")
  @@index([productId], name: "productId")
  @@map("inv_warehouses_products")
}

model IpaddressVoteMap {
  id        Int    @id @default(autoincrement())
  votingId  Int    @map("voting_id")
  ipAddress String @map("ip_address")
  voteRank  Int    @map("vote_rank")

  @@map("ipaddress_vote_map")
}

model IpAdmission {
  id         Int      @id
  occupier   Int      @default(0)
  contactId  Int      @map("contact_id")
  bedId      Int      @map("bed_id")
  bookingId  Int      @map("booking_id")
  admittedAt DateTime @map("admitted_at")

  @@map("ip_admission")
}

model IpBeds {
  id            Int       @id @default(autoincrement())
  bedName       String    @map("bed_name")
  locationId    String    @map("location_id")
  roomId        Int       @map("room_id")
  bedTypeId     Int       @default(0) @map("bed_type_id")
  specialityIds Int       @default(0) @map("speciality_ids")
  companyId     Int       @map("company_id")
  description   String?
  uid           Int
  creationDate  DateTime? @map("creation_date")
  modifiedDate  DateTime? @map("modified_date")

  @@index([companyId], name: "companyId")
  @@map("ip_beds")
}

model IpBedTypes {
  id           Int      @id @default(autoincrement())
  name         String
  floorId      Int?     @default(0) @map("floor_id")
  locationId   Int      @default(0) @map("location_id")
  companyId    Int      @map("company_id")
  uid          Int
  rmoUid       Int      @default(0) @map("rmo_uid")
  creationDate DateTime @map("creation_date")
  modifiedDate DateTime @map("modified_date")

  @@index([name], name: "bed_type")
  @@index([companyId], name: "companyId")
  @@map("ip_bed_types")
}

model IpBookings {
  id             Int                @id @default(autoincrement())
  occupier       Int                @default(0)
  code           String
  patientId      Int                @map("patient_id")
  eocId          Int                @map("eoc_id")
  createdAt      DateTime           @default(now()) @map("created_at")
  duration       Int
  until          DateTime           @default(dbgenerated("'00:00:00'"))
  admittedAt     DateTime           @default(dbgenerated("'0000-00-00 00:00:00'")) @map("admitted_at")
  discharcedAt   DateTime           @default(dbgenerated("'0000-00-00 00:00:00'")) @map("discharced_at")
  locationId     Int                @map("location_id")
  note           String
  status         ip_bookings_status @default(waiting)
  observationFrq Int                @map("observation_frq")
  contractId     Int                @map("contract_id")

  @@index([patientId], name: "patientId")
  @@map("ip_bookings")
}

model IpCrisisMgmtConfig {
  id            Int       @id @default(autoincrement())
  mid           Int
  score         Int
  responseLabel String?   @map("response_label")
  answer        String?
  frequency     Int       @default(0)
  color         String?
  escalation    Int       @default(0)
  companyId     Int       @map("company_id")
  uid           Int
  creationDate  DateTime? @map("creation_date")
  modifiedDate  DateTime? @map("modified_date")

  @@index([companyId], name: "companyId")
  @@index([mid], name: "mid")
  @@map("ip_crisis_mgmt_config")
}

model IpFloors {
  id             Int    @id @default(autoincrement())
  name           String
  floorUrl       String @map("floor_url")
  floorThumbnail String @map("floor_thumbnail")
  companyId      Int    @map("company_id")
  floorOrder     Int    @default(0) @map("floor_order")

  @@map("ip_floors")
}

model IpFloorPlan {
  id          Int      @id @default(autoincrement())
  floorId     Int      @map("floor_id")
  bedId       Int      @map("bed_id")
  planInfo    String   @map("plan_info")
  companyId   Int      @map("company_id")
  createdDate DateTime @map("created_date")
  updatedDate DateTime @map("updated_date")

  @@map("ip_floor_plan")
}

model IpHits {
  id   Int    @id @default(autoincrement())
  ip   String @unique
  hits Int

  @@map("ip_hits")
}

model IpPatientConfiguration {
  id                Int       @id @default(autoincrement())
  companyId         Int       @map("company_id")
  uid               Int
  creationDate      DateTime? @map("creation_date")
  modifiedDate      DateTime? @map("modified_date")
  observationFormId Int       @map("observation_form_id")
  admissionFormId   Int       @map("admission_form_id")
  dischargeFormId   Int       @map("discharge_form_id")
  handoverFormId    Int       @map("handover_form_id")

  @@map("ip_patient_configuration")
}

model IpProcedureBooked {
  id             Int       @id @default(autoincrement())
  procedureId    Int       @map("procedure_id")
  salonBookingId Int       @map("salon_booking_id")
  ipBookingId    Int       @map("ip_booking_id")
  site           String?
  laterality     String?
  level          Int?
  note           String?
  createdAt      DateTime  @default(now()) @map("created_at")
  updatedAt      DateTime? @map("updated_at")
  deletedAt      DateTime? @map("deleted_at")
  occupier       Int

  @@index([salonBookingId], name: "salonBookingId")
  @@map("ip_procedure_booked")
}

model IpProcedureGroups {
  id           Int       @id @default(autoincrement())
  name         String
  description  String?
  companyId    Int       @map("company_id")
  uid          Int
  creationDate DateTime? @map("creation_date")
  modifiedDate DateTime? @map("modified_date")

  @@map("ip_procedure_groups")
}

model IpServiceProcedure {
  id               Int       @id @default(autoincrement())
  sid              Int
  name             String
  sites            String?
  externalCode     String?   @map("external_code")
  notes            String?
  procedureGroupId Int?      @default(0) @map("procedure_group_id")
  modalityType     String?   @map("modality_type")
  companyId        Int       @map("company_id")
  uid              Int
  creationDate     DateTime? @map("creation_date")

  @@index([companyId], name: "companyId")
  @@map("ip_service_procedure")
}

model IpSpecialities {
  id           Int       @id @default(autoincrement())
  name         String
  description  String?
  companyId    Int       @map("company_id")
  uid          Int
  creationDate DateTime? @map("creation_date")
  modifiedDate DateTime? @map("modified_date")

  @@index([companyId], name: "companyId")
  @@map("ip_specialities")
}

model IpSpecialitiesMembers {
  id             Int @id @default(autoincrement())
  specialitiesId Int @map("specialities_id")
  memberId       Int @map("member_id")

  @@index([memberId], name: "memberId")
  @@index([specialitiesId], name: "specialitiesId")
  @@map("ip_specialities_members")
}

model isc {
  id          Int        @id @default(autoincrement())
  code        String     @unique
  description String
  chapter     String
  category    String
  status      Boolean    @default(true)
  gender      isc_gender @default(Both)

  @@index([chapter, category], name: "chapter")
}

model IssuingCompanies {
  id                    Int     @id @default(autoincrement())
  companyId             Int     @map("company_id")
  isActive              Boolean @default(false) @map("is_active")
  name                  String
  abbreviation          String
  address               String
  address2              String
  city                  String
  postcode              String
  website               String
  email                 String
  phone                 String
  vatRegistered         String  @default("0") @map("vat_registered")
  invoiceTemplateId     Int     @default(0) @map("invoice_template_id")
  customId              Int     @map("custom_id")
  invoicePrefix         String? @map("invoice_prefix")
  invoiceStartingNumber Int?    @map("invoice_starting_number")

  @@map("issuing_companies")
}

model IzaApptMatcher {
  id        Int     @id
  invoiceId Int     @map("invoice_id")
  apptId    Int     @map("appt_id")
  fixed     Boolean @default(false)

  @@map("iza_appt_matcher")
}

model IzaCreditNotes {
  invoiceId         Int    @id @default(autoincrement()) @map("invoice_id")
  totalPrice        Float  @map("total_price")
  comments          String
  raisedByInvoiceId Int    @map("raised_by_invoiceId")

  @@map("iza_credit_notes")
}

model jobs {
  jobId           Int      @id @default(autoincrement()) @map("job_id")
  createDate      DateTime @map("create_date")
  createdById     Int      @map("created_by_id")
  startDate       DateTime @map("start_date")
  closingDate     DateTime @map("closing_date")
  openingTitle    String   @map("opening_title")
  jobLocation     String   @map("job_location")
  whatYouDo       String   @map("what_you_do")
  isClosed        Int      @map("is_closed")
  department      String
  jobCountry      String   @map("job_country")
  openingJobBlurb String   @map("opening_job_blurb")
  employmentType  String   @map("employment_type")
  companyId       Int      @map("company_id")
  experience      String
}

model JobConfiguration {
  id            Int    @id @default(autoincrement())
  companyId     Int    @map("company_id")
  aboutUs       String @map("about_us")
  colorScheme   String @map("color_scheme")
  openingBlurb  String @map("opening_blurb")
  pageTitle     String @map("page_title")
  firstName     String @map("first_name")
  lastName      String @map("last_name")
  email         String
  dob           String
  phone         String
  address       String
  city          String
  postal        String
  country       String
  coverLetter   String @map("cover_letter")
  resume        String
  dateAvailable String @map("date_available")
  linkedin      String
  reference     String
  howDidHear    String @map("how_did_hear")
  whoReferred   String @map("who_referred")
  defaultReply  String @map("default_reply")

  @@map("job_configuration")
}

model JobOpenings {
  openingid     Int    @id @default(autoincrement())
  openingTitle  String @map("opening_title")
  hiringManager String @map("hiring_manager")
  startDate     String @map("start_date")
  endDate       String @map("end_date")
  status        String
  published     Int
  occupier      Int
  description   String
  attachedForms Int    @map("attached_forms")
  createdDate   String @map("created_date")

  @@map("job_openings")
}

model JobStatus {
  id        Int    @id @default(autoincrement())
  companyId Int    @map("company_id")
  name      String
  status    Int
  order     Int

  @@map("job_status")
}

model JwAestheticContacts {
  id        Int @id @default(autoincrement())
  customId  Int @map("custom_id")
  patientNo Int @map("patient_no")

  @@map("jw_aesthetic_contacts")
}

model KpSetting {
  id        Int   @id @default(autoincrement())
  companyId Int   @unique @map("company_id")
  fixedCost Float @default(0.00) @map("fixed_cost")

  @@map("kp_setting")
}

model LabelSettings {
  id          Int @id @default(autoincrement())
  occupier    Int
  userId      Int @map("user_id")
  columnCount Int @map("column_count")
  rowCount    Int @map("row_count")

  @@map("label_settings")
}

model labs {
  id            Int    @id @default(autoincrement())
  companyId     Int    @map("company_id")
  isActive      Int    @map("is_active")
  labName       String @map("lab_name")
  labEmail      String @map("lab_email")
  labStreet     String @map("lab_street")
  labStreet2    String @map("labStreet2")
  labCity       String @map("lab_city")
  labCounty     String @map("lab_county")
  labPostal     String @map("lab_postal")
  labPhone      String @map("lab_phone")
  labProviderNo String @map("lab_provider_no")
}

model LabProductTemplate {
  id         Int    @id @default(autoincrement())
  testName   String @map("test_name")
  code       String
  sampleReqs String @map("sample_reqs")
  tat        String

  @@map("lab_product_template")
}

model LabRequests {
  id              Int      @id @default(autoincrement())
  contactId       Int      @map("contact_id")
  companyId       Int      @map("company_id")
  requestDate     DateTime @map("request_date")
  lastUpdate      DateTime @map("last_update")
  requestById     Int      @map("request_by_id")
  requestStatus   Int      @map("request_status")
  requestLabId    String   @map("request_labId")
  labId           Int      @map("lab_id")
  requestId       Int      @map("request_id")
  receivedId      Int      @map("received_id")
  communicationId Int      @map("communication_id")
  sendResult      String?  @map("send_result")
  receiveResult   String?  @map("receive_result")
  receiveRaw      String?  @map("receive_raw")
  receiveDate     DateTime @map("receive_date")
  sentDate        DateTime @map("sent_date")

  @@map("lab_requests")
}

model LabRequestsPrefDelivery {
  id            Int       @id @default(autoincrement())
  labRequestsId Int?      @map("lab_requests_id")
  type          String?
  creationDate  DateTime? @map("creation_date")

  @@map("lab_requests_pref_delivery")
}

model LabRequestDeliveryResult {
  id            Int      @id @default(autoincrement())
  labRequestsId Int      @map("lab_requests_id")
  resultStatus  Int      @default(0) @map("result_status")
  message       String?
  deliveryType  String?  @map("delivery_type")
  companyId     Int      @map("company_id")
  uid           Int
  creationDate  DateTime @map("creation_date")

  @@index([companyId], name: "companyId")
  @@index([labRequestsId], name: "labRequestsId")
  @@map("lab_request_delivery_result")
}

model LabRequestInbound {
  id             Int      @id @default(autoincrement())
  companyId      Int      @map("company_id")
  labRequestId   Int      @map("lab_request_id")
  emailFrom      String   @map("email_from")
  pendingReview  Int      @map("pending_review")
  emailSubject   String   @map("email_subject")
  attachmentName String   @map("attachment_name")
  receivedDate   DateTime @map("received_date")
  attachmentUrl  String   @map("attachment_url")
  matchedOn      Int      @map("matched_on")
  channel        Int
  matchedById    Int      @map("matched_by_id")
  isDeleted      Int      @default(0) @map("is_deleted")
  tdlResponse    String   @map("tdl_response")

  @@index([companyId, labRequestId], name: "companyId")
  @@map("lab_request_inbound")
}

model LabRequestResultFollowup {
  id           Int @id @default(autoincrement())
  deliveryId   Int @map("delivery_id")
  labRequestId Int @default(0) @map("lab_request_id")
  companyId    Int @default(0) @map("company_id")
  type         Int

  @@index([companyId], name: "companyId")
  @@index([deliveryId], name: "deliveryId")
  @@index([labRequestId], name: "labRequestId")
  @@map("lab_request_result_followup")
}

model LabTestComment {
  id          Int    @id @default(autoincrement())
  testName    String @map("test_name")
  highComment String @map("high_comment")
  lowComment  String @map("low_comment")
  companyId   Int    @map("company_id")
  uid         Int

  @@index([companyId], name: "companyId")
  @@map("lab_test_comment")
}

model languages {
  ID   Int    @id @default(autoincrement())
  code String
  name String
}

model LatestInformation {
  id        Int @id @default(autoincrement())
  contactId Int @map("contact_id")
  entryDate Int @map("entry_date")

  @@map("latest_information")
}

model LeadAttachment {
  id        Int    @id @default(autoincrement())
  companyId Int    @map("company_id")
  leadId    Int    @map("lead_id")
  date      Int
  linkref   String

  @@map("lead_attachment")
}

model LeadCaptureAutomated {
  id            Int    @id @default(autoincrement())
  customField   Int    @map("custom_field")
  captureFormId Int    @map("capture_form_id")
  fromEmail     String @map("from_email")
  templateId    Int    @map("template_id")
  occupier      Int

  @@map("lead_capture_automated")
}

model LeadCaptureFields {
  id               Int    @id @default(autoincrement())
  leadCaptureId    Int    @map("lead_capture_id")
  firstName        String @map("first_name")
  lastName         String @map("last_name")
  homePhone        String @map("home_phone")
  mobile           String
  email            String
  address          String
  postCode         String @map("post_code")
  companyId        Int    @map("company_id")
  howHeard         Int    @map("how_heard")
  dob              String
  customDropdown   String @map("custom_dropdown")
  customTextarea   String @map("custom_textarea")
  customDate       String @map("custom_date")
  yesorno          String
  customTextfield  String @map("custom_textfield")
  customTextfield2 String @map("customTextfield2")

  @@index([leadCaptureId], name: "leadCaptureId")
  @@map("lead_capture_fields")
}

model LeadCaptureSettings {
  id                  Int      @id @default(autoincrement())
  companyId           Int      @map("company_id")
  captureName         String   @map("capture_name")
  pageTitle           String   @map("page_title")
  logo                String
  backgroundImage     String   @map("background_image")
  header1             String
  subHeading          String   @map("sub_heading")
  submissionCounts    Int      @map("submission_counts")
  impressionCounts    Int      @map("impression_counts")
  rightDescription    String   @map("right_description")
  thanksMessage       String   @map("thanks_message")
  CreatedDate         DateTime
  fromEmail           String   @map("from_email")
  messageId           Int      @map("message_id")
  toEmail             String   @map("to_email")
  facebookUrl         String   @map("facebook_url")
  twitterUrl          String   @map("twitter_url")
  backButtonUrl       String   @map("back_button_url")
  topHeader           Int      @map("top_header")
  redirectLink        String   @map("redirect_link")
  tag                 String
  topHeaderColor      String   @map("topHeader_color")
  gymPass             Int      @map("gym_pass")
  defaultRating       String   @map("default_rating")
  defaultLeadStatus   String   @map("default_lead_status")
  fromSubject         String   @map("from_subject")
  clientEmail         Int      @map("client_email")
  fromEmailMessage    String   @map("fromEmail_message")
  disableLeadCreation Int      @map("disable_lead_creation")
  disableDuplicates   Int      @map("disable_duplicates")
  disableSpamFilter   Int      @map("disable_spam_filter")
  sendBusinessSms     Int      @map("send_business_sms")
  sendBusinessSmsTo   String   @map("sendBusinessSms_to")
  googleTrackingCode  String   @map("google_tracking_code")
  sendBusinessSmsTo2  String   @map("sendBusinessSms_to_2")
  sendBusinessSmsTo3  String   @map("sendBusinessSms_to_3")
  autoAssignId        Int      @map("auto_assign_id")
  junkNumbers         Int      @map("junk_numbers")
  junkLongText        Int      @map("junk_long_text")
  photoUploaderHits   Int      @map("photo_uploader_hits")

  @@map("lead_capture_settings")
}

model LeadDropdownItems {
  id              Int    @id @default(autoincrement())
  itemName        String @map("item_name")
  companyId       Int    @map("company_id")
  captureId       Int    @map("capture_id")
  priceCategoryId Int    @map("price_category_id")

  @@map("lead_dropdown_items")
}

model LeadScoringAcitivityModeCode {
  id           Int    @id @default(autoincrement())
  activityMode String @map("activity_mode")
  code         String
  description  String

  @@map("lead_scoring_acitivity_mode_code")
}

model LeadScoringSettings {
  id           Int      @id @default(autoincrement())
  occupier     String
  displayName  String   @map("display_name")
  codeName     String   @map("code_name")
  points       Int
  activityMode String   @map("activity_mode")
  dateAdded    DateTime @map("date_added")
  userAdded    Int      @map("user_added")

  @@map("lead_scoring_settings")
}

model LeadStatus {
  id                Int    @id @default(autoincrement())
  companyId         Int    @map("company_id")
  statusName        String @map("status_name")
  statusOrder       Int    @map("status_order")
  emailTemplateId   Int    @map("email_template_id")
  emailTemplateFrom String @map("email_template_from")
  isDefault         Int    @map("is_default")
  isConvert         Int    @map("is_convert")

  @@map("lead_status")
}

model LeadStatusArray {
  id         Int    @id @default(autoincrement())
  statusName String @map("status_name")

  @@map("lead_status_array")
}

model LeadStatusTemplates {
  id         Int    @id @default(autoincrement())
  statusId   Int    @map("status_id")
  keyword    String
  templateId Int    @map("template_id")
  companyId  Int    @map("company_id")

  @@map("lead_status_templates")
}

model LeadTracking {
  id        Int    @id @default(autoincrement())
  companyId Int    @map("company_id")
  ipAddress String @map("ip_address")

  @@map("lead_tracking")
}

model LeadTrackingActivities {
  id          Int      @id @default(autoincrement())
  mode        String
  occupier    String
  pageUrl     String   @map("page_url")
  ipAddress   String   @map("ip_address")
  date        DateTime
  description String
  leadId      Int      @map("lead_id")
  dateUpdated DateTime @map("date_updated")

  @@index([leadId], name: "leadId")
  @@index([occupier], name: "occupier")
  @@map("lead_tracking_activities")
}

model LeadTrigger {
  id          Int     @id @default(autoincrement())
  triggerName String  @map("trigger_name")
  fieldId     Int     @map("field_id")
  fieldValue  String  @map("field_value")
  locationId  Int     @map("location_id")
  assignedTo1 Int     @map("assigned_to_1")
  assignedTo2 Int     @map("assigned_to_2")
  companyId   Int     @map("company_id")
  roundRobin  Int     @default(0) @map("round_robin")
  sourceId    Int     @map("source_id")
  postcode    String?

  @@map("lead_trigger")
}

model LeadViews {
  id        Int    @id @default(autoincrement())
  companyId Int    @map("company_id")
  viewName  String @map("view_name")
  viewData  String @map("view_data")

  @@map("lead_views")
}

model LetterQueue {
  id              Int      @id @default(autoincrement())
  letterId        Int      @map("letter_id")
  companyId       Int      @map("company_id")
  appointmentId   Int      @map("appointment_id")
  contactId       Int      @map("contact_id")
  letterToId      Int      @map("letter_to_id")
  communicationId Int      @map("communication_id")
  status          Int
  queuedById      Int      @map("queued_by_id")
  printedById     Int      @map("printed_by_id")
  createdDate     DateTime @map("created_date")
  printedDate     DateTime @map("printed_date")

  @@map("letter_queue")
}

model LetterRecipientData {
  id              Int     @id @default(autoincrement())
  communicationId Int     @map("communication_id")
  recipientData   String? @map("recipient_data")
  letterBody      String  @map("letter_body")
  invoiceId       Int     @map("invoice_id")

  @@map("letter_recipientData")
}

model LetterSavedMergeTags {
  id              Int       @id @default(autoincrement())
  contactId       Int       @map("contact_id")
  communicationId Int       @map("communication_id")
  occupier        Int
  mergeTags       String?   @map("merge_tags")
  mergeTagsVal    String?   @map("mergeTags_val")
  creationDate    DateTime? @map("creation_date")
  modifiedDate    DateTime? @map("modified_date")

  @@map("letter_saved_mergeTags")
}

model LevelsIndicator {
  id          Int       @id @default(autoincrement())
  indicatorId Int?      @default(0) @map("indicator_id")
  level       String?
  levelValue  String?   @map("level_value")
  occupier    Int?
  uid         Int?
  createdDate DateTime? @map("created_date")
  updatedDate DateTime? @map("updated_date")

  @@unique([indicatorId, level, occupier], name: "indicatorId_2")
  @@index([indicatorId], name: "indicatorId")
  @@index([occupier], name: "occupier")
  @@map("levels_indicator")
}

model LmsCreditBalanceLog {
  id          Int      @id @default(autoincrement())
  contactId   Int      @map("contact_id")
  companyId   Int      @map("company_id")
  amount      Float
  date        DateTime @default(now())
  productId   Int      @map("product_id")
  saleId      Int      @map("sale_id")
  referralId  Int      @map("referral_id")
  description String
  cashable    Int      @default(1)

  @@map("lms_credit_balance_log")
}

model LocationMaster {
  locId     Int     @id @default(autoincrement()) @map("loc_id")
  locCompId Int?    @map("loc_comp_id")
  locName   String? @map("loc_name")
  locDate   String? @map("loc_date")

  @@map("location_master")
}

model LocationServicePrice {
  id         Int   @id @default(autoincrement())
  locationId Int   @default(0) @map("location_id")
  serviceId  Int   @default(0) @map("service_id")
  price      Float @default(0.00)

  @@index([locationId, serviceId], name: "foreign")
  @@map("location_service_price")
}

model LoginAttempts {
  id                Int      @id @default(autoincrement())
  username          String   @unique
  lastAttempt       DateTime @map("last_attempt")
  count             String
  phoneAttemptCount Int      @map("phone_attempt_count")
  clientIp          String   @map("client_ip")

  @@map("login_attempts")
}

model LoginLog {
  id             Int      @id @default(autoincrement())
  uid            Int
  occupier       String
  loginDatetime  DateTime @map("login_datetime")
  logoutDatetime DateTime @map("logout_datetime")
  ipAddress      String   @map("ip_address")
  isMobile       Int      @map("is_mobile")
  userAgent      String   @map("user_agent")

  @@index([occupier], name: "occupier")
  @@index([uid], name: "uid")
  @@map("login_log")
}

model LogCall {
  id              Int       @id @default(autoincrement())
  subject         String?
  callType        Int?      @map("call_type")
  callPurpose     Int?      @map("call_purpose")
  callFromOrTo    Int?      @map("call_from_or_to")
  userId          Int?      @map("user_id")
  leadId          Int?      @map("lead_id")
  relatedTo       Int?      @map("related_to")
  reminderId      Int       @default(0) @map("reminder_id")
  relatedToText   String?   @map("relatedTo_text")
  callDetailType  Int?      @map("call_detail_type")
  callStartDate   DateTime? @map("call_start_date")
  callTimeHour    Int?      @map("call_time_hour")
  callTimeMin     Int?      @map("call_time_min")
  callTimeFormat  Int?      @map("call_time_format")
  callDurationHr  Int?      @default(0) @map("call_duration_hr")
  callDurationMin Int?      @default(0) @map("call_duration_min")
  callDurationSec Int?      @default(0) @map("call_duration_sec")
  description     String?
  billable        Int?
  callResult      String?   @map("call_result")
  occupier        Int?
  ownerid         Int?
  createdDate     DateTime? @map("created_date")
  modifiedDate    DateTime? @map("modified_date")
  siteSection     String    @map("site_section")

  @@map("log_call")
}

model LoyaltyBackend {
  id                 Int    @id @default(autoincrement())
  occupier           Int
  logoImage          String @map("logo_image")
  pageTitle          String @map("page_title")
  tab1Title          String @map("tab1_title")
  tab2Title          String @map("tab2_title")
  tab3Title          String @map("tab3_title")
  tab4Title          String @map("tab4_title")
  tab5Title          String @map("tab5_title")
  tab1Content        String @map("tab1_content")
  tab2Content        String @map("tab2_content")
  tab3Content        String @map("tab3_content")
  tab4Content        String @map("tab4_content")
  tab5Content        String @map("tab5_content")
  privacyPolicy      String @map("privacy_policy")
  termsAndConditions String @map("terms_and_conditions")
  faq                String
  cookies            String
  bgColor            String @map("bg_color")
  btBgColor          String @map("bt_bgColor")
  footBgColor        String @map("foot_bgColor")
  mainBgColor        String @map("main_bgColor")

  @@map("loyalty_backend")
}

model LoyaltyCampaign {
  id           Int                   @id @default(autoincrement())
  campaignName String                @map("campaign_name")
  companyId    Int                   @map("company_id")
  type         loyalty_campaign_type @default(LOYALTY)

  @@map("loyalty_campaign")
}

model LoyaltyDefinitions {
  id                   Int                      @id @default(autoincrement())
  promotionType        String                   @map("promotion_type")
  promotionDescription String                   @map("promotion_description")
  subDescription       String                   @map("sub_description")
  promotionName        String                   @map("promotion_name")
  disabled             Int
  type                 loyalty_definitions_type @default(LOYALTY)

  @@map("loyalty_definitions")
}

model LoyaltyLog {
  id            Int       @id @default(autoincrement())
  companyId     Int       @map("company_id")
  contactId     Int       @map("contact_id")
  amount        Float
  promotionType String    @map("promotion_type")
  saleId        Int       @map("sale_id")
  date          Int
  userId        Int       @map("user_id")
  updatedOn     DateTime? @map("updated_on")
  description   String

  @@index([companyId], name: "companyId")
  @@index([contactId], name: "contactId")
  @@index([saleId], name: "saleId")
  @@map("loyalty_log")
}

model LoyaltyPoints {
  id        Int   @id @default(autoincrement())
  companyId Int   @map("company_id")
  points    Float
  contactId Int   @unique @map("contact_id")

  @@map("loyalty_points")
}

model LoyaltyPointSettings {
  id            Int       @id @default(autoincrement())
  occupier      Int?
  userId        Int?      @map("user_id")
  status        Int?
  amount        Float?
  createdDate   DateTime? @map("created_date")
  modifiedDate  DateTime? @map("modified_date")
  pointsValue   Float     @map("points_value")
  showOnReceipt Int       @map("show_on_receipt")

  @@index([occupier], name: "occupier")
  @@map("loyalty_point_settings")
}

model LoyaltyPromotion {
  id            Int    @id @default(autoincrement())
  companyId     Int    @map("company_id")
  promotionType String @map("promotion_type")
  startDate     Int    @map("start_date")
  endDate       Int    @map("end_date")
  points        Int
  campaignId    Int    @map("campaign_id")
  isActive      Int    @map("is_active")
  customAmount  Float  @map("custom_amount")

  @@map("loyalty_promotion")
}

model LoyaltyRewards {
  id            Int                  @id @default(autoincrement())
  companyId     Int                  @map("company_id")
  name          String
  type          loyalty_rewards_type @default(PRODUCT)
  amount        Int
  packageId     Int                  @map("package_id")
  repeat        Boolean
  repeatEvery   Int                  @map("repeat_every")
  emailTemplate Int                  @map("email_template")
  smsTemplate   Int                  @map("sms_template")
  smsSender     Int                  @map("sms_sender")

  @@map("loyalty_rewards")
}

model LoyaltyRewardsAwards {
  id          Int      @id @default(autoincrement())
  contactId   Int      @map("contact_id")
  rewardId    Int      @map("reward_id")
  companyId   Int      @map("company_id")
  dateAwarded DateTime @map("date_awarded")

  @@map("loyalty_rewards_awards")
}

model MailchimpApi {
  id           Int    @id @default(autoincrement())
  occupier     String
  apiKey       String @map("api_key")
  emailType    String @map("email_type")
  status       String
  autosyncList String @map("autosync_list")

  @@map("mailchimp_api")
}

model ManageBills {
  id           Int      @id @default(autoincrement())
  date         DateTime
  customerId   Int      @map("customer_id")
  customerName String?  @map("customer_name")
  billerId     Int?     @map("biller_id")
  billerName   String?  @map("biller_name")
  count        Int
  tax1         Float
  tax2         Float
  total        Float

  @@map("manage_bills")
}

model ManageCustomFields {
  id                Int                            @id @default(autoincrement())
  fieldLabel        String?                        @map("field_label")
  fieldType         String?                        @map("field_type")
  occupier          Int?
  uid               Int?
  locationId        Int                            @default(0) @map("location_id")
  createdDate       DateTime?                      @map("created_date")
  modifiedDate      DateTime?                      @map("modified_date")
  treatmentInterest Int                            @map("treatment_interest")
  showInLeads       Int                            @map("show_in_leads")
  fieldFor          manage_custom_fields_field_for @map("field_for")
  flagged           Boolean
  isRequired        Int                            @map("is_required")
  disableApp        Int                            @default(1) @map("disable_app")
  isActive          Int                            @default(1) @map("is_active")
  fieldOrder        Int                            @default(125) @map("field_order")
  displayInInvoice  Int                            @default(0) @map("display_in_invoice")
  defaultInReports  Int                            @default(0) @map("default_in_reports")
  categoryId        Int                            @map("category_id")
  inCcToolbar       Boolean                        @default(false) @map("in_cc_toolbar")
  favorite          Boolean                        @default(false)
  showInCal         Boolean                        @default(true) @map("show_in_cal")

  @@index([categoryId], name: "categoryId")
  @@index([occupier], name: "occupier")
  @@map("manage_custom_fields")
}

model ManageCustomFieldsCategories {
  id        Int    @id @default(autoincrement())
  name      String
  companyId Int    @map("company_id")

  @@map("manage_custom_fields_categories")
}

model ManageCustomFieldsItems {
  id        Int    @id @default(autoincrement())
  fieldId   Int    @map("field_id")
  occupier  String
  itemLabel String @map("item_label")
  itemValue String @map("item_value")
  itemOrder Int    @map("item_order")

  @@index([fieldId], name: "fieldId")
  @@index([occupier], name: "occupier")
  @@map("manage_custom_fields_items")
}

model ManageFieldsOrder {
  id        Int    @id @default(autoincrement())
  fieldId   Int    @map("field_id")
  fieldName String @map("field_name")
  occupier  String
  orderId   Int    @map("order_id")
  pinned    Int
  isMore    Int    @map("is_more")

  @@index([fieldId], name: "fieldId")
  @@index([occupier], name: "occupier")
  @@index([pinned], name: "pinned")
  @@map("manage_fields_order")
}

model ManageItems {
  id            Int    @id @default(autoincrement())
  suspendId     Int    @map("suspend_id")
  productId     Int    @map("product_id")
  productCode   String @map("product_code")
  productName   String @map("product_name")
  productUnit   String @map("product_unit")
  taxRateId     Int    @map("tax_rate_id")
  tax           String
  quantity      Int
  unitPrice     Float  @map("unit_price")
  grossTotal    Float  @map("gross_total")
  valTax        Float  @map("val_tax")
  staffPurchase Int?   @default(0) @map("staff_purchase")

  @@map("manage_items")
}

model MedicalApprovalNotes {
  id            Int      @id @default(autoincrement())
  companyId     Int      @map("company_id")
  contactId     Int      @map("contact_id")
  appointmentId Int      @map("appointment_id")
  actionedBy    Int      @map("actioned_by")
  pathTakenId   Int      @map("path_taken_id")
  note          String
  response      String
  createdDate   DateTime @map("created_date")
  status        Int      @default(0)
  requestedBy   Int      @map("requested_by")
  responseDate  DateTime @map("response_date")

  @@map("medical_approval_notes")
}

model MedicalApprovalNotesLogs {
  id                Int      @id @default(autoincrement())
  medicalApprovalId Int      @map("medical_approval_id")
  companyId         Int      @map("company_id")
  actionedBy        Int      @map("actioned_by")
  status            Int      @default(0)
  response          String
  date              DateTime

  @@map("medical_approval_notes_logs")
}

model MedicalAttr {
  id          Int       @id @default(autoincrement())
  name        String?
  createdAt   DateTime? @map("created_at")
  updatedAt   DateTime? @map("updated_at")
  deletedAt   DateTime? @map("deleted_at")
  occupier    String?
  description String

  @@index([occupier], name: "occupier")
  @@map("medical_attr")
}

model MedicalContactAttr {
  id                   Int       @id @default(autoincrement())
  attrId               Int?      @map("attr_id")
  contactId            Int?      @map("contact_id")
  value                String?
  updatedAt            DateTime? @map("updated_at")
  createdAt            DateTime? @map("created_at")
  deletedAt            DateTime? @map("deleted_at")
  nhsLocumId           Int?      @map("nhs_locum_id")
  groupLabel           String?   @map("group_label")
  medicalFormContactId Int?      @map("medical_form_contact_id")
  attachmentSize       Float     @map("attachment_size")
  customContactName    String    @map("custom_contact_name")
  customContactId      Int       @map("custom_contactId")

  @@index([attrId], name: "attrId")
  @@index([medicalFormContactId], name: "medical_form_contact_id")
  @@index([contactId], name: "patient")
  @@map("medical_contact_attr")
}

model MedicalContra {
  id               Int      @id @default(autoincrement())
  companyId        Int      @map("company_id")
  userId           Int      @map("user_id")
  isEnabled        Int      @map("is_enabled")
  condition        String
  createdDate      DateTime @map("created_date")
  contraCode       String   @map("contra_code")
  questionLabel    String   @map("question_label")
  questionAnswer   String   @map("question_answer")
  productId        Int      @map("product_id")
  servicesIds      String   @map("services_ids")
  formId           Int      @map("form_id")
  age              Int
  medicalCondition String   @map("medical_condition")
  contraTitle      String   @map("contra_title")
  alertText        String   @map("alert_text")
  preventForward   Int      @map("prevent_forward")
  customId         String   @map("custom_id")
  imported         Int

  @@map("medical_contra")
}

model MedicalCustomFields {
  id               Int     @id @default(autoincrement())
  name             String
  formId           Int     @map("form_id")
  label            String
  medicalCondition Int     @default(0) @map("medical_condition")
  type             String?
  active           Int
  occupier         Int

  @@map("medical_custom_fields")
}

model MedicalForm {
  id                   Int       @id @default(autoincrement())
  userDeleted          Int       @map("user_deleted")
  name                 String?
  data                 String?
  createdAt            DateTime? @map("created_at")
  updatedAt            DateTime? @map("updated_at")
  deletedAt            DateTime? @map("deleted_at")
  nhsLocumId           Int?      @map("nhs_locum_id")
  nhsProcedureId       Int?      @map("nhs_procedure_id")
  locked               Int
  printout             String
  occupier             Int
  userCreated          Int       @map("user_created")
  encoded              Int
  formType             String    @map("form_type")
  serviceId            String    @map("service_id")
  ipadOnly             Int?      @default(0) @map("ipad_only")
  headingSetting       Int?      @default(0) @map("heading_setting")
  tempStatic           Int       @map("temp_static")
  oldData              String    @map("old_data")
  formCategory         String    @map("form_category")
  author               String
  diagnosisCode        String    @map("diagnosis_code")
  isFav                Int       @map("is_fav")
  diagnosisCodeEnabled Int       @map("diagnosisCode_enabled")
  labId                Int       @map("lab_id")
  isPrivate            Boolean   @default(false) @map("is_private")

  @@index([deletedAt], name: "deletedAt")
  @@index([formType], name: "formType")
  @@index([occupier], name: "occupier")
  @@index([serviceId], name: "serviceId")
  @@map("medical_form")
}

model MedicalFormsIosData {
  id        Int     @id @default(autoincrement())
  refId     Int?    @map("ref_id")
  companyId Int?    @map("company_id")
  formId    Int?    @map("form_id")
  refName   String? @map("ref_name")
  data      String?

  @@index([companyId], name: "companyId")
  @@map("medical_forms_ios_data")
}

model MedicalFormAccess {
  id            Int      @id @default(autoincrement())
  formId        Int      @map("form_id")
  contactId     Int      @map("contact_id")
  companyId     Int      @map("company_id")
  requestId     String   @map("request_id")
  generatedCode Int      @map("generated_code")
  expiryDate    DateTime @map("expiry_date")

  @@map("medical_form_access")
}

model MedicalFormContact {
  id                Int       @id @default(autoincrement())
  formId            Int?      @map("form_id")
  contactId         Int?      @map("contact_id")
  createdAt         DateTime? @map("created_at")
  updatedAt         DateTime? @map("updated_at")
  deletedAt         DateTime? @map("deleted_at")
  complete          Int
  locked            Int
  userCreated       Int       @map("user_created")
  userUpdated       Int       @map("user_updated")
  relatedTo         Int       @map("related_to")
  customUserName    String    @map("custom_user_name")
  prescriber        Int
  priority          String
  pharmacyId        Int       @map("pharmacy_id")
  formStatus        Int       @map("form_status")
  comments          String?
  urgent            Int?
  imported          Int
  customContactName String    @map("custom_contact_name")
  customContactId   Int       @map("custom_contactId")
  approvedTriggers  String?   @map("approved_triggers")
  actionedBy        Int?      @map("actioned_by")
  formContactNumber Int       @default(0) @map("form_contact_number")
  diagnosisCode     String    @map("diagnosis_code")

  @@index([contactId], name: "contactId")
  @@index([createdAt], name: "createdAt")
  @@index([formId], name: "formId")
  @@index([relatedTo], name: "relatedTo")
  @@map("medical_form_contact")
}

model MedicalFormContactHistory {
  id                   Int      @id @default(autoincrement())
  mode                 String
  medicalFormContactId Int      @map("medical_form_contactId")
  userId               Int      @map("user_id")
  contactId            Int      @map("contact_id")
  occupier             String
  date                 DateTime
  updateChanges        String?  @map("update_changes")

  @@map("medical_form_contact_history")
}

model MedicalFormContactRestore {
  id             Int       @id
  formId         Int?      @map("form_id")
  contactId      Int?      @map("contact_id")
  createdAt      DateTime? @map("created_at")
  updatedAt      DateTime? @map("updated_at")
  deletedAt      DateTime? @map("deleted_at")
  complete       Int
  locked         Int
  userCreated    Int       @map("user_created")
  userUpdated    Int       @map("user_updated")
  relatedTo      Int       @map("related_to")
  customUserName String    @map("custom_user_name")
  prescriber     Int
  priority       String

  @@index([contactId], name: "contactId")
  @@index([formId], name: "formId")
  @@index([relatedTo], name: "relatedTo")
  @@map("medical_form_contact_restore")
}

model MedicalFormEpaperImages {
  id       Int    @id @default(autoincrement())
  formId   Int    @map("form_id")
  fileName String
  linkhref String

  @@index([formId], name: "formId")
  @@map("medical_form_epaper_images")
}

model MedicalFormPinned {
  id       Int @id @default(autoincrement())
  formId   Int @map("form_id")
  occupier Int
  userId   Int @map("user_id")
  pinned   Int

  @@map("medical_form_pinned")
}

model MedicalFormPsfsSettings {
  id                Int       @id @default(autoincrement())
  formId            Int?      @map("form_id")
  psfsStart         Int?      @map("psfs_start")
  intervalMode      Int?      @map("interval_mode")
  intervalNo        Int?      @map("interval_no")
  psfsEnd           Int?      @map("psfs_end")
  postTreatmentMode Int?      @map("post_treatment_mode")
  postTreatmentNo   Int?      @map("post_treatment_no")
  occupier          Int?
  uid               Int?
  creationDate      DateTime? @map("creation_date")
  modifiedDate      DateTime? @map("modified_date")

  @@map("medical_form_psfs_settings")
}

model MedicalFormPsfsTreatSettings {
  id               Int  @id @default(autoincrement())
  formId           Int? @map("form_id")
  postIntervalMode Int? @map("post_interval_mode")
  postIntervalNo   Int? @map("post_interval_no")

  @@map("medical_form_psfs_treat_settings")
}

model MedicalFormSettings {
  id                   Int      @id @default(autoincrement())
  companyId            Int      @map("company_id")
  prescriptionsEmailId Int      @map("prescriptions_email_id")
  treatmentsEmailId    Int      @map("treatments_email_id")
  consentsEmailId      Int      @map("consents_email_id")
  colDrugName          Boolean  @default(true) @map("col_drug_name")
  colDrugDose          Boolean  @default(true) @map("col_drug_dose")
  colDrugUnits         Boolean  @default(true) @map("col_drug_units")
  colDrugFreq          Boolean  @default(true) @map("col_drug_freq")
  colDrugLot           Boolean  @default(false) @map("col_drug_lot")
  colDrugExp           Boolean  @default(false) @map("col_drug_exp")
  colDrugRoute         Boolean  @default(true) @map("col_drug_route")
  colDrugComm          Boolean  @default(true) @map("col_drug_comm")
  colDrugNameLabel     String   @default("Drug") @map("colDrugName_label")
  colDrugDoseLabel     String   @default("Dose") @map("colDrugDose_label")
  colDrugUnitsLabel    String   @default("Units") @map("colDrugUnits_label")
  colDrugFreqLabel     String   @default("Freq") @map("colDrugFreq_label")
  colDrugLotLabel      String   @default("Lot Num.") @map("colDrugLot_label")
  colDrugExpLabel      String   @default("Expiry Date") @map("colDrugExp_label")
  colDrugRouteLabel    String   @default("Route") @map("colDrugRoute_label")
  colDrugCommLabel     String   @default("Comments") @map("colDrugComm_label")
  deliveryAddress      String   @map("delivery_address")
  showDeliveryAddress  Boolean  @map("show_deliveryAddress")
  headingsOnTop        Boolean  @default(true) @map("headings_on_top")
  prescStatTextOntop   Boolean? @default(true) @map("presc_stat_text_ontop")
  treatmentPlanEmailId Int      @map("treatment_plan_email_id")
  prepopulate          Boolean  @default(false)

  @@map("medical_form_settings")
}

model MedicalFormSpecialInstructions {
  id           Int       @id @default(autoincrement())
  occupier     Int
  instruction  String?
  creationDate DateTime? @map("creation_date")
  modifiedDate DateTime? @map("modified_date")

  @@map("medical_form_special_instructions")
}

model MedicalFormThemeSettings {
  id                      Int     @id @default(autoincrement())
  medicalFormId           Int?    @map("medical_form_id")
  formHeadercolor         String?
  formSectioncolor        String?
  formCheckboxcolor       String?
  formButtontext          String?
  formButtoncolor         String?
  formFontstyle           String?
  formFontcolor           String?
  formDropdowncolor       String?
  formThankyoumsg         String?
  formCompanylogo         Int?
  formRedirecturl         String?
  formBackgroundcolor     String?
  formResultemail         String?
  formnotriggers          String?
  formsubmissiontrigger   String?
  formformulaetrigger     Int?    @default(0)
  formPullpreviousanswers Int?    @default(0)

  @@map("medical_form_theme_settings")
}

model MedicalFormTriggers {
  id                    Int      @id @default(autoincrement())
  triggerName           String?  @map("trigger_name")
  action                String?
  companyId             Int?     @map("company_id")
  medicalTriggers       String?  @map("medical_triggers")
  creationDate          DateTime @default(now()) @map("creation_date")
  formStatus            Int?     @map("form_status")
  formEmail             String?  @map("form_email")
  formEmailSubject      String?  @map("formEmail_subject")
  formEmailBody         String?  @map("formEmail_body")
  formAlertNote         String?  @map("form_alert_note")
  formTaskName          String?  @map("form_task_name")
  formTaskDescription   String?  @map("form_task_description")
  formAssignedTo        Int?     @map("form_assigned_to")
  medicalFormPrescriber String?  @map("medical_form_prescriber")
  formTaskPriority      Int?     @map("form_task_priority")
  formSmsNo             String?  @map("form_sms_no")
  formSmsBody           String?  @map("form_sms_body")
  formulaeOperation     Int?     @default(0) @map("formulae_operation")
  isActive              Boolean  @default(true) @map("is_active")
  medicalCondition      String?  @map("medical_condition")

  @@map("medical_form_triggers")
}

model memberships {
  id             Int      @id @default(autoincrement())
  name           String
  occupier       String
  autopayMode    String   @map("autopay_mode")
  paymentEvery   String   @map("payment_every")
  numberPayments Int      @map("number_payments")
  CreatedDate    DateTime
  description    String
  fromTime       String   @map("from_time")
  toTime         String   @map("to_time")
}

model MembershipAppUsers {
  id           Int @id @default(autoincrement())
  contactId    Int @map("contact_id")
  membershipId Int @map("membership_id")
  companyId    Int @map("company_id")

  @@map("membership_app_users")
}

model MembershipCards {
  memberid  Int @id @default(autoincrement())
  detailsId Int @map("details_id")

  @@map("membership_cards")
}

model MembershipContact {
  id             Int      @id @default(autoincrement())
  contactId      Int      @map("contact_id")
  membershipId   Int      @map("membership_id")
  invoiceId      Int?     @map("invoice_id")
  activationDate DateTime @map("activation_date")
  expirationDate DateTime @map("expiration_date")
  occupier       String
  CreatedDate    DateTime
  LastUpdated    DateTime
  suspended      Int
  firstPayment   Float    @map("first_payment")
  UID            Int

  @@map("membership_contact")
}

model MembershipPackage {
  id              Int    @id @default(autoincrement())
  membershipId    Int    @map("membership_id")
  packageId       Int    @map("package_id")
  productName     String @map("product_name")
  productPrice    Float  @map("product_price")
  type            String
  membershipTotal Float  @map("membership_total")

  @@map("membership_package")
}

model MessageTemplates {
  templateId             Int       @id @default(autoincrement()) @map("template_id")
  companyId              Int       @map("company_id")
  templateName           String    @map("template_name")
  subject                String
  message                String
  createdBy              Int       @map("created_by")
  templateType           String    @map("template_type")
  createdAt              DateTime  @default(now()) @map("created_at")
  dateChangedAt          DateTime? @map("date_changed_at")
  templateSubType        Int       @map("template_sub_type")
  templateSubTypeService Int       @map("templateSubType_service")
  parentId               Int       @default(0) @map("parent_id")
  header                 String
  footer                 String
  excludeMargins         Int       @map("exclude_margins")
  templateGroup          String    @default("general") @map("template_group")
  subtypeLetter          String    @map("subtype_letter")
  wordTemplate           String    @map("word_template")
  isDefault              Boolean   @default(false) @map("is_default")
  folderId               Int       @map("folder_id")

  @@index([companyId], name: "companyId")
  @@index([folderId], name: "folderId")
  @@index([parentId], name: "parentId")
  @@index([templateName], name: "templateName")
  @@map("message_templates")
}

model MessageTemplatesLocale {
  templateId    Int       @id @default(autoincrement()) @map("template_id")
  companyId     Int       @map("company_id")
  templateName  String    @map("template_name")
  subject       String
  message       String
  createdBy     Int       @map("created_by")
  templateType  String    @map("template_type")
  createdAt     DateTime  @default(now()) @map("created_at")
  dateChangedAt DateTime? @map("date_changed_at")

  @@map("message_templates_locale")
}

model MessageTemplatesServices {
  id         Int @id @default(autoincrement())
  occupier   Int
  templateId Int @map("template_id")
  serviceId  Int @map("service_id")

  @@map("message_templates_services")
}

model MetroReminders {
  id           Int     @id @default(autoincrement())
  uid          Int
  company      Int
  title        String
  description  String
  reminderDate Int     @map("reminder_date")
  notification Int?
  reminderType String? @map("reminder_type")
  itemId       Int?    @map("item_id")

  @@index([company], name: "company_index")
  @@index([itemId], name: "itemId")
  @@index([notification], name: "notification")
  @@index([reminderDate], name: "reminderDate")
  @@index([uid], name: "uid_index")
  @@map("metro_reminders")
}

model MobileWidgets {
  id          Int    @id @default(autoincrement())
  userId      Int    @map("user_id")
  companyId   Int    @map("company_id")
  widgetType  String @map("widget_type")
  widgetOrder Int    @map("widget_order")
  widgetUrl   String @map("widget_url")

  @@map("mobile_widgets")
}

model MultipleCompanies {
  id           Int @id @default(autoincrement())
  headOfficeId Int @map("head_office_id")
  companyId    Int @map("company_id")

  @@map("multiple_companies")
}

model News2Configuration {
  id            Int    @id @default(autoincrement())
  companyId     Int    @map("company_id")
  medicalFormId Int    @map("medical_form_id")
  respirations  String
  spo2Scale1    String @map("spo2_scale_1")
  spo2Scale2    String @map("spo2_scale_2")
  airOrOxygen   String @map("air_or_oxygen")
  bloodPressure String @map("blood_pressure")
  pulse         String
  consciousness String
  temperature   String

  @@map("news2_configuration")
}

model NewsletterTemplates {
  id                Int    @id @default(autoincrement())
  templateBody      String @map("template_body")
  templateGroup     String @map("template_group")
  thumbnail         String
  internalName      String @map("internal_name")
  automatedCampaign Int    @map("automated_campaign")

  @@map("newsletter_templates")
}

model NewsScoreConfiguration {
  id           Int      @id @default(autoincrement())
  mid          Int
  label        String
  setClass     String?  @map("set_class")
  companyId    Int      @map("company_id")
  uid          Int
  creationDate DateTime @map("creation_date")

  @@index([companyId], name: "companyId")
  @@index([mid], name: "mid")
  @@map("news_score_configuration")
}

model NewsScoreFormula {
  id            Int     @id @default(autoincrement())
  newsScoreId   Int     @map("news_score_id")
  formula       String
  singleVal     Float   @map("single_val")
  fromVal       Float   @default(0.00) @map("from_val")
  toVal         Float   @default(0.00) @map("to_val")
  score         Int     @default(0)
  color         String?
  alertRmoIos   Int     @default(0) @map("alert_rmo_ios")
  alertRmoEmail Int     @default(0) @map("alert_rmo_email")
  alertRmoSms   Int     @default(0) @map("alert_rmo_sms")
  alertRmoWeb   Int     @default(0) @map("alert_rmo_web")

  @@index([newsScoreId], name: "newsScoreId")
  @@map("news_score_formula")
}

model NhsAdjustAttr {
  id              Int       @id @default(autoincrement())
  nhsAttrId       Int?      @map("nhs_attr_id")
  nhsRiskAdjustId Int?      @map("nhs_risk_adjust_id")
  start           String?
  end             String?
  value           Float?
  createdAt       DateTime? @map("created_at")
  updatedAt       DateTime? @map("updated_at")
  deletedAt       DateTime? @map("deleted_at")
  type            String?
  nhsLocumId      Int?      @map("nhs_locum_id")

  @@index([nhsAttrId], name: "attr")
  @@index([nhsRiskAdjustId], name: "risk")
  @@map("nhs_adjust_attr")
}

model NhsAttr {
  id         Int       @id @default(autoincrement())
  name       String?
  createdAt  DateTime? @map("created_at")
  updatedAt  DateTime? @map("updated_at")
  deletedAt  DateTime? @map("deleted_at")
  nhsLocumId Int?      @map("nhs_locum_id")

  @@index([name], name: "attr")
  @@index([nhsLocumId], name: "locum")
  @@map("nhs_attr")
}

model NhsForm {
  id             Int       @id @default(autoincrement())
  userDeleted    Int       @map("user_deleted")
  name           String?
  data           String?
  createdAt      DateTime? @map("created_at")
  updatedAt      DateTime? @map("updated_at")
  deletedAt      DateTime? @map("deleted_at")
  nhsLocumId     Int?      @map("nhs_locum_id")
  nhsProcedureId Int?      @map("nhs_procedure_id")
  locked         Int
  printout       String

  @@map("nhs_form")
}

model NhsImport {
  id         Int       @id @default(autoincrement())
  userId     Int?      @map("user_id")
  createdAt  DateTime? @map("created_at")
  updatedAt  DateTime? @map("updated_at")
  deletedAt  DateTime? @map("deleted_at")
  nhsLocumId Int?      @map("nhs_locum_id")
  name       String?

  @@map("nhs_import")
}

model NhsLocum {
  id        Int       @id @default(autoincrement())
  name      String?
  dateLogin DateTime? @map("date_login")

  @@map("nhs_locum")
}

model NhsOutcomeProfileAttr {
  id                  Int       @id @default(autoincrement())
  nhsOutcomeProfileId Int?      @map("nhs_outcome_profile_id")
  nhsAttrId           Int?      @map("nhs_attr_id")
  createdAt           DateTime? @map("created_at")
  updatedAt           DateTime? @map("updated_at")
  deletedAt           DateTime? @map("deleted_at")

  @@map("nhs_outcome_profile_attr")
}

model NhsPatient {
  id          Int       @id @default(autoincrement())
  name        String?
  dob         DateTime?
  weight      Float?
  createdAt   DateTime? @map("created_at")
  updatedAt   DateTime? @map("updated_at")
  nhsNumber   String?   @map("nhs_number")
  deletedAt   DateTime? @map("deleted_at")
  nhsLocumId  Int?      @map("nhs_locum_id")
  notes       String?
  nhsImportId Int?      @map("nhs_import_id")
  userCreated Int       @default(0) @map("user_created")
  userUpdated Int       @default(0) @map("user_updated")

  @@map("nhs_patient")
}

model NhsPatientAttr {
  id                 Int       @id @default(autoincrement())
  nhsAttrId          Int?      @map("nhs_attr_id")
  nhsPatientId       Int?      @map("nhs_patient_id")
  value              String?
  updatedAt          DateTime? @map("updated_at")
  createdAt          DateTime? @map("created_at")
  deletedAt          DateTime? @map("deleted_at")
  nhsLocumId         Int?      @map("nhs_locum_id")
  groupLabel         String?   @map("group_label")
  nhsPatientRecordId Int?      @map("nhs_patient_record_id")

  @@index([nhsPatientId], name: "patient")
  @@map("nhs_patient_attr")
}

model NhsPatientNotes {
  id                    Int       @id @default(autoincrement())
  nhsPatientId          Int?      @map("nhs_patient_id")
  note                  String?
  createdAt             DateTime? @map("created_at")
  userId                Int?      @map("user_id")
  nhsLocumId            Int?      @map("nhs_locum_id")
  nhsPatientProcedureId Int?      @map("nhs_patient_procedure_id")
  chart                 Int?
  updatedAt             DateTime? @map("updated_at")

  @@map("nhs_patient_notes")
}

model NhsPatientNumber {
  id            Int     @id @default(autoincrement())
  nhsPatientId  Int?    @map("nhs_patient_id")
  number        String?
  nhsHospitalId Int?    @map("nhs_hospital_id")
  nhsLocumId    Int?    @map("nhs_locum_id")

  @@index([nhsPatientId], name: "nhsPatientId")
  @@map("nhs_patient_number")
}

model NhsPatientProcedure {
  id             Int       @id @default(autoincrement())
  nhsPatientId   Int?      @map("nhs_patient_id")
  nhsProcedureId Int?      @map("nhs_procedure_id")
  date           DateTime?
  notes          String?
  createdAt      DateTime? @map("created_at")
  updatedAt      DateTime? @map("updated_at")
  deletedAt      DateTime? @map("deleted_at")
  followUp       DateTime? @map("follow_up")
  nhsLocumId     Int?      @map("nhs_locum_id")

  @@map("nhs_patient_procedure")
}

model NhsPatientProcedureOutcome {
  id                    Int       @id @default(autoincrement())
  nhsPatientProcedureId Int?      @map("nhs_patient_procedure_id")
  nhsProcedureOutcomeId Int?      @map("nhs_procedure_outcome_id")
  actualOutcome         Float?    @map("actual_outcome")
  predictedOutcome      Float?    @map("predicted_outcome")
  createdAt             DateTime? @map("created_at")
  updatedAt             DateTime? @map("updated_at")
  deletedAt             DateTime? @map("deleted_at")
  followUp              DateTime? @map("follow_up")
  nhsLocumId            Int?      @map("nhs_locum_id")

  @@map("nhs_patient_procedure_outcome")
}

model NhsPatientProcedureTeam {
  id                    Int     @id @default(autoincrement())
  nhsPatientProcedureId Int?    @map("nhs_patient_procedure_id")
  userId                Int?    @map("user_id")
  name                  String?
  nhsLocumId            Int?    @map("nhs_locum_id")

  @@map("nhs_patient_procedure_team")
}

model NhsPatientRecord {
  id           Int       @id @default(autoincrement())
  nhsPatientId Int?      @map("nhs_patient_id")
  createdAt    DateTime? @map("created_at")
  updatedAt    DateTime? @map("updated_at")
  deletedAt    DateTime? @map("deleted_at")
  nhsFormId    Int?      @map("nhs_form_id")
  complete     Int
  locked       Int
  userCreated  Int       @map("user_created")
  userUpdated  Int       @map("user_updated")
  relatedTo    Int       @map("related_to")

  @@map("nhs_patient_record")
}

model NhsProcedure {
  id                  Int       @id @default(autoincrement())
  name                String?
  description         String?
  nhsProcedureTypeId  Int?      @map("nhs_procedure_type_id")
  createdAt           DateTime? @map("created_at")
  updatedAt           DateTime? @map("updated_at")
  deletedAt           DateTime? @map("deleted_at")
  nhsLocumId          Int?      @map("nhs_locum_id")
  nhsOutcomeProfileId Int?      @map("nhs_outcome_profile_id")
  subname             String

  @@map("nhs_procedure")
}

model NhsProcedureChart {
  id             Int       @id @default(autoincrement())
  nhsChartTypeId Int?      @map("nhs_chart_type_id")
  nhsProcedureId Int?      @map("nhs_procedure_id")
  positive       Int?
  negative       Int?
  positiveLimit  Int?      @map("positive_limit")
  negativeLimit  Int?      @map("negative_limit")
  reset          Int?
  createdAt      DateTime? @map("created_at")
  updatedAt      DateTime? @map("updated_at")
  deletedAt      DateTime? @map("deleted_at")
  nhsLocumId     Int?      @map("nhs_locum_id")
  median         Int
  orderBy        String    @map("order_by")

  @@map("nhs_procedure_chart")
}

model NhsProcedureOutcome {
  id              Int       @id @default(autoincrement())
  nhsProcedureId  Int?      @map("nhs_procedure_id")
  name            String?
  time            String?
  nhsRiskAdjustId Int?      @map("nhs_risk_adjust_id")
  definition      String
  createdAt       DateTime? @map("created_at")
  updatedAt       DateTime? @map("updated_at")
  deletedAt       DateTime? @map("deleted_at")
  nhsLocumId      String?   @map("nhs_locum_id")
  type            String

  @@map("nhs_procedure_outcome")
}

model NhsRiskAdjust {
  id             Int       @id @default(autoincrement())
  nhsProcedureId Int?      @map("nhs_procedure_id")
  name           String?
  formula        String?
  createdAt      DateTime? @map("created_at")
  updatedAt      DateTime? @map("updated_at")
  deletedAt      DateTime? @map("deleted_at")
  nhsLocumId     Int?      @map("nhs_locum_id")
  type           String

  @@index([nhsLocumId], name: "locum")
  @@index([nhsProcedureId], name: "procedure")
  @@map("nhs_risk_adjust")
}

model NotificationTemplates {
  id                         Int @id @default(autoincrement())
  purchaseOrderApprovalEmail Int @map("purchase_order_approval_email")

  @@map("notification_templates")
}

model NwsCampaign {
  campaignId   Int      @id @default(autoincrement()) @map("campaign_id")
  campaignName String   @map("campaign_name")
  createDate   DateTime @map("create_date")
  company      Int

  @@map("nws_campaign")
}

model NwsCampaignMember {
  id                  Int @id @default(autoincrement())
  campaignId          Int @map("campaign_id")
  memberId            Int @map("member_id")
  currentNewsletterId Int @map("current_newsletter_id")
  joinTime            Int @map("join_time")
  company             Int

  @@index([campaignId, memberId], name: "campaignId")
  @@map("nws_campaign_member")
}

model NwsCampaignNewsletter {
  id           Int @id @default(autoincrement())
  campaignId   Int @map("campaign_id")
  newsletterId Int @map("newsletter_id")
  sendTime     Int @map("send_time")
  company      Int

  @@index([campaignId, newsletterId], name: "campaignId")
  @@map("nws_campaign_newsletter")
}

model NwsGroup {
  groupId   Int    @id @default(autoincrement()) @map("group_id")
  groupName String @map("group_name")
  public    Int
  company   Int
  temp      Int

  @@map("nws_group")
}

model NwsImage {
  imageId  Int    @id @default(autoincrement()) @map("image_id")
  imageUrl String @map("image_url")
  company  Int

  @@map("nws_image")
}

model NwsLink {
  linkId  Int    @id @default(autoincrement()) @map("link_id")
  linkUrl String @map("link_url")
  company Int

  @@map("nws_link")
}

model NwsLinkOpen {
  linkOpenId Int @id @default(autoincrement()) @map("link_open_id")
  linkId     Int @map("link_id")
  memberId   Int @map("member_id")
  sendId     Int @map("send_id")
  timestamp  Int
  company    Int

  @@map("nws_link_open")
}

model NwsMember {
  memberId          Int      @id @default(autoincrement()) @map("member_id")
  firstName         String   @map("first_name")
  lastName          String   @map("last_name")
  email             String
  joinDate          DateTime @map("join_date")
  ipAddress         String   @map("ip_address")
  unsubscribeDate   DateTime @default(dbgenerated("'0000-00-00'")) @map("unsubscribe_date")
  unsubscribeSendId Int      @map("unsubscribe_send_id")
  company           Int
  temp              Int
  imported          Int

  @@index([company], name: "company")
  @@index([email], name: "email")
  @@map("nws_member")
}

model NwsMemberGroup {
  id       Int @id @default(autoincrement())
  memberId Int @map("member_id")
  groupId  Int @map("group_id")
  company  Int
  temp     Int

  @@index([company], name: "company")
  @@index([groupId], name: "groupId")
  @@index([memberId], name: "memberId")
  @@map("nws_member_group")
}

model NwsNewsletter {
  newsletterId        Int      @id @default(autoincrement()) @map("newsletter_id")
  createDate          DateTime @map("create_date")
  template            String
  subject             String
  fromName            String   @map("from_name")
  fromEmail           String   @default("noreply@pabau.com") @map("from_email")
  content             String
  bounceEmail         String   @map("bounce_email")
  company             Int
  grroupId            Int      @map("grroup_id")
  campaignType        String   @map("campaign_type")
  groupsRecipients    String   @map("groups_recipients")
  sentBy              Int      @map("sent_by")
  createdBy           Int      @map("created_by")
  groupsPrerecipients String   @map("groups_prerecipients")
  campaignStatus      String   @map("campaign_status")
  sendDate            DateTime @map("send_date")
  finishedDate        DateTime @map("finished_date")
  totalRecips         Int      @map("total_recips")
  bodyContent         String   @map("body_content")

  @@index([campaignStatus], name: "campaignStatus")
  @@index([company], name: "company")
  @@index([sendDate], name: "sendDate")
  @@map("nws_newsletter")
}

model NwsNewsletterBackup {
  newsletterId        Int      @id @map("newsletter_id")
  createDate          DateTime @map("create_date")
  template            String
  subject             String
  fromName            String   @map("from_name")
  fromEmail           String   @default("noreply@pabau.com") @map("from_email")
  content             String
  bounceEmail         String   @map("bounce_email")
  company             Int
  grroupId            Int      @map("grroup_id")
  campaignType        String   @map("campaign_type")
  groupsRecipients    String   @map("groups_recipients")
  sentBy              Int      @map("sent_by")
  createdBy           Int      @map("created_by")
  groupsPrerecipients String   @map("groups_prerecipients")
  campaignStatus      String   @map("campaign_status")
  sendDate            DateTime @map("send_date")
  finishedDate        DateTime @map("finished_date")
  totalRecips         Int      @map("total_recips")
  bodyContent         String   @map("body_content")

  @@index([company], name: "company")
  @@map("nws_newsletter_backup")
}

model NwsNewsletterImages {
  id       Int      @id @default(autoincrement())
  occupier Int
  linkhref String
  date     DateTime
  userId   Int      @map("user_id")

  @@map("nws_newsletter_images")
}

model NwsNewsletterMember {
  id                 Int    @id @default(autoincrement())
  sendId             Int    @map("send_id")
  memberId           Int    @map("member_id")
  sentTime           Int    @map("sent_time")
  status             Int
  openTime           Int    @map("open_time")
  clickTime          Int    @map("click_time")
  bounceTime         Int    @map("bounce_time")
  company            Int
  newsletterId       Int    @map("newsletter_id")
  communicationLogId Int    @map("communication_log_id")
  mandrillId         String @map("mandrill_id")

  @@index([communicationLogId], name: "communicationLogId")
  @@index([company], name: "company")
  @@index([mandrillId], name: "mandrillId")
  @@index([memberId], name: "memberId")
  @@index([newsletterId], name: "newsletterId")
  @@index([openTime], name: "openTime")
  @@index([sendId], name: "sendId")
  @@index([status], name: "status")
  @@map("nws_newsletter_member")
}

model NwsNewsletterTemplates {
  id           Int @id @default(autoincrement())
  newsletterId Int @map("newsletter_id")
  type         Int
  templateId   Int @map("template_id")

  @@index([newsletterId], name: "newsletterId")
  @@map("nws_newsletter_templates")
}

model NwsSend {
  sendId       Int    @id @default(autoincrement()) @map("send_id")
  startTime    Int    @map("start_time")
  status       Int
  finishTime   Int    @map("finish_time")
  newsletterId Int    @map("newsletter_id")
  campaignId   Int    @map("campaign_id")
  templateHtml String @map("template_html")
  fullHtml     String @map("full_html")
  company      Int

  @@index([newsletterId], name: "newsletterId")
  @@map("nws_send")
}

model NwsSettings {
  id      Int    @id @default(autoincrement())
  key     String
  val     String
  company Int

  @@unique([key, company], name: "key")
  @@map("nws_settings")
}

model OldPasswords {
  id        Int      @id @default(autoincrement())
  userId    Int      @map("user_id")
  hash      String
  createdAt DateTime @map("created_at")

  @@map("old_passwords")
}

model OnlineBookingsPayments {
  id        Int    @id @default(autoincrement())
  signature String
  jsonData  String @map("json_data")
  occupier  String

  @@index([signature], name: "signature")
  @@map("online_bookings_payments")
}

model OpportunityClosureReason {
  id       Int     @id @default(autoincrement())
  name     String
  isActive Boolean @map("is_active")
  occupier Int

  @@map("opportunity_closure_reason")
}

model orders {
  orderid   Int    @id @default(autoincrement())
  date      String
  reference String
  name      String
  email     String
  pMethod   String @map("p_method")
  quantity  Int
  total     Float
  status    String
  occupier  Int
  eventid   Int
  tType     String @map("t_type")
}

model PabauCareStats {
  id                         Int      @id @default(autoincrement())
  companyId                  Int      @map("company_id")
  entryDate                  DateTime @map("entry_date")
  generalClients             Int      @map("general_clients")
  generalLeads               Int      @map("general_leads")
  generalFinancials          Int      @map("general_financials")
  generalEmails              Int      @map("general_emails")
  generalSms                 Int      @map("general_sms")
  generalTotal               Int      @map("general_total")
  marketingSms               Int      @map("marketing_sms")
  marketingNewsletter        Int      @map("marketing_newsletter")
  marketingSurvey            Int      @map("marketing_survey")
  marketingBirthday          Int      @map("marketing_birthday")
  marketingTotal             Int      @map("marketing_total")
  paperlessConsent           Int      @map("paperless_consent")
  paperlessMedical           Int      @map("paperless_medical")
  paperlessTreatment         Int      @map("paperless_treatment")
  paperlessPrecare           Int      @map("paperless_precare")
  paperlessAftercare         Int      @map("paperless_aftercare")
  paperlessOnline            Int      @map("paperless_online")
  paperlessPhoto             Int      @map("paperless_photo")
  paperlessDocuments         Int      @map("paperless_documents")
  paperlessTotal             Int      @map("paperless_total")
  websiteLeads               Int      @map("website_leads")
  websiteOnline              Int      @map("website_online")
  stockInventory             Int      @map("stock_inventory")
  stockPurchase              Int      @map("stock_purchase")
  stockTotal                 Int      @map("stock_total")
  pabauScore                 Int      @map("pabau_score")
  manualServiceSatisfaction  Int      @map("manual_service_satisfaction")
  manualTrainingSatisfaction Int      @map("manual_training_satisfaction")
  overallSatisfaction        Int      @map("overall_satisfaction")
  greenFlags                 Int      @map("green_flags")
  redFlags                   Int      @map("red_flags")
  amberFlags                 Int      @map("amber_flags")
  grandTotalScore            Int      @map("grand_total_score")
  moneyStripe                Int      @map("money_stripe")
  moneyRecall                Int      @map("money_recall")
  moneySms                   Int      @map("money_sms")
  contactCount               Int      @map("contact_count")
  consentCount               Int      @map("consent_count")
  medicalHistoryCount        Int      @map("medical_history_count")
  treatmentNoteCount         Int      @map("treatment_note_count")
  precareCount               Int      @map("precare_count")
  aftercareCount             Int      @map("aftercare_count")
  photosCount                Int      @map("photos_count")
  onlineFormCount            Int      @map("online_form_count")
  documentsCount             Int      @map("documents_count")
  bookingsCount              Int      @map("bookings_count")
  leadsCount                 Int      @map("leads_count")
  bookingsCreateCount        Int      @map("bookings_create_count")
  financeCount               Int      @map("finance_count")
  stripeFeesCount            Float    @map("stripe_fees_count")
  stripeFeesActivity         Int      @map("stripe_fees_activity")
  fullContactCount           Int      @map("full_contactCount")
  totalSmsCampaign           Int      @map("total_sms_campaign")
  totalNewsletterCampaign    Int      @map("total_newsletter_campaign")
  totalSurveys               Int      @map("total_surveys")
  totalRecalls               Int      @map("total_recalls")
  totalBirthdays             Int      @map("total_birthdays")
  ticketsTotalCreated        Int      @map("tickets_total_created")
  ticketsTotalSolved         Int      @map("tickets_total_solved")
  ticketsTotalOpen           Int      @map("tickets_total_open")
  tickets01                  Int      @map("tickets_01")
  tickets18                  Int      @map("tickets_18")
  tickets824                 Int      @map("tickets_824")
  tickets24                  Int      @map("tickets_24")
  surveyHits                 Int      @map("survey_hits")
  photoUploaderHits          Int      @map("photo_uploader_hits")
  smsRefer                   Int      @map("sms_refer")
  smsReferee                 Int      @map("smsReferee")

  @@map("pabau_care_stats")
}

model PabauConfig {
  id       Int @id @default(autoincrement())
  calLive  Int @map("cal_live")
  calBeta  Int @map("cal_beta")
  posBeta  Int @map("pos_beta")
  posLive  Int @map("pos_live")
  rotaLive Int @map("rota_live")
  rotaBeta Int @map("rota_beta")

  @@map("pabau_config")
}

model PabauCoupons {
  id         Int      @id @default(autoincrement())
  code       String
  amount     Float
  type       String
  redeemed   Int
  redeemDate DateTime @map("redeem_date")
  producedBy String   @map("produced_by")

  @@map("pabau_coupons")
}

model PabauDebugTue {
  companyId     Int    @map("company_id")
  filename      String
  hits          Int
  peakMemory    Int    @map("peak_memory")
  cpuUsageTime  Float  @map("cpu_usage_time")
  execUsageTime Float  @map("exec_usage_time")
  id            Int    @id @default(autoincrement())

  @@unique([companyId, filename], name: "companyId")
  @@map("pabau_debug_tue")
}

model PabauFeedbackStats {
  id             Int    @id @default(autoincrement())
  companyId      Int    @map("company_id")
  sentToEmailSms String @map("sent_to_email_sms")
  sentDate       Int    @map("sent_date")
  relatedId      Int    @map("related_id")
  converted      Int

  @@map("pabau_feedback_stats")
}

model PabauNews {
  alertid   Int     @id @default(autoincrement())
  cid       Int
  uid       Int
  message   String
  read      Boolean @default(false)
  entrydate Int
  type      String
  ownerId   String? @map("owner_id")
  image     String
  title     String
  url       String

  @@index([uid, entrydate], name: "message_check")
  @@map("pabau_news")
}

model PabauOrder {
  id                  Int      @id @default(autoincrement())
  companyId           Int      @map("company_id")
  trainingFee         Float    @map("training_fee")
  previousSystem      String   @map("previous_system")
  supportPlan         String   @map("support_plan")
  orderNotes          String   @map("order_notes")
  subscriptionFee     Float    @map("subscription_fee")
  supportFee          Float    @map("support_fee")
  dateCreated         DateTime @map("date_created")
  termsSigned         DateTime @map("terms_signed")
  subscriptionName    String   @map("subscription_name")
  leadSource          String   @map("lead_source")
  signedContract      String   @map("signed_contract")
  proposalSent        String   @map("proposal_sent")
  setupFee            Float    @map("setup_fee")
  waiveSetupFee       Int      @map("waive_setupFee")
  trainingFeeDone     Boolean? @map("trainingFee_done")
  setupFeeDone        Boolean? @map("setupFee_done")
  supportFeeDone      Boolean? @map("supportFee_done")
  subscriptionFeeDone Boolean? @map("subscriptionFee_done")
  summaryOrder        String   @map("summary_order")
  discounts           String?

  @@map("pabau_order")
}

model PabauPaymentplan {
  id          Int    @id @default(autoincrement())
  companyId   Int    @map("company_id")
  description String
  amount      String
  interval    String
  paymentDay  String @map("payment_day")
  duration    String
  name        String
  count       Int

  @@map("pabau_paymentplan")
}

model PabauPosSettings {
  id                    Int       @id @default(autoincrement())
  companyId             Int       @map("company_id")
  disableService        Int       @map("disable_service")
  disableProducts       Int       @map("disable_products")
  disablePackages       Int       @map("disable_packages")
  disableGiftcards      Int       @map("disable_giftcards")
  disableAccount        Int       @map("disable_account")
  disablePriceOverride  Int       @map("disable_price_override")
  printMode             String    @default("receipt") @map("print_mode")
  disableDiscount       Int       @map("disable_discount")
  emailReceiptText      String    @map("email_receipt_text")
  themeCol              String    @map("theme_col")
  bankAccount           String    @map("bank_account")
  bankNumber            String    @map("bank_number")
  sortCode              String    @map("sort_code")
  bankName              String    @map("bank_name")
  iban                  String
  swift                 String
  cashupSettings        Int       @map("cashup_settings")
  defaultPaymentType    String    @map("default_payment_type")
  disableLoyalty        Int       @map("disable_loyalty")
  emailReceiptTemplate  Int       @map("email_receipt_template")
  enableBankDetails     Int       @map("enable_bank_details")
  vat                   String
  enableBillerSettings  Int       @map("enable_biller_settings")
  displayTaxes          Int       @map("display_taxes")
  usePabauId            Int       @map("use_pabau_id")
  startingInvoiceNumber Int       @default(1) @map("starting_invoice_number")
  enableNextAppointment Int       @map("enable_next_appointment")
  showPaidLabel         Int       @map("show_paidLabel")
  paidLabel             String    @map("paid_label")
  displayQuantity       Int       @map("display_quantity")
  displayUnitCost       Int       @map("display_unit_cost")
  logoPosition          String    @default("left") @map("logo_position")
  forceDiscountReason   Boolean   @default(false) @map("force_discount_reason")
  automaticBooking      Int       @map("automatic_booking")
  giftMsgTemplateId     Int       @map("gift_msg_template_id")
  giftSmsTemplateId     Int       @map("gift_sms_template_id")
  packageUseByDate      Int?      @map("package_use_by_date")
  locked                Int
  cronDay               Int?      @default(1) @map("cron_day")
  lockSaleDate          DateTime? @map("lock_sale_date")
  stockMode             Int       @map("stock_mode")
  invTemplate           String?   @map("inv_template")
  lockInvoiceEdit       Int       @map("lock_invoice_edit")

  @@index([companyId], name: "companyId")
  @@map("pabau_pos_settings")
}

model PabauShortener {
  id           Int    @id @default(autoincrement())
  redirectCode String @map("redirect_code")
  url          String
  companyId    Int    @map("company_id")

  @@index([redirectCode], name: "redirectCode")
  @@map("pabau_shortener")
}

model PabauUsers {
  id          Int     @id @default(autoincrement())
  user        String
  password    String
  isTrainer   Int?    @default(0) @map("is_trainer")
  isAdmin     Int?    @default(0) @map("is_admin")
  isOnboarder Int?    @default(0) @map("is_onboarder")
  slackId     String? @map("slack_id")

  @@map("pabau_users")
}

model pages {
  id           Int    @id @default(autoincrement())
  name         String
  link         String
  parent       Int
  category     String
  showcase     Int
  description  String
  features     String
  new          Int
  img          String
  admin        Int
  order        Int
  cover        String
  tickierOrder Int    @map("tickier_order")
  friendlyName String @map("friendly_name")
  appWeight    Int    @map("app_weight")
  videoLink    String @map("video_link")
  largeThumb   String @map("large_thumb")
  inactive     Int
  privateKey   String @map("private_key")
  newUrl       String @map("new_url")

  @@index([admin], name: "admin")
  @@index([parent], name: "parent")
}

model PageCategories {
  id          Int    @id @default(autoincrement())
  category    String
  description String
  visible     Int
  url         String

  @@map("page_categories")
}

model PageHits {
  id          Int    @id @default(autoincrement())
  file        String @unique
  hits        String
  memoryUsage String @map("memory_usage")

  @@map("page_hits")
}

model PartnersAmendment {
  id        Int      @id @default(autoincrement())
  partnerId Int      @map("partner_id")
  amount    Float
  fromDate  DateTime @map("from_date")
  toDate    DateTime @map("to_date")

  @@map("partners_amendment")
}

model PartnersPartner {
  id           Int      @id @default(autoincrement())
  partnerName  String   @map("partner_name")
  partnerEmail String   @map("partner_email")
  status       Int
  createdDate  DateTime @map("created_date")
  partnerType  String   @map("partner_type")
  includeSms   Int      @map("include_sms")
  recurring    Int

  @@map("partners_partner")
}

model PartnerPayments {
  id          Int      @id @default(autoincrement())
  companyId   Int      @map("company_id")
  chargeDate  DateTime @map("charge_date")
  amount      Float
  description String
  partnerId   String   @map("partner_id")
  status      String

  @@index([companyId], name: "companyId")
  @@map("partner_payments")
}

model PartnerRates {
  id        Int   @id @default(autoincrement())
  partnerId Int   @map("partner_id")
  rate60    Float @map("60_rate")
  rate90    Float @map("95_rate")
  rate125   Float @map("125_rate")
  rate240   Float @map("240_rate")

  @@map("partner_rates")
}

model PartnerTrack {
  id          Int      @id @default(autoincrement())
  partnerId   Int      @map("partner_id")
  createdDate DateTime @map("created_date")
  fromDate    DateTime @map("from_date")
  toDate      DateTime @map("to_date")

  @@map("partner_track")
}

model PasswordResetAuth {
  id          Int      @id @default(autoincrement())
  keyCode     String   @map("key_code")
  username    String
  oldPassword String   @map("old_password")
  date        DateTime

  @@map("password_reset_auth")
}

model payments {
  id       Int    @id @default(autoincrement())
  from     String
  date     Int
  amount   String
  invoice  Int
  pmethod  String
  occupier Int
}

model PaymentProtectionStripe {
  id               Int      @id @default(autoincrement())
  stripeCustomerId String   @map("stripe_customer_id")
  paymentMethodId  String?  @map("payment_method_id")
  contactId        Int      @map("contact_id")
  createdAt        DateTime @default(now()) @map("created_at")
  modifiedAt       DateTime @default(now()) @map("modified_at")
  companyId        Int      @map("company_id")

  @@map("payment_protection_stripe")
}

model payroll {
  id                Int      @id @default(autoincrement())
  companyId         Int      @map("company_id")
  periodType        Int?     @default(1) @map("period_type")
  periodFrom        DateTime @map("period_from")
  periodTo          DateTime @map("period_to")
  position          Int      @default(0)
  locations         Int?     @default(0)
  totalHours        String   @map("total_hours")
  wagePay           Float    @map("wage_pay")
  salaryPay         Float    @map("salary_pay")
  commissionPay     Float    @default(0.00) @map("commission_pay")
  totalPay          Float    @default(0.00) @map("total_pay")
  createdBy         Int      @map("created_by")
  createdDate       DateTime @map("created_date")
  employees         String
  invoiceIds        String?  @map("invoice_ids")
  pendingInvoiceIds String?  @map("pending_invoiceIds")
  financeIds        String?  @map("finance_ids")
}

model PermissionTemplates {
  id                Int     @id @default(autoincrement())
  name              String
  companyId         Int     @map("company_id")
  appPermissions    String  @map("app_permissions")
  userPermissions   String  @map("user_permissions")
  mobilePermissions String  @map("mobile_permissions")
  mobileWidgets     String  @map("mobile_widgets")
  disabledServices  String  @map("disabled_services")
  alerts            String
  isAdmin           Boolean @map("is_admin")
  enabledReports    String  @map("enabled_reports")
  allReports        Boolean @map("all_reports")

  @@index([companyId], name: "companyId")
  @@map("permission_templates")
}

model PettyCashTypes {
  id           Int    @id @default(autoincrement())
  name         String
  description  String
  companyId    Int    @map("company_id")
  defaultPrice Float  @map("default_price")
  isActive     Int    @map("is_active")

  @@index([companyId], name: "companyId")
  @@map("petty_cash_types")
}

model PgAppointmentStatus {
  id                   Int       @id @default(autoincrement())
  companyId            Int       @map("company_id")
  appointmentId        Int       @map("appointment_id")
  patientDetails       Int       @map("patient_details")
  medicalHistory       Int       @map("medical_history")
  patientConsent       Int       @map("patient_consent")
  photos               Int
  treatmentNotes       Int       @map("treatment_notes")
  contactId            Int       @map("contact_id")
  consent1             Int       @map("consent_1")
  consent2             Int       @map("consent_2")
  consent3             Int       @map("consent_3")
  aftercareSent        Int       @map("aftercare_sent")
  aftercareTemplateIds String    @map("aftercare_template_ids")
  createdAt            DateTime? @map("created_at")

  @@index([appointmentId], name: "appointmentId")
  @@index([companyId], name: "companyId")
  @@map("pg_appointment_status")
}

model PhiAssesmentEntries {
  id           Int      @id @default(autoincrement())
  customerId   Int      @map("customer_id")
  gender       String
  interestArea String   @map("interest_area")
  interests    String
  dateTaken    DateTime @default(now()) @map("date_taken")

  @@map("phi_assesment_entries")
}

model PhotoAlbum {
  id           Int      @id @default(autoincrement())
  albumName    String   @map("album_name")
  contactId    Int      @map("contact_id")
  occupier     Int
  creationDate DateTime @map("creation_date")
  modifiedDate DateTime @map("modified_date")

  @@map("photo_album")
}

model phpbirthday {
  Name          String?
  Address       String?
  City          String?
  entrydate     String?
  Postal        String?
  Country       String?
  BDate         String? @map("B_Date")
  IPAddress     String? @map("IP_Address")
  ID            Int     @id @default(autoincrement())
  HPhone        String? @map("H_Phone")
  MPhone        String? @map("M_Phone")
  Email         String?
  University    String?
  Group         String?
  Occupier      String?
  fbId          String? @map("fb_id")
  Gender        String?
  visible       Int
  bdayEmail     Boolean @default(false) @map("bday_email")
  bdaySms       Boolean @default(false) @map("bday_sms")
  bdayLetter    Int     @map("bday_letter")
  bdayEmailDate String  @map("bdayEmail_date")

  @@index([Name], name: "Name")
  @@index([Occupier], name: "occupier")
}

model pipeline {
  id             Int     @id @default(autoincrement())
  companyId      Int     @map("company_id")
  name           String
  description    String
  status         Int     @default(0)
  servicesIds    String  @map("services_ids")
  note           String
  restrictStages Boolean @default(false) @map("restrict_stages")
}

model PipelineStages {
  id             Int      @id @default(autoincrement())
  companyId      Int      @map("company_id")
  pipelineId     Int      @map("pipeline_id")
  name           String
  stageOrder     Int      @default(0) @map("stage_order")
  customFieldIds String   @map("custom_field_ids")
  note           String
  createdDate    DateTime @default(now()) @map("created_date")
  updatedDate    DateTime @default(now()) @map("updated_date")

  @@map("pipeline_stages")
}

model PipelineStageCustomFields {
  id               Int      @id @default(autoincrement())
  companyId        Int      @map("company_id")
  opportunityId    Int      @map("opportunity_id")
  stageId          Int      @map("stage_id")
  customFieldId    Int      @map("custom_field_id")
  customFieldValue String   @map("custom_field_value")
  updatedDate      DateTime @default(now()) @map("updated_date")

  @@map("pipeline_stage_custom_fields")
}

model Pos2Queries {
  id            Int    @id @default(autoincrement())
  transactionId Int    @map("transaction_id")
  query         String

  @@map("pos2_queries")
}

model Pos2Transactions {
  id         Int      @id @default(autoincrement())
  guid       String   @unique
  billDate   DateTime @map("bill_date")
  phpDate    DateTime @map("php_date")
  uid        Int
  company    Int
  bill       String
  result     Boolean?
  resultText String?  @map("result_text")
  hold       Int
  bookingId  Int      @map("booking_id")
  receipt    String?

  @@index([billDate], name: "billDate")
  @@index([bookingId], name: "bookingId")
  @@index([company], name: "company")
  @@index([guid], name: "guid")
  @@index([uid], name: "uid")
  @@map("pos2_transactions")
}

model PosLogGuid {
  id      Int     @id @default(autoincrement())
  guid    String?
  company Int?

  @@map("pos_log_guid")
}

model PosSettings {
  posId                   Int    @id @default(autoincrement()) @map("pos_id")
  catLimit                Int    @map("cat_limit")
  proLimit                Int    @map("pro_limit")
  defaultCategory         Int    @map("default_category")
  defaultCustomer         Int    @map("default_customer")
  defaultBiller           Int    @map("default_biller")
  displayTime             String @default("yes") @map("display_time")
  displayAvatar           Int?   @default(0) @map("display_avatar")
  displayAccount          Int?   @default(0) @map("display_account")
  servicesFilter          Int?   @default(0) @map("services_filter")
  retailFilter            Int?   @default(0) @map("retail_filter")
  salesbtnLeftDisabled    Int?   @default(0) @map("salesbtn_left_disabled")
  cancelbtnBottomDisabled Int?   @default(0) @map("cancelbtn_bottom_disabled")
  occupier                Int?
  cashupSettings          Int    @map("cashup_settings")

  @@map("pos_settings")
}

model PractChargeAmount {
  id                Int    @id @default(autoincrement())
  userId            Int    @default(0) @map("user_id")
  companyId         Int    @map("company_id")
  commissionSheetId Int    @default(0) @map("commission_sheet_id")
  productId         Int    @map("product_id")
  chargeAmount      Int    @map("charge_amount")
  facilityFee       Float? @default(0.00) @map("facility_fee")
  facilityFee2      Float? @default(0.00) @map("facilityFee2")
  deductConsumables Int?   @default(0) @map("deduct_consumables")
  payoutEmployee    Float? @default(0.00) @map("payout_employee")
  payoutBusiness    Float  @default(0.00) @map("payout_business")
  cDeductions       Float  @default(0.00) @map("c_deductions")

  @@map("pract_chargeAmount")
}

model PreviewLetterTemplate {
  id             Int    @id @default(autoincrement())
  occupier       String
  subject        String
  message        String
  header         String
  footer         String
  templateId     Int    @map("template_id")
  excludeMargins Int    @map("exclude_margins")

  @@map("preview_letter_template")
}

model PriceLevelSettings {
  id           Int       @id @default(autoincrement())
  dayName      String?   @map("day_name")
  dayStartTime String?   @map("day_start_time")
  dayEndTime   String?   @map("day_end_time")
  discountType String?   @map("discount_type")
  discount     Float?
  discountMode String?   @map("discount_mode")
  occupier     Int?
  uid          Int?
  createdDate  DateTime? @map("created_date")
  updatedDate  DateTime? @map("updated_date")

  @@map("price_level_settings")
}

model ProductDetails {
  id         Int    @id @default(autoincrement())
  name       String
  code       String
  otherName1 String @map("otherName_1")
  otherName  String @map("other_name")
  image      String

  @@map("product_details")
}

model ProfitLossReportTemp {
  id                 Int    @id @default(autoincrement())
  weekdate           Int
  companyId          Int    @map("company_id")
  uid                Int
  staffId            Int
  employee           String
  SundayCostNet      Float  @default(0.00) @map("Sunday_Cost_Net")
  SundayCostGross    Float  @default(0.00) @map("Sunday_Cost_Gross")
  SundayHours        Float  @default(0.00) @map("Sunday_hours")
  MondayCostNet      Float  @default(0.00) @map("Monday_Cost_Net")
  MondayCostGross    Float  @default(0.00) @map("Monday_Cost_Gross")
  MondayHours        Float  @default(0.00) @map("Monday_hours")
  TuesdayCostNet     Float  @default(0.00) @map("Tuesday_Cost_Net")
  TuesdayCostGross   Float  @default(0.00) @map("Tuesday_Cost_Gross")
  TuesdayHours       Float  @default(0.00) @map("Tuesday_hours")
  WednesdayCostNet   Float  @default(0.00) @map("Wednesday_Cost_Net")
  WednesdayCostGross Float  @default(0.00) @map("Wednesday_Cost_Gross")
  WednesdayHours     Float  @default(0.00) @map("Wednesday_hours")
  ThursdayCostNet    Float  @default(0.00) @map("Thursday_Cost_Net")
  ThursdayCostGross  Float  @default(0.00) @map("Thursday_Cost_Gross")
  ThursdayHours      Float  @default(0.00) @map("Thursday_hours")
  FridayCostNet      Float  @default(0.00) @map("Friday_Cost_Net")
  FridayCostGross    Float  @default(0.00) @map("Friday_Cost_Gross")
  FridayHours        Float  @default(0.00) @map("Friday_hours")
  SaturdayCostNet    Float  @default(0.00) @map("Saturday_Cost_Net")
  SaturdayCostGross  Float  @default(0.00) @map("Saturday_Cost_Gross")
  SaturdayHours      Float  @default(0.00) @map("Saturday_hours")
  TotalWeekCostNet   Float  @default(0.00) @map("Total_Week_Cost_Net")
  TotalWeekCostGross Float  @default(0.00) @map("Total_Week_Cost_Gross")
  TotalWeekHours     Float  @default(0.00) @map("Total_Week_hours")
  xp                 Float  @default(0.00)
  wages              Float  @default(0.00)
  FC                 Float  @default(0.00)
  TotalWorkingCount  Int    @default(0) @map("Total_Working_Count")
  botw               Int    @default(0)
  botwLevel          Int    @default(0) @map("botw_level")

  @@map("profit_loss_report_temp")
}

model PsfsFollowupEmailTrigger {
  id        Int       @id @default(autoincrement())
  initialId Int?      @map("initial_id")
  dateTime  DateTime? @map("date_time")
  type      Int?      @default(1)
  emailType String    @default("follow up") @map("email_type")

  @@map("psfs_followup_email_trigger")
}

model PsfsInitialEmailTrigger {
  id            Int       @id @default(autoincrement())
  companyId     Int?      @map("company_id")
  bookingId     Int?      @map("booking_id")
  contactId     Int?      @map("contact_id")
  cycleId       Int       @default(0) @map("cycle_id")
  formId        Int       @default(0) @map("form_id")
  dateTime      DateTime? @map("date_time")
  discharge     Int?      @default(0)
  dischargeDate DateTime? @map("discharge_date")

  @@map("psfs_initial_email_trigger")
}

model PsfsSettings {
  id                     Int       @id @default(autoincrement())
  companyId              Int       @map("company_id")
  psfsInitialTemplateId  Int       @default(0) @map("psfs_initial_template_id")
  psfsFollowupTemplateId Int       @default(0) @map("psfs_followup_template_id")
  psfsInitialEnable      Int       @default(0) @map("psfs_initial_enable")
  psfsFollowupEnable     Int       @default(0) @map("psfs_followup_enable")
  psfsFormId             Int       @default(0) @map("psfs_form_id")
  modifiedBy             Int?      @map("modified_by")
  modifiedDate           DateTime? @map("modified_date")

  @@map("psfs_settings")
}

model purchase {
  pId          Int    @id @default(autoincrement()) @map("p_id")
  customerId   String @map("customer_id")
  items        Int
  price        Float
  date         String
  customerName String @map("customer_name")
  currency     String
  compId       Int    @map("compId")
}

model QuickTools {
  id          Int    @id @default(autoincrement())
  parentid    Int
  secondaryid Int
  title       String
  ordering    Int
  link        String

  @@index([parentid], name: "parentid")
  @@index([secondaryid], name: "secondaryid")
  @@map("quick_tools")
}

model QuotationUsers {
  id                    Int     @id @default(autoincrement())
  firstName             String  @map("first_name")
  lastName              String  @map("last_name")
  email                 String
  phone                 String
  companyName           String  @map("company_name")
  country               String
  subscriptionPlanName  String? @map("subscription_plan_name")
  subscriptionPlanPrice Float?  @map("subscription_plan_price")
  supportPlanName       String? @map("support_plan_name")
  supportPrice          Float?  @map("support_price")
  educationPlanName     String? @map("education_plan_name")
  educationPlanPrice    Float?  @map("education_plan_price")
  migrationPlanName     String? @map("migration_plan_name")
  migrationPlanPrice    Float?  @map("migration_plan_price")
  upfrontPayment        Float?  @map("upfront_payment")
  subDiscount           Int?    @map("sub_discount")
  supDiscount           Int?    @map("sup_discount")
  eduDiscount           Int?    @map("edu_discount")
  setDiscount           Int?    @map("set_discount")
  previousSystem        String? @map("previous_system")

  @@map("quotation_users")
}

model RadioTracks {
  id        Int     @id @default(autoincrement())
  company   Int
  filename  String
  title     String
  isSpotify Boolean @map("is_spotify")

  @@index([company], name: "company")
  @@map("radio_tracks")
}

model RateLimiter {
  ip         String   @id
  count      Int
  lastAccess DateTime @default(now()) @map("last_access")

  @@map("rate_limiter")
}

model RecallSchedule {
  id            Int      @id @default(autoincrement())
  companyId     Int      @map("company_id")
  recallId      Int      @map("recall_id")
  contactId     Int      @map("contact_id")
  date          Int
  scheduledDate DateTime @map("scheduled_date")
  notes         String
  smsSent       Int      @map("sms_sent")
  recalledBy    Int      @map("recalled_by")
  recalledOn    Int      @map("recalled_on")
  emailSent     Int      @map("email_sent")
  deleted       Int
  bookingId     Int      @map("booking_id")
  createdDate   DateTime @default(now()) @map("created_date")
  updatedDate   DateTime @default(now()) @map("updated_date")
  errorCode     Int?     @map("error_code")

  @@index([bookingId], name: "bookingId")
  @@index([companyId], name: "companyId")
  @@index([contactId], name: "contactId")
  @@index([date], name: "date")
  @@index([recallId], name: "recallId")
  @@index([recalledBy], name: "recalledBy")
  @@index([scheduledDate], name: "scheduledDate")
  @@map("recall_schedule")
}

model RecallSettings {
  id             Int @id @default(autoincrement())
  companyId      Int @map("company_id")
  status         Int
  mandatory      Int
  onlyWorkingDay Int @map("only_working_day")

  @@map("recall_settings")
}

model RecallTypes {
  id                    Int     @id @default(autoincrement())
  recallName            String  @map("recall_name")
  recallMode            String  @map("recall_mode")
  recallPeriod          String  @map("recall_period")
  companyId             Int     @map("company_id")
  sendSms               Int     @map("send_sms")
  recallCategoryId      Int     @map("recall_category_id")
  sendEmail             Int     @map("send_email")
  autoRecall            Boolean @default(false) @map("auto_recall")
  autoRecallProductsIds String  @map("autoRecall_products_ids")
  autoRecallTrigger     String  @map("autoRecall_trigger")
  autoRecallServicesIds String  @map("autoRecall_services_ids")
  emailFrom             Int     @default(0) @map("email_from")
  smsFrom               Int     @default(0) @map("sms_from")

  @@index([emailFrom, smsFrom], name: "emailFrom")
  @@index([recallCategoryId], name: "recallCategoryId")
  @@map("recall_types")
}

model RecentSearches {
  id        Int @id @default(autoincrement())
  contactId Int @map("contact_id")
  companyId Int @map("company_id")

  @@map("recent_searches")
}

model ReferralSettings {
  id                 Int                              @id @default(autoincrement())
  companyId          Int                              @map("company_id")
  thanksMsgId        Int                              @map("thanks_msg_id")
  autoReward         Int                              @map("auto_reward")
  rewardValue        Float                            @map("reward_value")
  voucherExpiryDays  Int                              @map("voucher_expiry_days")
  rewardType         String                           @map("reward_type")
  rewardOptions      referral_settings_reward_options @default(both) @map("reward_options")
  smsNotify          Int                              @map("sms_notify")
  emailNotify        Int                              @map("email_notify")
  connectWording     String                           @map("connect_wording")
  blindRefEmail      String                           @map("blind_ref_email")
  postBuzzfeed       Int                              @default(1) @map("post_buzzfeed")
  rewardRefeeValue   Float                            @map("reward_refee_value")
  rewardClient       Int                              @map("reward_client")
  rewardReferer      Int                              @map("reward_referer")
  thanksMsgIdReferee Int                              @map("thanksMsgId_referee")
  emailIdReferrer    Int                              @map("email_id_referrer")
  emailIdReferee     Int                              @map("email_id_referee")
  enableSmsReferee   Int                              @map("enable_sms_referee")
  enableEmailReferee Int                              @map("enable_email_referee")
  voucherTemplateId  Int                              @map("voucher_template_id")

  @@index([companyId], name: "companyId")
  @@map("referral_settings")
}

model RelatedServices {
  id        Int    @id @default(autoincrement())
  serviceId Int    @map("service_id")
  service   String
  duration  Int
  occupier  String

  @@index([serviceId], name: "serviceId")
  @@map("related_services")
}

model ReminderContactLog {
  id        Int      @id @default(autoincrement())
  occupier  String
  contactId Int      @map("contact_id")
  date      DateTime

  @@map("reminder_contact_log")
}

model reports {
  id                    Int     @id @default(autoincrement())
  reportCategoryId      Int     @map("report_category_id")
  name                  String?
  description           String?
  occupier              String?
  groupField            String? @map("group_field")
  link                  String?
  send                  Int?    @default(0)
  dateLimit             String  @map("date_limit")
  filter                String?
  searchResult          String  @map("search_result")
  columnNames           String  @map("column_names")
  previewImage          String  @map("preview_image")
  excVatColumn          String  @map("exc_vat_column")
  filterJson            String  @map("filter_json")
  grandTotal            Int     @map("grand_total")
  reportCode            String  @map("report_code")
  showHideColumns       String  @map("show_hideColumns")
  usersMode             Int     @default(0) @map("users_mode")
  filterUser            String? @map("filter_user")
  iframe                Int     @default(0)
  iframeUrl             String  @map("iframe_url")
  packageUsage          Int     @map("package_usage")
  showPackageUsage      Int     @map("show_packageUsage")
  deleted               Int
  marketing             Int
  hasSummary            Int     @map("has_summary")
  filterSummary         Int?    @map("filter_summary")
  adminOnly             Int     @map("admin_only")
  thumbnailPreview      String  @map("thumbnail_preview")
  totalRevenue          Int     @map("total_revenue")
  showCustomIds         Int     @map("show_custom_ids")
  showCustomFields      Int     @map("show_custom_fields")
  customFieldsDefined   String  @map("custom_fields_defined")
  showInLeads           Int     @map("show_in_leads")
  otherCustomFields     String  @map("other_custom_fields")
  customFieldsGroup     String  @map("custom_fields_group")
  customFilter          String  @map("custom_filter")
  subCategory           String  @map("sub_category")
  easyFilters           String  @map("easy_filters")
  easyFiltersAdvanced   String  @map("easyFilters_advanced")
  showAccounting        Int     @map("show_accounting")
  showRevenue           Int     @map("show_revenue")
  supportLocationFilter Int     @map("support_location_filter")
  checksComplete        Int     @map("checks_complete")
  customIdsChecked      Int     @map("custom_ids_checked")
  flagVideo             String  @map("flag_video")
  flagVideo2            String  @map("flagVideo_2")
  checksComplete2       Int     @map("checksComplete_2")
  companiesIncluded     String  @map("companies_included")
  checksComplete3       Int     @map("checksComplete_3")
  flagVideo3            String  @map("flagVideo_3")
  checksComplete4       Int     @map("checksComplete_4")
  flagVideo4            String  @map("flagVideo_4")
  subscribedFilter      String? @map("subscribed_filter")
  printPageSize         String  @default("portrait") @map("print_page_size")
  sortColumns           String  @map("sort_columns")
  groupColumn           String  @map("group_column")
  maskClientName        Int     @map("mask_client_name")
  coreReport            Int     @map("core_report")
  hideColumns           String  @map("hide_columns")
  summaryMode           Int     @map("summary_mode")
  graphMode             Int     @map("graph_mode")
  detailedMode          Int     @map("detailed_mode")

  @@index([occupier], name: "occupier")
  @@index([reportCategoryId], name: "reportCategoryId")
}

model ReportscheduleLog {
  id        Int      @id @default(autoincrement())
  settingId Int      @map("setting_id")
  UID       Int
  reports   String
  datetime  DateTime
  occupier  String
  message   String
  isTest    Int      @map("is_test")

  @@map("reportschedule_log")
}

model ReportscheduleSettings {
  id              Int      @id @default(autoincrement())
  companyId       Int      @map("company_id")
  enabled         Int
  frequency       String
  customDay       String   @map("custom_day")
  customMode      String   @map("custom_mode")
  lastCurrentFrom String   @map("last_current_from")
  lastCurrentTo   String   @map("last_current_to")
  periodFrom      String   @map("period_from")
  periodTo        String   @map("period_to")
  reports         String
  includedUsers   String   @map("included_users")
  LastSent        DateTime
  endWeek         Int      @map("end_week")
  time            String
  reportSubject   String   @map("report_subject")
  salesSummary    Int      @map("sales_summary")

  @@map("reportschedule_settings")
}

model ReportsFavourite {
  id       Int    @id @default(autoincrement())
  occupier String
  reportId Int    @map("report_id")
  stars    Int

  @@map("reports_favourite")
}

model ReportCategory {
  id          Int     @id @default(autoincrement())
  name        String?
  description String?
  occupier    String?
  type        String
  colour      String

  @@map("report_category")
}

model ReportCustomFields {
  id          Int    @id @default(autoincrement())
  fieldId     String @map("field_id")
  fieldName   String @map("field_name")
  fieldType   String @map("field_type")
  isActive    Int    @default(1) @map("is_active")
  groupName   String @map("group_name")
  categoryId  Int    @map("category_id")
  orderNumber Int    @map("order_number")
  description String

  @@map("report_custom_fields")
}

model ReportCustomFieldsCategories {
  id          Int    @id @default(autoincrement())
  name        String
  description String
  isActive    Int?   @default(1) @map("is_active")

  @@map("report_custom_fields_categories")
}

model ReportCustomFieldsCombine {
  id       Int    @id @default(autoincrement())
  name     String
  field1   String @map("field_1")
  operator String
  field2   String @map("field_2")
  active   Int    @default(1)
  occupier Int

  @@map("report_custom_fields_combine")
}

model ReportFilters {
  id               Int    @id @default(autoincrement())
  columnNames      String @map("column_names")
  filterType       String @map("filter_type")
  filterSelectType String @map("filter_select_type")

  @@map("report_filters")
}

model ReportPdf {
  id       Int      @id @default(autoincrement())
  uid      Int
  occupier String
  content  String
  datetime DateTime
  uniqueId Int      @map("unique_id")
  guid     String

  @@index([guid], name: "guid")
  @@map("report_pdf")
}

model ReportPdfMessages {
  id          Int    @id @default(autoincrement())
  reportPdfId Int    @map("report_pdf_id")
  email       String
  subject     String
  body        String
  occupier    String
  userId      Int    @map("user_id")

  @@map("report_pdf_messages")
}

model ReportScheduledCsv {
  id          Int      @id @default(autoincrement())
  occupier    Int
  userId      Int      @map("user_id")
  uniqueKey   String   @map("unique_key")
  getData     String   @map("get_data")
  postData    String   @map("post_data")
  scheduled   Int
  dateCreated DateTime @map("date_created")
  urlLink     String   @map("url_link")
  fileLink    String   @map("file_link")

  @@map("report_scheduled_csv")
}

model RequestPermission {
  id           Int      @id @default(autoincrement())
  companyId    Int      @map("company_id")
  uid          Int
  type         String
  name         String
  targetId     Int      @map("target_id")
  approved     Int
  approvedById Int      @map("approved_by_id")
  approvedOn   DateTime @map("approved_on")
  requestedOn  DateTime @default(now()) @map("requested_on")

  @@map("request_permission")
}

model RestBookings {
  id         Int      @id @default(autoincrement())
  tableId    Int?     @map("table_id")
  title      String
  startDate  DateTime @map("start_date")
  endDate    DateTime @map("end_date")
  UID        Int
  contactId  Int      @map("contact_id")
  guestCount Int      @map("guest_count")
  occupier   String
  createDate DateTime @map("create_date")
  status     String
  Online     Int
  invoiceId  Int      @map("invoice_id")

  @@map("rest_bookings")
}

model RestCategories {
  ID          Int     @id @default(autoincrement())
  Name        String
  Description String?
  Occupier    String

  @@map("rest_categories")
}

model RestTables {
  ID             Int     @id @default(autoincrement())
  restCategoryId Int     @map("rest_category_id")
  Name           String
  Description    String?
  Size           Int
  Covers         Int
  Occupier       String

  @@map("rest_tables")
}

model RoomMaster {
  rId     Int     @id @default(autoincrement()) @map("r_id")
  rCompId Int?    @map("r_comp_id")
  rLocId  Int?    @map("r_loc_id")
  rRoom   String? @map("r_room")
  rDate   String? @map("r_date")

  @@map("room_master")
}

model RotaRepeats {
  id          Int     @id @default(autoincrement())
  uid         Int
  shiftStart  Int     @map("shift_start")
  shiftEnd    Int     @map("shift_end")
  repeatStart Int     @map("repeat_start")
  repeatEnd   Int     @map("repeat_end")
  daySun      Boolean @map("day_sun")
  dayMon      Boolean @map("day_mon")
  dayTue      Boolean @map("day_tue")
  dayWed      Boolean @map("day_wed")
  dayThu      Boolean @map("day_thu")
  dayFri      Boolean @map("day_fri")
  daySat      Boolean @map("day_sat")
  every       Int
  unit        String

  @@index([uid], name: "uid")
  @@map("rota_repeats")
}

model RotaShifts {
  id            Int       @id @default(autoincrement())
  uid           Int
  start         Int
  end           Int
  occupier      Int
  notes         String?
  lastSeen      DateTime? @map("last_seen")
  lastModified  DateTime? @map("last_modified")
  lastNotified  DateTime? @map("last_notified")
  lastPublished DateTime? @map("last_published")
  firstCreated  DateTime  @default(now()) @map("first_created")
  userCreated   Int       @map("user_created")
  repeatId      Int?      @map("repeat_id")
  reasonCode    String?   @default("") @map("reason_code")
  reasonData    String?   @map("reason_data")
  holidayId     Int       @default(0) @map("holiday_id")
  calId         Int?      @map("cal_id")
  isCal         Int       @default(0) @map("is_cal")
  noteColor     String    @default("") @map("note_color")
  locationId    Int       @default(0) @map("location_id")
  request       Int?      @default(0)
  sickness      Int?      @default(0)
  imported      Int       @default(0)
  tagName       String    @default("") @map("tag_name")
  roomId        Int       @default(0) @map("room_id")
  forceCreated  Boolean   @default(false) @map("force_created")

  @@index([end], name: "end")
  @@index([holidayId], name: "holidayId")
  @@index([lastPublished], name: "lastPublished")
  @@index([locationId], name: "locationId")
  @@index([occupier], name: "occupier")
  @@index([reasonCode], name: "reasonCode")
  @@index([repeatId], name: "repeatId")
  @@index([start], name: "start")
  @@index([uid], name: "uid")
  @@map("rota_shifts")
}

model RotaTemplates {
  rotaTemplateId Int    @id @default(autoincrement()) @map("rota_template_id")
  isActive       Int    @map("is_active")
  templateName   String @map("template_name")
  startTime      String @map("start_time")
  endTime        String @map("end_time")
  days           String
  companyId      Int    @map("company_id")

  @@map("rota_templates")
}

model sales {
  id               Int      @id @default(autoincrement())
  seller           Int
  date             DateTime
  ticketsDispensed Int      @map("tickets_dispensed")
  ticketsReturned  Int      @map("tickets_returned")
  paidBy           String?  @map("paid_by")
}

model SalesMeta {
  id        Int     @id @default(autoincrement())
  salesId   Int     @map("sales_id")
  metaKey   String  @map("meta_key")
  metaValue String? @map("meta_value")

  @@index([salesId], name: "salesId")
  @@map("sales_meta")
}

model SalesPitches {
  id               Int      @id @default(autoincrement())
  pitchName        String   @map("pitch_name")
  pitchDescription String   @map("pitch_description")
  pitchType        String   @map("pitch_type")
  companyId        Int      @map("company_id")
  createdTime      DateTime @map("created_time")

  @@map("sales_pitches")
}

model SalonBookings {
  id                         Int     @id @default(autoincrement())
  title                      String
  startDate                  Int?    @map("start_date")
  endDate                    Int?    @map("end_date")
  startTime                  Int?    @map("start_time")
  endTime                    Int?    @map("end_time")
  service                    String?
  contactId                  Int?    @map("contact_id")
  UID                        Int
  occupier                   Int
  backgroudcolor             String?
  createDate                 Int?    @map("create_date")
  updateDate                 Int?    @map("update_date")
  status                     String
  estimatedCost              Float   @map("estimated_cost")
  tips                       Float
  discounts                  Float
  where                      String
  roomId                     Int?    @map("room_id")
  uniqueId                   String  @map("unique_id")
  reason                     String?
  invoiceId                  Int?    @map("invoice_id")
  bookingId                  Int     @map("booking_id")
  Online                     Int?    @default(0)
  packageId                  Int     @map("package_id")
  cancelTake                 Int     @map("cancel_take")
  bookTake                   Int     @map("book_take")
  classMasterId              Int     @map("class_master_id")
  unavailable                Int
  couponClaimId              String  @map("coupon_claim_id")
  relatedId                  Int     @map("related_id")
  serviceId                  Int     @map("service_id")
  rebook                     Int
  repeatId                   Int     @map("repeat_id")
  requested                  Int
  sentSms                    Int     @map("sent_sms")
  sentEmail                  Int     @map("sent_email")
  sentSurvey                 Int     @map("sent_survey")
  customContactId            Int     @map("custom_contactId")
  customContactName          String? @map("custom_contact_name")
  customUserId               String  @map("custom_user_id")
  customUserName             String? @map("custom_user_name")
  customServiceId            String  @map("custom_serviceId")
  imported                   Int
  clientConfirmed            Int     @map("client_confirmed")
  holdGuid                   String  @map("hold_guid")
  createdByUid               Int     @map("created_by_uid")
  marketingSource            Int     @map("marketing_source")
  resourceId                 Int     @map("resource_id")
  customRoomName             String? @map("custom_room_name")
  customCreatedByUserName    String  @map("custom_created_by_user_name")
  locationId                 Int     @map("location_id")
  modifiedByUid              Int     @map("modified_by_uid")
  sentEmailReminder          Boolean @default(false) @map("sentEmail_reminder")
  disableLocations           Int     @map("disable_locations")
  participantMasterUid       Int     @default(0) @map("participant_master_uid")
  participantMasterBookingId Int     @default(0) @map("participant_master_booking_id")
  participantSlaveUids       String  @map("participant_slave_uids")
  participantSlaveBookingIds String  @map("participant_slave_bookingIds")
  private                    Int     @default(0)
  externalGuestIds           String  @map("external_guest_ids")
  description                String
  issuedTo                   Int     @map("issued_to")
  contractId                 Int     @map("contract_id")
  allDay                     Int     @default(0) @map("all_day")
  interlinkedMasterUid       Int     @default(0) @map("interlinked_master_uid")
  allDayStartDate            Int     @default(0) @map("allDay_startDate")
  allDayEndDate              Int     @default(0) @map("allDay_endDate")

  @@index([UID], name: "UID")
  @@index([occupier, startDate], name: "company_time")
  @@index([contactId], name: "contactId")
  @@index([createDate], name: "createDate")
  @@index([customContactId], name: "custom_contact_id")
  @@index([endDate], name: "endDate")
  @@index([invoiceId], name: "invoiceId")
  @@index([locationId], name: "locationId")
  @@index([occupier], name: "occupier")
  @@index([occupier, uniqueId], name: "occupier_uniqueid")
  @@index([participantMasterBookingId], name: "participantMasterBookingId")
  @@index([participantMasterUid], name: "participantMasterUid")
  @@index([relatedId], name: "relatedId")
  @@index([repeatId], name: "repeatId")
  @@index([resourceId], name: "resourceId")
  @@index([roomId], name: "roomId")
  @@index([service], name: "service")
  @@index([serviceId], name: "serviceId")
  @@index([startDate], name: "startDate")
  @@index([status], name: "status")
  @@map("salon_bookings")
}

model SalonBookingsAptCancel {
  id              Int       @id @default(autoincrement())
  appointmentId   Int?      @map("appointment_id")
  type            String?
  reasonType      String?   @map("reason_type")
  reason          String?
  createdDate     DateTime? @map("created_date")
  lastUpdatedDate DateTime? @map("last_updated_date")
  cancelBy        Int       @map("cancel_by")
  cancelReasonId  Int       @map("cancel_reason_id")

  @@index([appointmentId], name: "appointmentId")
  @@map("salon_bookings_apt_cancel")
}

model SalonBookingsChangelog {
  id        Int    @id @default(autoincrement())
  bookingId Int    @unique @map("booking_id")
  changelog String

  @@map("salon_bookings_changelog")
}

model SalonBookingsClinicsSettings {
  id       Int @id @default(autoincrement())
  occupier Int
  uid      Int
  clinicId Int @map("clinic_id")

  @@index([occupier], name: "occupier")
  @@index([uid], name: "uid")
  @@map("salon_bookings_clinics_settings")
}

model SalonBookingsConfirmation {
  id               Int       @id @default(autoincrement())
  bookingId        Int       @map("booking_id")
  confirmationDate DateTime  @map("confirmation_date")
  isConfirmed      Int       @map("is_confirmed")
  contactId        Int       @map("contact_id")
  occupier         String
  updatedOn        DateTime? @map("updated_on")

  @@index([bookingId], name: "bookingId")
  @@map("salon_bookings_confirmation")
}

model SalonBookingsConfirmation2 {
  id               Int       @id @default(autoincrement())
  bookingId        Int       @map("booking_id")
  confirmationDate DateTime  @map("confirmation_date")
  isConfirmed      Int       @map("is_confirmed")
  contactId        Int       @map("contact_id")
  occupier         String
  updatedOn        DateTime? @map("updated_on")

  @@index([bookingId], name: "bookingId")
  @@index([contactId], name: "contactId")
  @@index([isConfirmed], name: "isConfirmed")
  @@index([occupier], name: "occupier")
  @@map("salon_bookings_confirmation2")
}

model SalonBookingsExternal {
  id        Int    @id @default(autoincrement())
  bookingId Int    @map("booking_id")
  location  String

  @@index([bookingId], name: "bookingId")
  @@map("salon_bookings_external")
}

model SalonBookingsGroups {
  id             Int      @id @default(autoincrement())
  bookingId      Int      @map("booking_id")
  occupier       Int
  maxClients     Int      @map("max_clients")
  createdDate    DateTime @map("created_date")
  modelsCount    Int      @map("models_count")
  modelsReqCount Int      @map("models_req_count")
  imported       Int
  delegates      Int

  @@index([bookingId], name: "bookingId")
  @@index([occupier], name: "occupier")
  @@map("salon_bookings_groups")
}

model SalonBookingsGroupsAlerts {
  ID          Int                                 @id @default(autoincrement())
  OwnerID     Int
  CourseID    Int
  Note        String
  Status      salon_bookings_groups_alerts_status @default(Enable)
  CreatedDate DateTime
  IpAddress   Int
  Critical    Int

  @@index([CourseID], name: "CourseID")
  @@map("salon_bookings_groups_alerts")
}

model SalonBookingsGroupsDetailed {
  id                 Int      @id @default(autoincrement())
  occupier           Int
  groupId            Int      @map("group_id")
  bookingId          Int      @map("booking_id")
  contactId          Int      @map("contact_id")
  createdDate        DateTime @map("created_date")
  customContactEmail String   @map("custom_contact_email")
  customContactName  String   @map("custom_contact_name")
  customContactId    Int      @map("custom_contact_id")
  imported           Int

  @@index([bookingId], name: "bookingId")
  @@index([groupId], name: "groupId")
  @@index([occupier], name: "occupier")
  @@map("salon_bookings_groups_detailed")
}

model SalonBookingsGroupsDetailedBackup {
  id                 Int      @id @default(autoincrement())
  occupier           Int
  groupId            Int      @map("group_id")
  bookingId          Int      @map("booking_id")
  contactId          Int      @map("contact_id")
  createdDate        DateTime @map("created_date")
  customContactEmail String   @map("custom_contact_email")
  customContactName  String   @map("custom_contact_name")
  customContactId    Int      @map("custom_contactId")
  imported           Int

  @@map("salon_bookings_groups_detailed_backup")
}

model SalonBookingsGroupsNotes {
  ID          Int                                @id @default(autoincrement())
  OwnerID     Int
  CourseID    Int
  Note        String
  Status      salon_bookings_groups_notes_status @default(Enable)
  CreatedDate DateTime
  IpAddress   Int

  @@index([CourseID], name: "CourseID")
  @@map("salon_bookings_groups_notes")
}

model SalonBookingsHistory {
  id              Int      @id @default(autoincrement())
  oldBookingId    Int      @map("old_booking_id")
  newBookingId    Int      @map("new_booking_id")
  beforeStartdate Int      @map("before_startdate")
  beforeEnddate   Int      @map("before_enddate")
  afterStartdate  Int      @map("after_startdate")
  afterEnddate    Int      @map("after_enddate")
  beforeStatus    String   @map("before_status")
  afterStatus     String   @map("after_status")
  beforeService   String   @map("before_service")
  afterService    String   @map("after_service")
  CreatedDate     DateTime
  UID             Int
  mode            String
  occupier        String

  @@index([mode], name: "mode")
  @@index([newBookingId], name: "newBookingId")
  @@index([occupier], name: "occupier")
  @@index([oldBookingId], name: "oldBookingId")
  @@map("salon_bookings_history")
}

model SalonBookingsHistoryTrigger {
  id                Int       @id @default(autoincrement())
  mode              String?
  bookingId         Int       @map("booking_id")
  title             String
  startDate         Int?      @map("start_date")
  endDate           Int?      @map("end_date")
  startTime         Int?      @map("start_time")
  endTime           Int?      @map("end_time")
  service           String?
  contactId         Int?      @map("contact_id")
  UID               Int
  occupier          Int
  backgroudcolor    String?
  createDate        Int?      @map("create_date")
  updateDate        Int?      @map("update_date")
  status            String
  estimatedCost     Float     @map("estimated_cost")
  tips              Float
  discounts         Float
  where             String
  roomId            Int?      @map("room_id")
  uniqueId          String    @map("unique_id")
  reason            String?
  invoiceId         Int?      @map("invoice_id")
  Online            Int?      @default(0)
  packageId         Int       @map("package_id")
  cancelTake        Int       @map("cancel_take")
  bookTake          Int       @map("book_take")
  classMasterId     Int       @map("class_master_id")
  unavailable       Int
  couponClaimId     String    @map("coupon_claim_id")
  relatedId         Int       @map("related_id")
  serviceId         Int       @map("service_id")
  rebook            Int
  repeatId          Int       @map("repeat_id")
  requested         Int
  sentSms           Int       @map("sent_sms")
  sentEmail         Int       @map("sent_email")
  sentSurvey        Int       @map("sent_survey")
  customContactId   Int       @map("custom_contactId")
  customContactName String?   @map("custom_contact_name")
  customUserId      Int       @map("custom_user_id")
  customUserName    String?   @map("custom_user_name")
  customServiceId   Int       @map("custom_serviceId")
  imported          Int
  clientConfirmed   Int       @map("client_confirmed")
  holdGuid          String    @map("hold_guid")
  createdByUid      Int       @map("created_by_uid")
  marketingSource   Int       @map("marketing_source")
  resourceId        Int       @map("resource_id")
  dateChanged       DateTime? @map("date_changed")
  locationId        Int       @map("location_id")
  modifiedByUid     Int       @map("modified_by_uid")

  @@index([UID], name: "UID")
  @@index([bookingId], name: "bookingId")
  @@index([occupier, startDate], name: "company_time")
  @@index([contactId], name: "contact_index")
  @@index([endDate], name: "endDate")
  @@index([occupier], name: "occupier")
  @@index([occupier, uniqueId], name: "occupier_uniqueid")
  @@index([relatedId], name: "relatedId")
  @@index([startDate], name: "startDate")
  @@map("salon_bookings_history_trigger")
}

model SalonBookingsImportHelper {
  id                      Int    @id @default(autoincrement())
  startDate               Int    @map("start_date")
  endDate                 Int    @map("end_date")
  service                 String
  customContactName       String @map("custom_contact_name")
  customUserName          String @map("custom_user_name")
  occupier                String
  imported                Int
  taken                   String
  customContactId         String @map("custom_contactId")
  customUserId            Int    @map("custom_user_id")
  createDate              String @map("create_date")
  customRoomName          String @map("custom_room_name")
  title                   String
  Atended                 String
  CancellationReq         String
  ReqReason               String
  DNA                     String
  customCreatedByUserName String @map("custom_created_by_user_name")
  statusName              String @map("status_name")
  color                   String
  updatedDate             String @map("updated_date")
  cancelDate              String @map("cancel_date")
  noshowDate              String @map("noshow_date")
  added                   Int
  customServiceId         Int    @map("custom_service_id")
  customId                Int    @map("custom_id")
  smsConfirmation         Int    @map("sms_confirmation")
  smsReminder             Int    @map("sms_reminder")
  customTypeName          String @map("custom_type_name")
  customDepositName       String @map("custom_deposit_name")
  customSubject           String @map("custom_subject")
  customBody              String @map("custom_body")
  customTitle             String @map("custom_title")
  customTitleFinal        String @map("customTitle_final")
  customTreatmentId       Int    @map("custom_treatment_id")
  contactId               Int    @map("contact_id")
  customTreatmentGroupId  Int    @map("custom_treatment_group_id")
  customTreatmentTypeId   Int    @map("custom_treatment_type_id")

  @@index([customContactId], name: "customContactId")
  @@index([customCreatedByUserName], name: "customCreatedByUserName")
  @@index([customId], name: "customId")
  @@index([customRoomName], name: "customRoomName")
  @@index([customTreatmentId], name: "customTreatmentId")
  @@index([customUserId], name: "customUserId")
  @@index([customUserName], name: "customUserName")
  @@index([startDate], name: "startDate")
  @@map("salon_bookings_import_helper")
}

model SalonBookingsInvitation {
  id        Int    @id @default(autoincrement())
  bookingId Int    @default(0) @map("booking_id")
  guestId   Int    @default(0) @map("guest_id")
  status    String

  @@map("salon_bookings_invitation")
}

model SalonBookingsPrepFinish {
  id         Int @id @default(autoincrement())
  occupier   Int
  bookingId  Int @map("booking_id")
  prepTime   Int @map("prep_time")
  finishTime Int @map("finish_time")

  @@index([bookingId], name: "bookingId")
  @@map("salon_bookings_prep_finish")
}

model SalonBookingsRepeats {
  id          Int      @id @default(autoincrement())
  uid         Int
  start       Int
  end         Int
  repeatStart Int      @map("repeat_start")
  repeatEnd   Int      @map("repeat_end")
  daySun      Boolean  @map("day_sun")
  dayMon      Boolean  @map("day_mon")
  dayTue      Boolean  @map("day_tue")
  dayWed      Boolean  @map("day_wed")
  dayThu      Boolean  @map("day_thu")
  dayFri      Boolean  @map("day_fri")
  daySat      Boolean  @map("day_sat")
  every       Int
  unit        String
  repeatUntil DateTime @map("repeat_until")

  @@index([uid], name: "uid")
  @@map("salon_bookings_repeats")
}

model SalonBookingsResources {
  id         Int @id @default(autoincrement())
  occupier   Int
  bookingId  Int @map("booking_id")
  resourceId Int @map("resource_id")

  @@index([bookingId], name: "bookingId")
  @@index([occupier], name: "occupier")
  @@index([resourceId], name: "resourceId")
  @@map("salon_bookings_resources")
}

model SalonBookingsSettings {
  id         Int     @id @default(autoincrement())
  userid     Int?
  name       String?
  value      String?
  createdate Int?
  updatedate Int?

  @@map("salon_bookings_settings")
}

model salutations {
  id        Int    @id @default(autoincrement())
  name      String
  companyId Int    @map("company_id")
}

model ScannerBatches {
  id           Int      @id @default(autoincrement())
  occupier     Int
  batchId      String   @map("batch_id")
  dateCreated  DateTime @map("date_created")
  categoryCard String   @map("category_card")

  @@map("scanner_batches")
}

model ScannerCards {
  id            Int      @id @default(autoincrement())
  occupier      Int
  cardNumber    Int      @map("card_number")
  dateCreated   DateTime @map("date_created")
  dateActivated DateTime @map("date_activated")
  cardPoints    Float    @map("card_points")
  batchId       String   @map("batch_id")
  validated     Int      @default(0)
  contactId     Int      @map("contact_id")
  categoryCard  String   @map("category_card")

  @@map("scanner_cards")
}

model ScannerHistory {
  transId   Int      @id @default(autoincrement()) @map("trans_id")
  date      DateTime
  memberId  Int      @map("member_id")
  type      String
  amount    Float
  contactId Int      @map("contact_id")
  salesId   Int?     @map("sales_id")

  @@map("scanner_history")
}

model ScannerSettings {
  occupier       Int
  defaultpoints  Int
  rule1          Int
  rule1occurance Int
  rule1campaign  String
  rule2          Int
  rule2occurance String
  rule2campaign  String
  id             Int    @id @default(autoincrement())

  @@map("scanner_settings")
}

model scheduler {
  id                Int    @id @default(autoincrement())
  status            String
  subject           String
  sentby            String
  source            String
  to                String
  companyid         Int
  emailBy           String @map("email_by")
  message           String
  date              Int
  communicationType String @map("communication_type")
  contactId         Int    @map("contact_id")
  siteSection       String @map("site_section")
  schDate           Int    @map("sch_date")
  schTime           Int    @map("sch_time")
  theStatus         String @map("the_status")
  templateId        Int    @map("template_id")
  relateId          Int    @map("relate_id")
  uniqueId          String @map("unique_id")
  imported          Int

  @@index([companyid], name: "companyid")
  @@index([date], name: "date")
  @@index([templateId], name: "templateid")
}

model SchedulerBackup {
  id                Int    @id
  status            String
  subject           String
  sentby            String
  source            String
  to                String
  companyid         Int
  emailBy           String @map("email_by")
  message           String
  date              Int
  communicationType String @map("communication_type")
  contactId         Int    @map("contact_id")
  siteSection       String @map("site_section")
  schDate           Int    @map("sch_date")
  schTime           Int    @map("sch_time")
  theStatus         String @map("the_status")
  templateId        Int    @map("template_id")
  relateId          Int    @map("relate_id")
  uniqueId          String @map("unique_id")
  imported          Int

  @@map("scheduler_backup")
}

model ScheduleInvoiceTemplate {
  id                  Int       @id @default(autoincrement())
  schInvTempDtlId     Int?      @map("sch_inv_temp_dtl_id")
  intervalType        Int?      @map("interval_type")
  day                 String?
  date                Int?
  month               Int?
  year                Int?
  time                Int
  duration            Int?
  occurance           Int?      @default(0)
  endAfterOccurrences Int?      @map("end_after_occurrences")
  endDate             DateTime? @map("end_date")
  occupier            Int?
  createdDate         DateTime? @map("created_date")
  modifiedDate        DateTime? @map("modified_date")

  @@map("schedule_invoice_template")
}

model ScheduleInvoiceTemplateDetails {
  id              Int       @id @default(autoincrement())
  templateName    String?   @map("template_name")
  templateType    Int?      @map("template_type")
  terms           Int?
  allAmountsAre   Int?      @map("all_amounts_are")
  isVat           Int?      @default(0) @map("is_vat")
  discount        Float?
  customerMessage String?   @map("customer_message")
  memo            String?
  toBeEmailed     Int?      @default(1) @map("to_be_emailed")
  occupier        Int?
  createdDate     DateTime? @map("created_date")
  modifiedDate    DateTime? @map("modified_date")

  @@map("schedule_invoice_template_details")
}

model ScheduleInvoiceTemplateProductDetails {
  id              Int     @id @default(autoincrement())
  schInvTempDtlId Int?    @map("sch_inv_temp_dtl_id")
  invoiceTo       Int?    @map("invoice_to")
  productId       Int?    @map("product_id")
  description     String?
  qty             Int?
  unitePrice      Float?  @map("unite_price")

  @@map("schedule_invoice_template_product_details")
}

model SelectedProfilesComposeMessage {
  id        Int      @id @default(autoincrement())
  main      String
  other     String
  uid       Int
  timestamp DateTime @default(now())

  @@map("selected_profiles_compose_message")
}

model seller {
  sellerid   Int      @id @default(autoincrement())
  start      DateTime
  name       String
  halls      String
  number     String
  fbid       String
  Block      String
  year       Int
  occupier   String
  university String
  visible    Int
  jobTitle   String   @map("job_title")
}

model SellerPay {
  id         Int   @id @default(autoincrement())
  visible    Int
  uid        Int
  amount     Float
  timestampe Int

  @@map("seller_pay")
}

model ServerUrls {
  id    Int    @id @default(autoincrement())
  name  String
  url   String
  order Int

  @@map("server_urls")
}

model ServicesMasterCategory {
  id       Int                           @id @default(autoincrement())
  name     String
  occupier Int
  ord      Int                           @default(0)
  type     services_master_category_type @default(SERVICE)
  image    String

  @@map("services_master_category")
}

model ServiceProductLoyalty {
  id        Int @id @default(autoincrement())
  companyId Int @map("company_id")
  productId Int @map("product_id")
  points    Int

  @@map("service_product_loyalty")
}

model ServiceReminders {
  id              Int @id @default(autoincrement())
  serviceId       Int @map("service_id")
  emailReminderId Int @map("email_reminder_id")
  smsReminderId   Int @map("sms_reminder_id")

  @@index([serviceId], name: "serviceId")
  @@map("service_reminders")
}

model SessionPackages {
  id                     Int      @id @default(autoincrement())
  name                   String
  description            String?
  sessionCount           String   @map("session_count")
  duration               String
  price                  Float
  activities             String
  occupier               String
  CreatedDate            DateTime
  imported               Int
  inactive               Boolean  @default(false)
  deleted                Int
  productId              Int      @default(0) @map("product_id")
  serviceProductId       Int      @map("service_product_id")
  hardDeleted            Int      @map("hard_deleted")
  sessionPackageMasterId Int      @map("session_package_master_id")
  taxId                  Int      @map("tax_id")
  customServiceName      String   @map("custom_service_name")
  customPriceItem        Float    @map("custom_price_item")
  emptyName              Int      @map("empty_name")
  oldPrice               Float    @map("old_price")
  oldDuration            String   @map("old_duration")
  disabledusers          String
  soldOnline             Int      @default(1) @map("sold_online")

  @@index([occupier], name: "company_id")
  @@index([serviceProductId], name: "service_product_id")
  @@index([sessionPackageMasterId], name: "sessionPackageMasterId")
  @@map("session_packages")
}

model SessionPackagesMaster {
  id          Int      @id @default(autoincrement())
  name        String
  occupier    Int
  createdDate DateTime @map("created_date")
  deleted     Int      @default(1)

  @@map("session_packages_master")
}

model ShareImage {
  id        Int      @id @default(autoincrement())
  photoUrl  String   @map("photo_url")
  passcode  String
  contactId Int      @map("contact_id")
  companyId Int      @map("company_id")
  shareDate DateTime @map("share_date")

  @@map("share_image")
}

model SiteWidgetSettings {
  id             Int @id @default(autoincrement())
  companyId      Int @map("company_id")
  classes        Int
  onlineStore    Int @map("online_store")
  appointments   Int
  loyalty        Int
  dashboard      Int
  takeaway       Int
  tablebooking   Int
  guestlist      Int
  opening        Int
  callus         Int
  website        Int
  location       Int
  yourCuts       Int @map("your_cuts")
  documents      Int
  refer          Int
  packageHistory Int @map("package_history")
  labHistory     Int @map("lab_history")

  @@map("site_widget_settings")
}

model SlowQueryRaw {
  queryId    Int      @id @default(autoincrement()) @map("query_id")
  sqlText    String   @map("sql_text")
  db         String
  serverHost String   @map("server_host")
  requestUri String   @map("request_uri")
  getData    String   @map("get_data")
  postData   String   @map("post_data")
  dateTime   DateTime @default(now()) @map("date_time")
  queryTime  String   @map("query_time")

  @@map("slow_query_raw")
}

model SmsBlacklist {
  smsId         Int    @id @default(autoincrement()) @map("sms_id")
  smsNumber     String @unique @map("sms_number")
  smsAction     String @map("sms_action")
  notifyCompany Int    @map("notify_company")

  @@map("sms_blacklist")
}

model SmsCampaign {
  smsId               Int      @id @default(autoincrement()) @map("sms_id")
  smsCampaignName     String   @default("Untitled Campaign") @map("sms_campaign_name")
  createDate          DateTime @map("create_date")
  fromName            String   @map("from_name")
  content             String
  company             Int
  listId              Int      @map("list_id")
  campaignType        String   @map("campaign_type")
  groupsRecipients    String   @map("groups_recipients")
  sentBy              Int      @map("sent_by")
  createdBy           Int      @map("created_by")
  groupsPrerecipients String   @map("groups_prerecipients")
  campaignStatus      String   @map("campaign_status")
  sendDate            DateTime @map("send_date")
  giftVoucher         String   @map("gift_voucher")
  giftExpiry          Int      @map("gift_expiry")
  totalRecips         Int      @map("total_recips")
  weblink             String
  campaignCost        Float    @map("campaign_cost")
  allProductsServices Int      @map("all_products_services")
  finishedDate        DateTime @map("finished_date")

  @@index([campaignStatus], name: "campaignStatus")
  @@index([company], name: "company")
  @@map("sms_campaign")
}

model SmsCampaignList {
  id                 Int    @id @default(autoincrement())
  smsCampaignId      Int    @map("sms_campaign_id")
  smsGroupId         Int    @map("sms_group_id")
  occupier           Int
  mobileNumber       String @map("mobile_number")
  contactId          Int    @map("contact_id")
  communicationLogId String @map("communication_log_id")

  @@index([communicationLogId], name: "communicationLogId")
  @@index([contactId], name: "contactId")
  @@map("sms_campaign_list")
}

model SmsCampaignProducts {
  id            Int    @id @default(autoincrement())
  smsCampaignId Int    @map("sms_campaign_id")
  productId     Int    @map("product_id")
  relatedType   String @map("related_type")
  occupier      String

  @@index([smsCampaignId], name: "smsCampaignId")
  @@map("sms_campaign_products")
}

model SmsDelivery {
  smsdId       Int    @id @default(autoincrement()) @map("smsd_id")
  smsdNumber   String @map("smsd_number")
  contactId    Int    @map("contact_id")
  smsdStatus   String @map("smsd_status")
  smsdCid      String @map("smsd_cid")
  smsdCustomID String @map("smsd_customID")
  errorCode    Int    @map("error_code")

  @@index([smsdCid], name: "smsdCid")
  @@map("sms_delivery")
}

model SmsGroups {
  smsId     Int     @id @default(autoincrement()) @map("sms_id")
  smsUid    Int     @map("sms_uid")
  smsGroup  String  @map("sms_group")
  smsNumber String  @map("sms_number")
  smsBlank  Int     @map("sms_blank")
  smsDup    Int     @map("sms_dup")
  smsDelete Boolean @default(false) @map("sms_delete")

  @@index([smsUid], name: "smsUid")
  @@map("smsGroups")
}

model SmsGroupsList {
  id           Int    @id @default(autoincrement())
  smsGroupId   Int    @map("sms_group_id")
  occupier     Int
  mobileNumber String @map("mobile_number")
  contactId    Int    @map("contact_id")

  @@unique([smsGroupId, mobileNumber, occupier], name: "smsGroupId_2")
  @@index([contactId], name: "contactId")
  @@index([mobileNumber], name: "mobileNumber")
  @@index([occupier], name: "occupier")
  @@index([smsGroupId], name: "smsGroupId")
  @@map("sms_groups_list")
}

model SmsGroupLog {
  smsgId      Int @id @default(autoincrement()) @map("smsg_id")
  smsgStatsid Int @map("smsg_statsid")
  smsgGroupid Int @map("smsg_groupid")

  @@map("sms_group_log")
}

model SmsInbox {
  id        Int    @id @default(autoincrement())
  companyId Int    @map("company_id")
  number    String
  content   String
  action    String

  @@map("sms_inbox")
}

model SmsPurchases {
  id           Int    @id @default(autoincrement())
  date         Int
  smsAmount    Int    @map("sms_amount")
  cid          Int
  user         Int
  price        Float
  profit       Float
  purchaseType String @map("purchase_type")
  status       Int

  @@map("sms_purchases")
}

model SmsSenders {
  smsdId     Int     @id @default(autoincrement()) @map("smsd_id")
  smsdName   String  @map("smsd_name")
  smsdCid    Int     @map("smsd_cid")
  smsdDelete Int     @default(0) @map("smsd_delete")
  isDefault  Boolean @default(false) @map("is_default")
  mergeTags  String  @map("merge_tags")

  @@index([smsdCid], name: "smsdCid")
  @@index([smsdDelete], name: "smsdDelete")
  @@map("sms_senders")
}

model SmsStats {
  smssId    Int    @id @default(autoincrement()) @map("smss_id")
  smssUid   Int    @map("smss_uid")
  smssCamp  String @map("smss_camp")
  smssTime  String @map("smss_time")
  smssCount Int    @map("smss_count")

  @@map("sms_stats")
}

model SmsTempTable {
  id        Int    @id @default(autoincrement())
  mobile    String
  companyId Int    @map("company_id")
  sentSms   Int    @map("sent_sms")
  status    Int

  @@map("sms_temp_table")
}

model SmsTest {
  id       Int    @id @default(autoincrement())
  response String

  @@map("sms_test")
}

model SocialSurvey {
  id                   Int     @id @default(autoincrement())
  pageId               Int     @map("page_id")
  company              Int     @unique
  twitterId            Int     @map("twitter_id")
  disableEmail         Int     @map("disable_email")
  disableSms           Int     @map("disable_sms")
  smsMessageId         Int     @map("sms_message_id")
  fromName             String  @map("from_name")
  smsDaysAfter         Int?    @map("sms_days_after")
  smsSendTime          String? @map("sms_send_time")
  feedbackTitle        String  @map("feedback_title")
  feedbackSubtitle     String  @map("feedback_subtitle")
  feedbackQuestion     String  @map("feedback_question")
  autoFacebook         Int     @map("auto_facebook")
  autoTwitter          Int     @map("auto_twitter")
  afterPage            String  @map("after_page")
  googlePlusLink       String  @map("google_plus_link")
  googleReview         Int     @default(0) @map("google_review")
  googleReviewUrl      String  @map("googleReview_url")
  aweberCode           String  @map("aweber_code")
  scoreIndicator       Int     @map("score_indicator")
  addNote              Int     @map("add_note")
  postBuzzfeed         Int     @default(1) @map("post_buzzfeed")
  postWebsite          Int     @map("post_website")
  emailMessageId       Int     @map("email_message_id")
  redirectUrl          String  @map("redirect_url")
  feedbackName         String  @map("feedback_name")
  tyEnableEmail        Int     @map("ty_enable_email")
  tyEnableSms          Int     @map("ty_enable_sms")
  tyEmailId            Int     @map("ty_email_id")
  tySmsId              Int     @map("ty_sms_id")
  color1               String  @default("#52acca") @map("color_1")
  color2               String  @default("#61b7d4") @map("color_2")
  googleReviewRedirect Int     @default(0) @map("googleReview_redirect")
  showReviewsAbove     Float   @map("show_reviews_above")
  logoPosition         String  @map("logo_position")
  logoHeight           Int?    @map("logo_height")
  hits                 Int

  @@map("social_survey")
}

model SocialSurveyAnswers {
  id         Int    @id @default(autoincrement())
  feedbackId Int    @map("feedback_id")
  question   String
  answer     String

  @@index([feedbackId], name: "feedbackId")
  @@map("social_survey_answers")
}

model SocialSurveyFeedback {
  id              Int    @id @default(autoincrement())
  rating          Int
  contactId       Int    @map("contact_id")
  feedbackSource  String @map("feedback_source")
  company         Int
  date            Int
  feedbackComment String @map("feedback_comment")
  feedbackName    String @map("feedback_name")
  feedbackStatus  String @map("feedback_status")
  relatedId       Int    @map("related_id")
  relatedTo       String @map("related_to")
  feedbackFor     Int    @map("feedback_for")
  service         String
  publicUse       Int    @default(1) @map("public_use")
  serviceId       Int    @map("service_id")
  ownerResponse   String @map("owner_response")

  @@index([company], name: "company")
  @@index([relatedId], name: "relatedId")
  @@map("social_survey_feedback")
}

model SocialSurveyQuestions {
  id       Int    @id @default(autoincrement())
  occupier String
  question String
  answer   String

  @@map("social_survey_questions")
}

model solutions {
  id          Int       @id @default(autoincrement())
  title       String?
  status      String?
  question    String?
  answer      String?
  ownerid     Int?
  occupier    Int?
  category    String?
  CreatedDate DateTime?
  IpAddress   Int?
}

model SpamLog {
  id        Int    @id @default(autoincrement())
  ip        String
  reason    String
  companyId Int    @map("company_id")
  date      Int
  data      String

  @@map("spam_log")
}

model SqlFailedTransactions {
  failId     Int    @id @default(autoincrement()) @map("fail_id")
  requestUri String @map("request_uri")
  getData    String @map("get_data")
  postData   String @map("post_data")
  sqlQuery   String @map("sql_query")
  respArray  String @map("resp_array")

  @@map("sql_failed_transactions")
}

model StaffApplicationSettings {
  occupier                    Int
  staffRottaSettingMode       Int    @map("staff_rotta_setting_mode")
  staffRottaSettingPassword   String @map("staff_rotta_setting_password")
  staffClockinSettingMode     Int    @map("staff_clockin_setting_mode")
  staffClockinSettingPassword String @map("staff_clockin_setting_password")
  staffClockinSettingLocation String @map("staff_clockin_setting_location")
  staffClockinSettingMessage  String @map("staff_clockin_setting_message")
  staffManagerSettingMode     Int    @map("staff_manager_setting_mode")
  staffManagerSettingPassword String @map("staff_manager_setting_password")
  staffManagerSettingLocation String @map("staff_manager_setting_location")
  staffManagerSettingMessage  String @map("staff_manager_setting_message")
  staffClockinSettingManualt  Int    @map("staff_clockin_setting_manualt")
  staffClockinSettingCcontact Int    @map("staff_clockin_setting_ccontact")
  id                          Int    @id @default(autoincrement())

  @@map("staff_application_settings")
}

model StaffCategoriesTargets {
  id              Int       @id @default(autoincrement())
  staffId         Int?      @map("staff_id")
  catId           Int?      @map("cat_id")
  value           String?
  occupier        Int?
  createdDate     DateTime? @map("created_date")
  lastUpdatedDate DateTime? @map("last_updated_date")

  @@map("staff_categories_targets")
}

model StaffHoursSettings {
  id             Int       @id @default(autoincrement())
  dayName        String?   @map("day_name")
  openingHours   String?   @map("opening_hours")
  sliderOpenning Int?      @map("slider_openning")
  closingHours   String?   @map("closing_hours")
  sliderClosing  Int?      @map("slider_closing")
  closed         Int?
  occupier       Int?
  uid            Int?
  createdDate    DateTime? @map("created_date")
  updatedDate    DateTime? @map("updated_date")

  @@map("staff_hours_settings")
}

model StaffLimitSettings {
  id          Int       @id @default(autoincrement())
  dayName     String?   @map("day_name")
  minValue    Int?      @map("min_value")
  maxValue    Int?      @map("max_value")
  occupier    Int?
  uid         Int?
  createdDate DateTime? @map("created_date")
  updatedDate DateTime? @map("updated_date")

  @@map("staff_limit_settings")
}

model StaffMeta {
  id        Int    @unique @default(autoincrement())
  staffId   Int    @map("staff_id")
  metaName  String @map("meta_name")
  metaValue String @map("meta_value")

  @@id([staffId, metaName, id])
  @@unique([staffId, metaName], name: "staffId")
  @@map("staff_meta")
}

model StaffPerformanceSettings {
  id            Int      @id @default(autoincrement())
  companyId     Int      @map("company_id")
  enabled       Int
  frequency     String
  excludedUsers String   @map("excluded_users")
  LastSent      DateTime
  endWeek       Int      @map("end_week")

  @@map("staff_performance_settings")
}

model StaffProfiles {
  sellerid  Int      @id @default(autoincrement())
  start     DateTime
  name      String
  surname   String
  number    String
  photo     String
  email     String
  occupier  String
  visible   Int
  jobTitle  String   @map("job_title")
  birthdate DateTime
  city      String
  postcode  String
  country   String
  homephone String
  workphone String
  manager   Int

  @@map("staff_profiles")
}

model StaffServiceCommission {
  id           Int       @id @default(autoincrement())
  salesId      Int       @map("sales_id")
  bookingId    Int       @default(0) @map("booking_id")
  staffId      Int       @map("staff_id")
  commission   Float
  creationDate DateTime? @map("creation_date")
  serviceId    Int       @map("service_id")
  quoteId      Int       @default(0) @map("quote_id")

  @@index([quoteId], name: "quoteId")
  @@index([serviceId], name: "serviceId")
  @@index([staffId], name: "staffId")
  @@map("staff_service_commission")
}

model StaffShifts {
  ssUid      Int    @id @default(autoincrement()) @map("ss_uid")
  ssSid      Int    @map("ss_sid")
  ssSweek    String @map("ss_sweek")
  ssStart    Int    @default(0) @map("ss_start")
  ssDuration Int    @default(3600) @map("ss_duration")
  ssRate     Float  @default(0.00) @map("ss_rate")
  ssAdded    Int    @map("ss_added")
  ssRole     Int    @map("ss_role")

  @@map("staff_shifts")
}

model StaffShiftsNew {
  id          Int      @id @default(autoincrement())
  staffId     Int      @map("staff_id")
  startDate   DateTime @map("start_date")
  endDate     DateTime @map("end_date")
  ssRate      Float    @map("ss_rate")
  staffRoleId Int      @map("staff_role_id")
  CreatedDate DateTime
  occupier    String

  @@map("staff_shifts_new")
}

model StaffShiftRoles {
  roleId     Int     @id @default(autoincrement()) @map("role_id")
  roleCid    Int     @map("role_cid")
  roleName   String  @map("role_name")
  roleColour String? @map("role_colour")
  roleDelete Boolean @default(true) @map("role_delete")

  @@map("staff_shift_roles")
}

model StaffTargets {
  id           Int    @id @default(autoincrement())
  companyId    String @map("company_id")
  retailSales  Float  @map("retail_sales")
  serviceSales Float  @map("service_sales")
  newClients   Float  @map("new_clients")
  utilization  Float
  UID          Int

  @@map("staff_targets")
}

model StatusPage {
  id      Int    @id @default(autoincrement())
  message String

  @@map("status_page")
}

model stencil {
  id           Int    @id @default(autoincrement())
  companyId    Int    @map("company_id")
  url          String
  stencilOrder Int    @map("stencil_order")
  angle        String
}

model StripeEvents {
  id        Int      @id @default(autoincrement())
  companyId Int      @map("company_id")
  type      String
  date      DateTime
  eventData String   @map("event_data")

  @@map("stripe_events")
}

model StripeTransactions {
  id              Int      @id @default(autoincrement())
  amount          Float
  currency        String
  companyId       Int      @map("company_id")
  contactId       Int      @map("contact_id")
  bookingId       Int      @map("booking_id")
  invoiceId       Int      @map("invoice_id")
  location        String
  date            DateTime
  status          Boolean
  amountAfterFee  Float    @map("amount_after_fee")
  chargeId        String?  @map("charge_id")
  paymentIntentId String?  @map("payment_intent_id")
  errorCode       String?  @map("error_code")
  reciever        Boolean  @default(false)

  @@map("stripe_transactions")
}

model SupplierCategory {
  id           Int    @id @default(autoincrement())
  categoryName String @map("category_name")
  companyId    Int    @map("company_id")

  @@map("supplier_category")
}

model SupplierDetails {
  id         Int    @id @default(autoincrement())
  name       String
  otherName1 String @map("otherName_1")
  otherName  String @map("other_name")
  image      String

  @@index([name], name: "name")
  @@map("supplier_details")
}

model SupportGuides {
  id   Int    @id @default(autoincrement())
  page String
  link String

  @@map("support_guides")
}

model SuspendedBills {
  id         Int      @id @default(autoincrement())
  date       DateTime
  customerId Int      @map("customer_id")
  count      Int
  tax1       Float
  tax2       Float
  total      Float

  @@map("suspended_bills")
}

model SuspendedItems {
  id            Int    @id @default(autoincrement())
  suspendId     Int    @map("suspend_id")
  productId     Int    @map("product_id")
  productCode   String @map("product_code")
  productName   String @map("product_name")
  productUnit   String @map("product_unit")
  taxRateId     Int    @map("tax_rate_id")
  tax           String
  quantity      Int
  unitPrice     Float  @map("unit_price")
  grossTotal    Float  @map("gross_total")
  valTax        Float  @map("val_tax")
  staffPurchase Int?   @default(0) @map("staff_purchase")

  @@map("suspended_items")
}

model SystemAlert {
  alertid   Int     @id @default(autoincrement())
  cid       Int
  uid       Int
  message   String
  read      Boolean @default(false)
  entrydate Int
  type      String
  browserId Int     @map("browser_id")

  @@index([cid], name: "company_id_index")
  @@index([entrydate], name: "entrydate")
  @@index([message], name: "message")
  @@index([uid], name: "uid")
  @@index([uid, entrydate], name: "user_date")
  @@map("System_Alert")
}

model SystemNotifications {
  alertid   Int     @id @default(autoincrement())
  cid       Int
  uid       Int
  message   String
  read      Boolean @default(false)
  entrydate Int
  type      String
  ownerId   String? @map("owner_id")

  @@index([uid, entrydate], name: "message_check")
  @@map("System_Notifications")
}

model SystemRead {
  id       Int
  properId Int @id @default(autoincrement()) @map("proper_id")

  @@map("System_Read")
}

model TableViews {
  id        Int    @id @default(autoincrement())
  companyId Int    @map("company_id")
  type      String
  name      String
  columns   String

  @@map("table_views")
}

model TabBills {
  id         Int      @id @default(autoincrement())
  date       DateTime
  customerId Int      @map("customer_id")
  tableNo    String?  @map("table_no")
  count      Int
  tax1       Float
  tax2       Float
  total      Float
  occupier   Int?
  uid        Int?

  @@map("tab_bills")
}

model TabItems {
  id            Int    @id @default(autoincrement())
  suspendId     Int    @map("suspend_id")
  productId     Int    @map("product_id")
  productCode   String @map("product_code")
  productName   String @map("product_name")
  productUnit   String @map("product_unit")
  taxRateId     Int    @map("tax_rate_id")
  tax           String
  quantity      Int
  unitPrice     Float  @map("unit_price")
  grossTotal    Float  @map("gross_total")
  valTax        Float  @map("val_tax")
  staffPurchase Int?   @default(0) @map("staff_purchase")

  @@map("tab_items")
}

model TanningHistory {
  transId    Int    @id @default(autoincrement()) @map("trans_id")
  date       Int
  employeeId Int    @map("employee_id")
  type       String
  amount     Int
  contactId  Int    @map("contact_id")
  salesId    Int?   @map("sales_id")

  @@map("tanning_history")
}

model TanningPro {
  id        Int   @id @default(autoincrement())
  amount    Float
  contactId Int   @map("contact_id")
  companyId Int?  @map("company_id")

  @@map("tanning_pro")
}

model TaskManager {
  id                    Int       @id @default(autoincrement())
  taskOwner             Int?      @map("task_owner")
  subject               String?
  dueDate               DateTime? @map("due_date")
  assignedTo            Int?      @map("assigned_to")
  moduleType            Int?      @map("module_type")
  contactId             Int?      @map("contact_id")
  leadId                Int?      @map("lead_id")
  module2Type           Int?      @map("module2_type")
  user2Id               Int?      @map("user2_id")
  status                Int?
  priority              Int?
  sendNotificationEmail String?   @map("send_notification_email")
  recurringActivity     String?   @map("recurring_activity")
  startDate             DateTime? @map("start_date")
  endDate               DateTime? @map("end_date")
  repeatType            Int?      @map("repeat_type")
  description           String?
  occupier              Int?
  createdDate           DateTime? @map("created_date")
  modifiedDate          DateTime? @map("modified_date")
  closedDate            Int       @map("closed_date")
  nhsPatientId          Int       @map("nhs_patient_id")
  listId                Int       @map("list_id")
  notifyOnComplete      Boolean   @default(false) @map("notify_on_complete")
  imported              Int       @default(0)

  @@index([occupier], name: "occupier")
  @@index([status], name: "status")
  @@index([taskOwner], name: "taskOwner")
  @@map("task_manager")
}

model TaskManagerLists {
  id       Int    @id @default(autoincrement())
  name     String
  occupier Int
  byUid    Int    @map("by_uid")
  uid      String

  @@map("task_manager_lists")
}

model TaskTargets {
  id           Int    @id @default(autoincrement())
  targetType   String @map("target_type")
  targetNumber Int    @map("target_number")
  taskId       Int    @map("task_id")
  targetName   String @map("target_name")
  fromDate     String @map("from_date")
  toDate       String @map("to_date")

  @@map("task_targets")
}

model taxes {
  id       Int    @id @default(autoincrement())
  name     String
  value    String
  rate     Float
  hidden   Int    @default(0)
  default  Int    @default(0)
  occupier Int
  customId Int    @map("custom_id")

  @@index([occupier], name: "occupier")
}

model TaxDisabledLocations {
  id         Int @id @default(autoincrement())
  taxId      Int @map("tax_id")
  locationId Int @map("location_id")

  @@index([taxId, locationId], name: "taxId")
  @@map("tax_disabled_locations")
}

model TaxDisabledProducts {
  id        Int @id @default(autoincrement())
  taxId     Int @map("tax_id")
  productId Int @map("product_id")

  @@index([taxId, productId], name: "taxId")
  @@map("tax_disabled_products")
}

model TaxDisabledServices {
  id        Int @id @default(autoincrement())
  taxId     Int @map("tax_id")
  serviceId Int @map("service_id")

  @@index([taxId, serviceId], name: "taxId")
  @@map("tax_disabled_services")
}

model TaxDisabledUsers {
  id     Int @id @default(autoincrement())
  taxId  Int @map("tax_id")
  userId Int @map("user_id")

  @@index([taxId, userId], name: "taxId")
  @@map("tax_disabled_users")
}

model TblContracts {
  id                  Int      @id @default(autoincrement())
  OwnerID             String
  contractTitle       String   @map("contract_title")
  contractDescription String   @map("contract_description")
  contractSignature   String   @map("contract_signature")
  createDateTime      DateTime @map("create_date_time")
  occupier            String
  numberSignatures    Int      @map("number_signatures")
  showLogo            Int      @map("show_logo")
  deleted             Int
  relatedItems        String   @map("related_items")
  customId            Int      @map("custom_id")
  imported            Int

  @@map("tbl_contracts")
}

model TblContractImages {
  id               Int    @id @default(autoincrement())
  contractId       Int    @map("contract_id")
  image            String
  signedContractId Int    @map("signed_contractId")
  title            String

  @@map("tbl_contract_images")
}

model TblContractSignatures {
  id             Int    @id @default(autoincrement())
  contractId     Int    @map("contract_id")
  signatureTitle String @map("signature_title")

  @@map("tbl_contract_signatures")
}

model TblModuleFields {
  id         Int     @id @default(autoincrement())
  moduleId   Int?    @map("module_id")
  fieldName  String? @map("field_name")
  fieldLabel String? @map("field_label")
  isActive   Int?    @map("is_active")

  @@map("tbl_module_fields")
}

model TblModuleFieldsSetting {
  id              Int       @id @default(autoincrement())
  moduleId        Int?      @map("module_id")
  fieldName       String?   @map("field_name")
  fieldLabel      String?   @map("field_label")
  isActive        Int?      @map("is_active")
  isRequired      Int       @map("is_required")
  occupier        Int?
  uid             Int?
  order           Int       @default(0)
  createdDate     DateTime? @map("created_date")
  lastUpdatedDate DateTime? @map("last_updated_date")

  @@index([isRequired], name: "isRequired")
  @@index([occupier], name: "occupier")
  @@map("tbl_module_fields_setting")
}

model TblSignedContracts {
  id                 Int      @id @default(autoincrement())
  contractId         Int      @map("contract_id")
  contractSignature  String   @map("contract_signature")
  contractStatus     Int      @default(0) @map("contract_status")
  updateDateTime     DateTime @map("update_date_time")
  createDateTime     DateTime @map("create_date_time")
  contactId          Int      @map("contact_id")
  contractSignature2 String   @map("contractSignature2")
  bookingId          Int      @map("booking_id")

  @@map("tbl_signed_contracts")
}

model TeacherMaster {
  teachId   Int     @id @default(autoincrement()) @map("teach_id")
  teachName String? @map("teach_name")
  companyId Int     @map("company_id")
  userId    Int     @map("user_id")

  @@map("teacher_master")
}

model TechnicalNotes {
  id        Int    @id @default(autoincrement())
  created   Int
  lastEdit  Int    @map("last_edit")
  notes     String
  uid       Int
  contactId Int    @map("contact_id")
  companyId Int    @map("company_id")

  @@index([contactId], name: "contactId")
  @@map("technical_notes")
}

model templates {
  id           Int     @id @default(autoincrement())
  name         String?
  content      String?
  preview      String?
  fields       String?
  parseCss     Boolean @default(false) @map("parse_css")
  fieldsArray  String? @map("fields_array")
  commentArray String  @map("comment_array")
}

model TemplateFolders {
  id                Int    @id @default(autoincrement())
  companyId         Int    @map("company_id")
  folderName        String @map("folder_name")
  folderDescription String @map("folder_description")

  @@index([companyId], name: "companyId")
  @@map("template_folders")
}

model TemplateSampleTemplates {
  id                   Int    @id @default(autoincrement())
  name                 String
  templateId           Int    @map("template_id")
  treatmentDescription String @map("treatment_description")
  treatmentCategory    String @map("treatment_category")
  formType             String @map("form_type")

  @@map("template_sample_templates")
}

model TemplateSettings {
  id           Int    @id @default(autoincrement())
  occupier     String
  templateType String @map("template_type")
  cssName      String @map("css_name")
  cssValue     String @map("css_value")

  @@map("template_settings")
}

model TemporaryToken {
  id        Int    @id @default(autoincrement())
  companyId Int    @map("company_id")
  token     String
  module    String
  data      String
  status    String

  @@map("temporary_token")
}

model TempIvan {
  id       Int @id @default(autoincrement())
  firstId  Int @map("first_id")
  secondId Int @map("second_id")

  @@index([firstId], name: "firstId")
  @@index([secondId], name: "secondId")
  @@map("temp_ivan")
}

// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
// model test_creation_date {
// id   Int
// date DateTime
// }

model TestNotes {
  id        Int      @id @default(autoincrement())
  customId  Int      @map("custom_id")
  contactId Int      @map("contact_id")
  note      String
  date      DateTime

  @@map("test_notes")
}

model TheatreList {
  id          Int      @id @default(autoincrement())
  contactId   Int      @map("contact_id")
  userId      Int      @map("user_id")
  occupier    Int
  theatreDate DateTime @map("theatre_date")
  tciDatetime DateTime @map("tci_datetime")
  admission   String
  room        String
  anesthetist String
  discharged  DateTime
  comments    String
  session     Int
  episode     String
  code        String
  indications String
  duration    Int
  ord         Float

  @@map("theatre_list")
}

model TheatreListAnesthetists {
  id                         Int                       @id @default(autoincrement())
  name                       String
  companyId                  Int                       @map("company_id")
  theatre_list_date_settings TheatreListDateSettings[]

  @@map("theatre_list_anesthetists")
}

model TheatreListDateSettings {
  id                      Int                       @id @default(autoincrement())
  companyId               Int                       @map("company_id")
  date                    DateTime
  hospitalId              Int                       @map("hospital_id")
  anesthetistId           Int                       @map("anesthetist_id")
  startTime               String                    @map("start_time")
  endTime                 String                    @map("end_time")
  notes                   String
  TheatreListAnesthetists TheatreListAnesthetists @relation(fields: [anesthetistId], references: [id])
  TheatreListHospitals    TheatreListHospitals    @relation(fields: [hospitalId], references: [id])

  @@index([anesthetistId], name: "anesthetistId")
  @@index([hospitalId, anesthetistId], name: "hospitalId")
  @@map("theatre_list_date_settings")
}

model TheatreListHospitals {
  id                         Int                       @id @default(autoincrement())
  name                       String
  companyId                  Int                       @map("company_id")
  theatre_list_date_settings TheatreListDateSettings[]

  @@map("theatre_list_hospitals")
}

model ticket {
  ticketid     Int      @id @default(autoincrement())
  price        Float
  email        String
  isvalid      String
  code         String
  eventid      Int
  purchaseDate DateTime @map("purchase_date")
  occupier     String
  STATUS       String
  ticketType   Int      @map("ticket_type")
}

model TicketEvents {
  id               Int @id @default(autoincrement())
  eventid          Int
  ticketType       Int @map("ticket_type")
  sold             Int
  availableTickets Int @map("available_tickets")
  deleted          Int

  @@index([eventid], name: "eventid")
  @@map("ticket_events")
}

model TicketTypes {
  typeId            Int    @id @default(autoincrement()) @map("type_id")
  ticketTypeName    String @map("ticket_type_name")
  ticketPrice       Float  @map("ticket_price")
  ticketDescription String @map("ticket_description")
  ticketsAvailable  Int    @map("tickets_available")
  occupier          Int
  brandId           Int    @map("brand_id")
  eventId           Int    @map("event_id")
  deleted           Int

  @@map("ticket_types")
}

model tiles {
  id          Int    @id @default(autoincrement())
  name        String
  category    String
  description String
}

model TmaxJobs {
  id        Int      @id @default(autoincrement())
  company   Int
  dateAdded DateTime @map("date_added")
  slot      Int
  delay     Int
  time      Int

  @@index([company], name: "company")
  @@map("tmax_jobs")
}

model TmSubtasks {
  id              Int    @id @default(autoincrement())
  parentId        Int    @map("parent_id")
  taskName        String @map("task_name")
  taskDescription String @map("task_description")
  deliveryDate    Int    @map("delivery_date")
  payments        String
  assignedTo      Int    @map("assigned_to")
  status          Int
  companyId       Int    @map("company_id")

  @@map("tm_subtasks")
}

model tokens {
  uid       Int
  pushToken String @map("push_token")
  deviceos  String

  @@id([uid, pushToken])
  @@index([uid], name: "uid_token_idx")
}

model tourbuilder {
  uid      Int
  status   Int @default(1)
  status1  Int @default(1)
  status2  Int @default(1)
  status3  Int @default(1)
  status4  Int @default(1)
  status5  Int @default(1)
  status6  Int @default(1)
  status7  Int @default(1)
  status8  Int @default(1)
  status9  Int @default(1)
  status10 Int @default(1)
  status11 Int @default(1)
  status12 Int @default(1)
  status13 Int @default(1)
  status14 Int @default(1)
  id       Int @id @default(autoincrement())

  @@index([uid], name: "uid")
}

model TrainingGuides {
  id       Int                      @id @default(autoincrement())
  name     String
  link     String
  category training_guides_category

  @@map("training_guides")
}

// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
// model training_guides_completion {
// user_id        Int
// training_id    Int
// date_completed DateTime @default(now())

// @@index([training_id], name: "user_id")
// }

model TrainingPrices {
  id          Int     @id @default(autoincrement())
  name        String?
  price       Int?
  description String?
  addonOrder  Int     @default(0) @map("addon_order")

  @@map("training_prices")
}

model TrainingTitles {
  id           Int       @id @default(autoincrement())
  title        String
  category     String?
  type         String?
  occupier     Int
  uid          Int
  creationDate DateTime? @map("creation_date")
  modifiedDate DateTime? @map("modified_date")

  @@map("training_titles")
}

model TrainCourse {
  id            Int                     @id @default(autoincrement())
  courseName    String                  @map("course_name")
  courseTag     String                  @map("course_tag")
  customFieldId Int                     @map("custom_field_id")
  duration      Int
  description   String
  premium       Int
  encore        Int
  category      String?                 @default("Getting Started")
  difficulty    train_course_difficulty @default(Beginner)

  @@map("train_course")
}

model TrainCourseBookings {
  id         Int      @id @default(autoincrement())
  courseId   Int      @map("course_id")
  webinarId  Int      @map("webinar_id")
  courseDate DateTime @map("course_date")
  trainer    String
  encore     Int?     @default(0)

  @@map("train_course_bookings")
}

model TrainCourseDates {
  id         Int                      @id @default(autoincrement())
  courseId   Int                      @map("course_id")
  userId     Int                      @map("user_id")
  companyId  Int                      @map("company_id")
  status     train_course_dates_status
  courseDate DateTime                 @map("course_date")

  @@index([companyId], name: "companyId")
  @@index([userId], name: "userId")
  @@map("train_courseDates")
}

model TreatmentNotesImportHelper {
  id                 Int      @id @default(autoincrement())
  customId           Int      @map("custom_id")
  customContactId    Int      @map("custom_contact_id")
  customApptId       Int      @map("custom_appt_id")
  customContactEmail String   @map("custom_contact_email")
  Fname              String
  Lname              String
  customUserName     String   @map("custom_user_name")
  Subject            String
  Note               String
  createdDate        DateTime @map("created_date")
  occupier           Int
  imported           Int
  added              Int
  oldId              Int      @map("old_id")
  oldNote            String   @map("old_note")

  @@index([Fname], name: "Fname")
  @@index([customUserName], name: "customUserName")
  @@index([oldId], name: "oldId")
  @@map("treatment_notes_import_helper")
}

model TreatmentPlans {
  id            Int                    @id @default(autoincrement())
  contactId     Int                    @map("contact_id")
  formId        Int                    @map("form_id")
  formContactId Int                    @map("form_contactId")
  companyId     Int                    @map("company_id")
  planData      String                 @map("plan_data")
  createdOn     DateTime               @map("created_on")
  createdBy     Int                    @map("created_by")
  status        treatment_plans_status @default(OPEN)

  @@map("treatment_plans")
}

model TreatmentSampleTemplates {
  id                   Int    @id @default(autoincrement())
  name                 String
  treatmentTemplateId  Int    @map("treatment_template_id")
  treatmentDescription String @map("treatment_description")
  treatmentCategory    String @map("treatment_category")
  formType             String @map("form_type")

  @@map("treatment_sample_templates")
}

model TreatmentSummary {
  id               Int      @id @default(autoincrement())
  treatmentId      Int      @map("treatment_id")
  productId        Int      @map("product_id")
  numberOfMeasures Float    @map("number_of_measures")
  numbersOfInjects Int      @map("numbers_of_injects")
  batchNumber      String   @map("batch_number")
  expiryDate       DateTime @map("expiry_date")
  other            String
  companyId        Int      @map("company_id")
  contactId        Int      @map("contact_id")
  dateCreated      DateTime @default(now()) @map("date_created")

  @@map("treatment_summary")
}

model TrialMode {
  id           Int      @id @default(autoincrement())
  companyId    Int      @map("company_id")
  email        String
  status       Int
  dateTracked  DateTime @map("date_tracked")
  trialTracked DateTime @map("trial_tracked")

  @@map("trial_mode")
}

model TrustedBrowser {
  id                Int      @id @default(autoincrement())
  browserStamp      String   @map("browser_stamp")
  country           String
  region            String
  city              String
  ipAddress         String   @map("ip_address")
  companyId         Int      @map("company_id")
  createdOn         DateTime @map("created_on")
  userId            Int      @map("user_id")
  isAuthorized      Boolean  @default(false) @map("is_authorized")
  authorizationHash String?  @map("authorization_hash")
  isAdmin           Boolean  @default(false) @map("is_admin")

  @@index([companyId], name: "companyId")
  @@map("trusted_browser")
}

model tutorials {
  id            Int    @id @default(autoincrement())
  tutorialName  String @map("tutorial_name")
  videoId       String @map("video_id")
  section       String
  tutorialOrder Int    @map("tutorial_order")
}

model TutorialSystem {
  id              Int    @id @default(autoincrement())
  userId          Int    @map("user_id")
  companyId       Int    @map("company_id")
  tutorialSection String @map("tutorial_section")
  tutorialName    String @map("tutorial_name")

  @@map("tutorial_system")
}

model UkCity {
  id             Int    @id @default(autoincrement())
  postPrefix     String @map("post_prefix")
  cityName       String @map("city_name")
  companyId      Int    @map("company_id")
  nearestClinic  String @map("nearest_clinic")
  assignToName   String @map("assign_to_name")
  nearestClinic2 String @map("nearestClinic_2")

  @@map("uk_city")
}

model UnitPurchase {
  id              Int     @id @default(autoincrement())
  pId             Int     @map("p_id")
  productId       String  @map("product_id")
  productPrice    Float   @map("product_price")
  productQuantity Int     @map("product_quantity")
  customerId      Int?    @map("customer_id")
  currency        String?
  date            String?
  compId          Int     @map("compId")

  @@map("unit_purchase")
}

model UnsubscribeLog {
  id            Int                            @id @default(autoincrement())
  contactId     Int                            @map("contact_id")
  companyId     Int                            @map("company_id")
  activity      String
  activityDate  DateTime                       @map("activity_date")
  subStatus     Int                            @map("sub_status")
  contactIdType unsubscribe_log_contact_id_type @default(CONTACT) @map("contactId_type")
  email         String?

  @@map("unsubscribe_log")
}

model UrlShortener {
  id          Int      @id @default(autoincrement())
  shortcode   String
  fullUrl     String   @map("full_url")
  companyId   Int      @map("company_id")
  dateCreated DateTime @default(now()) @map("date_created")
  clicks      Int

  @@map("url_shortener")
}

model UrlTracking {
  id            Int    @id @default(autoincrement())
  url           String
  companyId     Int    @map("company_id")
  smsCampaignId Int    @map("sms_campaign_id")
  hits          Int

  @@map("url_tracking")
}

model UrlTrackingHits {
  id            Int      @id @default(autoincrement())
  companyId     Int      @map("company_id")
  smsCampaignId Int      @map("sms_campaign_id")
  mobile        String
  dateTime      DateTime @default(now()) @map("date_time")

  @@index([mobile], name: "mobile")
  @@index([smsCampaignId], name: "smsCampaignId")
  @@map("url_tracking_hits")
}

model User {
  id                             Int                           @id @default(autoincrement())
  username                       String?
  fullName                       String                        @map("full_name")
  password                       String?
  passwordAlgor                  Int?                          @default(1) @map("password_algor")
  salt                           String?
  created                        DateTime?
  lastLogin                      DateTime?                     @map("last_login")
  company                        Int?
  hash                           String
  email                          String
  admin                          Int
  address                        String
  timezone                       String
  locale                         String
  language                       String
  jobTitle                       String                        @map("job_title")
  department                     String
  division                       String
  super                          Int
  defaultPage                    String                        @map("default_page")
  signature                      String
  image                          String
  position                       String
  location                       String
  deleted                        Int
  passCode                       String                        @map("pass_code")
  phoneNumber                    String                        @map("phone_number")
  hideOnlineBookings             Int                           @map("hide_online_bookings")
  passcode                       String
  lastLoadedPage                 String                        @map("last_loaded_page")
  temporaryPassword              Boolean                       @map("temporary_password")
  customId                       String                        @map("custom_id")
  hideCalendar                   Int                           @map("hide_calendar")
  calendarOrder                  Int                           @map("calendar_order")
  clockedIn                      DateTime?                     @map("clocked_in")
  clockedOut                     DateTime?                     @map("clocked_out")
  lastPasswordReset              Int                           @map("last_password_reset")
  forcePassword                  Int                           @map("force_password")
  limitedUser                    Int                           @map("limited_user")
  canVoid                        Int                           @default(1) @map("can_void")
  canRefund                      Boolean                       @default(true) @map("can_refund")
  canReport                      Int                           @default(1) @map("can_report")
  canRota                        Int                           @default(1) @map("can_rota")
  staffReadOnly                  Int                           @map("staff_read_only")
  stockReadOnly                  Int                           @map("stock_read_only")
  allReports                     Int                           @default(1) @map("all_reports")
  performanceStats               Int                           @map("performance_stats")
  disableTutorial                Int                           @map("disable_tutorial")
  allServices                    Int                           @default(1) @map("all_services")
  deleteTreatment                Int                           @default(0) @map("delete_treatment")
  adminTasks                     Int                           @map("admin_tasks")
  adminLeads                     Int                           @map("admin_leads")
  imported                       Int
  loginFailCount                 Int                           @map("login_fail_count")
  canEditBookingTime             Int                           @default(1) @map("can_edit_booking_time")
  userColor                      String                        @map("user_color")
  disableMultipleClinics         Int                           @map("disable_multiple_clinics")
  isHcp                          Int                           @default(0) @map("is_hcp")
  loginDisabled                  Int                           @map("login_disabled")
  canPatientAppoint              Int                           @default(1) @map("can_patient_appoint")
  canPatientCommunicatons        Int                           @default(1) @map("can_patient_communicatons")
  canPatientPhotos               Int                           @default(1) @map("can_patient_photos")
  canPatientFiancials            Int                           @default(1) @map("can_patient_fiancials")
  canPatientTreatments           Int                           @default(1) @map("can_patient_treatments")
  canPatientDocs                 Int                           @default(1) @map("can_patient_docs")
  canPatientPackages             Int                           @default(1) @map("can_patient_packages")
  canPatientPrescription         Int                           @default(1) @map("can_patient_prescription")
  canPatientConsents             Int                           @default(1) @map("can_patient_consents")
  canPatientGiftvoucher          Int                           @default(1) @map("can_patient_giftvoucher")
  canPatientLoyalty              Int                           @default(1) @map("can_patient_loyalty")
  canPatientRecall               Int                           @default(1) @map("can_patient_recall")
  canPatientMemberships          Int                           @default(1) @map("can_patient_memberships")
  canCancelBooking               Int                           @default(1) @map("can_cancel_booking")
  notifyOnBooking                Boolean                       @map("notify_on_booking")
  canEditCommunications          Boolean                       @default(true) @map("can_edit_communications")
  canDeleteCommunications        Boolean                       @default(true) @map("can_delete_communications")
  canViewFullCal                 Boolean                       @default(true) @map("can_view_full_cal")
  permissionLastRole             String                        @default("") @map("permission_last_role")
  canMerge                       Boolean                       @default(true) @map("can_merge")
  canDiscount                    Int?                          @default(1) @map("can_discount")
  canDiscountSingle              Boolean                       @default(true) @map("canDiscount_single")
  restored                       Int
  googleAuthSecret               String?                       @map("google_auth_secret")
  defaultContractId              Int                           @map("default_contract_id")
  canSeePersonal                 Int                           @default(1) @map("can_see_personal")
  appearOnRota                   Int                           @default(1) @map("appear_on_rota")
  canPatientMedicalHistory       Int                           @default(1) @map("can_patient_medical_history")
  canLabRequests                 Boolean                       @default(false) @map("can_lab_requests")
  detailedView                   Int                           @map("detailed_view")
  canMakeBlockout                Int                           @default(1) @map("can_make_blockout")
  canDeleteBlockout              Int                           @default(1) @map("can_delete_blockout")
  canMoveBlockout                Int                           @default(1) @map("can_move_blockout")
  mainContact                    Boolean                       @map("main_contact")
  user_security_questions_answer UserSecurityQuestionsAnswer[]
  Company                        Company?                      @relation(fields: [company], references: [id])

  @@index([calendarOrder], name: "calendarOrder")
  @@index([company], name: "company")
  @@index([deleted], name: "deleted")
  @@index([email], name: "email")
  @@index([fullName], name: "fullName")
  @@index([hash], name: "hash_index")
  @@index([username], name: "username")
  @@map("users")
}

model UsersHours {
  id        Int       @id @default(autoincrement())
  userId    Int       @map("user_id")
  companyId Int       @map("company_id")
  clockIn   DateTime  @map("clock_in")
  clockOut  DateTime? @map("clock_out")

  @@map("users_hours")
}

model UserActivitiesLikes {
  id       Int      @id @default(autoincrement())
  userid   Int
  actid    Int
  occupier String
  date     DateTime

  @@index([actid], name: "actid")
  @@index([actid, userid], name: "actid_user")
  @@map("user_activities_likes")
}

model UserActivitiesLog {
  ID               Int                        @id @default(autoincrement())
  userId           Int
  company          Int
  accessId         Int
  type             String
  template         String
  time             Int
  status           user_activities_log_status @default(Enable)
  ipAddress        Int
  pabauAnnoucement Int                        @map("pabau_annoucement")
  locationId       Int                        @default(0) @map("location_id")

  @@index([company, type], name: "company_type")
  @@index([company, time], name: "fetch_activity")
  @@index([userId, time], name: "user_specific")
  @@map("user_activities_log")
}

model UserActivitiesLogTz {
  ID        Int                           @id @default(autoincrement())
  userId    Int
  company   Int
  accessId  Int
  type      String
  template  String
  time      Int
  timeTz    DateTime?                     @map("time_tz")
  status    user_activities_log_tz_status @default(Enable)
  ipAddress Int

  @@index([company, type], name: "company_type")
  @@index([company, time], name: "fetch_activity")
  @@index([userId, time], name: "user_specific")
  @@map("user_activities_log_tz")
}

model UserAlerts {
  id              Int    @id @default(autoincrement())
  title           String
  description     String
  image           String
  emailTemplateId Int    @map("email_template_id")
  iosMessage      String @map("ios_message")
  smsMessage      String @map("sms_message")
  pabauMessage    String @map("pabau_message")

  @@map("user_alerts")
}

model UserAlertsCc {
  id      Int    @id @default(autoincrement())
  uid     Int
  ccName  String @map("cc_name")
  ccEmail String @map("cc_email")
  ccPhone String @map("cc_phone")

  @@map("user_alerts_cc")
}

model UserAlertsPermissions {
  id                Int @id @default(autoincrement())
  uid               Int
  alertId           Int @map("alert_id")
  companyId         Int @map("company_id")
  iosNotification   Int @map("ios_notification")
  emailNotification Int @map("email_notification")
  smsNotification   Int @map("sms_notification")
  pabauNotification Int @map("pabau_notification")

  @@map("user_alerts_permissions")
}

model UserAvailability {
  id         Int       @id @default(autoincrement())
  user       Int
  day        Int
  startTime  DateTime  @map("start_time")
  endTime    DateTime  @map("end_time")
  break      Int?
  startBreak DateTime? @map("start_break")
  endBreak   DateTime? @map("end_break")

  @@index([user], name: "user")
  @@map("user_availability")
}

model UserAvailableTimes {
  id         Int      @id @default(autoincrement())
  user       Int
  occupier   Int
  date       DateTime
  day        Int
  startTime  DateTime @map("start_time")
  endTime    DateTime @map("end_time")
  locationId Int      @map("location_id")
  imported   Int
  tagName    String   @map("tag_name")

  @@index([date], name: "date")
  @@index([locationId], name: "locationId")
  @@index([occupier], name: "occupier")
  @@index([startTime], name: "startTime")
  @@index([user], name: "user")
  @@map("user_available_times")
}

model UserContactAccess {
  id         Int      @id @default(autoincrement())
  userId     Int      @map("user_id")
  contactId  Int      @map("contact_id")
  accessDate DateTime @default(now()) @map("access_date")

  @@unique([userId, contactId], name: "userId")
  @@map("user_contact_access")
}

model UserDefaultViews {
  id             Int                             @id @default(autoincrement())
  userId         Int                             @map("user_id")
  companyId      Int                             @map("company_id")
  customNotes    Int                             @default(0) @map("custom_notes")
  appointments   user_default_views_appointments @default(ALL)
  defaultCalUser Int                             @default(0) @map("default_cal_user")

  @@map("user_default_views")
}

model UserDetail {
  userId Int    @id
  about  String

  @@map("user_detail")
}

model UserFailedLogin {
  id          Int      @id @default(autoincrement())
  email       String
  hash        String
  hashAlgor   Int      @default(1) @map("hash_algor")
  attemptDate DateTime @default(now()) @map("attempt_date")
  count       Int

  @@map("user_failed_login")
}

model UserGroups {
  id                Int    @id @default(autoincrement())
  companyId         Int    @map("company_id")
  groupName         String @map("group_name")
  groupDescription  String @map("group_description")
  restrictClients   Int    @map("restrict_clients")
  restrictLocations String @map("restrict_locations")
  restrictCalendar  Int    @default(1) @map("restrict_calendar")
  restrictData      Int    @map("restrict_data")
  limitContacts     Int    @map("limit_contacts")
  permissionId      Int    @map("permission_id")

  @@map("user_groups")
}

model UserGroupMembers {
  id      Int @id @default(autoincrement())
  userId  Int @map("user_id")
  groupId Int @map("group_id")

  @@map("user_group_members")
}

model UserLeadsAccess {
  id         Int      @id @default(autoincrement())
  userId     Int      @map("user_id")
  leadId     Int      @map("lead_id")
  accessDate DateTime @default(now()) @map("access_date")

  @@unique([userId, leadId], name: "userId")
  @@map("user_leads_access")
}

model UserMainPermissions {
  id               Int     @id @default(autoincrement())
  userId           Int     @map("user_id")
  deleteAlertNotes Boolean @default(false) @map("delete_alert_notes")

  @@map("user_main_permissions")
}

model UserMaster {
  id            Int      @id @default(autoincrement())
  companyId     Int      @map("company_id")
  fname         String
  lname         String
  address       String
  city          String
  state         String
  country       String
  postalcode    String
  prefloc       String
  email         String
  pass          String
  oauthProvider String   @map("oauth_provider")
  oauthId       String   @map("oauth_id")
  timestamp     DateTime @default(now())
  encKey        String   @map("enc_key")
  pic           String
  contactId     Int      @map("contact_id")
  mobile        String
  lastLogin     DateTime @map("last_login")
  isSuspended   Boolean  @default(false) @map("is_suspended")
  sessionHash   String   @map("session_hash")

  @@index([companyId], name: "companyId")
  @@index([contactId], name: "contactId")
  @@index([email], name: "email")
  @@map("user_master")
}

model UserMasterPasswordHistory {
  id           Int      @id @default(autoincrement())
  companyId    Int      @map("company_id")
  userMasterId Int      @map("user_master_id")
  pass         String
  createdAt    DateTime @map("created_at")

  @@map("user_master_password_history")
}

model UserMobilePermissions {
  id        Int     @id @default(autoincrement())
  uid       Int
  companyId Int     @map("company_id")
  cal       Int     @default(1)
  reviews   Int     @default(1)
  reports   Int     @default(1)
  contacts  Int     @default(1)
  journey   Int     @default(1)
  register  Int     @default(1)
  dashboard Boolean

  @@map("user_mobile_permissions")
}

model UserNotes {
  id          Int      @id @default(autoincrement())
  occupier    String
  userId      Int      @map("user_id")
  note        String
  addedBy     Int      @map("added_by")
  date        DateTime
  dateAdded   DateTime @map("date_added")
  updatedBy   Int      @map("updated_by")
  dateUpdated DateTime @map("date_updated")
  rotaId      Int      @map("rota_id")
  noteColor   String   @map("note_color")

  @@index([occupier], name: "occupier")
  @@index([userId], name: "userId")
  @@map("user_notes")
}

model UserNotesImportHelper {
  id             Int      @id @default(autoincrement())
  customUserId   Int      @map("custom_user_id")
  customUserName String   @map("custom_user_name")
  note           String
  date           DateTime
  occupier       Int
  imported       Int
  added          Int

  @@map("user_notes_import_helper")
}

model UserOldPassword {
  userOldPasswordId Int      @id @default(autoincrement()) @map("user_old_password_id")
  userId            Int      @map("user_id")
  hash              String
  hashAlgor         Int      @default(1) @map("hash_algor")
  salt              String?
  createdAt         DateTime @default(now()) @map("created_at")

  @@map("user_old_password")
}

// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
// model user_old_passwords {
// user_id  Int
// password String
// }

model UserPermissions {
  id   Int @id @default(autoincrement())
  user Int
  page Int

  @@index([page], name: "page")
  @@index([user], name: "user")
  @@map("user_permissions")
}

model UserProducts {
  id           Int @id @default(autoincrement())
  occupier     Int
  userId       Int @map("user_id")
  productId    Int @map("product_id")
  discountTier Int @map("discount_tier")

  @@index([productId], name: "productId")
  @@map("user_products")
}

model UserReports {
  id       Int @id @default(autoincrement())
  occupier Int
  userId   Int @map("user_id")
  reportId Int @map("report_id")

  @@index([occupier], name: "occupier")
  @@index([reportId], name: "reportId")
  @@index([userId], name: "userId")
  @@map("user_reports")
}

model UserRequests {
  id           Int      @id @default(autoincrement())
  email        String
  date         DateTime
  company      Int
  hash         String
  jobTitle     String   @map("job_title")
  department   String
  division     String
  template     Int
  admin        Int
  staffManager Int      @map("staff_manager")
  firstName    String   @map("first_name")
  lastName     String   @map("last_name")

  @@map("user_requests")
}

model UserSecurityQuestionsAnswer {
  id         Int    @id @default(autoincrement())
  userId     Int    @map("user_id")
  question   String
  questionNo Int    @map("question_no")
  answer     String
  users      User   @relation(fields: [userId], references: [id])

  @@index([userId], name: "userId")
  @@map("user_security_questions_answer")
}

model UserTargets {
  id          Int      @id @default(autoincrement())
  userId      Int      @map("user_id")
  companyId   Int      @map("company_id")
  indicatorId Int      @map("indicator_id")
  date        DateTime
  value       Int

  @@index([companyId], name: "companyId")
  @@index([userId], name: "userId")
  @@map("user_targets")
}

model UserTracking {
  id               Int      @id @default(autoincrement())
  entryDate        DateTime @map("entry_date")
  companyId        Int      @map("company_id")
  userCount        Int      @map("user_count")
  subscriptionName String   @map("subscription_name")

  @@map("user_tracking")
}

model UserVariables {
  id          Int       @id @default(autoincrement())
  userId      Int       @map("user_id")
  key         String
  value       String
  dateCreated DateTime  @default(now()) @map("date_created")
  dateUpdated DateTime? @map("date_updated")

  @@unique([userId, key], name: "userId")
  @@map("user_variables")
}

model UserXp {
  id       Int      @id @default(autoincrement())
  occupier Int
  uid      Int
  date     DateTime
  xp       Int
  notes    String

  @@index([occupier, uid], name: "occupier")
  @@map("user_xp")
}

model UserXpNew {
  id        Int    @id @default(autoincrement())
  companyId Int    @map("company_id")
  uid       Int
  level     Int
  xp        Int
  date      String

  @@index([companyId], name: "companyId")
  @@index([date], name: "date")
  @@map("user_xp_new")
}

model VaccineDiseaseCoverage {
  id          Int    @id @default(autoincrement())
  cmVaccineId Int    @default(0) @map("cm_vaccine_id")
  diseaseId   Int    @default(0) @map("disease_id")
  data        String

  @@map("vaccine_disease_coverage")
}

model VaccineSchedule {
  id                  Int                     @id @default(autoincrement())
  contactId           Int                     @map("contact_id")
  companyId           Int                     @map("company_id")
  vaccineId           Int                     @map("vaccine_id")
  recallId            Int                     @map("recall_id")
  scheduledAdminDate  DateTime                @map("scheduled_admin_date")
  actualAdminDate     DateTime                @map("actual_admin_date")
  coverageEndDate     DateTime                @map("coverage_end_date")
  scheduleCoverLength Int                     @map("schedule_cover_length")
  medicalRecordId     Int                     @map("medical_record_id")
  diseaseId           Int                     @map("disease_id")
  isAdministered      Int                     @map("is_administered")
  batchNo             String                  @map("batch_no")
  source              vaccine_schedule_source @default(Patient_record_)
  createdBy           Int                     @map("created_by")
  createdOn           DateTime                @map("created_on")
  pathTakenId         Int                     @map("path_taken_id")

  @@map("vaccine_schedule")
}

model VaccineScheduleCoverage {
  id                Int      @id @default(autoincrement())
  vaccineScheduleId Int      @default(0) @map("vaccine_schedule_id")
  diseaseId         Int      @default(0) @map("disease_id")
  coverageEndDate   DateTime @map("coverage_end_date")
  coverLength       Int      @default(0) @map("cover_length")

  @@map("vaccine_schedule_coverage")
}

model VideoCallLog {
  id        Int      @id @default(autoincrement())
  companyId Int      @map("company_id")
  userId    Int      @map("user_id")
  date      DateTime @default(now())
  extra     String?
  minsUsed  Int      @map("mins_used")

  @@map("video_call_log")
}

model VideoConferencingTosAcceptance {
  id           Int      @id @default(autoincrement())
  companyId    Int      @map("company_id")
  userId       Int      @map("user_id")
  acceptedDate DateTime @default(now()) @map("accepted_date")

  @@map("video_conferencing_tos_acceptance")
}

model VisitHistory {
  id        Int    @id @default(autoincrement())
  contactId Int    @map("contact_id")
  datetime  Int
  companyId Int    @map("company_id")
  visitType String @map("visit_type")

  @@map("visit_history")
}

model VoidedSales {
  id                 Int      @id @default(autoincrement())
  referenceNo        String   @map("reference_no")
  customId           String   @map("custom_id")
  billerName         String   @map("biller_name")
  customerName       String   @map("customer_name")
  date               Int
  reason             String?
  invTotal           Float    @map("inv_total")
  items              String
  contactId          Int      @map("contact_id")
  insuranceCompanyId Int      @map("insurance_company_id")
  issuerId           Int?     @map("issuer_id")
  xeroInvoiceId      String   @map("xero_invoice_id")
  occupier           Int
  xeroUpdatedDate    DateTime @map("xero_updated_date")
  xeroNotExist       Int      @map("xero_not_exist")
  xeroError          Int      @map("xero_error")

  @@index([date], name: "date_index")
  @@map("voided_sales")
}

model VotingComments {
  id       Int      @id @default(autoincrement())
  votingId Int      @map("voting_id")
  comment  String
  occupier String
  userId   Int      @map("user_id")
  datetime DateTime

  @@map("voting_comments")
}

model VotingResults {
  id          Int      @id @default(autoincrement())
  occupier    Int
  userId      Int      @map("user_id")
  title       String
  description String
  datetime    DateTime
  score       Int
  upVote      Int      @map("up_vote")
  downVote    Int      @map("down_vote")
  buzzId      Int      @map("buzz_id")

  @@map("voting_results")
}

model VoucherPrintApp {
  id        Int    @id @default(autoincrement())
  content   String
  companyId Int    @map("company_id")
  subject   String

  @@map("voucher_print_app")
}

model VoucherSettings {
  id                Int    @id @default(autoincrement())
  occupier          Int
  smsMode           Int    @map("sms_mode")
  smsName           String @map("sms_name")
  smsId             Int    @map("sms_id")
  voucherColorTheme String @map("voucher_color_theme")
  terms             String

  @@map("voucher_settings")
}

model WaitingFinance {
  id      Int      @id @default(autoincrement())
  company Int
  amount  Float
  date    DateTime

  @@map("waiting_finance")
}

model WaitingList {
  id            Int       @id @default(autoincrement())
  companyId     Int?      @map("company_id")
  contactId     Int?      @map("contact_id")
  expiresOn     DateTime? @map("expires_on")
  removeOn      Int?      @map("remove_on")
  name          String?
  appointment   Int?
  monday        Int?      @default(0)
  tuesday       Int?      @default(0)
  wednesday     Int?      @default(0)
  thursday      Int?      @default(0)
  friday        Int?      @default(0)
  saturday      Int?      @default(0)
  sunday        Int?      @default(0)
  comments      String?
  notifySms     Int?      @default(0) @map("notify_sms")
  notifyEmail   Boolean   @default(false) @map("notify_email")
  createdDate   DateTime? @map("created_date")
  modifiedDate  DateTime? @map("modified_date")
  availableFrom DateTime  @map("available_from")
  availableTo   DateTime  @map("available_to")
  preference    Int
  urgent        Int

  @@index([appointment], name: "appointment")
  @@index([companyId], name: "companyId")
  @@index([contactId], name: "contactId")
  @@map("waiting_list")
}

model WaitingListInvites {
  id         Int      @id @default(autoincrement())
  contactId  Int      @map("contact_id")
  companyId  Int      @map("company_id")
  lastInvite DateTime @map("last_invite")

  @@index([companyId], name: "companyId")
  @@index([contactId], name: "contactId")
  @@index([lastInvite], name: "lastInvite")
  @@map("waiting_list_invites")
}

model WaitingListOptions {
  id            Int  @id @default(autoincrement())
  waitingListId Int  @map("waiting_list_id")
  options       Int?

  @@index([waitingListId], name: "waitingListId")
  @@map("waiting_list_options")
}

model WaitingListPreferences {
  id            Int @id @default(autoincrement())
  contactId     Int @map("contact_id")
  employeeId    Int @map("employee_id")
  companyId     Int @map("company_id")
  waitingListId Int @default(0) @map("waiting_list_id")

  @@index([companyId], name: "companyId")
  @@index([contactId], name: "contactId")
  @@index([employeeId], name: "employeeId")
  @@map("waiting_list_preferences")
}

model WaitingListSettings {
  id                   Int @id @default(autoincrement())
  companyId            Int @map("company_id")
  smsTemplateId        Int @map("sms_template_id")
  emailTemplateId      Int @map("email_template_id")
  classSmsTemplateId   Int @default(0) @map("class_smsTemplateId")
  classEmailTemplateId Int @default(0) @map("class_emailTemplateId")

  @@map("waiting_list_settings")
}

model WaitListNotifications {
  id           Int       @id @default(autoincrement())
  waitingId    Int       @map("waiting_id")
  contactId    Int       @map("contact_id")
  courseId     Int       @map("course_id")
  companyId    Int       @map("company_id")
  creationDate DateTime? @map("creation_date")
  modifiedDate DateTime? @map("modified_date")

  @@map("wait_list_notifications")
}

model WarningScripts {
  id               Int      @id @default(autoincrement())
  reportDate       DateTime @map("report_date")
  contactCount     Int      @map("contact_count")
  saleCount        Int      @map("sale_count")
  paymentCount     Int      @map("payment_count")
  appointmentCount Int      @map("appointment_count")
  oldCount         Int      @map("old_count")
  triggerAlert     Int      @map("trigger_alert")
  invSaleItemCount Int      @map("inv_sale_item_count")

  @@map("warning_scripts")
}

model WebhookIntegration {
  id         Int    @id @default(autoincrement())
  companyId  Int    @map("company_id")
  webhookUrl String @map("webhook_url")
  module     String

  @@map("webhook_integration")
}

model WidgetTargets {
  id                     Int @id @default(autoincrement())
  companyId              Int @map("company_id")
  appointmentTargetDay   Int @map("appointment_target_day")
  appointmentTargetWeek  Int @map("appointment_target_week")
  appointmentTargetMonth Int @map("appointment_target_month")
  appointmentTargetYear  Int @map("appointment_target_year")
  clientTargetDay        Int @map("client_target_day")
  clientTargetWeek       Int @map("client_target_week")
  clientTargetMonth      Int @map("client_target_month")
  clientTargetYear       Int @map("client_target_year")

  @@map("widget_targets")
}

model WorkCategory {
  id     Int    @id @default(autoincrement())
  name   String
  parent Int

  @@map("work_category")
}

model XeroErrorLogs {
  id             Int       @id @default(autoincrement())
  date           DateTime?
  type           String
  companyId      Int       @map("company_id")
  error          String
  statusResponse Int       @map("status_response")

  @@map("xero_error_logs")
}

model XeroIntegration {
  id                        Int       @id @default(autoincrement())
  companyId                 Int       @unique @map("company_id")
  clientId                  String    @map("client_id")
  tenantId                  String    @map("tenant_id")
  clientSecret              String    @map("client_secret")
  refreshToken              String    @map("refresh_token")
  redirectUri               String    @map("redirect_uri")
  defaultTaxMethod          String?   @map("default_tax_method")
  paymentsAccountCode       String    @map("payments_account_code")
  itemsAccountCode          String    @map("items_account_code")
  paymentsEnabled           Boolean   @default(false) @map("payments_enabled")
  trackingCategoriesEnabled Boolean   @default(false) @map("tracking_categories_enabled")
  defaultInvoiceStatus      String    @default("DRAFT") @map("default_invoice_status")
  enabled                   Boolean
  createdAt                 DateTime  @default(now()) @map("created_at")
  modifiedAt                DateTime? @map("modified_at")

  @@index([refreshToken], name: "REFRESHTOKEN")
  @@map("xero_integration")
}

model XeroIntegrationAccounts {
  id                 Int    @id @default(autoincrement())
  companyId          Int    @map("company_id")
  paymentMethod      String @map("payment_method")
  paymentAccountCode String @map("payment_account_code")

  @@index([paymentMethod], name: "PMETHOD")
  @@map("xero_integration_accounts")
}

model XeroIntegrationJobs {
  id            Int      @id @default(autoincrement())
  companyId     Int      @map("company_id")
  invoiceGuid   String   @map("invoice_guid")
  xeroInvoiceId String?  @unique @map("xero_invoice_id")
  status        Int      @default(0)
  response      String?
  createdAt     DateTime @default(now()) @map("created_at")
  modifiedAt    DateTime @default(now()) @map("modified_at")

  @@index([invoiceGuid], name: "INVOICEID")
  @@map("xero_integration_jobs")
}

model XeroIntegrationPayments {
  id            Int                              @id @default(autoincrement())
  companyId     Int                              @map("company_id")
  xeroPaymentId String                           @map("xero_payment_id")
  xeroInvoiceId String                           @map("xero_invoice_id")
  status        xero_integration_payments_status @default(created)
  createdAt     DateTime                         @default(now()) @map("created_at")
  modifiedAt    DateTime                         @default(now()) @map("modified_at")

  @@map("xero_integration_payments")
}

model XeroIntegrationTrackingCategories {
  id         Int       @id @default(autoincrement())
  name       String
  xeroId     String    @map("xero_id")
  target     String
  companyId  Int       @map("company_id")
  status     Boolean   @default(false)
  createdAt  DateTime  @default(now()) @map("created_at")
  modifiedAt DateTime? @map("modified_at")

  @@index([xeroId], name: "XEROTRACKINGID")
  @@map("xero_integration_tracking_categories")
}

model XeroInvoicesJobs {
  id              Int      @id @default(autoincrement())
  occupier        Int
  xeroManualJobId Int      @map("xero_manual_job_id")
  mode            String
  invoiceId       Int      @map("invoice_id")
  invoiceGuid     String   @map("invoice_guid")
  xeroSynced      Int      @map("xero_synced")
  dateCreated     DateTime @map("date_created")
  xeroUpdatedDate DateTime @map("xero_updated_date")
  resultText      String   @map("result_text")
  xeroError       Int      @map("xero_error")
  customId        Int      @map("custom_id")
  force           Int
  counter         Int

  @@index([invoiceId], name: "invoiceId")
  @@index([occupier], name: "occupier")
  @@index([occupier, xeroSynced, xeroError], name: "occupier_2")
  @@index([xeroError], name: "xeroError")
  @@index([xeroManualJobId], name: "xeroManualJobId")
  @@index([xeroSynced], name: "xeroSynced")
  @@map("xero_invoices_jobs")
}

model XeroJobs {
  id           Int      @id @default(autoincrement())
  occupier     Int
  dateCreated  DateTime @map("date_created")
  salesUpdated Int      @map("sales_updated")
  resultText   String   @map("result_text")

  @@map("xero_jobs")
}

model XeroManualJobs {
  id           Int      @id @default(autoincrement())
  occupier     Int
  refStartDate DateTime @map("ref_startDate")
  refEndDate   DateTime @map("ref_endDate")
  startDate    DateTime @map("start_date")
  endDate      DateTime @map("end_date")

  @@map("xero_manual_jobs")
}

model XeroSettings {
  id                           Int    @id @default(autoincrement())
  occupier                     Int
  disabled                     Int
  consumerKey                  String @map("consumer_key")
  sharedSecret                 String @map("shared_secret")
  rsaPrivateKey                String @map("rsa_private_key")
  rsaPublicKey                 String @map("rsa_public_key")
  statusInvoice                String @map("status_invoice")
  invoiceAccountCode           String @map("invoice_account_code")
  paymentAccountCode           String @map("payment_account_code")
  employeeTrackingCategory     String @map("employee_tracking_category")
  locationTrackingCategory     String @map("location_tracking_category")
  employeeTrackingCategoryName String @map("employeeTrackingCategory_name")
  locationTrackingCategoryName String @map("locationTrackingCategory_name")

  @@map("xero_settings")
}

model XeroSettingsInvoiceTypes {
  id                 Int    @id @default(autoincrement())
  occupier           Int
  invoiceType        String @map("invoice_type")
  invoiceAccountCode String @map("invoice_account_code")
  disabled           Int    @default(0)

  @@map("xero_settings_invoiceTypes")
}

model XeroSettingsPaymentTypes {
  id                 Int    @id @default(autoincrement())
  occupier           Int
  paymentMethod      String @map("payment_method")
  paymentAccountCode String @map("payment_account_code")
  disabled           Int    @default(0)

  @@map("xero_settings_payment_types")
}

model ZaesteticyouContacts {
  id              Int    @id @default(autoincrement())
  A               String
  B               String
  C               String
  D               String
  E               String
  status          String
  statusClient    String @map("status_client")
  contactName     String @map("contact_name")
  serviceName     String @map("service_name")
  title           String
  startDate       String @map("start_date")
  endDate         String @map("end_date")
  customUser      String @map("custom_user")
  customUserName2 String @map("customUser_name2")

  @@map("zaesteticyou_contacts")
}

model ZcosmeticaUsers {
  id       Int    @id @default(autoincrement())
  customId Int    @map("custom_id")
  fullName String @map("full_name")

  @@index([customId], name: "customId")
  @@map("zcosmetica_users")
}

model ZdoctorInvoicePatient {
  id           Int    @id @default(autoincrement())
  invoiceId    String @map("invoice_id")
  patientId    String @map("patient_id")
  discount     String
  nettotal     Float
  taxtotal     Float
  total        Float
  occupier     Int
  userCustomId String @map("user_custom_id")

  @@index([invoiceId], name: "invoiceId")
  @@map("zdoctor_invoice_patient")
}

model ZdoctorServicesType {
  id       Int    @id @default(autoincrement())
  customId String @map("custom_id")
  name     String
  duration Int
  occupier Int

  @@index([customId], name: "customId")
  @@map("zdoctor_services_type")
}

model ZdoctorUsers {
  id       Int    @id @default(autoincrement())
  customId String @map("custom_id")
  fullName String @map("full_name")
  occupier Int

  @@index([customId], name: "customId")
  @@map("zdoctor_users")
}

model ZenithContactDates {
  id       Int      @id @default(autoincrement())
  customId Int      @map("custom_id")
  date     DateTime
  added    Int

  @@index([customId], name: "customId")
  @@map("zenith_contact_dates")
}

model ZenithContactMarketing {
  id                      Int    @id @default(autoincrement())
  customContactId         Int    @map("custom_contact_id")
  customContactName       String @map("custom_contact_name")
  customMarketingSource   Int    @map("custom_marketing_source")
  customMarketingCategory Int    @map("custom_marketing_category")

  @@index([customContactId], name: "customContactId")
  @@index([customContactName], name: "customContactName")
  @@map("zenith_contact_marketing")
}

model ZenithMarketingSources {
  id               Int    @id @default(autoincrement())
  customId         Int    @map("custom_id")
  marketingSource  String @map("marketing_source")
  customCategoryId Int    @map("custom_category_id")

  @@index([customId], name: "customId")
  @@index([marketingSource], name: "marketingSource")
  @@map("zenith_marketingSources")
}

model ZenithTreatmentInterest {
  id                Int    @id @default(autoincrement())
  customId          Int    @map("custom_id")
  treatmentInterest String @map("treatment_interest")

  @@map("zenith_treatmentInterest")
}

model ZenithTreatmentInterestDivided {
  id                Int    @id @default(autoincrement())
  customId          Int    @map("custom_id")
  treatmentInterest String @map("treatment_interest")
  added             Int

  @@map("zenith_treatmentInterest_divided")
}

model ZenSend {
  id    Int    @id @default(autoincrement())
  email String
  type  String

  @@map("zen_send")
}

model ZfrancesDocuments {
  id             Int    @id @default(autoincrement())
  patientId      Int
  dateCreated    String
  sessionNOtes   String
  customUserName String @map("custom_user_name")
  added          Int

  @@map("zfrances_documents")
}

model ZhaImportServices {
  id              Int    @id @default(autoincrement())
  customServiceId Int    @map("custom_service_id")
  serviceName     String @map("service_name")
  occupier        Int

  @@index([customServiceId], name: "customServiceId")
  @@map("zha_import_services")
}

model ZimportAccountBalance {
  id                Int      @id @default(autoincrement())
  occupier          Int
  customContactName String   @map("custom_contact_name")
  amount            Float
  customUserName    String   @map("custom_user_name")
  date              DateTime
  description       String
  item              String
  contactId         Int      @map("contact_id")
  added             Int

  @@index([customContactName], name: "customContactName")
  @@index([occupier], name: "occupier")
  @@map("zimport_account_balance")
}

model ZimportAppts {
  id                Int    @id @default(autoincrement())
  time              String
  customId          String @map("custom_id")
  customContactName String @map("custom_contact_name")
  customUserName    String @map("custom_user_name")
  customCategory    String @map("custom_category")
  customService     String @map("custom_service")
  customRoom        String @map("custom_room")
  customType        String @map("custom_type")
  added             Int
  title             String

  @@map("zimport_appts")
}

model ZimportBookingsOmniya {
  id         Int    @id @default(autoincrement())
  occupier   Int
  startDate  String @map("start_date")
  endDate    String @map("end_date")
  date       String
  userName   String @map("user_name")
  time       String
  clientName String @map("client_name")
  service    String
  title      String

  @@map("zimport_bookings_omniya")
}

model ZimportBookingsRooms {
  id              Int    @id @default(autoincrement())
  occupier        Int
  customBookingId Int    @map("custom_booking_id")
  customRoomId    Int    @map("custom_room_id")
  customRoomName  String @map("custom_room_name")

  @@index([customBookingId], name: "customBookingId")
  @@index([occupier], name: "occupier")
  @@map("zimport_bookings_rooms")
}

model ZimportBookingsStatus {
  id       Int    @id @default(autoincrement())
  occupier Int
  customId Int    @map("custom_id")
  status   String
  added    Int

  @@map("zimport_bookings_status")
}

model ZimportBookingsTitle {
  id              Int    @id @default(autoincrement())
  occupier        Int
  customBookingId Int    @map("custom_booking_id")
  title           String

  @@index([customBookingId], name: "customBookingId")
  @@map("zimport_bookings_title")
}

model ZimportCommunications {
  id                Int      @id @default(autoincrement())
  occupier          Int
  customContactId   Int      @map("custom_contactId")
  customContactName String   @map("custom_contact_name")
  contactId         Int      @map("contact_id")
  subject           String?
  content           String
  dateCreated       DateTime @map("date_created")
  email             String
  communicationType String   @map("communication_type")
  customUserName    String   @map("custom_user_name")
  customId          Int      @map("custom_id")
  mobile            String
  added             Int
  fileName          String   @map("file_name")
  statusName        String   @map("status_name")
  customModifiedBy  String   @map("custom_modified_by")

  @@index([customContactId], name: "customContactId")
  @@index([customContactName], name: "customContactName")
  @@index([customId], name: "customId")
  @@map("zimport_communications")
}

model ZimportCompaniesSix {
  id         Int    @id @default(autoincrement())
  occupier   Int
  customId   Int    @map("custom_id")
  customName String @map("custom_name")

  @@map("zimport_companies_six")
}

model ZimportCompareBookings {
  id        Int    @id @default(autoincrement())
  date      String
  thingie   String
  time      String
  cust      String
  service   String
  imported  Int
  startDate String @map("start_date")

  @@index([cust], name: "cust")
  @@index([date], name: "date")
  @@index([thingie], name: "thingie")
  @@index([time], name: "time")
  @@map("zimport_compare_bookings")
}

model ZimportContactPackages {
  id                Int      @id @default(autoincrement())
  occupier          Int
  imported          Int
  customUserName    String   @map("custom_user_name")
  customContactId   String   @map("custom_contactId")
  customContactName String   @map("custom_contact_name")
  contactId         Int      @map("contact_id")
  packageName       String   @map("package_name")
  packageCode       String   @map("package_code")
  dateCreated       DateTime @map("date_created")
  paymentMethod     String   @map("payment_method")
  amount            Float
  activationDate    DateTime @map("activation_date")
  expirationDate    DateTime @map("expiration_date")
  invoiceId         Int      @map("invoice_id")
  remaining         Int
  total             Int
  added             Int
  contactPackageId  Int      @map("contact_package_id")
  serviceName       String   @map("service_name")
  priceItem         Float    @map("price_item")
  customId          Int      @map("custom_id")
  customStatus      String   @map("custom_status")

  @@index([packageName], name: "packageName")
  @@map("zimport_contact_packages")
}

model ZimportDocuments {
  id                Int      @id @default(autoincrement())
  occupier          Int
  origFilename      String   @map("orig_filename")
  filename          String
  filetype          String
  contactCustomId   String   @map("contact_custom_id")
  dateCreated       DateTime @map("date_created")
  customId          Int      @map("custom_id")
  title             String
  added             Int
  customContactName String   @map("custom_contact_name")
  customUserName    String   @map("custom_user_name")
  contactId         Int      @map("contact_id")
  oldFilename       String   @map("old_filename")

  @@index([contactCustomId], name: "contact_custom_id")
  @@index([origFilename], name: "origFilename")
  @@map("zimport_documents")
}

model ZimportDocumentsFix {
  id              Int      @id @default(autoincrement())
  occupier        Int
  fileId          Int      @map("file_id")
  filename        String
  extension       String
  dateTime        DateTime @map("date_time")
  customContactId Int      @map("custom_contact_id")
  customUserName  String   @map("custom_user_name")

  @@index([fileId], name: "fileId")
  @@index([occupier], name: "occupier")
  @@map("zimport_documents_fix")
}

model ZimportElixirInvoices {
  id          Int    @id @default(autoincrement())
  occupier    Int
  clientName  String @map("client_name")
  sumInvoice  String @map("sum_invoice")
  mail        String
  mobile      String
  companyName String @map("company_name")

  @@index([clientName], name: "clientName")
  @@map("zimport_elixir_invoices")
}

model ZimportInvoicesContracts {
  id                 Int    @id @default(autoincrement())
  occupier           Int
  customId           Int    @map("custom_id")
  customId2          Int    @map("customId2")
  customContractId   Int    @map("custom_contract_id")
  customContractName String @map("custom_contract_name")
  added              Int

  @@map("zimport_invoices_contracts")
}

model ZimportInvoiceBookings {
  id        Int @id @default(autoincrement())
  invoiceNo Int @map("invoice_no")
  patientId Int @map("patient_id")
  bookingId Int @map("booking_id")
  occupier  Int

  @@map("zimport_invoice_bookings")
}

model ZimportInvSalesInvoiceNo {
  id              Int    @id @default(autoincrement())
  occupier        Int
  customSaleId    Int    @map("custom_sale_id")
  refNo           String @map("ref_no")
  customContactId Int    @map("custom_contact_id")
  added           Int

  @@index([customContactId], name: "customContactId")
  @@index([customSaleId], name: "customSaleId")
  @@index([occupier], name: "occupier")
  @@map("zimport_inv_sales_invoice_no")
}

model ZimportLoyalty {
  id                Int    @id @default(autoincrement())
  occupier          Int
  customContactName String @map("custom_contact_name")
  points            Float
  contactId         Int    @map("contact_id")
  email             String
  added             Int

  @@index([customContactName], name: "customContactName")
  @@index([email], name: "email")
  @@index([occupier], name: "occupier")
  @@map("zimport_loyalty")
}

model ZimportNewsletterMember {
  id           Int    @id @default(autoincrement())
  occupier     Int
  date         String
  email        String
  subject      String
  opens        Int
  added        Int
  newsletterId Int    @map("newsletter_id")

  @@index([email], name: "email")
  @@map("zimport_newsletter_member")
}

model ZimportPackageUsed {
  id                     Int      @id @default(autoincrement())
  occupier               Int
  customContactId        Int      @map("custom_contact_id")
  customContactPackageId Int      @map("custom_contact_package_id")
  customBookingId        Int      @map("custom_booking_id")
  imported               Int
  added                  Int
  createdDate            DateTime @map("created_date")

  @@index([customBookingId], name: "customBookingId")
  @@map("zimport_package_used")
}

model ZimportPayments {
  id        Int    @id @default(autoincrement())
  customId  Int    @map("custom_id")
  amount    Float
  pmethod   String
  occupier  Int
  imported  Int
  invoiceId Int    @map("invoice_id")

  @@index([customId], name: "customId")
  @@map("zimport_payments")
}

model ZimportPaymentsAllocationType {
  id               Int    @id @default(autoincrement())
  occupier         Int
  customId         Int    @map("custom_id")
  customFieldName  String @map("custom_field_name")
  customFieldValue String @map("custom_field_value")
  paymentId        Int    @map("payment_id")
  fromType         Int    @map("from_type")
  toType           Int    @map("to_type")

  @@index([customId], name: "customId")
  @@index([paymentId], name: "paymentId")
  @@map("zimport_payments_allocation_type")
}

model ZimportPaymentsCustomFields {
  id              Int    @id @default(autoincrement())
  occupier        Int
  customId        Int    @map("custom_id")
  customPaymentId Int    @map("custom_payment_id")
  customFieldName String @map("custom_field_name")
  customValue     String @map("custom_value")

  @@index([customId], name: "customId")
  @@map("zimport_payments_custom_fields")
}

model ZimportPhotos {
  id                   Int      @id @default(autoincrement())
  occupier             Int
  linkhref             String
  contactCustomId      String   @map("contact_custom_id")
  contactCustomName    String   @map("contact_custom_name")
  contactCustomEmail   String   @map("contact_custom_email")
  customConsultationId Int      @map("custom_consultation_id")
  date                 DateTime
  title                String
  added                Int

  @@index([linkhref], name: "linkhref")
  @@map("zimport_photos")
}

model ZimportPractitioners {
  id       Int    @id @default(autoincrement())
  occupier Int
  customId Int    @map("custom_id")
  name     String

  @@index([customId], name: "customId")
  @@map("zimport_practitioners")
}

model ZimportRota {
  id               Int      @id @default(autoincrement())
  occupier         Int
  uid              Int
  staffId          Int      @map("staff_id")
  date             DateTime
  startTime        DateTime @map("start_time")
  endTime          DateTime @map("end_time")
  breakStart       DateTime @map("break_start")
  breakEnd         DateTime @map("break_end")
  startDate        String   @map("start_date")
  endDate          String   @map("end_date")
  notes            String
  customUserId     Int      @map("custom_user_id")
  customUserName   String   @map("custom_user_name")
  customLocationId Int      @map("custom_locationId")
  locationId       Int      @map("location_id")
  added            Int

  @@map("zimport_rota")
}

model ZimportRotaMilenium {
  id             Int      @id @default(autoincrement())
  occupier       Int
  customUserName String   @map("custom_user_name")
  dateWeek       DateTime @map("date_week")
  monday         String
  tuesday        String
  wednesday      String
  thursday       String
  friday         String
  saturday       String
  sunday         String
  added          Int

  @@map("zimport_rota_milenium")
}

model ZimportSalesClinico {
  id                Int      @id @default(autoincrement())
  occupier          Int
  customId          Int      @map("custom_id")
  customContactId   Int      @map("custom_contact_id")
  customContactName String   @map("custom_contact_name")
  statusName        String   @map("status_name")
  outstandingAmount Float    @map("outstanding_amount")
  issueDate         DateTime @map("issue_date")
  dateClosed        DateTime @map("date_closed")
  deleted           String
  description       String

  @@index([customContactId], name: "customContactId")
  @@index([customId], name: "customId")
  @@map("zimport_sales_clinico")
}

model ZimportSalesCustomFields {
  id              Int    @id @default(autoincrement())
  occupier        Int
  customId        Int    @map("custom_id")
  customSaleId    Int    @map("custom_sale_id")
  customFieldName String @map("custom_field_name")
  customValue     String @map("custom_value")

  @@index([customId], name: "customId")
  @@map("zimport_sales_custom_fields")
}

model ZimportSalesPayments {
  id                Int    @id @default(autoincrement())
  occupier          Int
  customSaleId      Int    @map("custom_sale_id")
  customUserId      Int    @map("custom_user_id")
  customUserName    String @map("custom_user_name")
  customContactId   Int    @map("custom_contactId")
  customContactName String @map("custom_contact_name")
  amount            Float
  paymentMethod     String
  paymentDate       String
  customId          Int    @map("custom_id")
  added             Int
  leftAmount        Float  @map("left_amount")
  contactId         Int    @map("contact_id")

  @@index([customContactId], name: "customContactId")
  @@index([occupier], name: "occupier")
  @@map("zimport_sales_payments")
}

model ZimportSalesPayments2 {
  id                Int    @id @default(autoincrement())
  occupier          Int
  customSaleId      Int    @map("custom_sale_id")
  customUserId      Int    @map("custom_user_id")
  customUserName    String @map("custom_user_name")
  customContactId   Int    @map("custom_contactId")
  customContactName String @map("custom_contact_name")
  amount            Float
  paymentMethod     String
  paymentDate       String
  customId          Int    @map("custom_id")
  added             Int
  leftAmount        Float  @map("left_amount")
  contactId         Int    @map("contact_id")
  customSaleId2     Int    @map("customSaleId2")

  @@map("zimport_sales_payments2")
}

model ZimportSalesPaymentsDeleted {
  id          Int      @id @default(autoincrement())
  occupier    Int
  customId    Int      @map("custom_id")
  paymentDate DateTime

  @@map("zimport_sales_payments_deleted")
}

model ZimportTreatments {
  id            Int    @id @default(autoincrement())
  occupier      Int
  customId      Int    @map("custom_id")
  treatmentName String @map("treatment_name")

  @@index([customId], name: "customId")
  @@map("zimport_treatments")
}

model ZimportUsers {
  id       Int    @id @default(autoincrement())
  occupier Int
  customId Int    @map("custom_id")
  name     String
  email    String
  isActive Int    @map("is_active")

  @@index([customId], name: "customId")
  @@map("zimport_users")
}

model ZpatientDobs {
  id              Int    @id @default(autoincrement())
  customContactId Int    @map("custom_contact_id")
  dob             String
  occupier        Int

  @@index([customContactId], name: "customContactId")
  @@map("zpatient_dobs")
}

model ZproductsBarcode {
  id          Int    @id @default(autoincrement())
  productName String @map("product_name")
  barcode     String
  occupier    Int

  @@index([productName], name: "productName")
  @@map("zproducts_barcode")
}

model ZroomImportHelper {
  id       Int    @id @default(autoincrement())
  customId String @map("custom_id")
  roomName String @map("room_name")
  occupier Int

  @@index([customId], name: "customId")
  @@map("zroom_import_helper")
}

model ZtestDbClass {
  id          Int    @id @default(autoincrement())
  name        String
  description String
  number      Int    @unique

  @@map("ztest_db_class")
}

model migrations {
  id        Int      @id @default(autoincrement())
  sqlOutput String?  @map("sql_output")
  sqlResult Boolean? @map("sql_result")
  phpOutput String?  @map("php_output")
  phpResult Boolean? @map("php_result")
  name      String   @unique
  date      DateTime @default(now())

  @@map("_migrations")
}

enum booking_master_payment_status {
  is_false  @map("0")
  is_true   @map("1")
}

enum booking_master_cancel_status {
  is_false  @map("0")
  is_true   @map("1")
}

enum booking_statuses_indicator {
  LINE
  ICON
  EMPTY_ENUM_VALUE  @map("")
}

enum bookitpro_general_integration_method {
  sagepay
  stripe
  cardsave
}

enum class_master_class_pay {
  is_false  @map("0")
  is_true   @map("1")
}

enum cm_account_notes_status {
  Enable
  Disable
}

enum cm_booking_notes_status {
  Enable
  Disable
}

enum cm_case_notes_status {
  Enable
  Disable
}

enum cm_compaign_notes_status {
  Enable
  Disable
}

enum cm_contacts_EmailOptOut {
  Yes
  No
}

enum cm_contacts_AddToQuickBooks {
  Yes
  No
}

enum cm_contacts_status {
  Enable
  Disable
  Delete
}

enum cm_contacts_backup_hb_EmailOptOut {
  Yes
  No
}

enum cm_contacts_backup_hb_AddToQuickBooks {
  Yes
  No
}

enum cm_contacts_backup_hb_status {
  Enable
  Disable
  Delete
}

enum cm_contact_alerts_status {
  Enable
  Disable
}

enum cm_contact_notes_status {
  Enable
  Disable
}

enum cm_invoice_notes_status {
  Enable
  Disable
}

enum cm_leads_EmailOptOut {
  Yes
  No
}

enum cm_leads_EnumStatus {
  Open
  Converted
  Junk
}

enum cm_leads_status {
  Enable
  Disable
  Delete
}

enum cm_lead_notes_status {
  Enable
  Disable
}

enum cm_linkprw_video {
  is_false  @map("0")
  is_true   @map("1")
}

enum cm_potentials_status {
  Enable
  Disable
  Delete
}

enum cm_potential_notes_status {
  Enable
  Disable
}

enum cm_solution_notes_status {
  Enable
  Disable
}

enum cm_staff_general_EnumStatus {
  Enable
  Disable
}

enum cm_staff_incidents_Type {
  Accident
  Warning
  Late
  Sickness
  Complaint
  Discrepancy
}

enum cm_staff_payrolls_AccountType {
  sick
  vacation
  payroll
}

enum cm_staff_wages_Type {
  Hourly
  Salary
  Retail
  Service
}

enum cm_tasks_status {
  Enable
  Disable
}

enum cm_task_assignment_taskStatus {
  Pending
  Done
}

enum cm_task_notes_status {
  Enable
  Disable
}

enum cm_vouchers_type {
  amount
  percent
}

enum cm_vouchers_valid {
  fixed
  period
  recurring
}

enum cm_vouchers_every {
  monday
  tuesday
  wednesday
  thursday
  friday
  saturday
  sunday
}

enum cm_wallposts_linkprw {
  is_false  @map("0")
  is_true   @map("1")
}

enum cm_wallposts_status {
  Enable
  Disable
  Delete
}

enum communications_type {
  Email
  SMS
  Letter
  Comment
  Reminder
  Call
  Voice
  Call_Reminder
}

enum communications_related_type {
  INVOICE
  APPOINTMENT
  NEWSLETTER
}

enum communications_recipients_recipient_type {
  CONTACT
  LEAD
  USER
}

enum company_bday_settings_status {
  enabled
  disabled
}

enum company_branches_attachments_type {
  badge
}

enum company_details_tax_name {
  VAT
  GST
}

enum company_services_deposit_type {
  amount
  percent
  free
  inherit
}

enum company_services_availability {
  ANY
  BOOK
  SELL
}

enum company_services_online_book_type {
  ALL
  NEW
  EXISTING
}

enum company_services_backup_deposit_type {
  amount
  percent
  free
}

enum company_services_backup_availability {
  ANY
  BOOK
  SELL
}

enum comp_emails_send_criteria_interest_area {
  master_category
  location_id
}

enum comp_sms_send_criteria_interest_area {
  master_category
  location_id
}

enum cp_pathways_taken_status {
  CANCELLED
  ACTIVE
}

enum cp_steps_step {
  questionnaire
  consent
  treatment
  prescription
  lab
  recall
  aftercare
  timeline
  summary
  video
  photo
  details
}

enum cp_steps_taken_status {
  completed
  skipped
}

enum cron_jobs_status {
  Queued
  Executing
  Finished
  Questions
  Scanning
}

enum gl_codes_description {
  payment_type
  discount
  tax_rate
  location_code
  service_code
  product_code
  setup
}

enum groups_group_postable {
  YES
  NO
}

enum healthcode_submittals_status {
  Pending
  Submitted
  Submitted_        @map("Submitted*")
  Error
  Remitted
  EMPTY_ENUM_VALUE  @map("")
}

enum insurer_contracts_contract_type {
  INSURANCE
  EMPLOYEE
}

enum ip_bookings_status {
  waiting
  arrived
  admitted
  discharged
}

enum isc_gender {
  Both
  Female
  Male
  EMPTY_ENUM_VALUE  @map("")
}

enum loyalty_campaign_type {
  LOYALTY
  AMBASSADOR
}

enum loyalty_definitions_type {
  LOYALTY
  AMBASSADOR
}

enum loyalty_rewards_type {
  POINTS
  PRODUCT
}

enum manage_custom_fields_field_for {
  CONTACT
  LEAD
  CONTACTLEAD
  PRODUCT
  SERVICE
  APPOINTMENT
  STAFF
  INVOICE
  PAYMENT
  ROTA
  NOTE
  INSURANCE
  STAGE
  CONSUMABLEINJECTABLES
  LOCATION
}

enum referral_settings_reward_options {
  both
  referee
  referrer
}

enum salon_bookings_groups_alerts_status {
  Enable
  Disable
}

enum salon_bookings_groups_notes_status {
  Enable
  Disable
}

enum services_master_category_type {
  SERVICE
  PRODUCT
}

enum training_guides_category {
  GETTING_STARTED
  SETTING
  EVERYDAY_USE
}

enum train_course_difficulty {
  Beginner
  Advanced
  Pro
}

enum train_course_dates_status {
  is_false  @map("0")
  is_true   @map("1")
}

enum treatment_plans_status {
  OPEN
  COMPLETE
}

enum unsubscribe_log_contact_id_type {
  CONTACT
  LEAD
}

enum user_activities_log_status {
  Enable
  Disable
  Delete
}

enum user_activities_log_tz_status {
  Enable
  Disable
  Delete
}

enum user_default_views_appointments {
  ALL
  UPCOMING
  HISTORY
  CANCELLED
  NOSHOW
  CYCLES
}

enum vaccine_schedule_source {
  Patient_verbal_                        @map("Patient(verbal)")
  Patient_record_                        @map("Patient(record)")
  Web_submission_by_Patient_unverified_  @map("Web submission by Patient(unverified)")
  Web_submission_by_Patient_verified_    @map("Web submission by Patient(verified)")
  Other_source                           @map("Other source")
}

enum xero_integration_payments_status {
  created
  deleted
}
