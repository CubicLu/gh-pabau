import { objectType } from 'nexus'

export const CompanySubscription = objectType({
  nonNullDefaults: {
    output: true,
    input: false,
  },
  name: 'CompanySubscription',
  definition(t) {
    t.int('license_id')
    t.int('company_id')
    t.int('license_type')
    t.field('license_expiry', { type: 'DateTime' })
    t.int('active')
    t.string('code')
    t.int('max_user_count')
    t.int('uid')
    t.int('suspend_sms')
    t.float('sms_rate')
    t.string('setup_stage')
    t.int('disable_sms')
    t.string('payment_id')
    t.string('warning_level')
    t.string('subscription_name')
    t.float('subscription_fee')
    t.string('suspended_on')
    t.int('demo_account')
    t.string('suspension_reason')
    t.int('pabau_score')
    t.string('gc_email')
    t.int('payment_bounces')
    t.int('training_status')
    t.int('setup_status')
    t.int('order_sheet')
    t.int('complete_account')
    t.string('complete_notes')
    t.int('details_status')
    t.string('training_date')
    t.field('bill_cycle', { type: 'DateTime' })
    t.string('renew_interval')
    t.int('exclude_reports')
    t.field('sub_start_date', { type: 'DateTime' })
    t.string('price_range')
    t.string('stripe_customer_id')
    t.string('stripe_subscription_id')
    t.boolean('trial')
    t.float('storage')
    t.int('free_users')
    t.string('gc_customer_id')
    t.int('low_credit_amount')
    t.int('low_sms_action')
    t.int('activity_logs')
    t.int('account_live')
    t.float('discount')
    t.string('gc_plan_id')
    t.string('support_plan')
    t.float('support_fee')
    t.string('gc_support_plan_id')
    t.float('enterprise_user_cost')
    t.string('gc_enterprise_plan_id')
    t.float('enterprise_fee')
    t.float('gc_amount')
    t.boolean('leave_alert')
    t.float('stripe_fee')
    t.string('stripe_fee_type')
    t.string('previous_system')
    t.string('am_group')
    t.int('phone_support')
    t.int('slack_support')
    t.int('whatsapp_support')
    t.int('multiple_locations')
    t.float('commission_rate')
    t.string('live_server')
    t.string('sandbox_server')
    t.int('server_comp_id')
    t.string('partner_id')
    t.int('advanced_marketing_addon')
    t.nullable.int('free_months')
    t.nullable.boolean('hide_in_comps')
    t.nullable.field('am_start_date', { type: 'DateTime' })
    t.nullable.int('trainer_id')
    t.nullable.int('onboarder_id')
    t.nullable.int('is_referral')
    t.field('Company', {
      type: 'Company',
      resolve(root: any) {
        return root.Company
      },
    })
  },
})
