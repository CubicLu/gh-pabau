mutation passwordReset($userId: Int!, $token: String!, $newPassword: String!) {
  resetPassword(userId: $userId, token: $token, newPassword: $newPassword)
}

mutation sendEmailToValidateUser(
  $to: [String]!
  $subject: String
  $text: String
  $html: String
  $templateType: String
  $fields: [DynamicTemplateData]
) {
  sendEmailWithoutLogIn(
    to: $to
    subject: $subject
    text: $text
    html: $html
    templateType: $templateType
    fields: $fields
  ) {
    success
  }
}

query tokenVerification($token: String!){
  findFirstPasswordResetAuth(
    where:{
      key_code: {equals: $token}
    },
    orderBy:{
      date: desc
    }
  ){
    username
    User{
      CompanyDetails{
        company_name
      }
    }
  }
}
