import { gql } from '@apollo/client';
import * as Apollo from '@apollo/client';
export type Maybe<T> = T | null;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
const defaultOptions =  {}
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: string;
  String: string;
  Boolean: boolean;
  Int: number;
  Float: number;
  /** Date custom scalar type */
  DateTime: any;
  bigint: any;
  date: any;
  json: any;
  jsonb: any;
  numeric: any;
  time: any;
  timestamptz: any;
  timetz: any;
  uuid: any;
};

export type AcLog = {
  __typename?: 'AcLog';
  action_id?: Maybe<Scalars['Int']>;
  critical?: Maybe<Scalars['Boolean']>;
  date?: Maybe<Scalars['DateTime']>;
  humanize?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  ipv4?: Maybe<Scalars['Int']>;
  occupier?: Maybe<Scalars['Int']>;
  row_aff?: Maybe<Scalars['Int']>;
  row_data?: Maybe<Scalars['String']>;
  row_id?: Maybe<Scalars['Int']>;
  url_id?: Maybe<Scalars['Int']>;
  user_agent?: Maybe<Scalars['String']>;
  user_id?: Maybe<Scalars['Int']>;
};

export type AcLogAction = {
  __typename?: 'AcLogAction';
  action_name?: Maybe<Scalars['String']>;
  action_status?: Maybe<Scalars['Boolean']>;
  command?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  pabauid?: Maybe<Scalars['String']>;
  row_aff?: Maybe<Scalars['Int']>;
  row_id?: Maybe<Scalars['Int']>;
  table_aff?: Maybe<Scalars['String']>;
};

export type AcLogActionCreateInput = {
  action_name: Scalars['String'];
  action_status: Scalars['Boolean'];
  command: Scalars['String'];
  pabauid: Scalars['String'];
  row_aff: Scalars['Int'];
  row_id: Scalars['Int'];
  table_aff: Scalars['String'];
};

export type AcLogActionOrderByInput = {
  action_name?: Maybe<SortOrder>;
  action_status?: Maybe<SortOrder>;
  command?: Maybe<SortOrder>;
  id?: Maybe<SortOrder>;
  pabauid?: Maybe<SortOrder>;
  row_aff?: Maybe<SortOrder>;
  row_id?: Maybe<SortOrder>;
  table_aff?: Maybe<SortOrder>;
};

export type AcLogActionUpdateInput = {
  action_name?: Maybe<StringFieldUpdateOperationsInput>;
  action_status?: Maybe<BoolFieldUpdateOperationsInput>;
  command?: Maybe<StringFieldUpdateOperationsInput>;
  pabauid?: Maybe<StringFieldUpdateOperationsInput>;
  row_aff?: Maybe<IntFieldUpdateOperationsInput>;
  row_id?: Maybe<IntFieldUpdateOperationsInput>;
  table_aff?: Maybe<StringFieldUpdateOperationsInput>;
};

export type AcLogActionUpdateManyMutationInput = {
  action_name?: Maybe<StringFieldUpdateOperationsInput>;
  action_status?: Maybe<BoolFieldUpdateOperationsInput>;
  command?: Maybe<StringFieldUpdateOperationsInput>;
  pabauid?: Maybe<StringFieldUpdateOperationsInput>;
  row_aff?: Maybe<IntFieldUpdateOperationsInput>;
  row_id?: Maybe<IntFieldUpdateOperationsInput>;
  table_aff?: Maybe<StringFieldUpdateOperationsInput>;
};

export type AcLogActionWhereInput = {
  AND?: Maybe<Array<Maybe<AcLogActionWhereInput>>>;
  NOT?: Maybe<Array<Maybe<AcLogActionWhereInput>>>;
  OR?: Maybe<Array<Maybe<AcLogActionWhereInput>>>;
  action_name?: Maybe<StringFilter>;
  action_status?: Maybe<BoolFilter>;
  command?: Maybe<StringFilter>;
  id?: Maybe<IntFilter>;
  pabauid?: Maybe<StringFilter>;
  row_aff?: Maybe<IntFilter>;
  row_id?: Maybe<IntFilter>;
  table_aff?: Maybe<StringFilter>;
};

export type AcLogActionWhereUniqueInput = {
  id?: Maybe<Scalars['Int']>;
};

export type AcLogCreateInput = {
  action_id: Scalars['Int'];
  critical: Scalars['Boolean'];
  date: Scalars['DateTime'];
  humanize?: Maybe<Scalars['String']>;
  ipv4: Scalars['Int'];
  occupier: Scalars['Int'];
  row_aff: Scalars['Int'];
  row_data?: Maybe<Scalars['String']>;
  row_id: Scalars['Int'];
  url_id: Scalars['Int'];
  user_agent: Scalars['String'];
  user_id: Scalars['Int'];
};

export type AcLogOrderByInput = {
  action_id?: Maybe<SortOrder>;
  critical?: Maybe<SortOrder>;
  date?: Maybe<SortOrder>;
  humanize?: Maybe<SortOrder>;
  id?: Maybe<SortOrder>;
  ipv4?: Maybe<SortOrder>;
  occupier?: Maybe<SortOrder>;
  row_aff?: Maybe<SortOrder>;
  row_data?: Maybe<SortOrder>;
  row_id?: Maybe<SortOrder>;
  url_id?: Maybe<SortOrder>;
  user_agent?: Maybe<SortOrder>;
  user_id?: Maybe<SortOrder>;
};

export type AcLogUpdateInput = {
  action_id?: Maybe<IntFieldUpdateOperationsInput>;
  critical?: Maybe<BoolFieldUpdateOperationsInput>;
  date?: Maybe<DateTimeFieldUpdateOperationsInput>;
  humanize?: Maybe<NullableStringFieldUpdateOperationsInput>;
  ipv4?: Maybe<IntFieldUpdateOperationsInput>;
  occupier?: Maybe<IntFieldUpdateOperationsInput>;
  row_aff?: Maybe<IntFieldUpdateOperationsInput>;
  row_data?: Maybe<NullableStringFieldUpdateOperationsInput>;
  row_id?: Maybe<IntFieldUpdateOperationsInput>;
  url_id?: Maybe<IntFieldUpdateOperationsInput>;
  user_agent?: Maybe<StringFieldUpdateOperationsInput>;
  user_id?: Maybe<IntFieldUpdateOperationsInput>;
};

export type AcLogUpdateManyMutationInput = {
  action_id?: Maybe<IntFieldUpdateOperationsInput>;
  critical?: Maybe<BoolFieldUpdateOperationsInput>;
  date?: Maybe<DateTimeFieldUpdateOperationsInput>;
  humanize?: Maybe<NullableStringFieldUpdateOperationsInput>;
  ipv4?: Maybe<IntFieldUpdateOperationsInput>;
  occupier?: Maybe<IntFieldUpdateOperationsInput>;
  row_aff?: Maybe<IntFieldUpdateOperationsInput>;
  row_data?: Maybe<NullableStringFieldUpdateOperationsInput>;
  row_id?: Maybe<IntFieldUpdateOperationsInput>;
  url_id?: Maybe<IntFieldUpdateOperationsInput>;
  user_agent?: Maybe<StringFieldUpdateOperationsInput>;
  user_id?: Maybe<IntFieldUpdateOperationsInput>;
};

export type AcLogUrl = {
  __typename?: 'AcLogUrl';
  file?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  referer?: Maybe<Scalars['String']>;
  url?: Maybe<Scalars['String']>;
};

export type AcLogUrlCreateInput = {
  file: Scalars['String'];
  referer: Scalars['String'];
  url: Scalars['String'];
};

export type AcLogUrlOrderByInput = {
  file?: Maybe<SortOrder>;
  id?: Maybe<SortOrder>;
  referer?: Maybe<SortOrder>;
  url?: Maybe<SortOrder>;
};

export type AcLogUrlUpdateInput = {
  file?: Maybe<StringFieldUpdateOperationsInput>;
  referer?: Maybe<StringFieldUpdateOperationsInput>;
  url?: Maybe<StringFieldUpdateOperationsInput>;
};

export type AcLogUrlUpdateManyMutationInput = {
  file?: Maybe<StringFieldUpdateOperationsInput>;
  referer?: Maybe<StringFieldUpdateOperationsInput>;
  url?: Maybe<StringFieldUpdateOperationsInput>;
};

export type AcLogUrlWhereInput = {
  AND?: Maybe<Array<Maybe<AcLogUrlWhereInput>>>;
  NOT?: Maybe<Array<Maybe<AcLogUrlWhereInput>>>;
  OR?: Maybe<Array<Maybe<AcLogUrlWhereInput>>>;
  file?: Maybe<StringFilter>;
  id?: Maybe<IntFilter>;
  referer?: Maybe<StringFilter>;
  url?: Maybe<StringFilter>;
};

export type AcLogUrlWhereUniqueInput = {
  id?: Maybe<Scalars['Int']>;
};

export type AcLogWhereInput = {
  AND?: Maybe<Array<Maybe<AcLogWhereInput>>>;
  NOT?: Maybe<Array<Maybe<AcLogWhereInput>>>;
  OR?: Maybe<Array<Maybe<AcLogWhereInput>>>;
  action_id?: Maybe<IntFilter>;
  critical?: Maybe<BoolFilter>;
  date?: Maybe<DateTimeFilter>;
  humanize?: Maybe<StringNullableFilter>;
  id?: Maybe<IntFilter>;
  ipv4?: Maybe<IntFilter>;
  occupier?: Maybe<IntFilter>;
  row_aff?: Maybe<IntFilter>;
  row_data?: Maybe<StringNullableFilter>;
  row_id?: Maybe<IntFilter>;
  url_id?: Maybe<IntFilter>;
  user_agent?: Maybe<StringFilter>;
  user_id?: Maybe<IntFilter>;
};

export type AcLogWhereUniqueInput = {
  id?: Maybe<Scalars['Int']>;
};

export type AcceptEmailToken = {
  __typename?: 'AcceptEmailToken';
  company?: Maybe<Company>;
  company_id?: Maybe<Scalars['Int']>;
  email?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  token?: Maybe<Scalars['Int']>;
};

export type AcceptEmailTokenCreateInput = {
  company: CompanyCreateNestedOneWithoutAcceptEmailTokenInput;
  email: Scalars['String'];
  token: Scalars['Int'];
};

export type AcceptEmailTokenCreateNestedManyWithoutCompanyInput = {
  connect?: Maybe<Array<Maybe<AcceptEmailTokenWhereUniqueInput>>>;
  connectOrCreate?: Maybe<Array<Maybe<AcceptEmailTokenCreateOrConnectWithoutCompanyInput>>>;
  create?: Maybe<Array<Maybe<AcceptEmailTokenCreateWithoutCompanyInput>>>;
};

export type AcceptEmailTokenCreateOrConnectWithoutCompanyInput = {
  create: AcceptEmailTokenUncheckedCreateWithoutCompanyInput;
  where: AcceptEmailTokenWhereUniqueInput;
};

export type AcceptEmailTokenCreateWithoutCompanyInput = {
  email: Scalars['String'];
  token: Scalars['Int'];
};

export type AcceptEmailTokenListRelationFilter = {
  every?: Maybe<AcceptEmailTokenWhereInput>;
  none?: Maybe<AcceptEmailTokenWhereInput>;
  some?: Maybe<AcceptEmailTokenWhereInput>;
};

export type AcceptEmailTokenOrderByInput = {
  company_id?: Maybe<SortOrder>;
  email?: Maybe<SortOrder>;
  id?: Maybe<SortOrder>;
  token?: Maybe<SortOrder>;
};

export type AcceptEmailTokenScalarWhereInput = {
  AND?: Maybe<Array<Maybe<AcceptEmailTokenScalarWhereInput>>>;
  NOT?: Maybe<Array<Maybe<AcceptEmailTokenScalarWhereInput>>>;
  OR?: Maybe<Array<Maybe<AcceptEmailTokenScalarWhereInput>>>;
  company_id?: Maybe<IntFilter>;
  email?: Maybe<StringFilter>;
  id?: Maybe<IntFilter>;
  token?: Maybe<IntFilter>;
};

export type AcceptEmailTokenUncheckedCreateNestedManyWithoutCompanyInput = {
  connect?: Maybe<Array<Maybe<AcceptEmailTokenWhereUniqueInput>>>;
  connectOrCreate?: Maybe<Array<Maybe<AcceptEmailTokenCreateOrConnectWithoutCompanyInput>>>;
  create?: Maybe<Array<Maybe<AcceptEmailTokenCreateWithoutCompanyInput>>>;
};

export type AcceptEmailTokenUncheckedCreateWithoutCompanyInput = {
  email: Scalars['String'];
  id?: Maybe<Scalars['Int']>;
  token: Scalars['Int'];
};

export type AcceptEmailTokenUncheckedUpdateManyWithoutAcceptEmailTokenInput = {
  email?: Maybe<StringFieldUpdateOperationsInput>;
  id?: Maybe<IntFieldUpdateOperationsInput>;
  token?: Maybe<IntFieldUpdateOperationsInput>;
};

export type AcceptEmailTokenUncheckedUpdateManyWithoutCompanyInput = {
  connect?: Maybe<Array<Maybe<AcceptEmailTokenWhereUniqueInput>>>;
  connectOrCreate?: Maybe<Array<Maybe<AcceptEmailTokenCreateOrConnectWithoutCompanyInput>>>;
  create?: Maybe<Array<Maybe<AcceptEmailTokenCreateWithoutCompanyInput>>>;
  delete?: Maybe<Array<Maybe<AcceptEmailTokenWhereUniqueInput>>>;
  deleteMany?: Maybe<Array<Maybe<AcceptEmailTokenScalarWhereInput>>>;
  disconnect?: Maybe<Array<Maybe<AcceptEmailTokenWhereUniqueInput>>>;
  set?: Maybe<Array<Maybe<AcceptEmailTokenWhereUniqueInput>>>;
  update?: Maybe<Array<Maybe<AcceptEmailTokenUpdateWithWhereUniqueWithoutCompanyInput>>>;
  updateMany?: Maybe<Array<Maybe<AcceptEmailTokenUpdateManyWithWhereWithoutCompanyInput>>>;
  upsert?: Maybe<Array<Maybe<AcceptEmailTokenUpsertWithWhereUniqueWithoutCompanyInput>>>;
};

export type AcceptEmailTokenUncheckedUpdateWithoutCompanyInput = {
  email?: Maybe<StringFieldUpdateOperationsInput>;
  id?: Maybe<IntFieldUpdateOperationsInput>;
  token?: Maybe<IntFieldUpdateOperationsInput>;
};

export type AcceptEmailTokenUpdateInput = {
  company?: Maybe<CompanyUpdateOneRequiredWithoutAcceptEmailTokenInput>;
  email?: Maybe<StringFieldUpdateOperationsInput>;
  token?: Maybe<IntFieldUpdateOperationsInput>;
};

export type AcceptEmailTokenUpdateManyMutationInput = {
  email?: Maybe<StringFieldUpdateOperationsInput>;
  token?: Maybe<IntFieldUpdateOperationsInput>;
};

export type AcceptEmailTokenUpdateManyWithWhereWithoutCompanyInput = {
  data: AcceptEmailTokenUncheckedUpdateManyWithoutAcceptEmailTokenInput;
  where: AcceptEmailTokenScalarWhereInput;
};

export type AcceptEmailTokenUpdateManyWithoutCompanyInput = {
  connect?: Maybe<Array<Maybe<AcceptEmailTokenWhereUniqueInput>>>;
  connectOrCreate?: Maybe<Array<Maybe<AcceptEmailTokenCreateOrConnectWithoutCompanyInput>>>;
  create?: Maybe<Array<Maybe<AcceptEmailTokenCreateWithoutCompanyInput>>>;
  delete?: Maybe<Array<Maybe<AcceptEmailTokenWhereUniqueInput>>>;
  deleteMany?: Maybe<Array<Maybe<AcceptEmailTokenScalarWhereInput>>>;
  disconnect?: Maybe<Array<Maybe<AcceptEmailTokenWhereUniqueInput>>>;
  set?: Maybe<Array<Maybe<AcceptEmailTokenWhereUniqueInput>>>;
  update?: Maybe<Array<Maybe<AcceptEmailTokenUpdateWithWhereUniqueWithoutCompanyInput>>>;
  updateMany?: Maybe<Array<Maybe<AcceptEmailTokenUpdateManyWithWhereWithoutCompanyInput>>>;
  upsert?: Maybe<Array<Maybe<AcceptEmailTokenUpsertWithWhereUniqueWithoutCompanyInput>>>;
};

export type AcceptEmailTokenUpdateWithWhereUniqueWithoutCompanyInput = {
  data: AcceptEmailTokenUncheckedUpdateWithoutCompanyInput;
  where: AcceptEmailTokenWhereUniqueInput;
};

export type AcceptEmailTokenUpsertWithWhereUniqueWithoutCompanyInput = {
  create: AcceptEmailTokenUncheckedCreateWithoutCompanyInput;
  update: AcceptEmailTokenUncheckedUpdateWithoutCompanyInput;
  where: AcceptEmailTokenWhereUniqueInput;
};

export type AcceptEmailTokenWhereInput = {
  AND?: Maybe<Array<Maybe<AcceptEmailTokenWhereInput>>>;
  NOT?: Maybe<Array<Maybe<AcceptEmailTokenWhereInput>>>;
  OR?: Maybe<Array<Maybe<AcceptEmailTokenWhereInput>>>;
  company?: Maybe<CompanyWhereInput>;
  company_id?: Maybe<IntFilter>;
  email?: Maybe<StringFilter>;
  id?: Maybe<IntFilter>;
  token?: Maybe<IntFilter>;
};

export type AcceptEmailTokenWhereUniqueInput = {
  id?: Maybe<Scalars['Int']>;
};

export type AccountBalance = {
  __typename?: 'AccountBalance';
  balance?: Maybe<Scalars['Float']>;
  company?: Maybe<Company>;
  company_id?: Maybe<Scalars['Int']>;
  contact_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  imported?: Maybe<Scalars['Int']>;
  insurance_company_id?: Maybe<Scalars['Int']>;
};

export type AccountBalanceCreateInput = {
  balance: Scalars['Float'];
  company: CompanyCreateNestedOneWithoutAccountBalanceInput;
  contact_id?: Maybe<Scalars['Int']>;
  imported: Scalars['Int'];
  insurance_company_id: Scalars['Int'];
};

export type AccountBalanceCreateNestedManyWithoutCompanyInput = {
  connect?: Maybe<Array<Maybe<AccountBalanceWhereUniqueInput>>>;
  connectOrCreate?: Maybe<Array<Maybe<AccountBalanceCreateOrConnectWithoutCompanyInput>>>;
  create?: Maybe<Array<Maybe<AccountBalanceCreateWithoutCompanyInput>>>;
};

export type AccountBalanceCreateOrConnectWithoutCompanyInput = {
  create: AccountBalanceUncheckedCreateWithoutCompanyInput;
  where: AccountBalanceWhereUniqueInput;
};

export type AccountBalanceCreateWithoutCompanyInput = {
  balance: Scalars['Float'];
  contact_id?: Maybe<Scalars['Int']>;
  imported: Scalars['Int'];
  insurance_company_id: Scalars['Int'];
};

export type AccountBalanceListRelationFilter = {
  every?: Maybe<AccountBalanceWhereInput>;
  none?: Maybe<AccountBalanceWhereInput>;
  some?: Maybe<AccountBalanceWhereInput>;
};

export type AccountBalanceLog = {
  __typename?: 'AccountBalanceLog';
  amount?: Maybe<Scalars['Float']>;
  company_id?: Maybe<Scalars['Int']>;
  contact_id?: Maybe<Scalars['Int']>;
  date_time?: Maybe<Scalars['Int']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  imported?: Maybe<Scalars['Int']>;
  insurance_company_id?: Maybe<Scalars['Int']>;
  product_id?: Maybe<Scalars['Int']>;
  ref_sale_id?: Maybe<Scalars['Int']>;
  referral_id?: Maybe<Scalars['Int']>;
  sale_id?: Maybe<Scalars['Int']>;
};

export type AccountBalanceLogCreateInput = {
  amount: Scalars['Float'];
  company_id: Scalars['Int'];
  contact_id: Scalars['Int'];
  date_time: Scalars['Int'];
  description: Scalars['String'];
  imported: Scalars['Int'];
  insurance_company_id: Scalars['Int'];
  product_id?: Maybe<Scalars['Int']>;
  ref_sale_id: Scalars['Int'];
  referral_id: Scalars['Int'];
  sale_id: Scalars['Int'];
};

export type AccountBalanceLogOrderByInput = {
  amount?: Maybe<SortOrder>;
  company_id?: Maybe<SortOrder>;
  contact_id?: Maybe<SortOrder>;
  date_time?: Maybe<SortOrder>;
  description?: Maybe<SortOrder>;
  id?: Maybe<SortOrder>;
  imported?: Maybe<SortOrder>;
  insurance_company_id?: Maybe<SortOrder>;
  product_id?: Maybe<SortOrder>;
  ref_sale_id?: Maybe<SortOrder>;
  referral_id?: Maybe<SortOrder>;
  sale_id?: Maybe<SortOrder>;
};

export type AccountBalanceLogUpdateInput = {
  amount?: Maybe<FloatFieldUpdateOperationsInput>;
  company_id?: Maybe<IntFieldUpdateOperationsInput>;
  contact_id?: Maybe<IntFieldUpdateOperationsInput>;
  date_time?: Maybe<IntFieldUpdateOperationsInput>;
  description?: Maybe<StringFieldUpdateOperationsInput>;
  imported?: Maybe<IntFieldUpdateOperationsInput>;
  insurance_company_id?: Maybe<IntFieldUpdateOperationsInput>;
  product_id?: Maybe<NullableIntFieldUpdateOperationsInput>;
  ref_sale_id?: Maybe<IntFieldUpdateOperationsInput>;
  referral_id?: Maybe<IntFieldUpdateOperationsInput>;
  sale_id?: Maybe<IntFieldUpdateOperationsInput>;
};

export type AccountBalanceLogUpdateManyMutationInput = {
  amount?: Maybe<FloatFieldUpdateOperationsInput>;
  company_id?: Maybe<IntFieldUpdateOperationsInput>;
  contact_id?: Maybe<IntFieldUpdateOperationsInput>;
  date_time?: Maybe<IntFieldUpdateOperationsInput>;
  description?: Maybe<StringFieldUpdateOperationsInput>;
  imported?: Maybe<IntFieldUpdateOperationsInput>;
  insurance_company_id?: Maybe<IntFieldUpdateOperationsInput>;
  product_id?: Maybe<NullableIntFieldUpdateOperationsInput>;
  ref_sale_id?: Maybe<IntFieldUpdateOperationsInput>;
  referral_id?: Maybe<IntFieldUpdateOperationsInput>;
  sale_id?: Maybe<IntFieldUpdateOperationsInput>;
};

export type AccountBalanceLogWhereInput = {
  AND?: Maybe<Array<Maybe<AccountBalanceLogWhereInput>>>;
  NOT?: Maybe<Array<Maybe<AccountBalanceLogWhereInput>>>;
  OR?: Maybe<Array<Maybe<AccountBalanceLogWhereInput>>>;
  amount?: Maybe<FloatFilter>;
  company_id?: Maybe<IntFilter>;
  contact_id?: Maybe<IntFilter>;
  date_time?: Maybe<IntFilter>;
  description?: Maybe<StringFilter>;
  id?: Maybe<IntFilter>;
  imported?: Maybe<IntFilter>;
  insurance_company_id?: Maybe<IntFilter>;
  product_id?: Maybe<IntNullableFilter>;
  ref_sale_id?: Maybe<IntFilter>;
  referral_id?: Maybe<IntFilter>;
  sale_id?: Maybe<IntFilter>;
};

export type AccountBalanceLogWhereUniqueInput = {
  id?: Maybe<Scalars['Int']>;
};

export type AccountBalanceOrderByInput = {
  balance?: Maybe<SortOrder>;
  company_id?: Maybe<SortOrder>;
  contact_id?: Maybe<SortOrder>;
  id?: Maybe<SortOrder>;
  imported?: Maybe<SortOrder>;
  insurance_company_id?: Maybe<SortOrder>;
};

export type AccountBalanceScalarWhereInput = {
  AND?: Maybe<Array<Maybe<AccountBalanceScalarWhereInput>>>;
  NOT?: Maybe<Array<Maybe<AccountBalanceScalarWhereInput>>>;
  OR?: Maybe<Array<Maybe<AccountBalanceScalarWhereInput>>>;
  balance?: Maybe<FloatFilter>;
  company_id?: Maybe<IntFilter>;
  contact_id?: Maybe<IntNullableFilter>;
  id?: Maybe<IntFilter>;
  imported?: Maybe<IntFilter>;
  insurance_company_id?: Maybe<IntFilter>;
};

export type AccountBalanceUncheckedCreateNestedManyWithoutCompanyInput = {
  connect?: Maybe<Array<Maybe<AccountBalanceWhereUniqueInput>>>;
  connectOrCreate?: Maybe<Array<Maybe<AccountBalanceCreateOrConnectWithoutCompanyInput>>>;
  create?: Maybe<Array<Maybe<AccountBalanceCreateWithoutCompanyInput>>>;
};

export type AccountBalanceUncheckedCreateWithoutCompanyInput = {
  balance: Scalars['Float'];
  contact_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  imported: Scalars['Int'];
  insurance_company_id: Scalars['Int'];
};

export type AccountBalanceUncheckedUpdateManyWithoutAccountBalanceInput = {
  balance?: Maybe<FloatFieldUpdateOperationsInput>;
  contact_id?: Maybe<NullableIntFieldUpdateOperationsInput>;
  id?: Maybe<IntFieldUpdateOperationsInput>;
  imported?: Maybe<IntFieldUpdateOperationsInput>;
  insurance_company_id?: Maybe<IntFieldUpdateOperationsInput>;
};

export type AccountBalanceUncheckedUpdateManyWithoutCompanyInput = {
  connect?: Maybe<Array<Maybe<AccountBalanceWhereUniqueInput>>>;
  connectOrCreate?: Maybe<Array<Maybe<AccountBalanceCreateOrConnectWithoutCompanyInput>>>;
  create?: Maybe<Array<Maybe<AccountBalanceCreateWithoutCompanyInput>>>;
  delete?: Maybe<Array<Maybe<AccountBalanceWhereUniqueInput>>>;
  deleteMany?: Maybe<Array<Maybe<AccountBalanceScalarWhereInput>>>;
  disconnect?: Maybe<Array<Maybe<AccountBalanceWhereUniqueInput>>>;
  set?: Maybe<Array<Maybe<AccountBalanceWhereUniqueInput>>>;
  update?: Maybe<Array<Maybe<AccountBalanceUpdateWithWhereUniqueWithoutCompanyInput>>>;
  updateMany?: Maybe<Array<Maybe<AccountBalanceUpdateManyWithWhereWithoutCompanyInput>>>;
  upsert?: Maybe<Array<Maybe<AccountBalanceUpsertWithWhereUniqueWithoutCompanyInput>>>;
};

export type AccountBalanceUncheckedUpdateWithoutCompanyInput = {
  balance?: Maybe<FloatFieldUpdateOperationsInput>;
  contact_id?: Maybe<NullableIntFieldUpdateOperationsInput>;
  id?: Maybe<IntFieldUpdateOperationsInput>;
  imported?: Maybe<IntFieldUpdateOperationsInput>;
  insurance_company_id?: Maybe<IntFieldUpdateOperationsInput>;
};

export type AccountBalanceUpdateInput = {
  balance?: Maybe<FloatFieldUpdateOperationsInput>;
  company?: Maybe<CompanyUpdateOneRequiredWithoutAccountBalanceInput>;
  contact_id?: Maybe<NullableIntFieldUpdateOperationsInput>;
  imported?: Maybe<IntFieldUpdateOperationsInput>;
  insurance_company_id?: Maybe<IntFieldUpdateOperationsInput>;
};

export type AccountBalanceUpdateManyMutationInput = {
  balance?: Maybe<FloatFieldUpdateOperationsInput>;
  contact_id?: Maybe<NullableIntFieldUpdateOperationsInput>;
  imported?: Maybe<IntFieldUpdateOperationsInput>;
  insurance_company_id?: Maybe<IntFieldUpdateOperationsInput>;
};

export type AccountBalanceUpdateManyWithWhereWithoutCompanyInput = {
  data: AccountBalanceUncheckedUpdateManyWithoutAccountBalanceInput;
  where: AccountBalanceScalarWhereInput;
};

export type AccountBalanceUpdateManyWithoutCompanyInput = {
  connect?: Maybe<Array<Maybe<AccountBalanceWhereUniqueInput>>>;
  connectOrCreate?: Maybe<Array<Maybe<AccountBalanceCreateOrConnectWithoutCompanyInput>>>;
  create?: Maybe<Array<Maybe<AccountBalanceCreateWithoutCompanyInput>>>;
  delete?: Maybe<Array<Maybe<AccountBalanceWhereUniqueInput>>>;
  deleteMany?: Maybe<Array<Maybe<AccountBalanceScalarWhereInput>>>;
  disconnect?: Maybe<Array<Maybe<AccountBalanceWhereUniqueInput>>>;
  set?: Maybe<Array<Maybe<AccountBalanceWhereUniqueInput>>>;
  update?: Maybe<Array<Maybe<AccountBalanceUpdateWithWhereUniqueWithoutCompanyInput>>>;
  updateMany?: Maybe<Array<Maybe<AccountBalanceUpdateManyWithWhereWithoutCompanyInput>>>;
  upsert?: Maybe<Array<Maybe<AccountBalanceUpsertWithWhereUniqueWithoutCompanyInput>>>;
};

export type AccountBalanceUpdateWithWhereUniqueWithoutCompanyInput = {
  data: AccountBalanceUncheckedUpdateWithoutCompanyInput;
  where: AccountBalanceWhereUniqueInput;
};

export type AccountBalanceUpsertWithWhereUniqueWithoutCompanyInput = {
  create: AccountBalanceUncheckedCreateWithoutCompanyInput;
  update: AccountBalanceUncheckedUpdateWithoutCompanyInput;
  where: AccountBalanceWhereUniqueInput;
};

export type AccountBalanceWhereInput = {
  AND?: Maybe<Array<Maybe<AccountBalanceWhereInput>>>;
  NOT?: Maybe<Array<Maybe<AccountBalanceWhereInput>>>;
  OR?: Maybe<Array<Maybe<AccountBalanceWhereInput>>>;
  balance?: Maybe<FloatFilter>;
  company?: Maybe<CompanyWhereInput>;
  company_id?: Maybe<IntFilter>;
  contact_id?: Maybe<IntNullableFilter>;
  id?: Maybe<IntFilter>;
  imported?: Maybe<IntFilter>;
  insurance_company_id?: Maybe<IntFilter>;
};

export type AccountBalanceWhereUniqueInput = {
  contact_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
};

export type AccountManager = {
  __typename?: 'AccountManager';
  address1?: Maybe<Scalars['String']>;
  address2?: Maybe<Scalars['String']>;
  address3?: Maybe<Scalars['String']>;
  alt_tel?: Maybe<Scalars['String']>;
  con_num_1?: Maybe<Scalars['String']>;
  con_num_2?: Maybe<Scalars['String']>;
  con_num_3?: Maybe<Scalars['String']>;
  con_per_1?: Maybe<Scalars['String']>;
  con_per_2?: Maybe<Scalars['String']>;
  con_per_3?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  county?: Maybe<Scalars['String']>;
  created_date?: Maybe<Scalars['DateTime']>;
  email?: Maybe<Scalars['String']>;
  fax?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  modified_date?: Maybe<Scalars['DateTime']>;
  occupier?: Maybe<Scalars['Int']>;
  organisation_name?: Maybe<Scalars['String']>;
  organisation_number?: Maybe<Scalars['String']>;
  organisation_owner?: Maybe<Scalars['Int']>;
  organisation_status?: Maybe<Scalars['Int']>;
  organisation_type?: Maybe<Scalars['Int']>;
  post_code?: Maybe<Scalars['String']>;
  sla_contract?: Maybe<Scalars['Int']>;
  tel?: Maybe<Scalars['String']>;
  town?: Maybe<Scalars['String']>;
  vat_reg_id?: Maybe<Scalars['String']>;
  website?: Maybe<Scalars['String']>;
};

export type AccountManagerCreateInput = {
  address1?: Maybe<Scalars['String']>;
  address2?: Maybe<Scalars['String']>;
  address3?: Maybe<Scalars['String']>;
  alt_tel?: Maybe<Scalars['String']>;
  con_num_1: Scalars['String'];
  con_num_2: Scalars['String'];
  con_num_3: Scalars['String'];
  con_per_1: Scalars['String'];
  con_per_2: Scalars['String'];
  con_per_3: Scalars['String'];
  country?: Maybe<Scalars['String']>;
  county?: Maybe<Scalars['String']>;
  created_date?: Maybe<Scalars['DateTime']>;
  email?: Maybe<Scalars['String']>;
  fax?: Maybe<Scalars['String']>;
  modified_date?: Maybe<Scalars['DateTime']>;
  occupier?: Maybe<Scalars['Int']>;
  organisation_name?: Maybe<Scalars['String']>;
  organisation_number?: Maybe<Scalars['String']>;
  organisation_owner?: Maybe<Scalars['Int']>;
  organisation_status: Scalars['Int'];
  organisation_type?: Maybe<Scalars['Int']>;
  post_code?: Maybe<Scalars['String']>;
  sla_contract?: Maybe<Scalars['Int']>;
  tel?: Maybe<Scalars['String']>;
  town?: Maybe<Scalars['String']>;
  vat_reg_id: Scalars['String'];
  website?: Maybe<Scalars['String']>;
};

export type AccountManagerOrderByInput = {
  address1?: Maybe<SortOrder>;
  address2?: Maybe<SortOrder>;
  address3?: Maybe<SortOrder>;
  alt_tel?: Maybe<SortOrder>;
  con_num_1?: Maybe<SortOrder>;
  con_num_2?: Maybe<SortOrder>;
  con_num_3?: Maybe<SortOrder>;
  con_per_1?: Maybe<SortOrder>;
  con_per_2?: Maybe<SortOrder>;
  con_per_3?: Maybe<SortOrder>;
  country?: Maybe<SortOrder>;
  county?: Maybe<SortOrder>;
  created_date?: Maybe<SortOrder>;
  email?: Maybe<SortOrder>;
  fax?: Maybe<SortOrder>;
  id?: Maybe<SortOrder>;
  modified_date?: Maybe<SortOrder>;
  occupier?: Maybe<SortOrder>;
  organisation_name?: Maybe<SortOrder>;
  organisation_number?: Maybe<SortOrder>;
  organisation_owner?: Maybe<SortOrder>;
  organisation_status?: Maybe<SortOrder>;
  organisation_type?: Maybe<SortOrder>;
  post_code?: Maybe<SortOrder>;
  sla_contract?: Maybe<SortOrder>;
  tel?: Maybe<SortOrder>;
  town?: Maybe<SortOrder>;
  vat_reg_id?: Maybe<SortOrder>;
  website?: Maybe<SortOrder>;
};

export type AccountManagerUpdateInput = {
  address1?: Maybe<NullableStringFieldUpdateOperationsInput>;
  address2?: Maybe<NullableStringFieldUpdateOperationsInput>;
  address3?: Maybe<NullableStringFieldUpdateOperationsInput>;
  alt_tel?: Maybe<NullableStringFieldUpdateOperationsInput>;
  con_num_1?: Maybe<StringFieldUpdateOperationsInput>;
  con_num_2?: Maybe<StringFieldUpdateOperationsInput>;
  con_num_3?: Maybe<StringFieldUpdateOperationsInput>;
  con_per_1?: Maybe<StringFieldUpdateOperationsInput>;
  con_per_2?: Maybe<StringFieldUpdateOperationsInput>;
  con_per_3?: Maybe<StringFieldUpdateOperationsInput>;
  country?: Maybe<NullableStringFieldUpdateOperationsInput>;
  county?: Maybe<NullableStringFieldUpdateOperationsInput>;
  created_date?: Maybe<NullableDateTimeFieldUpdateOperationsInput>;
  email?: Maybe<NullableStringFieldUpdateOperationsInput>;
  fax?: Maybe<NullableStringFieldUpdateOperationsInput>;
  modified_date?: Maybe<NullableDateTimeFieldUpdateOperationsInput>;
  occupier?: Maybe<NullableIntFieldUpdateOperationsInput>;
  organisation_name?: Maybe<NullableStringFieldUpdateOperationsInput>;
  organisation_number?: Maybe<NullableStringFieldUpdateOperationsInput>;
  organisation_owner?: Maybe<NullableIntFieldUpdateOperationsInput>;
  organisation_status?: Maybe<IntFieldUpdateOperationsInput>;
  organisation_type?: Maybe<NullableIntFieldUpdateOperationsInput>;
  post_code?: Maybe<NullableStringFieldUpdateOperationsInput>;
  sla_contract?: Maybe<NullableIntFieldUpdateOperationsInput>;
  tel?: Maybe<NullableStringFieldUpdateOperationsInput>;
  town?: Maybe<NullableStringFieldUpdateOperationsInput>;
  vat_reg_id?: Maybe<StringFieldUpdateOperationsInput>;
  website?: Maybe<NullableStringFieldUpdateOperationsInput>;
};

export type AccountManagerUpdateManyMutationInput = {
  address1?: Maybe<NullableStringFieldUpdateOperationsInput>;
  address2?: Maybe<NullableStringFieldUpdateOperationsInput>;
  address3?: Maybe<NullableStringFieldUpdateOperationsInput>;
  alt_tel?: Maybe<NullableStringFieldUpdateOperationsInput>;
  con_num_1?: Maybe<StringFieldUpdateOperationsInput>;
  con_num_2?: Maybe<StringFieldUpdateOperationsInput>;
  con_num_3?: Maybe<StringFieldUpdateOperationsInput>;
  con_per_1?: Maybe<StringFieldUpdateOperationsInput>;
  con_per_2?: Maybe<StringFieldUpdateOperationsInput>;
  con_per_3?: Maybe<StringFieldUpdateOperationsInput>;
  country?: Maybe<NullableStringFieldUpdateOperationsInput>;
  county?: Maybe<NullableStringFieldUpdateOperationsInput>;
  created_date?: Maybe<NullableDateTimeFieldUpdateOperationsInput>;
  email?: Maybe<NullableStringFieldUpdateOperationsInput>;
  fax?: Maybe<NullableStringFieldUpdateOperationsInput>;
  modified_date?: Maybe<NullableDateTimeFieldUpdateOperationsInput>;
  occupier?: Maybe<NullableIntFieldUpdateOperationsInput>;
  organisation_name?: Maybe<NullableStringFieldUpdateOperationsInput>;
  organisation_number?: Maybe<NullableStringFieldUpdateOperationsInput>;
  organisation_owner?: Maybe<NullableIntFieldUpdateOperationsInput>;
  organisation_status?: Maybe<IntFieldUpdateOperationsInput>;
  organisation_type?: Maybe<NullableIntFieldUpdateOperationsInput>;
  post_code?: Maybe<NullableStringFieldUpdateOperationsInput>;
  sla_contract?: Maybe<NullableIntFieldUpdateOperationsInput>;
  tel?: Maybe<NullableStringFieldUpdateOperationsInput>;
  town?: Maybe<NullableStringFieldUpdateOperationsInput>;
  vat_reg_id?: Maybe<StringFieldUpdateOperationsInput>;
  website?: Maybe<NullableStringFieldUpdateOperationsInput>;
};

export type AccountManagerWhereInput = {
  AND?: Maybe<Array<Maybe<AccountManagerWhereInput>>>;
  NOT?: Maybe<Array<Maybe<AccountManagerWhereInput>>>;
  OR?: Maybe<Array<Maybe<AccountManagerWhereInput>>>;
  address1?: Maybe<StringNullableFilter>;
  address2?: Maybe<StringNullableFilter>;
  address3?: Maybe<StringNullableFilter>;
  alt_tel?: Maybe<StringNullableFilter>;
  con_num_1?: Maybe<StringFilter>;
  con_num_2?: Maybe<StringFilter>;
  con_num_3?: Maybe<StringFilter>;
  con_per_1?: Maybe<StringFilter>;
  con_per_2?: Maybe<StringFilter>;
  con_per_3?: Maybe<StringFilter>;
  country?: Maybe<StringNullableFilter>;
  county?: Maybe<StringNullableFilter>;
  created_date?: Maybe<DateTimeNullableFilter>;
  email?: Maybe<StringNullableFilter>;
  fax?: Maybe<StringNullableFilter>;
  id?: Maybe<IntFilter>;
  modified_date?: Maybe<DateTimeNullableFilter>;
  occupier?: Maybe<IntNullableFilter>;
  organisation_name?: Maybe<StringNullableFilter>;
  organisation_number?: Maybe<StringNullableFilter>;
  organisation_owner?: Maybe<IntNullableFilter>;
  organisation_status?: Maybe<IntFilter>;
  organisation_type?: Maybe<IntNullableFilter>;
  post_code?: Maybe<StringNullableFilter>;
  sla_contract?: Maybe<IntNullableFilter>;
  tel?: Maybe<StringNullableFilter>;
  town?: Maybe<StringNullableFilter>;
  vat_reg_id?: Maybe<StringFilter>;
  website?: Maybe<StringNullableFilter>;
};

export type AccountManagerWhereUniqueInput = {
  id?: Maybe<Scalars['Int']>;
};

export type AdvertCampaign = {
  __typename?: 'AdvertCampaign';
  Clicks?: Maybe<Scalars['Int']>;
  advert_name?: Maybe<Scalars['String']>;
  advert_reach?: Maybe<Scalars['Int']>;
  advert_type?: Maybe<Scalars['String']>;
  attach_id?: Maybe<Scalars['Int']>;
  attach_time?: Maybe<Scalars['String']>;
  attached_by?: Maybe<Scalars['String']>;
  campaign_audience?: Maybe<Scalars['String']>;
  campaign_budget?: Maybe<Scalars['String']>;
  campaign_id?: Maybe<Scalars['Int']>;
  campaign_interval?: Maybe<Scalars['String']>;
  cid?: Maybe<Scalars['Int']>;
  end?: Maybe<Scalars['String']>;
  engagement?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  start?: Maybe<Scalars['String']>;
  url?: Maybe<Scalars['String']>;
};

export type AdvertCampaignCreateInput = {
  Clicks: Scalars['Int'];
  advert_name: Scalars['String'];
  advert_reach: Scalars['Int'];
  advert_type: Scalars['String'];
  attach_id: Scalars['Int'];
  attach_time: Scalars['String'];
  attached_by: Scalars['String'];
  campaign_audience: Scalars['String'];
  campaign_budget: Scalars['String'];
  campaign_id: Scalars['Int'];
  campaign_interval: Scalars['String'];
  cid: Scalars['Int'];
  end: Scalars['String'];
  engagement: Scalars['String'];
  start: Scalars['String'];
  url: Scalars['String'];
};

export type AdvertCampaignOrderByInput = {
  Clicks?: Maybe<SortOrder>;
  advert_name?: Maybe<SortOrder>;
  advert_reach?: Maybe<SortOrder>;
  advert_type?: Maybe<SortOrder>;
  attach_id?: Maybe<SortOrder>;
  attach_time?: Maybe<SortOrder>;
  attached_by?: Maybe<SortOrder>;
  campaign_audience?: Maybe<SortOrder>;
  campaign_budget?: Maybe<SortOrder>;
  campaign_id?: Maybe<SortOrder>;
  campaign_interval?: Maybe<SortOrder>;
  cid?: Maybe<SortOrder>;
  end?: Maybe<SortOrder>;
  engagement?: Maybe<SortOrder>;
  id?: Maybe<SortOrder>;
  start?: Maybe<SortOrder>;
  url?: Maybe<SortOrder>;
};

export type AdvertCampaignUpdateInput = {
  Clicks?: Maybe<IntFieldUpdateOperationsInput>;
  advert_name?: Maybe<StringFieldUpdateOperationsInput>;
  advert_reach?: Maybe<IntFieldUpdateOperationsInput>;
  advert_type?: Maybe<StringFieldUpdateOperationsInput>;
  attach_id?: Maybe<IntFieldUpdateOperationsInput>;
  attach_time?: Maybe<StringFieldUpdateOperationsInput>;
  attached_by?: Maybe<StringFieldUpdateOperationsInput>;
  campaign_audience?: Maybe<StringFieldUpdateOperationsInput>;
  campaign_budget?: Maybe<StringFieldUpdateOperationsInput>;
  campaign_id?: Maybe<IntFieldUpdateOperationsInput>;
  campaign_interval?: Maybe<StringFieldUpdateOperationsInput>;
  cid?: Maybe<IntFieldUpdateOperationsInput>;
  end?: Maybe<StringFieldUpdateOperationsInput>;
  engagement?: Maybe<StringFieldUpdateOperationsInput>;
  start?: Maybe<StringFieldUpdateOperationsInput>;
  url?: Maybe<StringFieldUpdateOperationsInput>;
};

export type AdvertCampaignUpdateManyMutationInput = {
  Clicks?: Maybe<IntFieldUpdateOperationsInput>;
  advert_name?: Maybe<StringFieldUpdateOperationsInput>;
  advert_reach?: Maybe<IntFieldUpdateOperationsInput>;
  advert_type?: Maybe<StringFieldUpdateOperationsInput>;
  attach_id?: Maybe<IntFieldUpdateOperationsInput>;
  attach_time?: Maybe<StringFieldUpdateOperationsInput>;
  attached_by?: Maybe<StringFieldUpdateOperationsInput>;
  campaign_audience?: Maybe<StringFieldUpdateOperationsInput>;
  campaign_budget?: Maybe<StringFieldUpdateOperationsInput>;
  campaign_id?: Maybe<IntFieldUpdateOperationsInput>;
  campaign_interval?: Maybe<StringFieldUpdateOperationsInput>;
  cid?: Maybe<IntFieldUpdateOperationsInput>;
  end?: Maybe<StringFieldUpdateOperationsInput>;
  engagement?: Maybe<StringFieldUpdateOperationsInput>;
  start?: Maybe<StringFieldUpdateOperationsInput>;
  url?: Maybe<StringFieldUpdateOperationsInput>;
};

export type AdvertCampaignWhereInput = {
  AND?: Maybe<Array<Maybe<AdvertCampaignWhereInput>>>;
  Clicks?: Maybe<IntFilter>;
  NOT?: Maybe<Array<Maybe<AdvertCampaignWhereInput>>>;
  OR?: Maybe<Array<Maybe<AdvertCampaignWhereInput>>>;
  advert_name?: Maybe<StringFilter>;
  advert_reach?: Maybe<IntFilter>;
  advert_type?: Maybe<StringFilter>;
  attach_id?: Maybe<IntFilter>;
  attach_time?: Maybe<StringFilter>;
  attached_by?: Maybe<StringFilter>;
  campaign_audience?: Maybe<StringFilter>;
  campaign_budget?: Maybe<StringFilter>;
  campaign_id?: Maybe<IntFilter>;
  campaign_interval?: Maybe<StringFilter>;
  cid?: Maybe<IntFilter>;
  end?: Maybe<StringFilter>;
  engagement?: Maybe<StringFilter>;
  id?: Maybe<IntFilter>;
  start?: Maybe<StringFilter>;
  url?: Maybe<StringFilter>;
};

export type AdvertCampaignWhereUniqueInput = {
  id?: Maybe<Scalars['Int']>;
};

export type AffectedRowsOutput = {
  __typename?: 'AffectedRowsOutput';
  count?: Maybe<Scalars['Int']>;
};

export type ApiDebug = {
  __typename?: 'ApiDebug';
  api_code?: Maybe<Scalars['Int']>;
  company_id?: Maybe<Scalars['Int']>;
  created_date?: Maybe<Scalars['DateTime']>;
  data_received?: Maybe<Scalars['String']>;
  data_type?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
};

export type ApiDebugCreateInput = {
  api_code: Scalars['Int'];
  company_id: Scalars['Int'];
  created_date: Scalars['DateTime'];
  data_received: Scalars['String'];
  data_type: Scalars['String'];
};

export type ApiDebugOrderByInput = {
  api_code?: Maybe<SortOrder>;
  company_id?: Maybe<SortOrder>;
  created_date?: Maybe<SortOrder>;
  data_received?: Maybe<SortOrder>;
  data_type?: Maybe<SortOrder>;
  id?: Maybe<SortOrder>;
};

export type ApiDebugUpdateInput = {
  api_code?: Maybe<IntFieldUpdateOperationsInput>;
  company_id?: Maybe<IntFieldUpdateOperationsInput>;
  created_date?: Maybe<DateTimeFieldUpdateOperationsInput>;
  data_received?: Maybe<StringFieldUpdateOperationsInput>;
  data_type?: Maybe<StringFieldUpdateOperationsInput>;
};

export type ApiDebugUpdateManyMutationInput = {
  api_code?: Maybe<IntFieldUpdateOperationsInput>;
  company_id?: Maybe<IntFieldUpdateOperationsInput>;
  created_date?: Maybe<DateTimeFieldUpdateOperationsInput>;
  data_received?: Maybe<StringFieldUpdateOperationsInput>;
  data_type?: Maybe<StringFieldUpdateOperationsInput>;
};

export type ApiDebugWhereInput = {
  AND?: Maybe<Array<Maybe<ApiDebugWhereInput>>>;
  NOT?: Maybe<Array<Maybe<ApiDebugWhereInput>>>;
  OR?: Maybe<Array<Maybe<ApiDebugWhereInput>>>;
  api_code?: Maybe<IntFilter>;
  company_id?: Maybe<IntFilter>;
  created_date?: Maybe<DateTimeFilter>;
  data_received?: Maybe<StringFilter>;
  data_type?: Maybe<StringFilter>;
  id?: Maybe<IntFilter>;
};

export type ApiDebugWhereUniqueInput = {
  id?: Maybe<Scalars['Int']>;
};

export type ApiKey = {
  __typename?: 'ApiKey';
  api_key?: Maybe<Scalars['String']>;
  app_type?: Maybe<Scalars['String']>;
  bookings?: Maybe<Scalars['Int']>;
  company_id?: Maybe<Scalars['Int']>;
  contacts?: Maybe<Scalars['Int']>;
  created_date?: Maybe<Scalars['DateTime']>;
  financials?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  invoices?: Maybe<Scalars['Int']>;
  leads?: Maybe<Scalars['Int']>;
  locations?: Maybe<Scalars['Int']>;
  medical_forms?: Maybe<Scalars['Int']>;
  reports?: Maybe<Scalars['Int']>;
  services?: Maybe<Scalars['Int']>;
  staff?: Maybe<Scalars['Int']>;
};

export type ApiKeyCreateInput = {
  api_key: Scalars['String'];
  app_type: Scalars['String'];
  bookings?: Maybe<Scalars['Int']>;
  company_id: Scalars['Int'];
  contacts?: Maybe<Scalars['Int']>;
  created_date: Scalars['DateTime'];
  financials: Scalars['Int'];
  invoices?: Maybe<Scalars['Int']>;
  leads: Scalars['Int'];
  locations?: Maybe<Scalars['Int']>;
  medical_forms: Scalars['Int'];
  reports?: Maybe<Scalars['Int']>;
  services?: Maybe<Scalars['Int']>;
  staff?: Maybe<Scalars['Int']>;
};

export type ApiKeyOrderByInput = {
  api_key?: Maybe<SortOrder>;
  app_type?: Maybe<SortOrder>;
  bookings?: Maybe<SortOrder>;
  company_id?: Maybe<SortOrder>;
  contacts?: Maybe<SortOrder>;
  created_date?: Maybe<SortOrder>;
  financials?: Maybe<SortOrder>;
  id?: Maybe<SortOrder>;
  invoices?: Maybe<SortOrder>;
  leads?: Maybe<SortOrder>;
  locations?: Maybe<SortOrder>;
  medical_forms?: Maybe<SortOrder>;
  reports?: Maybe<SortOrder>;
  services?: Maybe<SortOrder>;
  staff?: Maybe<SortOrder>;
};

export type ApiKeyUpdateInput = {
  api_key?: Maybe<StringFieldUpdateOperationsInput>;
  app_type?: Maybe<StringFieldUpdateOperationsInput>;
  bookings?: Maybe<IntFieldUpdateOperationsInput>;
  company_id?: Maybe<IntFieldUpdateOperationsInput>;
  contacts?: Maybe<IntFieldUpdateOperationsInput>;
  created_date?: Maybe<DateTimeFieldUpdateOperationsInput>;
  financials?: Maybe<IntFieldUpdateOperationsInput>;
  invoices?: Maybe<IntFieldUpdateOperationsInput>;
  leads?: Maybe<IntFieldUpdateOperationsInput>;
  locations?: Maybe<IntFieldUpdateOperationsInput>;
  medical_forms?: Maybe<IntFieldUpdateOperationsInput>;
  reports?: Maybe<IntFieldUpdateOperationsInput>;
  services?: Maybe<IntFieldUpdateOperationsInput>;
  staff?: Maybe<IntFieldUpdateOperationsInput>;
};

export type ApiKeyUpdateManyMutationInput = {
  api_key?: Maybe<StringFieldUpdateOperationsInput>;
  app_type?: Maybe<StringFieldUpdateOperationsInput>;
  bookings?: Maybe<IntFieldUpdateOperationsInput>;
  company_id?: Maybe<IntFieldUpdateOperationsInput>;
  contacts?: Maybe<IntFieldUpdateOperationsInput>;
  created_date?: Maybe<DateTimeFieldUpdateOperationsInput>;
  financials?: Maybe<IntFieldUpdateOperationsInput>;
  invoices?: Maybe<IntFieldUpdateOperationsInput>;
  leads?: Maybe<IntFieldUpdateOperationsInput>;
  locations?: Maybe<IntFieldUpdateOperationsInput>;
  medical_forms?: Maybe<IntFieldUpdateOperationsInput>;
  reports?: Maybe<IntFieldUpdateOperationsInput>;
  services?: Maybe<IntFieldUpdateOperationsInput>;
  staff?: Maybe<IntFieldUpdateOperationsInput>;
};

export type ApiKeyWhereInput = {
  AND?: Maybe<Array<Maybe<ApiKeyWhereInput>>>;
  NOT?: Maybe<Array<Maybe<ApiKeyWhereInput>>>;
  OR?: Maybe<Array<Maybe<ApiKeyWhereInput>>>;
  api_key?: Maybe<StringFilter>;
  app_type?: Maybe<StringFilter>;
  bookings?: Maybe<IntFilter>;
  company_id?: Maybe<IntFilter>;
  contacts?: Maybe<IntFilter>;
  created_date?: Maybe<DateTimeFilter>;
  financials?: Maybe<IntFilter>;
  id?: Maybe<IntFilter>;
  invoices?: Maybe<IntFilter>;
  leads?: Maybe<IntFilter>;
  locations?: Maybe<IntFilter>;
  medical_forms?: Maybe<IntFilter>;
  reports?: Maybe<IntFilter>;
  services?: Maybe<IntFilter>;
  staff?: Maybe<IntFilter>;
};

export type ApiKeyWhereUniqueInput = {
  id?: Maybe<Scalars['Int']>;
};

export type AppBeforeAfter = {
  __typename?: 'AppBeforeAfter';
  after_img?: Maybe<Scalars['String']>;
  before_img?: Maybe<Scalars['String']>;
  company_id?: Maybe<Scalars['Int']>;
  contact_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  pass_key?: Maybe<Scalars['String']>;
};

export type AppBeforeAfterCreateInput = {
  after_img: Scalars['String'];
  before_img: Scalars['String'];
  company_id: Scalars['Int'];
  contact_id: Scalars['Int'];
  pass_key: Scalars['String'];
};

export type AppBeforeAfterOrderByInput = {
  after_img?: Maybe<SortOrder>;
  before_img?: Maybe<SortOrder>;
  company_id?: Maybe<SortOrder>;
  contact_id?: Maybe<SortOrder>;
  id?: Maybe<SortOrder>;
  pass_key?: Maybe<SortOrder>;
};

export type AppBeforeAfterUpdateInput = {
  after_img?: Maybe<StringFieldUpdateOperationsInput>;
  before_img?: Maybe<StringFieldUpdateOperationsInput>;
  company_id?: Maybe<IntFieldUpdateOperationsInput>;
  contact_id?: Maybe<IntFieldUpdateOperationsInput>;
  pass_key?: Maybe<StringFieldUpdateOperationsInput>;
};

export type AppBeforeAfterUpdateManyMutationInput = {
  after_img?: Maybe<StringFieldUpdateOperationsInput>;
  before_img?: Maybe<StringFieldUpdateOperationsInput>;
  company_id?: Maybe<IntFieldUpdateOperationsInput>;
  contact_id?: Maybe<IntFieldUpdateOperationsInput>;
  pass_key?: Maybe<StringFieldUpdateOperationsInput>;
};

export type AppBeforeAfterWhereInput = {
  AND?: Maybe<Array<Maybe<AppBeforeAfterWhereInput>>>;
  NOT?: Maybe<Array<Maybe<AppBeforeAfterWhereInput>>>;
  OR?: Maybe<Array<Maybe<AppBeforeAfterWhereInput>>>;
  after_img?: Maybe<StringFilter>;
  before_img?: Maybe<StringFilter>;
  company_id?: Maybe<IntFilter>;
  contact_id?: Maybe<IntFilter>;
  id?: Maybe<IntFilter>;
  pass_key?: Maybe<StringFilter>;
};

export type AppBeforeAfterWhereUniqueInput = {
  id?: Maybe<Scalars['Int']>;
};

export type AppPermission = {
  __typename?: 'AppPermission';
  appid?: Maybe<Scalars['String']>;
  company?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
};

export type AppPermissionCreateInput = {
  appid: Scalars['String'];
  company: Scalars['Int'];
};

export type AppPermissionOrderByInput = {
  appid?: Maybe<SortOrder>;
  company?: Maybe<SortOrder>;
  id?: Maybe<SortOrder>;
};

export type AppPermissionUpdateInput = {
  appid?: Maybe<StringFieldUpdateOperationsInput>;
  company?: Maybe<IntFieldUpdateOperationsInput>;
};

export type AppPermissionUpdateManyMutationInput = {
  appid?: Maybe<StringFieldUpdateOperationsInput>;
  company?: Maybe<IntFieldUpdateOperationsInput>;
};

export type AppPermissionWhereInput = {
  AND?: Maybe<Array<Maybe<AppPermissionWhereInput>>>;
  NOT?: Maybe<Array<Maybe<AppPermissionWhereInput>>>;
  OR?: Maybe<Array<Maybe<AppPermissionWhereInput>>>;
  appid?: Maybe<StringFilter>;
  company?: Maybe<IntFilter>;
  id?: Maybe<IntFilter>;
};

export type AppPermissionWhereUniqueInput = {
  id?: Maybe<Scalars['Int']>;
};

export type AppSubscription = {
  __typename?: 'AppSubscription';
  Description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  key_value?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  price?: Maybe<Scalars['Float']>;
};

export type AppSubscriptionCreateInput = {
  Description: Scalars['String'];
  key_value: Scalars['String'];
  name: Scalars['String'];
  price: Scalars['Float'];
};

export type AppSubscriptionOrderByInput = {
  Description?: Maybe<SortOrder>;
  id?: Maybe<SortOrder>;
  key_value?: Maybe<SortOrder>;
  name?: Maybe<SortOrder>;
  price?: Maybe<SortOrder>;
};

export type AppSubscriptionUpdateInput = {
  Description?: Maybe<StringFieldUpdateOperationsInput>;
  key_value?: Maybe<StringFieldUpdateOperationsInput>;
  name?: Maybe<StringFieldUpdateOperationsInput>;
  price?: Maybe<FloatFieldUpdateOperationsInput>;
};

export type AppSubscriptionUpdateManyMutationInput = {
  Description?: Maybe<StringFieldUpdateOperationsInput>;
  key_value?: Maybe<StringFieldUpdateOperationsInput>;
  name?: Maybe<StringFieldUpdateOperationsInput>;
  price?: Maybe<FloatFieldUpdateOperationsInput>;
};

export type AppSubscriptionWhereInput = {
  AND?: Maybe<Array<Maybe<AppSubscriptionWhereInput>>>;
  Description?: Maybe<StringFilter>;
  NOT?: Maybe<Array<Maybe<AppSubscriptionWhereInput>>>;
  OR?: Maybe<Array<Maybe<AppSubscriptionWhereInput>>>;
  id?: Maybe<IntFilter>;
  key_value?: Maybe<StringFilter>;
  name?: Maybe<StringFilter>;
  price?: Maybe<FloatFilter>;
};

export type AppSubscriptionWhereUniqueInput = {
  id?: Maybe<Scalars['Int']>;
};

export type AppSubscriptionsCompanyPrice = {
  __typename?: 'AppSubscriptionsCompanyPrice';
  app_key_value?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  occupier?: Maybe<Scalars['Int']>;
  price?: Maybe<Scalars['Float']>;
};

export type AppSubscriptionsCompanyPriceCreateInput = {
  app_key_value: Scalars['String'];
  occupier: Scalars['Int'];
  price: Scalars['Float'];
};

export type AppSubscriptionsCompanyPriceOrderByInput = {
  app_key_value?: Maybe<SortOrder>;
  id?: Maybe<SortOrder>;
  occupier?: Maybe<SortOrder>;
  price?: Maybe<SortOrder>;
};

export type AppSubscriptionsCompanyPriceUpdateInput = {
  app_key_value?: Maybe<StringFieldUpdateOperationsInput>;
  occupier?: Maybe<IntFieldUpdateOperationsInput>;
  price?: Maybe<FloatFieldUpdateOperationsInput>;
};

export type AppSubscriptionsCompanyPriceUpdateManyMutationInput = {
  app_key_value?: Maybe<StringFieldUpdateOperationsInput>;
  occupier?: Maybe<IntFieldUpdateOperationsInput>;
  price?: Maybe<FloatFieldUpdateOperationsInput>;
};

export type AppSubscriptionsCompanyPriceWhereInput = {
  AND?: Maybe<Array<Maybe<AppSubscriptionsCompanyPriceWhereInput>>>;
  NOT?: Maybe<Array<Maybe<AppSubscriptionsCompanyPriceWhereInput>>>;
  OR?: Maybe<Array<Maybe<AppSubscriptionsCompanyPriceWhereInput>>>;
  app_key_value?: Maybe<StringFilter>;
  id?: Maybe<IntFilter>;
  occupier?: Maybe<IntFilter>;
  price?: Maybe<FloatFilter>;
};

export type AppSubscriptionsCompanyPriceWhereUniqueInput = {
  id?: Maybe<Scalars['Int']>;
};

export type AtAnswer = {
  __typename?: 'AtAnswer';
  id?: Maybe<Scalars['Int']>;
  image?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  question_id?: Maybe<Scalars['Int']>;
};

export type AtAnswerCreateInput = {
  image: Scalars['String'];
  name: Scalars['String'];
  question_id: Scalars['Int'];
};

export type AtAnswerOrderByInput = {
  id?: Maybe<SortOrder>;
  image?: Maybe<SortOrder>;
  name?: Maybe<SortOrder>;
  question_id?: Maybe<SortOrder>;
};

export type AtAnswerUpdateInput = {
  image?: Maybe<StringFieldUpdateOperationsInput>;
  name?: Maybe<StringFieldUpdateOperationsInput>;
  question_id?: Maybe<IntFieldUpdateOperationsInput>;
};

export type AtAnswerUpdateManyMutationInput = {
  image?: Maybe<StringFieldUpdateOperationsInput>;
  name?: Maybe<StringFieldUpdateOperationsInput>;
  question_id?: Maybe<IntFieldUpdateOperationsInput>;
};

export type AtAnswerWhereInput = {
  AND?: Maybe<Array<Maybe<AtAnswerWhereInput>>>;
  NOT?: Maybe<Array<Maybe<AtAnswerWhereInput>>>;
  OR?: Maybe<Array<Maybe<AtAnswerWhereInput>>>;
  id?: Maybe<IntFilter>;
  image?: Maybe<StringFilter>;
  name?: Maybe<StringFilter>;
  question_id?: Maybe<IntFilter>;
};

export type AtAnswerWhereUniqueInput = {
  id?: Maybe<Scalars['Int']>;
};

export type AtConcern = {
  __typename?: 'AtConcern';
  id?: Maybe<Scalars['Int']>;
  image?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  region?: Maybe<Scalars['String']>;
};

export type AtConcernCreateInput = {
  image: Scalars['String'];
  name: Scalars['String'];
  region: Scalars['String'];
};

export type AtConcernOrderByInput = {
  id?: Maybe<SortOrder>;
  image?: Maybe<SortOrder>;
  name?: Maybe<SortOrder>;
  region?: Maybe<SortOrder>;
};

export type AtConcernUpdateInput = {
  image?: Maybe<StringFieldUpdateOperationsInput>;
  name?: Maybe<StringFieldUpdateOperationsInput>;
  region?: Maybe<StringFieldUpdateOperationsInput>;
};

export type AtConcernUpdateManyMutationInput = {
  image?: Maybe<StringFieldUpdateOperationsInput>;
  name?: Maybe<StringFieldUpdateOperationsInput>;
  region?: Maybe<StringFieldUpdateOperationsInput>;
};

export type AtConcernWhereInput = {
  AND?: Maybe<Array<Maybe<AtConcernWhereInput>>>;
  NOT?: Maybe<Array<Maybe<AtConcernWhereInput>>>;
  OR?: Maybe<Array<Maybe<AtConcernWhereInput>>>;
  id?: Maybe<IntFilter>;
  image?: Maybe<StringFilter>;
  name?: Maybe<StringFilter>;
  region?: Maybe<StringFilter>;
};

export type AtConcernWhereUniqueInput = {
  id?: Maybe<Scalars['Int']>;
};

export type AtQuestion = {
  __typename?: 'AtQuestion';
  company_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  name?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
  region?: Maybe<Scalars['String']>;
};

export type AtQuestionCreateInput = {
  company_id: Scalars['Int'];
  name: Scalars['String'];
  order: Scalars['Int'];
  region: Scalars['String'];
};

export type AtQuestionOrderByInput = {
  company_id?: Maybe<SortOrder>;
  id?: Maybe<SortOrder>;
  name?: Maybe<SortOrder>;
  order?: Maybe<SortOrder>;
  region?: Maybe<SortOrder>;
};

export type AtQuestionUpdateInput = {
  company_id?: Maybe<IntFieldUpdateOperationsInput>;
  name?: Maybe<StringFieldUpdateOperationsInput>;
  order?: Maybe<IntFieldUpdateOperationsInput>;
  region?: Maybe<StringFieldUpdateOperationsInput>;
};

export type AtQuestionUpdateManyMutationInput = {
  company_id?: Maybe<IntFieldUpdateOperationsInput>;
  name?: Maybe<StringFieldUpdateOperationsInput>;
  order?: Maybe<IntFieldUpdateOperationsInput>;
  region?: Maybe<StringFieldUpdateOperationsInput>;
};

export type AtQuestionWhereInput = {
  AND?: Maybe<Array<Maybe<AtQuestionWhereInput>>>;
  NOT?: Maybe<Array<Maybe<AtQuestionWhereInput>>>;
  OR?: Maybe<Array<Maybe<AtQuestionWhereInput>>>;
  company_id?: Maybe<IntFilter>;
  id?: Maybe<IntFilter>;
  name?: Maybe<StringFilter>;
  order?: Maybe<IntFilter>;
  region?: Maybe<StringFilter>;
};

export type AtQuestionWhereUniqueInput = {
  id?: Maybe<Scalars['Int']>;
};

export type AtQuestionsRelation = {
  __typename?: 'AtQuestionsRelation';
  answer_id?: Maybe<Scalars['Int']>;
  company_id?: Maybe<Scalars['Int']>;
  product_id?: Maybe<Scalars['Int']>;
};

export type AtQuestionsRelationCompany_IdAnswer_IdProduct_IdCompoundUniqueInput = {
  answer_id: Scalars['Int'];
  company_id: Scalars['Int'];
  product_id: Scalars['Int'];
};

export type AtQuestionsRelationCreateInput = {
  answer_id: Scalars['Int'];
  company_id: Scalars['Int'];
  product_id: Scalars['Int'];
};

export type AtQuestionsRelationOrderByInput = {
  answer_id?: Maybe<SortOrder>;
  company_id?: Maybe<SortOrder>;
  product_id?: Maybe<SortOrder>;
};

export type AtQuestionsRelationUpdateInput = {
  answer_id?: Maybe<IntFieldUpdateOperationsInput>;
  company_id?: Maybe<IntFieldUpdateOperationsInput>;
  product_id?: Maybe<IntFieldUpdateOperationsInput>;
};

export type AtQuestionsRelationUpdateManyMutationInput = {
  answer_id?: Maybe<IntFieldUpdateOperationsInput>;
  company_id?: Maybe<IntFieldUpdateOperationsInput>;
  product_id?: Maybe<IntFieldUpdateOperationsInput>;
};

export type AtQuestionsRelationWhereInput = {
  AND?: Maybe<Array<Maybe<AtQuestionsRelationWhereInput>>>;
  NOT?: Maybe<Array<Maybe<AtQuestionsRelationWhereInput>>>;
  OR?: Maybe<Array<Maybe<AtQuestionsRelationWhereInput>>>;
  answer_id?: Maybe<IntFilter>;
  company_id?: Maybe<IntFilter>;
  product_id?: Maybe<IntFilter>;
};

export type AtQuestionsRelationWhereUniqueInput = {
  company_id_answer_id_product_id?: Maybe<AtQuestionsRelationCompany_IdAnswer_IdProduct_IdCompoundUniqueInput>;
};

export type AtQuizTake = {
  __typename?: 'AtQuizTake';
  answers?: Maybe<Scalars['String']>;
  answers2?: Maybe<Scalars['String']>;
  company_id?: Maybe<Scalars['Int']>;
  concerns?: Maybe<Scalars['String']>;
  email?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  name?: Maybe<Scalars['String']>;
  products?: Maybe<Scalars['String']>;
  take_date?: Maybe<Scalars['DateTime']>;
};

export type AtQuizTakeCreateInput = {
  answers: Scalars['String'];
  answers2: Scalars['String'];
  company_id: Scalars['Int'];
  concerns: Scalars['String'];
  email: Scalars['String'];
  name: Scalars['String'];
  products: Scalars['String'];
  take_date: Scalars['DateTime'];
};

export type AtQuizTakeOrderByInput = {
  answers?: Maybe<SortOrder>;
  answers2?: Maybe<SortOrder>;
  company_id?: Maybe<SortOrder>;
  concerns?: Maybe<SortOrder>;
  email?: Maybe<SortOrder>;
  id?: Maybe<SortOrder>;
  name?: Maybe<SortOrder>;
  products?: Maybe<SortOrder>;
  take_date?: Maybe<SortOrder>;
};

export type AtQuizTakeUpdateInput = {
  answers?: Maybe<StringFieldUpdateOperationsInput>;
  answers2?: Maybe<StringFieldUpdateOperationsInput>;
  company_id?: Maybe<IntFieldUpdateOperationsInput>;
  concerns?: Maybe<StringFieldUpdateOperationsInput>;
  email?: Maybe<StringFieldUpdateOperationsInput>;
  name?: Maybe<StringFieldUpdateOperationsInput>;
  products?: Maybe<StringFieldUpdateOperationsInput>;
  take_date?: Maybe<DateTimeFieldUpdateOperationsInput>;
};

export type AtQuizTakeUpdateManyMutationInput = {
  answers?: Maybe<StringFieldUpdateOperationsInput>;
  answers2?: Maybe<StringFieldUpdateOperationsInput>;
  company_id?: Maybe<IntFieldUpdateOperationsInput>;
  concerns?: Maybe<StringFieldUpdateOperationsInput>;
  email?: Maybe<StringFieldUpdateOperationsInput>;
  name?: Maybe<StringFieldUpdateOperationsInput>;
  products?: Maybe<StringFieldUpdateOperationsInput>;
  take_date?: Maybe<DateTimeFieldUpdateOperationsInput>;
};

export type AtQuizTakeWhereInput = {
  AND?: Maybe<Array<Maybe<AtQuizTakeWhereInput>>>;
  NOT?: Maybe<Array<Maybe<AtQuizTakeWhereInput>>>;
  OR?: Maybe<Array<Maybe<AtQuizTakeWhereInput>>>;
  answers?: Maybe<StringFilter>;
  answers2?: Maybe<StringFilter>;
  company_id?: Maybe<IntFilter>;
  concerns?: Maybe<StringFilter>;
  email?: Maybe<StringFilter>;
  id?: Maybe<IntFilter>;
  name?: Maybe<StringFilter>;
  products?: Maybe<StringFilter>;
  take_date?: Maybe<DateTimeFilter>;
};

export type AtQuizTakeWhereUniqueInput = {
  id?: Maybe<Scalars['Int']>;
};

export type AtSetting = {
  __typename?: 'AtSetting';
  background?: Maybe<Scalars['String']>;
  company_id?: Maybe<Scalars['Int']>;
  font_family?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  logo?: Maybe<Scalars['String']>;
};

export type AtSettingCreateInput = {
  background: Scalars['String'];
  company_id: Scalars['Int'];
  font_family: Scalars['String'];
  logo: Scalars['String'];
};

export type AtSettingOrderByInput = {
  background?: Maybe<SortOrder>;
  company_id?: Maybe<SortOrder>;
  font_family?: Maybe<SortOrder>;
  id?: Maybe<SortOrder>;
  logo?: Maybe<SortOrder>;
};

export type AtSettingUpdateInput = {
  background?: Maybe<StringFieldUpdateOperationsInput>;
  company_id?: Maybe<IntFieldUpdateOperationsInput>;
  font_family?: Maybe<StringFieldUpdateOperationsInput>;
  logo?: Maybe<StringFieldUpdateOperationsInput>;
};

export type AtSettingUpdateManyMutationInput = {
  background?: Maybe<StringFieldUpdateOperationsInput>;
  company_id?: Maybe<IntFieldUpdateOperationsInput>;
  font_family?: Maybe<StringFieldUpdateOperationsInput>;
  logo?: Maybe<StringFieldUpdateOperationsInput>;
};

export type AtSettingWhereInput = {
  AND?: Maybe<Array<Maybe<AtSettingWhereInput>>>;
  NOT?: Maybe<Array<Maybe<AtSettingWhereInput>>>;
  OR?: Maybe<Array<Maybe<AtSettingWhereInput>>>;
  background?: Maybe<StringFilter>;
  company_id?: Maybe<IntFilter>;
  font_family?: Maybe<StringFilter>;
  id?: Maybe<IntFilter>;
  logo?: Maybe<StringFilter>;
};

export type AtSettingWhereUniqueInput = {
  id?: Maybe<Scalars['Int']>;
};

export type AtTreatment = {
  __typename?: 'AtTreatment';
  company_id?: Maybe<Scalars['Int']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  image?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
};

export type AtTreatmentCreateInput = {
  company_id: Scalars['Int'];
  description: Scalars['String'];
  image: Scalars['String'];
  name: Scalars['String'];
};

export type AtTreatmentOrderByInput = {
  company_id?: Maybe<SortOrder>;
  description?: Maybe<SortOrder>;
  id?: Maybe<SortOrder>;
  image?: Maybe<SortOrder>;
  name?: Maybe<SortOrder>;
};

export type AtTreatmentUpdateInput = {
  company_id?: Maybe<IntFieldUpdateOperationsInput>;
  description?: Maybe<StringFieldUpdateOperationsInput>;
  image?: Maybe<StringFieldUpdateOperationsInput>;
  name?: Maybe<StringFieldUpdateOperationsInput>;
};

export type AtTreatmentUpdateManyMutationInput = {
  company_id?: Maybe<IntFieldUpdateOperationsInput>;
  description?: Maybe<StringFieldUpdateOperationsInput>;
  image?: Maybe<StringFieldUpdateOperationsInput>;
  name?: Maybe<StringFieldUpdateOperationsInput>;
};

export type AtTreatmentWhereInput = {
  AND?: Maybe<Array<Maybe<AtTreatmentWhereInput>>>;
  NOT?: Maybe<Array<Maybe<AtTreatmentWhereInput>>>;
  OR?: Maybe<Array<Maybe<AtTreatmentWhereInput>>>;
  company_id?: Maybe<IntFilter>;
  description?: Maybe<StringFilter>;
  id?: Maybe<IntFilter>;
  image?: Maybe<StringFilter>;
  name?: Maybe<StringFilter>;
};

export type AtTreatmentWhereUniqueInput = {
  id?: Maybe<Scalars['Int']>;
};

export type AttachmentHelperLite = {
  __typename?: 'AttachmentHelperLite';
  contact_id?: Maybe<Scalars['Int']>;
  f?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  type?: Maybe<Scalars['Int']>;
  x?: Maybe<Scalars['String']>;
};

export type AttachmentHelperLiteCreateInput = {
  contact_id: Scalars['Int'];
  f: Scalars['String'];
  type: Scalars['Int'];
  x: Scalars['String'];
};

export type AttachmentHelperLiteOrderByInput = {
  contact_id?: Maybe<SortOrder>;
  f?: Maybe<SortOrder>;
  id?: Maybe<SortOrder>;
  type?: Maybe<SortOrder>;
  x?: Maybe<SortOrder>;
};

export type AttachmentHelperLiteUpdateInput = {
  contact_id?: Maybe<IntFieldUpdateOperationsInput>;
  f?: Maybe<StringFieldUpdateOperationsInput>;
  type?: Maybe<IntFieldUpdateOperationsInput>;
  x?: Maybe<StringFieldUpdateOperationsInput>;
};

export type AttachmentHelperLiteUpdateManyMutationInput = {
  contact_id?: Maybe<IntFieldUpdateOperationsInput>;
  f?: Maybe<StringFieldUpdateOperationsInput>;
  type?: Maybe<IntFieldUpdateOperationsInput>;
  x?: Maybe<StringFieldUpdateOperationsInput>;
};

export type AttachmentHelperLiteWhereInput = {
  AND?: Maybe<Array<Maybe<AttachmentHelperLiteWhereInput>>>;
  NOT?: Maybe<Array<Maybe<AttachmentHelperLiteWhereInput>>>;
  OR?: Maybe<Array<Maybe<AttachmentHelperLiteWhereInput>>>;
  contact_id?: Maybe<IntFilter>;
  f?: Maybe<StringFilter>;
  id?: Maybe<IntFilter>;
  type?: Maybe<IntFilter>;
  x?: Maybe<StringFilter>;
};

export type AttachmentHelperLiteWhereUniqueInput = {
  id?: Maybe<Scalars['Int']>;
};

export type AutomationAction = {
  __typename?: 'AutomationAction';
  action_data?: Maybe<Scalars['String']>;
  code?: Maybe<Scalars['String']>;
  company?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  order?: Maybe<Scalars['Int']>;
  trigger_id?: Maybe<Scalars['Int']>;
};

export type AutomationActionCreateInput = {
  action_data: Scalars['String'];
  code: Scalars['String'];
  company: Scalars['Int'];
  order: Scalars['Int'];
  trigger_id: Scalars['Int'];
};

export type AutomationActionOrderByInput = {
  action_data?: Maybe<SortOrder>;
  code?: Maybe<SortOrder>;
  company?: Maybe<SortOrder>;
  id?: Maybe<SortOrder>;
  order?: Maybe<SortOrder>;
  trigger_id?: Maybe<SortOrder>;
};

export type AutomationActionUpdateInput = {
  action_data?: Maybe<StringFieldUpdateOperationsInput>;
  code?: Maybe<StringFieldUpdateOperationsInput>;
  company?: Maybe<IntFieldUpdateOperationsInput>;
  order?: Maybe<IntFieldUpdateOperationsInput>;
  trigger_id?: Maybe<IntFieldUpdateOperationsInput>;
};

export type AutomationActionUpdateManyMutationInput = {
  action_data?: Maybe<StringFieldUpdateOperationsInput>;
  code?: Maybe<StringFieldUpdateOperationsInput>;
  company?: Maybe<IntFieldUpdateOperationsInput>;
  order?: Maybe<IntFieldUpdateOperationsInput>;
  trigger_id?: Maybe<IntFieldUpdateOperationsInput>;
};

export type AutomationActionWhereInput = {
  AND?: Maybe<Array<Maybe<AutomationActionWhereInput>>>;
  NOT?: Maybe<Array<Maybe<AutomationActionWhereInput>>>;
  OR?: Maybe<Array<Maybe<AutomationActionWhereInput>>>;
  action_data?: Maybe<StringFilter>;
  code?: Maybe<StringFilter>;
  company?: Maybe<IntFilter>;
  id?: Maybe<IntFilter>;
  order?: Maybe<IntFilter>;
  trigger_id?: Maybe<IntFilter>;
};

export type AutomationActionWhereUniqueInput = {
  id?: Maybe<Scalars['Int']>;
};

export type AutomationDelay = {
  __typename?: 'AutomationDelay';
  action_rows?: Maybe<Scalars['String']>;
  appointment_id?: Maybe<Scalars['Int']>;
  code?: Maybe<Scalars['String']>;
  company?: Maybe<Scalars['Int']>;
  data_array?: Maybe<Scalars['String']>;
  date_queued?: Maybe<Scalars['DateTime']>;
  delay?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
};

export type AutomationDelayCreateInput = {
  action_rows: Scalars['String'];
  appointment_id?: Maybe<Scalars['Int']>;
  code: Scalars['String'];
  company: Scalars['Int'];
  data_array: Scalars['String'];
  date_queued: Scalars['DateTime'];
  delay: Scalars['Int'];
};

export type AutomationDelayOrderByInput = {
  action_rows?: Maybe<SortOrder>;
  appointment_id?: Maybe<SortOrder>;
  code?: Maybe<SortOrder>;
  company?: Maybe<SortOrder>;
  data_array?: Maybe<SortOrder>;
  date_queued?: Maybe<SortOrder>;
  delay?: Maybe<SortOrder>;
  id?: Maybe<SortOrder>;
};

export type AutomationDelayUpdateInput = {
  action_rows?: Maybe<StringFieldUpdateOperationsInput>;
  appointment_id?: Maybe<NullableIntFieldUpdateOperationsInput>;
  code?: Maybe<StringFieldUpdateOperationsInput>;
  company?: Maybe<IntFieldUpdateOperationsInput>;
  data_array?: Maybe<StringFieldUpdateOperationsInput>;
  date_queued?: Maybe<DateTimeFieldUpdateOperationsInput>;
  delay?: Maybe<IntFieldUpdateOperationsInput>;
};

export type AutomationDelayUpdateManyMutationInput = {
  action_rows?: Maybe<StringFieldUpdateOperationsInput>;
  appointment_id?: Maybe<NullableIntFieldUpdateOperationsInput>;
  code?: Maybe<StringFieldUpdateOperationsInput>;
  company?: Maybe<IntFieldUpdateOperationsInput>;
  data_array?: Maybe<StringFieldUpdateOperationsInput>;
  date_queued?: Maybe<DateTimeFieldUpdateOperationsInput>;
  delay?: Maybe<IntFieldUpdateOperationsInput>;
};

export type AutomationDelayWhereInput = {
  AND?: Maybe<Array<Maybe<AutomationDelayWhereInput>>>;
  NOT?: Maybe<Array<Maybe<AutomationDelayWhereInput>>>;
  OR?: Maybe<Array<Maybe<AutomationDelayWhereInput>>>;
  action_rows?: Maybe<StringFilter>;
  appointment_id?: Maybe<IntNullableFilter>;
  code?: Maybe<StringFilter>;
  company?: Maybe<IntFilter>;
  data_array?: Maybe<StringFilter>;
  date_queued?: Maybe<DateTimeFilter>;
  delay?: Maybe<IntFilter>;
  id?: Maybe<IntFilter>;
};

export type AutomationDelayWhereUniqueInput = {
  id?: Maybe<Scalars['Int']>;
};

export type AutomationFolder = {
  __typename?: 'AutomationFolder';
  company_id?: Maybe<Scalars['Int']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  name?: Maybe<Scalars['String']>;
};

export type AutomationFolderCreateInput = {
  company_id: Scalars['Int'];
  description: Scalars['String'];
  name: Scalars['String'];
};

export type AutomationFolderOrderByInput = {
  company_id?: Maybe<SortOrder>;
  description?: Maybe<SortOrder>;
  id?: Maybe<SortOrder>;
  name?: Maybe<SortOrder>;
};

export type AutomationFolderUpdateInput = {
  company_id?: Maybe<IntFieldUpdateOperationsInput>;
  description?: Maybe<StringFieldUpdateOperationsInput>;
  name?: Maybe<StringFieldUpdateOperationsInput>;
};

export type AutomationFolderUpdateManyMutationInput = {
  company_id?: Maybe<IntFieldUpdateOperationsInput>;
  description?: Maybe<StringFieldUpdateOperationsInput>;
  name?: Maybe<StringFieldUpdateOperationsInput>;
};

export type AutomationFolderWhereInput = {
  AND?: Maybe<Array<Maybe<AutomationFolderWhereInput>>>;
  NOT?: Maybe<Array<Maybe<AutomationFolderWhereInput>>>;
  OR?: Maybe<Array<Maybe<AutomationFolderWhereInput>>>;
  company_id?: Maybe<IntFilter>;
  description?: Maybe<StringFilter>;
  id?: Maybe<IntFilter>;
  name?: Maybe<StringFilter>;
};

export type AutomationFolderWhereUniqueInput = {
  id?: Maybe<Scalars['Int']>;
};

export type AutomationLog = {
  __typename?: 'AutomationLog';
  company?: Maybe<Scalars['Int']>;
  date_created?: Maybe<Scalars['DateTime']>;
  id?: Maybe<Scalars['Int']>;
  message?: Maybe<Scalars['String']>;
  parent_id?: Maybe<Scalars['Int']>;
  uid?: Maybe<Scalars['Int']>;
};

export type AutomationLogCreateInput = {
  company: Scalars['Int'];
  date_created?: Maybe<Scalars['DateTime']>;
  message: Scalars['String'];
  parent_id?: Maybe<Scalars['Int']>;
  uid?: Maybe<Scalars['Int']>;
};

export type AutomationLogOrderByInput = {
  company?: Maybe<SortOrder>;
  date_created?: Maybe<SortOrder>;
  id?: Maybe<SortOrder>;
  message?: Maybe<SortOrder>;
  parent_id?: Maybe<SortOrder>;
  uid?: Maybe<SortOrder>;
};

export type AutomationLogUpdateInput = {
  company?: Maybe<IntFieldUpdateOperationsInput>;
  date_created?: Maybe<DateTimeFieldUpdateOperationsInput>;
  message?: Maybe<StringFieldUpdateOperationsInput>;
  parent_id?: Maybe<NullableIntFieldUpdateOperationsInput>;
  uid?: Maybe<NullableIntFieldUpdateOperationsInput>;
};

export type AutomationLogUpdateManyMutationInput = {
  company?: Maybe<IntFieldUpdateOperationsInput>;
  date_created?: Maybe<DateTimeFieldUpdateOperationsInput>;
  message?: Maybe<StringFieldUpdateOperationsInput>;
  parent_id?: Maybe<NullableIntFieldUpdateOperationsInput>;
  uid?: Maybe<NullableIntFieldUpdateOperationsInput>;
};

export type AutomationLogWhereInput = {
  AND?: Maybe<Array<Maybe<AutomationLogWhereInput>>>;
  NOT?: Maybe<Array<Maybe<AutomationLogWhereInput>>>;
  OR?: Maybe<Array<Maybe<AutomationLogWhereInput>>>;
  company?: Maybe<IntFilter>;
  date_created?: Maybe<DateTimeFilter>;
  id?: Maybe<IntFilter>;
  message?: Maybe<StringFilter>;
  parent_id?: Maybe<IntNullableFilter>;
  uid?: Maybe<IntNullableFilter>;
};

export type AutomationLogWhereUniqueInput = {
  id?: Maybe<Scalars['Int']>;
};

export type AutomationRule = {
  __typename?: 'AutomationRule';
  active?: Maybe<Scalars['Boolean']>;
  company?: Maybe<Scalars['Int']>;
  date_end?: Maybe<Scalars['DateTime']>;
  date_start?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  folder_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  name?: Maybe<Scalars['String']>;
  needs_config?: Maybe<Scalars['Int']>;
  source?: Maybe<Scalars['String']>;
};

export type AutomationRuleCreateInput = {
  active?: Maybe<Scalars['Boolean']>;
  company: Scalars['Int'];
  date_end?: Maybe<Scalars['DateTime']>;
  date_start?: Maybe<Scalars['DateTime']>;
  description: Scalars['String'];
  folder_id?: Maybe<Scalars['Int']>;
  name: Scalars['String'];
  needs_config: Scalars['Int'];
  source: Scalars['String'];
};

export type AutomationRuleOrderByInput = {
  active?: Maybe<SortOrder>;
  company?: Maybe<SortOrder>;
  date_end?: Maybe<SortOrder>;
  date_start?: Maybe<SortOrder>;
  description?: Maybe<SortOrder>;
  folder_id?: Maybe<SortOrder>;
  id?: Maybe<SortOrder>;
  name?: Maybe<SortOrder>;
  needs_config?: Maybe<SortOrder>;
  source?: Maybe<SortOrder>;
};

export type AutomationRuleUpdateInput = {
  active?: Maybe<BoolFieldUpdateOperationsInput>;
  company?: Maybe<IntFieldUpdateOperationsInput>;
  date_end?: Maybe<NullableDateTimeFieldUpdateOperationsInput>;
  date_start?: Maybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: Maybe<StringFieldUpdateOperationsInput>;
  folder_id?: Maybe<IntFieldUpdateOperationsInput>;
  name?: Maybe<StringFieldUpdateOperationsInput>;
  needs_config?: Maybe<IntFieldUpdateOperationsInput>;
  source?: Maybe<StringFieldUpdateOperationsInput>;
};

export type AutomationRuleUpdateManyMutationInput = {
  active?: Maybe<BoolFieldUpdateOperationsInput>;
  company?: Maybe<IntFieldUpdateOperationsInput>;
  date_end?: Maybe<NullableDateTimeFieldUpdateOperationsInput>;
  date_start?: Maybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: Maybe<StringFieldUpdateOperationsInput>;
  folder_id?: Maybe<IntFieldUpdateOperationsInput>;
  name?: Maybe<StringFieldUpdateOperationsInput>;
  needs_config?: Maybe<IntFieldUpdateOperationsInput>;
  source?: Maybe<StringFieldUpdateOperationsInput>;
};

export type AutomationRuleWhereInput = {
  AND?: Maybe<Array<Maybe<AutomationRuleWhereInput>>>;
  NOT?: Maybe<Array<Maybe<AutomationRuleWhereInput>>>;
  OR?: Maybe<Array<Maybe<AutomationRuleWhereInput>>>;
  active?: Maybe<BoolFilter>;
  company?: Maybe<IntFilter>;
  date_end?: Maybe<DateTimeNullableFilter>;
  date_start?: Maybe<DateTimeNullableFilter>;
  description?: Maybe<StringFilter>;
  folder_id?: Maybe<IntFilter>;
  id?: Maybe<IntFilter>;
  name?: Maybe<StringFilter>;
  needs_config?: Maybe<IntFilter>;
  source?: Maybe<StringFilter>;
};

export type AutomationRuleWhereUniqueInput = {
  id?: Maybe<Scalars['Int']>;
};

export type AutomationTrigger = {
  __typename?: 'AutomationTrigger';
  code?: Maybe<Scalars['String']>;
  company?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  name?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
  rule_id?: Maybe<Scalars['Int']>;
  trigger_data?: Maybe<Scalars['String']>;
};

export type AutomationTriggerCreateInput = {
  code: Scalars['String'];
  company: Scalars['Int'];
  name: Scalars['String'];
  order: Scalars['Int'];
  rule_id: Scalars['Int'];
  trigger_data: Scalars['String'];
};

export type AutomationTriggerOrderByInput = {
  code?: Maybe<SortOrder>;
  company?: Maybe<SortOrder>;
  id?: Maybe<SortOrder>;
  name?: Maybe<SortOrder>;
  order?: Maybe<SortOrder>;
  rule_id?: Maybe<SortOrder>;
  trigger_data?: Maybe<SortOrder>;
};

export type AutomationTriggerUpdateInput = {
  code?: Maybe<StringFieldUpdateOperationsInput>;
  company?: Maybe<IntFieldUpdateOperationsInput>;
  name?: Maybe<StringFieldUpdateOperationsInput>;
  order?: Maybe<IntFieldUpdateOperationsInput>;
  rule_id?: Maybe<IntFieldUpdateOperationsInput>;
  trigger_data?: Maybe<StringFieldUpdateOperationsInput>;
};

export type AutomationTriggerUpdateManyMutationInput = {
  code?: Maybe<StringFieldUpdateOperationsInput>;
  company?: Maybe<IntFieldUpdateOperationsInput>;
  name?: Maybe<StringFieldUpdateOperationsInput>;
  order?: Maybe<IntFieldUpdateOperationsInput>;
  rule_id?: Maybe<IntFieldUpdateOperationsInput>;
  trigger_data?: Maybe<StringFieldUpdateOperationsInput>;
};

export type AutomationTriggerWhereInput = {
  AND?: Maybe<Array<Maybe<AutomationTriggerWhereInput>>>;
  NOT?: Maybe<Array<Maybe<AutomationTriggerWhereInput>>>;
  OR?: Maybe<Array<Maybe<AutomationTriggerWhereInput>>>;
  code?: Maybe<StringFilter>;
  company?: Maybe<IntFilter>;
  id?: Maybe<IntFilter>;
  name?: Maybe<StringFilter>;
  order?: Maybe<IntFilter>;
  rule_id?: Maybe<IntFilter>;
  trigger_data?: Maybe<StringFilter>;
};

export type AutomationTriggerWhereUniqueInput = {
  id?: Maybe<Scalars['Int']>;
};

export type AvilableDatesLog = {
  __typename?: 'AvilableDatesLog';
  date?: Maybe<Scalars['DateTime']>;
  end?: Maybe<Scalars['DateTime']>;
  id?: Maybe<Scalars['Int']>;
  occupier?: Maybe<Scalars['String']>;
  start?: Maybe<Scalars['DateTime']>;
  uid?: Maybe<Scalars['Int']>;
};

export type AvilableDatesLogCreateInput = {
  date: Scalars['DateTime'];
  end: Scalars['DateTime'];
  occupier: Scalars['String'];
  start: Scalars['DateTime'];
  uid: Scalars['Int'];
};

export type AvilableDatesLogOrderByInput = {
  date?: Maybe<SortOrder>;
  end?: Maybe<SortOrder>;
  id?: Maybe<SortOrder>;
  occupier?: Maybe<SortOrder>;
  start?: Maybe<SortOrder>;
  uid?: Maybe<SortOrder>;
};

export type AvilableDatesLogUpdateInput = {
  date?: Maybe<DateTimeFieldUpdateOperationsInput>;
  end?: Maybe<DateTimeFieldUpdateOperationsInput>;
  occupier?: Maybe<StringFieldUpdateOperationsInput>;
  start?: Maybe<DateTimeFieldUpdateOperationsInput>;
  uid?: Maybe<IntFieldUpdateOperationsInput>;
};

export type AvilableDatesLogUpdateManyMutationInput = {
  date?: Maybe<DateTimeFieldUpdateOperationsInput>;
  end?: Maybe<DateTimeFieldUpdateOperationsInput>;
  occupier?: Maybe<StringFieldUpdateOperationsInput>;
  start?: Maybe<DateTimeFieldUpdateOperationsInput>;
  uid?: Maybe<IntFieldUpdateOperationsInput>;
};

export type AvilableDatesLogWhereInput = {
  AND?: Maybe<Array<Maybe<AvilableDatesLogWhereInput>>>;
  NOT?: Maybe<Array<Maybe<AvilableDatesLogWhereInput>>>;
  OR?: Maybe<Array<Maybe<AvilableDatesLogWhereInput>>>;
  date?: Maybe<DateTimeFilter>;
  end?: Maybe<DateTimeFilter>;
  id?: Maybe<IntFilter>;
  occupier?: Maybe<StringFilter>;
  start?: Maybe<DateTimeFilter>;
  uid?: Maybe<IntFilter>;
};

export type AvilableDatesLogWhereUniqueInput = {
  id?: Maybe<Scalars['Int']>;
};

export type BacsAccount = {
  __typename?: 'BacsAccount';
  account_holder?: Maybe<Scalars['String']>;
  account_no?: Maybe<Scalars['Int']>;
  bank_tag?: Maybe<Scalars['String']>;
  branch_name?: Maybe<Scalars['String']>;
  comp_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  sort_code?: Maybe<Scalars['String']>;
};

export type BacsAccountCreateInput = {
  account_holder: Scalars['String'];
  account_no: Scalars['Int'];
  bank_tag: Scalars['String'];
  branch_name: Scalars['String'];
  comp_id: Scalars['Int'];
  sort_code: Scalars['String'];
};

export type BacsAccountOrderByInput = {
  account_holder?: Maybe<SortOrder>;
  account_no?: Maybe<SortOrder>;
  bank_tag?: Maybe<SortOrder>;
  branch_name?: Maybe<SortOrder>;
  comp_id?: Maybe<SortOrder>;
  id?: Maybe<SortOrder>;
  sort_code?: Maybe<SortOrder>;
};

export type BacsAccountUpdateInput = {
  account_holder?: Maybe<StringFieldUpdateOperationsInput>;
  account_no?: Maybe<IntFieldUpdateOperationsInput>;
  bank_tag?: Maybe<StringFieldUpdateOperationsInput>;
  branch_name?: Maybe<StringFieldUpdateOperationsInput>;
  comp_id?: Maybe<IntFieldUpdateOperationsInput>;
  sort_code?: Maybe<StringFieldUpdateOperationsInput>;
};

export type BacsAccountUpdateManyMutationInput = {
  account_holder?: Maybe<StringFieldUpdateOperationsInput>;
  account_no?: Maybe<IntFieldUpdateOperationsInput>;
  bank_tag?: Maybe<StringFieldUpdateOperationsInput>;
  branch_name?: Maybe<StringFieldUpdateOperationsInput>;
  comp_id?: Maybe<IntFieldUpdateOperationsInput>;
  sort_code?: Maybe<StringFieldUpdateOperationsInput>;
};

export type BacsAccountWhereInput = {
  AND?: Maybe<Array<Maybe<BacsAccountWhereInput>>>;
  NOT?: Maybe<Array<Maybe<BacsAccountWhereInput>>>;
  OR?: Maybe<Array<Maybe<BacsAccountWhereInput>>>;
  account_holder?: Maybe<StringFilter>;
  account_no?: Maybe<IntFilter>;
  bank_tag?: Maybe<StringFilter>;
  branch_name?: Maybe<StringFilter>;
  comp_id?: Maybe<IntFilter>;
  id?: Maybe<IntFilter>;
  sort_code?: Maybe<StringFilter>;
};

export type BacsAccountWhereUniqueInput = {
  id?: Maybe<Scalars['Int']>;
};

export type Batch = {
  __typename?: 'Batch';
  batch_no?: Maybe<Scalars['String']>;
  company_id?: Maybe<Scalars['Int']>;
  creation_date?: Maybe<Scalars['DateTime']>;
  expiry_date?: Maybe<Scalars['DateTime']>;
  id?: Maybe<Scalars['Int']>;
  order_id?: Maybe<Scalars['Int']>;
  order_item_id?: Maybe<Scalars['String']>;
  qty?: Maybe<Scalars['Int']>;
  uid?: Maybe<Scalars['Int']>;
};

export type BatchCreateInput = {
  batch_no: Scalars['String'];
  company_id: Scalars['Int'];
  creation_date: Scalars['DateTime'];
  expiry_date?: Maybe<Scalars['DateTime']>;
  order_id?: Maybe<Scalars['Int']>;
  order_item_id?: Maybe<Scalars['String']>;
  qty: Scalars['Int'];
  uid: Scalars['Int'];
};

export type BatchItem = {
  __typename?: 'BatchItem';
  appointment_id?: Maybe<Scalars['Int']>;
  batch_flag?: Maybe<Scalars['Int']>;
  batch_id?: Maybe<Scalars['Int']>;
  company_id?: Maybe<Scalars['Int']>;
  created_by_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  patient_id?: Maybe<Scalars['Int']>;
  product_id?: Maybe<Scalars['Int']>;
  qty?: Maybe<Scalars['Int']>;
  usage_date?: Maybe<Scalars['DateTime']>;
};

export type BatchItemCreateInput = {
  appointment_id: Scalars['Int'];
  batch_flag?: Maybe<Scalars['Int']>;
  batch_id: Scalars['Int'];
  company_id: Scalars['Int'];
  created_by_id: Scalars['Int'];
  patient_id: Scalars['Int'];
  product_id: Scalars['Int'];
  qty?: Maybe<Scalars['Int']>;
  usage_date: Scalars['DateTime'];
};

export type BatchItemOrderByInput = {
  appointment_id?: Maybe<SortOrder>;
  batch_flag?: Maybe<SortOrder>;
  batch_id?: Maybe<SortOrder>;
  company_id?: Maybe<SortOrder>;
  created_by_id?: Maybe<SortOrder>;
  id?: Maybe<SortOrder>;
  patient_id?: Maybe<SortOrder>;
  product_id?: Maybe<SortOrder>;
  qty?: Maybe<SortOrder>;
  usage_date?: Maybe<SortOrder>;
};

export type BatchItemUpdateInput = {
  appointment_id?: Maybe<IntFieldUpdateOperationsInput>;
  batch_flag?: Maybe<IntFieldUpdateOperationsInput>;
  batch_id?: Maybe<IntFieldUpdateOperationsInput>;
  company_id?: Maybe<IntFieldUpdateOperationsInput>;
  created_by_id?: Maybe<IntFieldUpdateOperationsInput>;
  patient_id?: Maybe<IntFieldUpdateOperationsInput>;
  product_id?: Maybe<IntFieldUpdateOperationsInput>;
  qty?: Maybe<IntFieldUpdateOperationsInput>;
  usage_date?: Maybe<DateTimeFieldUpdateOperationsInput>;
};

export type BatchItemUpdateManyMutationInput = {
  appointment_id?: Maybe<IntFieldUpdateOperationsInput>;
  batch_flag?: Maybe<IntFieldUpdateOperationsInput>;
  batch_id?: Maybe<IntFieldUpdateOperationsInput>;
  company_id?: Maybe<IntFieldUpdateOperationsInput>;
  created_by_id?: Maybe<IntFieldUpdateOperationsInput>;
  patient_id?: Maybe<IntFieldUpdateOperationsInput>;
  product_id?: Maybe<IntFieldUpdateOperationsInput>;
  qty?: Maybe<IntFieldUpdateOperationsInput>;
  usage_date?: Maybe<DateTimeFieldUpdateOperationsInput>;
};

export type BatchItemWhereInput = {
  AND?: Maybe<Array<Maybe<BatchItemWhereInput>>>;
  NOT?: Maybe<Array<Maybe<BatchItemWhereInput>>>;
  OR?: Maybe<Array<Maybe<BatchItemWhereInput>>>;
  appointment_id?: Maybe<IntFilter>;
  batch_flag?: Maybe<IntFilter>;
  batch_id?: Maybe<IntFilter>;
  company_id?: Maybe<IntFilter>;
  created_by_id?: Maybe<IntFilter>;
  id?: Maybe<IntFilter>;
  patient_id?: Maybe<IntFilter>;
  product_id?: Maybe<IntFilter>;
  qty?: Maybe<IntFilter>;
  usage_date?: Maybe<DateTimeFilter>;
};

export type BatchItemWhereUniqueInput = {
  id?: Maybe<Scalars['Int']>;
};

export type BatchOrderByInput = {
  batch_no?: Maybe<SortOrder>;
  company_id?: Maybe<SortOrder>;
  creation_date?: Maybe<SortOrder>;
  expiry_date?: Maybe<SortOrder>;
  id?: Maybe<SortOrder>;
  order_id?: Maybe<SortOrder>;
  order_item_id?: Maybe<SortOrder>;
  qty?: Maybe<SortOrder>;
  uid?: Maybe<SortOrder>;
};

export type BatchUpdateInput = {
  batch_no?: Maybe<StringFieldUpdateOperationsInput>;
  company_id?: Maybe<IntFieldUpdateOperationsInput>;
  creation_date?: Maybe<DateTimeFieldUpdateOperationsInput>;
  expiry_date?: Maybe<NullableDateTimeFieldUpdateOperationsInput>;
  order_id?: Maybe<IntFieldUpdateOperationsInput>;
  order_item_id?: Maybe<NullableStringFieldUpdateOperationsInput>;
  qty?: Maybe<IntFieldUpdateOperationsInput>;
  uid?: Maybe<IntFieldUpdateOperationsInput>;
};

export type BatchUpdateManyMutationInput = {
  batch_no?: Maybe<StringFieldUpdateOperationsInput>;
  company_id?: Maybe<IntFieldUpdateOperationsInput>;
  creation_date?: Maybe<DateTimeFieldUpdateOperationsInput>;
  expiry_date?: Maybe<NullableDateTimeFieldUpdateOperationsInput>;
  order_id?: Maybe<IntFieldUpdateOperationsInput>;
  order_item_id?: Maybe<NullableStringFieldUpdateOperationsInput>;
  qty?: Maybe<IntFieldUpdateOperationsInput>;
  uid?: Maybe<IntFieldUpdateOperationsInput>;
};

export type BatchWhereInput = {
  AND?: Maybe<Array<Maybe<BatchWhereInput>>>;
  NOT?: Maybe<Array<Maybe<BatchWhereInput>>>;
  OR?: Maybe<Array<Maybe<BatchWhereInput>>>;
  batch_no?: Maybe<StringFilter>;
  company_id?: Maybe<IntFilter>;
  creation_date?: Maybe<DateTimeFilter>;
  expiry_date?: Maybe<DateTimeNullableFilter>;
  id?: Maybe<IntFilter>;
  order_id?: Maybe<IntFilter>;
  order_item_id?: Maybe<StringNullableFilter>;
  qty?: Maybe<IntFilter>;
  uid?: Maybe<IntFilter>;
};

export type BatchWhereUniqueInput = {
  id?: Maybe<Scalars['Int']>;
};

export type BlockReason = {
  __typename?: 'BlockReason';
  block_color?: Maybe<Scalars['String']>;
  custom_id?: Maybe<Scalars['Int']>;
  default_time?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  is_active?: Maybe<Scalars['Boolean']>;
  is_paid?: Maybe<Scalars['Int']>;
  occupier?: Maybe<Scalars['String']>;
  reason_name?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['Int']>;
};

export type BlockReasonCreateInput = {
  block_color: Scalars['String'];
  custom_id: Scalars['Int'];
  default_time?: Maybe<Scalars['String']>;
  is_active: Scalars['Boolean'];
  is_paid: Scalars['Int'];
  occupier: Scalars['String'];
  reason_name: Scalars['String'];
  type?: Maybe<Scalars['Int']>;
};

export type BlockReasonOrderByInput = {
  block_color?: Maybe<SortOrder>;
  custom_id?: Maybe<SortOrder>;
  default_time?: Maybe<SortOrder>;
  id?: Maybe<SortOrder>;
  is_active?: Maybe<SortOrder>;
  is_paid?: Maybe<SortOrder>;
  occupier?: Maybe<SortOrder>;
  reason_name?: Maybe<SortOrder>;
  type?: Maybe<SortOrder>;
};

export type BlockReasonUpdateInput = {
  block_color?: Maybe<StringFieldUpdateOperationsInput>;
  custom_id?: Maybe<IntFieldUpdateOperationsInput>;
  default_time?: Maybe<NullableStringFieldUpdateOperationsInput>;
  is_active?: Maybe<BoolFieldUpdateOperationsInput>;
  is_paid?: Maybe<IntFieldUpdateOperationsInput>;
  occupier?: Maybe<StringFieldUpdateOperationsInput>;
  reason_name?: Maybe<StringFieldUpdateOperationsInput>;
  type?: Maybe<IntFieldUpdateOperationsInput>;
};

export type BlockReasonUpdateManyMutationInput = {
  block_color?: Maybe<StringFieldUpdateOperationsInput>;
  custom_id?: Maybe<IntFieldUpdateOperationsInput>;
  default_time?: Maybe<NullableStringFieldUpdateOperationsInput>;
  is_active?: Maybe<BoolFieldUpdateOperationsInput>;
  is_paid?: Maybe<IntFieldUpdateOperationsInput>;
  occupier?: Maybe<StringFieldUpdateOperationsInput>;
  reason_name?: Maybe<StringFieldUpdateOperationsInput>;
  type?: Maybe<IntFieldUpdateOperationsInput>;
};

export type BlockReasonWhereInput = {
  AND?: Maybe<Array<Maybe<BlockReasonWhereInput>>>;
  NOT?: Maybe<Array<Maybe<BlockReasonWhereInput>>>;
  OR?: Maybe<Array<Maybe<BlockReasonWhereInput>>>;
  block_color?: Maybe<StringFilter>;
  custom_id?: Maybe<IntFilter>;
  default_time?: Maybe<StringNullableFilter>;
  id?: Maybe<IntFilter>;
  is_active?: Maybe<BoolFilter>;
  is_paid?: Maybe<IntFilter>;
  occupier?: Maybe<StringFilter>;
  reason_name?: Maybe<StringFilter>;
  type?: Maybe<IntFilter>;
};

export type BlockReasonWhereUniqueInput = {
  id?: Maybe<Scalars['Int']>;
};

export type BnfDrug = {
  __typename?: 'BnfDrug';
  breast_feeding?: Maybe<Scalars['String']>;
  cautions?: Maybe<Scalars['String']>;
  contra_indications?: Maybe<Scalars['String']>;
  directions?: Maybe<Scalars['String']>;
  drug_name?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  indications_dosage?: Maybe<Scalars['String']>;
  page?: Maybe<Scalars['String']>;
  patient_advice?: Maybe<Scalars['String']>;
  pregnancy?: Maybe<Scalars['String']>;
  prescribing_info?: Maybe<Scalars['String']>;
  side_effects?: Maybe<Scalars['String']>;
  specific_info?: Maybe<Scalars['String']>;
  url?: Maybe<Scalars['String']>;
};

export type BnfDrugCreateInput = {
  breast_feeding?: Maybe<Scalars['String']>;
  cautions?: Maybe<Scalars['String']>;
  contra_indications?: Maybe<Scalars['String']>;
  directions?: Maybe<Scalars['String']>;
  drug_name: Scalars['String'];
  indications_dosage?: Maybe<Scalars['String']>;
  page: Scalars['String'];
  patient_advice?: Maybe<Scalars['String']>;
  pregnancy?: Maybe<Scalars['String']>;
  prescribing_info?: Maybe<Scalars['String']>;
  side_effects?: Maybe<Scalars['String']>;
  specific_info?: Maybe<Scalars['String']>;
  url: Scalars['String'];
};

export type BnfDrugOrderByInput = {
  breast_feeding?: Maybe<SortOrder>;
  cautions?: Maybe<SortOrder>;
  contra_indications?: Maybe<SortOrder>;
  directions?: Maybe<SortOrder>;
  drug_name?: Maybe<SortOrder>;
  id?: Maybe<SortOrder>;
  indications_dosage?: Maybe<SortOrder>;
  page?: Maybe<SortOrder>;
  patient_advice?: Maybe<SortOrder>;
  pregnancy?: Maybe<SortOrder>;
  prescribing_info?: Maybe<SortOrder>;
  side_effects?: Maybe<SortOrder>;
  specific_info?: Maybe<SortOrder>;
  url?: Maybe<SortOrder>;
};

export type BnfDrugUpdateInput = {
  breast_feeding?: Maybe<NullableStringFieldUpdateOperationsInput>;
  cautions?: Maybe<NullableStringFieldUpdateOperationsInput>;
  contra_indications?: Maybe<NullableStringFieldUpdateOperationsInput>;
  directions?: Maybe<NullableStringFieldUpdateOperationsInput>;
  drug_name?: Maybe<StringFieldUpdateOperationsInput>;
  indications_dosage?: Maybe<NullableStringFieldUpdateOperationsInput>;
  page?: Maybe<StringFieldUpdateOperationsInput>;
  patient_advice?: Maybe<NullableStringFieldUpdateOperationsInput>;
  pregnancy?: Maybe<NullableStringFieldUpdateOperationsInput>;
  prescribing_info?: Maybe<NullableStringFieldUpdateOperationsInput>;
  side_effects?: Maybe<NullableStringFieldUpdateOperationsInput>;
  specific_info?: Maybe<NullableStringFieldUpdateOperationsInput>;
  url?: Maybe<StringFieldUpdateOperationsInput>;
};

export type BnfDrugUpdateManyMutationInput = {
  breast_feeding?: Maybe<NullableStringFieldUpdateOperationsInput>;
  cautions?: Maybe<NullableStringFieldUpdateOperationsInput>;
  contra_indications?: Maybe<NullableStringFieldUpdateOperationsInput>;
  directions?: Maybe<NullableStringFieldUpdateOperationsInput>;
  drug_name?: Maybe<StringFieldUpdateOperationsInput>;
  indications_dosage?: Maybe<NullableStringFieldUpdateOperationsInput>;
  page?: Maybe<StringFieldUpdateOperationsInput>;
  patient_advice?: Maybe<NullableStringFieldUpdateOperationsInput>;
  pregnancy?: Maybe<NullableStringFieldUpdateOperationsInput>;
  prescribing_info?: Maybe<NullableStringFieldUpdateOperationsInput>;
  side_effects?: Maybe<NullableStringFieldUpdateOperationsInput>;
  specific_info?: Maybe<NullableStringFieldUpdateOperationsInput>;
  url?: Maybe<StringFieldUpdateOperationsInput>;
};

export type BnfDrugWhereInput = {
  AND?: Maybe<Array<Maybe<BnfDrugWhereInput>>>;
  NOT?: Maybe<Array<Maybe<BnfDrugWhereInput>>>;
  OR?: Maybe<Array<Maybe<BnfDrugWhereInput>>>;
  breast_feeding?: Maybe<StringNullableFilter>;
  cautions?: Maybe<StringNullableFilter>;
  contra_indications?: Maybe<StringNullableFilter>;
  directions?: Maybe<StringNullableFilter>;
  drug_name?: Maybe<StringFilter>;
  id?: Maybe<IntFilter>;
  indications_dosage?: Maybe<StringNullableFilter>;
  page?: Maybe<StringFilter>;
  patient_advice?: Maybe<StringNullableFilter>;
  pregnancy?: Maybe<StringNullableFilter>;
  prescribing_info?: Maybe<StringNullableFilter>;
  side_effects?: Maybe<StringNullableFilter>;
  specific_info?: Maybe<StringNullableFilter>;
  url?: Maybe<StringFilter>;
};

export type BnfDrugWhereUniqueInput = {
  id?: Maybe<Scalars['Int']>;
};

export type BodyChartTemplate = {
  __typename?: 'BodyChartTemplate';
  chart_order?: Maybe<Scalars['Int']>;
  creation_date?: Maybe<Scalars['DateTime']>;
  id?: Maybe<Scalars['Int']>;
  occupier?: Maybe<Scalars['Int']>;
  tags?: Maybe<Scalars['String']>;
  template_name?: Maybe<Scalars['String']>;
  template_type?: Maybe<Scalars['Int']>;
  template_url?: Maybe<Scalars['String']>;
  uid?: Maybe<Scalars['Int']>;
};

export type BodyChartTemplateCreateInput = {
  chart_order?: Maybe<Scalars['Int']>;
  creation_date?: Maybe<Scalars['DateTime']>;
  occupier: Scalars['Int'];
  tags: Scalars['String'];
  template_name: Scalars['String'];
  template_type?: Maybe<Scalars['Int']>;
  template_url: Scalars['String'];
  uid: Scalars['Int'];
};

export type BodyChartTemplateOrderByInput = {
  chart_order?: Maybe<SortOrder>;
  creation_date?: Maybe<SortOrder>;
  id?: Maybe<SortOrder>;
  occupier?: Maybe<SortOrder>;
  tags?: Maybe<SortOrder>;
  template_name?: Maybe<SortOrder>;
  template_type?: Maybe<SortOrder>;
  template_url?: Maybe<SortOrder>;
  uid?: Maybe<SortOrder>;
};

export type BodyChartTemplateUpdateInput = {
  chart_order?: Maybe<IntFieldUpdateOperationsInput>;
  creation_date?: Maybe<DateTimeFieldUpdateOperationsInput>;
  occupier?: Maybe<IntFieldUpdateOperationsInput>;
  tags?: Maybe<StringFieldUpdateOperationsInput>;
  template_name?: Maybe<StringFieldUpdateOperationsInput>;
  template_type?: Maybe<IntFieldUpdateOperationsInput>;
  template_url?: Maybe<StringFieldUpdateOperationsInput>;
  uid?: Maybe<IntFieldUpdateOperationsInput>;
};

export type BodyChartTemplateUpdateManyMutationInput = {
  chart_order?: Maybe<IntFieldUpdateOperationsInput>;
  creation_date?: Maybe<DateTimeFieldUpdateOperationsInput>;
  occupier?: Maybe<IntFieldUpdateOperationsInput>;
  tags?: Maybe<StringFieldUpdateOperationsInput>;
  template_name?: Maybe<StringFieldUpdateOperationsInput>;
  template_type?: Maybe<IntFieldUpdateOperationsInput>;
  template_url?: Maybe<StringFieldUpdateOperationsInput>;
  uid?: Maybe<IntFieldUpdateOperationsInput>;
};

export type BodyChartTemplateWhereInput = {
  AND?: Maybe<Array<Maybe<BodyChartTemplateWhereInput>>>;
  NOT?: Maybe<Array<Maybe<BodyChartTemplateWhereInput>>>;
  OR?: Maybe<Array<Maybe<BodyChartTemplateWhereInput>>>;
  chart_order?: Maybe<IntFilter>;
  creation_date?: Maybe<DateTimeFilter>;
  id?: Maybe<IntFilter>;
  occupier?: Maybe<IntFilter>;
  tags?: Maybe<StringFilter>;
  template_name?: Maybe<StringFilter>;
  template_type?: Maybe<IntFilter>;
  template_url?: Maybe<StringFilter>;
  uid?: Maybe<IntFilter>;
};

export type BodyChartTemplateWhereUniqueInput = {
  id?: Maybe<Scalars['Int']>;
};

export type BookingMaster = {
  __typename?: 'BookingMaster';
  booking_date?: Maybe<Scalars['String']>;
  cancel_date?: Maybe<Scalars['String']>;
  cancel_status?: Maybe<Booking_Master_Cancel_Status>;
  checked_in?: Maybe<Scalars['Int']>;
  class_currency?: Maybe<Scalars['String']>;
  class_id?: Maybe<Scalars['String']>;
  class_price?: Maybe<Scalars['String']>;
  company_id?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  payed_by?: Maybe<Scalars['String']>;
  payment_status?: Maybe<Booking_Master_Payment_Status>;
  user_id?: Maybe<Scalars['String']>;
  waiting?: Maybe<Scalars['Int']>;
};

export type BookingMasterCreateInput = {
  booking_date?: Maybe<Scalars['String']>;
  cancel_date: Scalars['String'];
  cancel_status: Booking_Master_Cancel_Status;
  checked_in: Scalars['Int'];
  class_currency?: Maybe<Scalars['String']>;
  class_id: Scalars['String'];
  class_price?: Maybe<Scalars['String']>;
  company_id: Scalars['String'];
  payed_by: Scalars['String'];
  payment_status: Booking_Master_Payment_Status;
  user_id: Scalars['String'];
  waiting: Scalars['Int'];
};

export type BookingMasterOrderByInput = {
  booking_date?: Maybe<SortOrder>;
  cancel_date?: Maybe<SortOrder>;
  cancel_status?: Maybe<SortOrder>;
  checked_in?: Maybe<SortOrder>;
  class_currency?: Maybe<SortOrder>;
  class_id?: Maybe<SortOrder>;
  class_price?: Maybe<SortOrder>;
  company_id?: Maybe<SortOrder>;
  id?: Maybe<SortOrder>;
  payed_by?: Maybe<SortOrder>;
  payment_status?: Maybe<SortOrder>;
  user_id?: Maybe<SortOrder>;
  waiting?: Maybe<SortOrder>;
};

export type BookingMasterUpdateInput = {
  booking_date?: Maybe<NullableStringFieldUpdateOperationsInput>;
  cancel_date?: Maybe<StringFieldUpdateOperationsInput>;
  cancel_status?: Maybe<Enumbooking_Master_Cancel_StatusFieldUpdateOperationsInput>;
  checked_in?: Maybe<IntFieldUpdateOperationsInput>;
  class_currency?: Maybe<NullableStringFieldUpdateOperationsInput>;
  class_id?: Maybe<StringFieldUpdateOperationsInput>;
  class_price?: Maybe<NullableStringFieldUpdateOperationsInput>;
  company_id?: Maybe<StringFieldUpdateOperationsInput>;
  payed_by?: Maybe<StringFieldUpdateOperationsInput>;
  payment_status?: Maybe<Enumbooking_Master_Payment_StatusFieldUpdateOperationsInput>;
  user_id?: Maybe<StringFieldUpdateOperationsInput>;
  waiting?: Maybe<IntFieldUpdateOperationsInput>;
};

export type BookingMasterUpdateManyMutationInput = {
  booking_date?: Maybe<NullableStringFieldUpdateOperationsInput>;
  cancel_date?: Maybe<StringFieldUpdateOperationsInput>;
  cancel_status?: Maybe<Enumbooking_Master_Cancel_StatusFieldUpdateOperationsInput>;
  checked_in?: Maybe<IntFieldUpdateOperationsInput>;
  class_currency?: Maybe<NullableStringFieldUpdateOperationsInput>;
  class_id?: Maybe<StringFieldUpdateOperationsInput>;
  class_price?: Maybe<NullableStringFieldUpdateOperationsInput>;
  company_id?: Maybe<StringFieldUpdateOperationsInput>;
  payed_by?: Maybe<StringFieldUpdateOperationsInput>;
  payment_status?: Maybe<Enumbooking_Master_Payment_StatusFieldUpdateOperationsInput>;
  user_id?: Maybe<StringFieldUpdateOperationsInput>;
  waiting?: Maybe<IntFieldUpdateOperationsInput>;
};

export type BookingMasterWhereInput = {
  AND?: Maybe<Array<Maybe<BookingMasterWhereInput>>>;
  NOT?: Maybe<Array<Maybe<BookingMasterWhereInput>>>;
  OR?: Maybe<Array<Maybe<BookingMasterWhereInput>>>;
  booking_date?: Maybe<StringNullableFilter>;
  cancel_date?: Maybe<StringFilter>;
  cancel_status?: Maybe<Enumbooking_Master_Cancel_StatusFilter>;
  checked_in?: Maybe<IntFilter>;
  class_currency?: Maybe<StringNullableFilter>;
  class_id?: Maybe<StringFilter>;
  class_price?: Maybe<StringNullableFilter>;
  company_id?: Maybe<StringFilter>;
  id?: Maybe<IntFilter>;
  payed_by?: Maybe<StringFilter>;
  payment_status?: Maybe<Enumbooking_Master_Payment_StatusFilter>;
  user_id?: Maybe<StringFilter>;
  waiting?: Maybe<IntFilter>;
};

export type BookingMasterWhereUniqueInput = {
  id?: Maybe<Scalars['Int']>;
};

export type BookingSetting = {
  __typename?: 'BookingSetting';
  allow_overlapping_appts?: Maybe<Scalars['Int']>;
  appt_body?: Maybe<Scalars['String']>;
  appt_head?: Maybe<Scalars['String']>;
  arrived_color?: Maybe<Scalars['String']>;
  attach_invoice?: Maybe<Scalars['Int']>;
  auto_cal?: Maybe<Scalars['Int']>;
  auto_con?: Maybe<Scalars['Int']>;
  auto_email?: Maybe<Scalars['Int']>;
  auto_sms?: Maybe<Scalars['Int']>;
  booking_emails?: Maybe<Scalars['String']>;
  cancel_email_from?: Maybe<Scalars['String']>;
  cancel_email_notify?: Maybe<Scalars['Int']>;
  cancel_email_tmpl?: Maybe<Scalars['Int']>;
  cancel_sms_from?: Maybe<Scalars['String']>;
  cancel_sms_notify?: Maybe<Scalars['Int']>;
  cancel_sms_tmpl?: Maybe<Scalars['Int']>;
  class_noshow_email_notify?: Maybe<Scalars['Int']>;
  class_noshow_email_tmpl?: Maybe<Scalars['Int']>;
  class_noshow_sms_notify?: Maybe<Scalars['Int']>;
  class_noshow_sms_tmpl?: Maybe<Scalars['Int']>;
  class_reminder_email_notify?: Maybe<Scalars['Int']>;
  class_reminder_email_tmpl?: Maybe<Scalars['Int']>;
  class_reminder_sms_notify?: Maybe<Scalars['Int']>;
  class_reminder_sms_tmpl?: Maybe<Scalars['Int']>;
  class_reschedule_email_notify?: Maybe<Scalars['Int']>;
  class_reschedule_email_tmpl?: Maybe<Scalars['Int']>;
  class_reschedule_sms_notify?: Maybe<Scalars['Int']>;
  class_reschedule_sms_tmpl?: Maybe<Scalars['Int']>;
  class_sms_days_before?: Maybe<Scalars['Int']>;
  class_sms_send_time?: Maybe<Scalars['DateTime']>;
  column_total?: Maybe<Scalars['Int']>;
  complete_color?: Maybe<Scalars['String']>;
  conference_reminder_id?: Maybe<Scalars['Int']>;
  confirm_fromemail?: Maybe<Scalars['String']>;
  days_before?: Maybe<Scalars['Int']>;
  disable_book_by_package?: Maybe<Scalars['Int']>;
  disable_ics?: Maybe<Scalars['Int']>;
  disable_second_cal?: Maybe<Scalars['Int']>;
  disable_service_filter?: Maybe<Scalars['Int']>;
  disable_surname?: Maybe<Scalars['Int']>;
  disable_time?: Maybe<Scalars['Int']>;
  email_confirm_id?: Maybe<Scalars['Int']>;
  email_id?: Maybe<Scalars['Int']>;
  email_mode?: Maybe<Scalars['Int']>;
  email_reminder_id?: Maybe<Scalars['Int']>;
  end_time?: Maybe<Scalars['String']>;
  feedback_days_after?: Maybe<Scalars['Int']>;
  feedback_fromemail?: Maybe<Scalars['String']>;
  feedback_id?: Maybe<Scalars['Int']>;
  feedback_mode?: Maybe<Scalars['Int']>;
  feedback_send_time?: Maybe<Scalars['DateTime']>;
  font_color?: Maybe<Scalars['String']>;
  font_size?: Maybe<Scalars['Int']>;
  group_booking_cancel_email_enable?: Maybe<Scalars['Boolean']>;
  group_booking_cancel_template_id?: Maybe<Scalars['Int']>;
  group_booking_change_email_enable?: Maybe<Scalars['Int']>;
  group_booking_change_template_id?: Maybe<Scalars['Int']>;
  holiday_default?: Maybe<Scalars['String']>;
  holiday_per_month?: Maybe<Scalars['String']>;
  holiday_reset_date?: Maybe<Scalars['Int']>;
  holiday_usual_day?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  initials?: Maybe<Scalars['Int']>;
  location_support?: Maybe<Scalars['Int']>;
  lock_timer?: Maybe<Scalars['Int']>;
  modified_by?: Maybe<Scalars['Int']>;
  modified_date?: Maybe<Scalars['DateTime']>;
  noshow_count?: Maybe<Scalars['Int']>;
  noshow_email_from?: Maybe<Scalars['String']>;
  noshow_email_notify?: Maybe<Scalars['Int']>;
  noshow_email_tmpl?: Maybe<Scalars['Int']>;
  noshow_sms_from?: Maybe<Scalars['String']>;
  noshow_sms_notify?: Maybe<Scalars['Int']>;
  noshow_sms_tmpl?: Maybe<Scalars['Int']>;
  occupier?: Maybe<Scalars['Int']>;
  package_used_email_enable?: Maybe<Scalars['Int']>;
  package_used_template_id?: Maybe<Scalars['Int']>;
  reminder_fromemail?: Maybe<Scalars['String']>;
  reminder_mode?: Maybe<Scalars['Int']>;
  reschedule_email_from?: Maybe<Scalars['String']>;
  reschedule_email_notify?: Maybe<Scalars['Int']>;
  reschedule_email_tmpl?: Maybe<Scalars['Int']>;
  reschedule_sms_from?: Maybe<Scalars['String']>;
  reschedule_sms_notify?: Maybe<Scalars['Int']>;
  reschedule_sms_tmpl?: Maybe<Scalars['Int']>;
  room_support?: Maybe<Scalars['Int']>;
  send_email?: Maybe<Scalars['Int']>;
  send_feedback?: Maybe<Scalars['Int']>;
  send_reminder?: Maybe<Scalars['Int']>;
  send_sms?: Maybe<Scalars['Int']>;
  send_time?: Maybe<Scalars['DateTime']>;
  slot_interval?: Maybe<Scalars['Int']>;
  sms_confirm_id?: Maybe<Scalars['Int']>;
  sms_days_before?: Maybe<Scalars['Int']>;
  sms_from?: Maybe<Scalars['String']>;
  sms_id?: Maybe<Scalars['Int']>;
  sms_mode?: Maybe<Scalars['Int']>;
  sms_name?: Maybe<Scalars['String']>;
  sms_send_time?: Maybe<Scalars['DateTime']>;
  start_time?: Maybe<Scalars['String']>;
  tooltip_body?: Maybe<Scalars['String']>;
  tooltip_head?: Maybe<Scalars['String']>;
};

export type BookingSettingCreateInput = {
  allow_overlapping_appts?: Maybe<Scalars['Int']>;
  appt_body?: Maybe<Scalars['String']>;
  appt_head?: Maybe<Scalars['String']>;
  arrived_color?: Maybe<Scalars['String']>;
  attach_invoice: Scalars['Int'];
  auto_cal?: Maybe<Scalars['Int']>;
  auto_con?: Maybe<Scalars['Int']>;
  auto_email?: Maybe<Scalars['Int']>;
  auto_sms?: Maybe<Scalars['Int']>;
  booking_emails: Scalars['String'];
  cancel_email_from: Scalars['String'];
  cancel_email_notify?: Maybe<Scalars['Int']>;
  cancel_email_tmpl: Scalars['Int'];
  cancel_sms_from: Scalars['String'];
  cancel_sms_notify: Scalars['Int'];
  cancel_sms_tmpl: Scalars['Int'];
  class_noshow_email_notify: Scalars['Int'];
  class_noshow_email_tmpl: Scalars['Int'];
  class_noshow_sms_notify: Scalars['Int'];
  class_noshow_sms_tmpl: Scalars['Int'];
  class_reminder_email_notify: Scalars['Int'];
  class_reminder_email_tmpl: Scalars['Int'];
  class_reminder_sms_notify: Scalars['Int'];
  class_reminder_sms_tmpl: Scalars['Int'];
  class_reschedule_email_notify: Scalars['Int'];
  class_reschedule_email_tmpl: Scalars['Int'];
  class_reschedule_sms_notify: Scalars['Int'];
  class_reschedule_sms_tmpl: Scalars['Int'];
  class_sms_days_before: Scalars['Int'];
  class_sms_send_time: Scalars['DateTime'];
  column_total: Scalars['Int'];
  complete_color?: Maybe<Scalars['String']>;
  conference_reminder_id?: Maybe<Scalars['Int']>;
  confirm_fromemail: Scalars['String'];
  days_before?: Maybe<Scalars['Int']>;
  disable_book_by_package?: Maybe<Scalars['Int']>;
  disable_ics?: Maybe<Scalars['Int']>;
  disable_second_cal: Scalars['Int'];
  disable_service_filter?: Maybe<Scalars['Int']>;
  disable_surname: Scalars['Int'];
  disable_time: Scalars['Int'];
  email_confirm_id: Scalars['Int'];
  email_id?: Maybe<Scalars['Int']>;
  email_mode: Scalars['Int'];
  email_reminder_id: Scalars['Int'];
  end_time: Scalars['String'];
  feedback_days_after: Scalars['Int'];
  feedback_fromemail: Scalars['String'];
  feedback_id: Scalars['Int'];
  feedback_mode: Scalars['Int'];
  feedback_send_time: Scalars['DateTime'];
  font_color: Scalars['String'];
  font_size?: Maybe<Scalars['Int']>;
  group_booking_cancel_email_enable: Scalars['Boolean'];
  group_booking_cancel_template_id: Scalars['Int'];
  group_booking_change_email_enable?: Maybe<Scalars['Int']>;
  group_booking_change_template_id?: Maybe<Scalars['Int']>;
  holiday_default?: Maybe<Scalars['String']>;
  holiday_per_month?: Maybe<Scalars['String']>;
  holiday_reset_date?: Maybe<Scalars['Int']>;
  holiday_usual_day?: Maybe<Scalars['String']>;
  initials?: Maybe<Scalars['Int']>;
  location_support?: Maybe<Scalars['Int']>;
  lock_timer?: Maybe<Scalars['Int']>;
  modified_by: Scalars['Int'];
  modified_date: Scalars['DateTime'];
  noshow_count?: Maybe<Scalars['Int']>;
  noshow_email_from: Scalars['String'];
  noshow_email_notify: Scalars['Int'];
  noshow_email_tmpl: Scalars['Int'];
  noshow_sms_from: Scalars['String'];
  noshow_sms_notify: Scalars['Int'];
  noshow_sms_tmpl: Scalars['Int'];
  occupier: Scalars['Int'];
  package_used_email_enable: Scalars['Int'];
  package_used_template_id: Scalars['Int'];
  reminder_fromemail: Scalars['String'];
  reminder_mode: Scalars['Int'];
  reschedule_email_from: Scalars['String'];
  reschedule_email_notify?: Maybe<Scalars['Int']>;
  reschedule_email_tmpl: Scalars['Int'];
  reschedule_sms_from: Scalars['String'];
  reschedule_sms_notify: Scalars['Int'];
  reschedule_sms_tmpl: Scalars['Int'];
  room_support?: Maybe<Scalars['Int']>;
  send_email: Scalars['Int'];
  send_feedback: Scalars['Int'];
  send_reminder: Scalars['Int'];
  send_sms: Scalars['Int'];
  send_time: Scalars['DateTime'];
  slot_interval?: Maybe<Scalars['Int']>;
  sms_confirm_id: Scalars['Int'];
  sms_days_before: Scalars['Int'];
  sms_from?: Maybe<Scalars['String']>;
  sms_id: Scalars['Int'];
  sms_mode: Scalars['Int'];
  sms_name: Scalars['String'];
  sms_send_time: Scalars['DateTime'];
  start_time: Scalars['String'];
  tooltip_body?: Maybe<Scalars['String']>;
  tooltip_head?: Maybe<Scalars['String']>;
};

export type BookingSettingOrderByInput = {
  allow_overlapping_appts?: Maybe<SortOrder>;
  appt_body?: Maybe<SortOrder>;
  appt_head?: Maybe<SortOrder>;
  arrived_color?: Maybe<SortOrder>;
  attach_invoice?: Maybe<SortOrder>;
  auto_cal?: Maybe<SortOrder>;
  auto_con?: Maybe<SortOrder>;
  auto_email?: Maybe<SortOrder>;
  auto_sms?: Maybe<SortOrder>;
  booking_emails?: Maybe<SortOrder>;
  cancel_email_from?: Maybe<SortOrder>;
  cancel_email_notify?: Maybe<SortOrder>;
  cancel_email_tmpl?: Maybe<SortOrder>;
  cancel_sms_from?: Maybe<SortOrder>;
  cancel_sms_notify?: Maybe<SortOrder>;
  cancel_sms_tmpl?: Maybe<SortOrder>;
  class_noshow_email_notify?: Maybe<SortOrder>;
  class_noshow_email_tmpl?: Maybe<SortOrder>;
  class_noshow_sms_notify?: Maybe<SortOrder>;
  class_noshow_sms_tmpl?: Maybe<SortOrder>;
  class_reminder_email_notify?: Maybe<SortOrder>;
  class_reminder_email_tmpl?: Maybe<SortOrder>;
  class_reminder_sms_notify?: Maybe<SortOrder>;
  class_reminder_sms_tmpl?: Maybe<SortOrder>;
  class_reschedule_email_notify?: Maybe<SortOrder>;
  class_reschedule_email_tmpl?: Maybe<SortOrder>;
  class_reschedule_sms_notify?: Maybe<SortOrder>;
  class_reschedule_sms_tmpl?: Maybe<SortOrder>;
  class_sms_days_before?: Maybe<SortOrder>;
  class_sms_send_time?: Maybe<SortOrder>;
  column_total?: Maybe<SortOrder>;
  complete_color?: Maybe<SortOrder>;
  conference_reminder_id?: Maybe<SortOrder>;
  confirm_fromemail?: Maybe<SortOrder>;
  days_before?: Maybe<SortOrder>;
  disable_book_by_package?: Maybe<SortOrder>;
  disable_ics?: Maybe<SortOrder>;
  disable_second_cal?: Maybe<SortOrder>;
  disable_service_filter?: Maybe<SortOrder>;
  disable_surname?: Maybe<SortOrder>;
  disable_time?: Maybe<SortOrder>;
  email_confirm_id?: Maybe<SortOrder>;
  email_id?: Maybe<SortOrder>;
  email_mode?: Maybe<SortOrder>;
  email_reminder_id?: Maybe<SortOrder>;
  end_time?: Maybe<SortOrder>;
  feedback_days_after?: Maybe<SortOrder>;
  feedback_fromemail?: Maybe<SortOrder>;
  feedback_id?: Maybe<SortOrder>;
  feedback_mode?: Maybe<SortOrder>;
  feedback_send_time?: Maybe<SortOrder>;
  font_color?: Maybe<SortOrder>;
  font_size?: Maybe<SortOrder>;
  group_booking_cancel_email_enable?: Maybe<SortOrder>;
  group_booking_cancel_template_id?: Maybe<SortOrder>;
  group_booking_change_email_enable?: Maybe<SortOrder>;
  group_booking_change_template_id?: Maybe<SortOrder>;
  holiday_default?: Maybe<SortOrder>;
  holiday_per_month?: Maybe<SortOrder>;
  holiday_reset_date?: Maybe<SortOrder>;
  holiday_usual_day?: Maybe<SortOrder>;
  id?: Maybe<SortOrder>;
  initials?: Maybe<SortOrder>;
  location_support?: Maybe<SortOrder>;
  lock_timer?: Maybe<SortOrder>;
  modified_by?: Maybe<SortOrder>;
  modified_date?: Maybe<SortOrder>;
  noshow_count?: Maybe<SortOrder>;
  noshow_email_from?: Maybe<SortOrder>;
  noshow_email_notify?: Maybe<SortOrder>;
  noshow_email_tmpl?: Maybe<SortOrder>;
  noshow_sms_from?: Maybe<SortOrder>;
  noshow_sms_notify?: Maybe<SortOrder>;
  noshow_sms_tmpl?: Maybe<SortOrder>;
  occupier?: Maybe<SortOrder>;
  package_used_email_enable?: Maybe<SortOrder>;
  package_used_template_id?: Maybe<SortOrder>;
  reminder_fromemail?: Maybe<SortOrder>;
  reminder_mode?: Maybe<SortOrder>;
  reschedule_email_from?: Maybe<SortOrder>;
  reschedule_email_notify?: Maybe<SortOrder>;
  reschedule_email_tmpl?: Maybe<SortOrder>;
  reschedule_sms_from?: Maybe<SortOrder>;
  reschedule_sms_notify?: Maybe<SortOrder>;
  reschedule_sms_tmpl?: Maybe<SortOrder>;
  room_support?: Maybe<SortOrder>;
  send_email?: Maybe<SortOrder>;
  send_feedback?: Maybe<SortOrder>;
  send_reminder?: Maybe<SortOrder>;
  send_sms?: Maybe<SortOrder>;
  send_time?: Maybe<SortOrder>;
  slot_interval?: Maybe<SortOrder>;
  sms_confirm_id?: Maybe<SortOrder>;
  sms_days_before?: Maybe<SortOrder>;
  sms_from?: Maybe<SortOrder>;
  sms_id?: Maybe<SortOrder>;
  sms_mode?: Maybe<SortOrder>;
  sms_name?: Maybe<SortOrder>;
  sms_send_time?: Maybe<SortOrder>;
  start_time?: Maybe<SortOrder>;
  tooltip_body?: Maybe<SortOrder>;
  tooltip_head?: Maybe<SortOrder>;
};

export type BookingSettingUpdateInput = {
  allow_overlapping_appts?: Maybe<IntFieldUpdateOperationsInput>;
  appt_body?: Maybe<StringFieldUpdateOperationsInput>;
  appt_head?: Maybe<StringFieldUpdateOperationsInput>;
  arrived_color?: Maybe<StringFieldUpdateOperationsInput>;
  attach_invoice?: Maybe<IntFieldUpdateOperationsInput>;
  auto_cal?: Maybe<NullableIntFieldUpdateOperationsInput>;
  auto_con?: Maybe<NullableIntFieldUpdateOperationsInput>;
  auto_email?: Maybe<NullableIntFieldUpdateOperationsInput>;
  auto_sms?: Maybe<NullableIntFieldUpdateOperationsInput>;
  booking_emails?: Maybe<StringFieldUpdateOperationsInput>;
  cancel_email_from?: Maybe<StringFieldUpdateOperationsInput>;
  cancel_email_notify?: Maybe<IntFieldUpdateOperationsInput>;
  cancel_email_tmpl?: Maybe<IntFieldUpdateOperationsInput>;
  cancel_sms_from?: Maybe<StringFieldUpdateOperationsInput>;
  cancel_sms_notify?: Maybe<IntFieldUpdateOperationsInput>;
  cancel_sms_tmpl?: Maybe<IntFieldUpdateOperationsInput>;
  class_noshow_email_notify?: Maybe<IntFieldUpdateOperationsInput>;
  class_noshow_email_tmpl?: Maybe<IntFieldUpdateOperationsInput>;
  class_noshow_sms_notify?: Maybe<IntFieldUpdateOperationsInput>;
  class_noshow_sms_tmpl?: Maybe<IntFieldUpdateOperationsInput>;
  class_reminder_email_notify?: Maybe<IntFieldUpdateOperationsInput>;
  class_reminder_email_tmpl?: Maybe<IntFieldUpdateOperationsInput>;
  class_reminder_sms_notify?: Maybe<IntFieldUpdateOperationsInput>;
  class_reminder_sms_tmpl?: Maybe<IntFieldUpdateOperationsInput>;
  class_reschedule_email_notify?: Maybe<IntFieldUpdateOperationsInput>;
  class_reschedule_email_tmpl?: Maybe<IntFieldUpdateOperationsInput>;
  class_reschedule_sms_notify?: Maybe<IntFieldUpdateOperationsInput>;
  class_reschedule_sms_tmpl?: Maybe<IntFieldUpdateOperationsInput>;
  class_sms_days_before?: Maybe<IntFieldUpdateOperationsInput>;
  class_sms_send_time?: Maybe<DateTimeFieldUpdateOperationsInput>;
  column_total?: Maybe<IntFieldUpdateOperationsInput>;
  complete_color?: Maybe<StringFieldUpdateOperationsInput>;
  conference_reminder_id?: Maybe<NullableIntFieldUpdateOperationsInput>;
  confirm_fromemail?: Maybe<StringFieldUpdateOperationsInput>;
  days_before?: Maybe<IntFieldUpdateOperationsInput>;
  disable_book_by_package?: Maybe<IntFieldUpdateOperationsInput>;
  disable_ics?: Maybe<NullableIntFieldUpdateOperationsInput>;
  disable_second_cal?: Maybe<IntFieldUpdateOperationsInput>;
  disable_service_filter?: Maybe<IntFieldUpdateOperationsInput>;
  disable_surname?: Maybe<IntFieldUpdateOperationsInput>;
  disable_time?: Maybe<IntFieldUpdateOperationsInput>;
  email_confirm_id?: Maybe<IntFieldUpdateOperationsInput>;
  email_id?: Maybe<NullableIntFieldUpdateOperationsInput>;
  email_mode?: Maybe<IntFieldUpdateOperationsInput>;
  email_reminder_id?: Maybe<IntFieldUpdateOperationsInput>;
  end_time?: Maybe<StringFieldUpdateOperationsInput>;
  feedback_days_after?: Maybe<IntFieldUpdateOperationsInput>;
  feedback_fromemail?: Maybe<StringFieldUpdateOperationsInput>;
  feedback_id?: Maybe<IntFieldUpdateOperationsInput>;
  feedback_mode?: Maybe<IntFieldUpdateOperationsInput>;
  feedback_send_time?: Maybe<DateTimeFieldUpdateOperationsInput>;
  font_color?: Maybe<StringFieldUpdateOperationsInput>;
  font_size?: Maybe<IntFieldUpdateOperationsInput>;
  group_booking_cancel_email_enable?: Maybe<BoolFieldUpdateOperationsInput>;
  group_booking_cancel_template_id?: Maybe<IntFieldUpdateOperationsInput>;
  group_booking_change_email_enable?: Maybe<NullableIntFieldUpdateOperationsInput>;
  group_booking_change_template_id?: Maybe<NullableIntFieldUpdateOperationsInput>;
  holiday_default?: Maybe<NullableStringFieldUpdateOperationsInput>;
  holiday_per_month?: Maybe<NullableStringFieldUpdateOperationsInput>;
  holiday_reset_date?: Maybe<NullableIntFieldUpdateOperationsInput>;
  holiday_usual_day?: Maybe<NullableStringFieldUpdateOperationsInput>;
  initials?: Maybe<IntFieldUpdateOperationsInput>;
  location_support?: Maybe<IntFieldUpdateOperationsInput>;
  lock_timer?: Maybe<IntFieldUpdateOperationsInput>;
  modified_by?: Maybe<IntFieldUpdateOperationsInput>;
  modified_date?: Maybe<DateTimeFieldUpdateOperationsInput>;
  noshow_count?: Maybe<IntFieldUpdateOperationsInput>;
  noshow_email_from?: Maybe<StringFieldUpdateOperationsInput>;
  noshow_email_notify?: Maybe<IntFieldUpdateOperationsInput>;
  noshow_email_tmpl?: Maybe<IntFieldUpdateOperationsInput>;
  noshow_sms_from?: Maybe<StringFieldUpdateOperationsInput>;
  noshow_sms_notify?: Maybe<IntFieldUpdateOperationsInput>;
  noshow_sms_tmpl?: Maybe<IntFieldUpdateOperationsInput>;
  occupier?: Maybe<IntFieldUpdateOperationsInput>;
  package_used_email_enable?: Maybe<IntFieldUpdateOperationsInput>;
  package_used_template_id?: Maybe<IntFieldUpdateOperationsInput>;
  reminder_fromemail?: Maybe<StringFieldUpdateOperationsInput>;
  reminder_mode?: Maybe<IntFieldUpdateOperationsInput>;
  reschedule_email_from?: Maybe<StringFieldUpdateOperationsInput>;
  reschedule_email_notify?: Maybe<IntFieldUpdateOperationsInput>;
  reschedule_email_tmpl?: Maybe<IntFieldUpdateOperationsInput>;
  reschedule_sms_from?: Maybe<StringFieldUpdateOperationsInput>;
  reschedule_sms_notify?: Maybe<IntFieldUpdateOperationsInput>;
  reschedule_sms_tmpl?: Maybe<IntFieldUpdateOperationsInput>;
  room_support?: Maybe<IntFieldUpdateOperationsInput>;
  send_email?: Maybe<IntFieldUpdateOperationsInput>;
  send_feedback?: Maybe<IntFieldUpdateOperationsInput>;
  send_reminder?: Maybe<IntFieldUpdateOperationsInput>;
  send_sms?: Maybe<IntFieldUpdateOperationsInput>;
  send_time?: Maybe<DateTimeFieldUpdateOperationsInput>;
  slot_interval?: Maybe<IntFieldUpdateOperationsInput>;
  sms_confirm_id?: Maybe<IntFieldUpdateOperationsInput>;
  sms_days_before?: Maybe<IntFieldUpdateOperationsInput>;
  sms_from?: Maybe<NullableStringFieldUpdateOperationsInput>;
  sms_id?: Maybe<IntFieldUpdateOperationsInput>;
  sms_mode?: Maybe<IntFieldUpdateOperationsInput>;
  sms_name?: Maybe<StringFieldUpdateOperationsInput>;
  sms_send_time?: Maybe<DateTimeFieldUpdateOperationsInput>;
  start_time?: Maybe<StringFieldUpdateOperationsInput>;
  tooltip_body?: Maybe<StringFieldUpdateOperationsInput>;
  tooltip_head?: Maybe<StringFieldUpdateOperationsInput>;
};

export type BookingSettingUpdateManyMutationInput = {
  allow_overlapping_appts?: Maybe<IntFieldUpdateOperationsInput>;
  appt_body?: Maybe<StringFieldUpdateOperationsInput>;
  appt_head?: Maybe<StringFieldUpdateOperationsInput>;
  arrived_color?: Maybe<StringFieldUpdateOperationsInput>;
  attach_invoice?: Maybe<IntFieldUpdateOperationsInput>;
  auto_cal?: Maybe<NullableIntFieldUpdateOperationsInput>;
  auto_con?: Maybe<NullableIntFieldUpdateOperationsInput>;
  auto_email?: Maybe<NullableIntFieldUpdateOperationsInput>;
  auto_sms?: Maybe<NullableIntFieldUpdateOperationsInput>;
  booking_emails?: Maybe<StringFieldUpdateOperationsInput>;
  cancel_email_from?: Maybe<StringFieldUpdateOperationsInput>;
  cancel_email_notify?: Maybe<IntFieldUpdateOperationsInput>;
  cancel_email_tmpl?: Maybe<IntFieldUpdateOperationsInput>;
  cancel_sms_from?: Maybe<StringFieldUpdateOperationsInput>;
  cancel_sms_notify?: Maybe<IntFieldUpdateOperationsInput>;
  cancel_sms_tmpl?: Maybe<IntFieldUpdateOperationsInput>;
  class_noshow_email_notify?: Maybe<IntFieldUpdateOperationsInput>;
  class_noshow_email_tmpl?: Maybe<IntFieldUpdateOperationsInput>;
  class_noshow_sms_notify?: Maybe<IntFieldUpdateOperationsInput>;
  class_noshow_sms_tmpl?: Maybe<IntFieldUpdateOperationsInput>;
  class_reminder_email_notify?: Maybe<IntFieldUpdateOperationsInput>;
  class_reminder_email_tmpl?: Maybe<IntFieldUpdateOperationsInput>;
  class_reminder_sms_notify?: Maybe<IntFieldUpdateOperationsInput>;
  class_reminder_sms_tmpl?: Maybe<IntFieldUpdateOperationsInput>;
  class_reschedule_email_notify?: Maybe<IntFieldUpdateOperationsInput>;
  class_reschedule_email_tmpl?: Maybe<IntFieldUpdateOperationsInput>;
  class_reschedule_sms_notify?: Maybe<IntFieldUpdateOperationsInput>;
  class_reschedule_sms_tmpl?: Maybe<IntFieldUpdateOperationsInput>;
  class_sms_days_before?: Maybe<IntFieldUpdateOperationsInput>;
  class_sms_send_time?: Maybe<DateTimeFieldUpdateOperationsInput>;
  column_total?: Maybe<IntFieldUpdateOperationsInput>;
  complete_color?: Maybe<StringFieldUpdateOperationsInput>;
  conference_reminder_id?: Maybe<NullableIntFieldUpdateOperationsInput>;
  confirm_fromemail?: Maybe<StringFieldUpdateOperationsInput>;
  days_before?: Maybe<IntFieldUpdateOperationsInput>;
  disable_book_by_package?: Maybe<IntFieldUpdateOperationsInput>;
  disable_ics?: Maybe<NullableIntFieldUpdateOperationsInput>;
  disable_second_cal?: Maybe<IntFieldUpdateOperationsInput>;
  disable_service_filter?: Maybe<IntFieldUpdateOperationsInput>;
  disable_surname?: Maybe<IntFieldUpdateOperationsInput>;
  disable_time?: Maybe<IntFieldUpdateOperationsInput>;
  email_confirm_id?: Maybe<IntFieldUpdateOperationsInput>;
  email_id?: Maybe<NullableIntFieldUpdateOperationsInput>;
  email_mode?: Maybe<IntFieldUpdateOperationsInput>;
  email_reminder_id?: Maybe<IntFieldUpdateOperationsInput>;
  end_time?: Maybe<StringFieldUpdateOperationsInput>;
  feedback_days_after?: Maybe<IntFieldUpdateOperationsInput>;
  feedback_fromemail?: Maybe<StringFieldUpdateOperationsInput>;
  feedback_id?: Maybe<IntFieldUpdateOperationsInput>;
  feedback_mode?: Maybe<IntFieldUpdateOperationsInput>;
  feedback_send_time?: Maybe<DateTimeFieldUpdateOperationsInput>;
  font_color?: Maybe<StringFieldUpdateOperationsInput>;
  font_size?: Maybe<IntFieldUpdateOperationsInput>;
  group_booking_cancel_email_enable?: Maybe<BoolFieldUpdateOperationsInput>;
  group_booking_cancel_template_id?: Maybe<IntFieldUpdateOperationsInput>;
  group_booking_change_email_enable?: Maybe<NullableIntFieldUpdateOperationsInput>;
  group_booking_change_template_id?: Maybe<NullableIntFieldUpdateOperationsInput>;
  holiday_default?: Maybe<NullableStringFieldUpdateOperationsInput>;
  holiday_per_month?: Maybe<NullableStringFieldUpdateOperationsInput>;
  holiday_reset_date?: Maybe<NullableIntFieldUpdateOperationsInput>;
  holiday_usual_day?: Maybe<NullableStringFieldUpdateOperationsInput>;
  initials?: Maybe<IntFieldUpdateOperationsInput>;
  location_support?: Maybe<IntFieldUpdateOperationsInput>;
  lock_timer?: Maybe<IntFieldUpdateOperationsInput>;
  modified_by?: Maybe<IntFieldUpdateOperationsInput>;
  modified_date?: Maybe<DateTimeFieldUpdateOperationsInput>;
  noshow_count?: Maybe<IntFieldUpdateOperationsInput>;
  noshow_email_from?: Maybe<StringFieldUpdateOperationsInput>;
  noshow_email_notify?: Maybe<IntFieldUpdateOperationsInput>;
  noshow_email_tmpl?: Maybe<IntFieldUpdateOperationsInput>;
  noshow_sms_from?: Maybe<StringFieldUpdateOperationsInput>;
  noshow_sms_notify?: Maybe<IntFieldUpdateOperationsInput>;
  noshow_sms_tmpl?: Maybe<IntFieldUpdateOperationsInput>;
  occupier?: Maybe<IntFieldUpdateOperationsInput>;
  package_used_email_enable?: Maybe<IntFieldUpdateOperationsInput>;
  package_used_template_id?: Maybe<IntFieldUpdateOperationsInput>;
  reminder_fromemail?: Maybe<StringFieldUpdateOperationsInput>;
  reminder_mode?: Maybe<IntFieldUpdateOperationsInput>;
  reschedule_email_from?: Maybe<StringFieldUpdateOperationsInput>;
  reschedule_email_notify?: Maybe<IntFieldUpdateOperationsInput>;
  reschedule_email_tmpl?: Maybe<IntFieldUpdateOperationsInput>;
  reschedule_sms_from?: Maybe<StringFieldUpdateOperationsInput>;
  reschedule_sms_notify?: Maybe<IntFieldUpdateOperationsInput>;
  reschedule_sms_tmpl?: Maybe<IntFieldUpdateOperationsInput>;
  room_support?: Maybe<IntFieldUpdateOperationsInput>;
  send_email?: Maybe<IntFieldUpdateOperationsInput>;
  send_feedback?: Maybe<IntFieldUpdateOperationsInput>;
  send_reminder?: Maybe<IntFieldUpdateOperationsInput>;
  send_sms?: Maybe<IntFieldUpdateOperationsInput>;
  send_time?: Maybe<DateTimeFieldUpdateOperationsInput>;
  slot_interval?: Maybe<IntFieldUpdateOperationsInput>;
  sms_confirm_id?: Maybe<IntFieldUpdateOperationsInput>;
  sms_days_before?: Maybe<IntFieldUpdateOperationsInput>;
  sms_from?: Maybe<NullableStringFieldUpdateOperationsInput>;
  sms_id?: Maybe<IntFieldUpdateOperationsInput>;
  sms_mode?: Maybe<IntFieldUpdateOperationsInput>;
  sms_name?: Maybe<StringFieldUpdateOperationsInput>;
  sms_send_time?: Maybe<DateTimeFieldUpdateOperationsInput>;
  start_time?: Maybe<StringFieldUpdateOperationsInput>;
  tooltip_body?: Maybe<StringFieldUpdateOperationsInput>;
  tooltip_head?: Maybe<StringFieldUpdateOperationsInput>;
};

export type BookingSettingWhereInput = {
  AND?: Maybe<Array<Maybe<BookingSettingWhereInput>>>;
  NOT?: Maybe<Array<Maybe<BookingSettingWhereInput>>>;
  OR?: Maybe<Array<Maybe<BookingSettingWhereInput>>>;
  allow_overlapping_appts?: Maybe<IntFilter>;
  appt_body?: Maybe<StringFilter>;
  appt_head?: Maybe<StringFilter>;
  arrived_color?: Maybe<StringFilter>;
  attach_invoice?: Maybe<IntFilter>;
  auto_cal?: Maybe<IntNullableFilter>;
  auto_con?: Maybe<IntNullableFilter>;
  auto_email?: Maybe<IntNullableFilter>;
  auto_sms?: Maybe<IntNullableFilter>;
  booking_emails?: Maybe<StringFilter>;
  cancel_email_from?: Maybe<StringFilter>;
  cancel_email_notify?: Maybe<IntFilter>;
  cancel_email_tmpl?: Maybe<IntFilter>;
  cancel_sms_from?: Maybe<StringFilter>;
  cancel_sms_notify?: Maybe<IntFilter>;
  cancel_sms_tmpl?: Maybe<IntFilter>;
  class_noshow_email_notify?: Maybe<IntFilter>;
  class_noshow_email_tmpl?: Maybe<IntFilter>;
  class_noshow_sms_notify?: Maybe<IntFilter>;
  class_noshow_sms_tmpl?: Maybe<IntFilter>;
  class_reminder_email_notify?: Maybe<IntFilter>;
  class_reminder_email_tmpl?: Maybe<IntFilter>;
  class_reminder_sms_notify?: Maybe<IntFilter>;
  class_reminder_sms_tmpl?: Maybe<IntFilter>;
  class_reschedule_email_notify?: Maybe<IntFilter>;
  class_reschedule_email_tmpl?: Maybe<IntFilter>;
  class_reschedule_sms_notify?: Maybe<IntFilter>;
  class_reschedule_sms_tmpl?: Maybe<IntFilter>;
  class_sms_days_before?: Maybe<IntFilter>;
  class_sms_send_time?: Maybe<DateTimeFilter>;
  column_total?: Maybe<IntFilter>;
  complete_color?: Maybe<StringFilter>;
  conference_reminder_id?: Maybe<IntNullableFilter>;
  confirm_fromemail?: Maybe<StringFilter>;
  days_before?: Maybe<IntFilter>;
  disable_book_by_package?: Maybe<IntFilter>;
  disable_ics?: Maybe<IntNullableFilter>;
  disable_second_cal?: Maybe<IntFilter>;
  disable_service_filter?: Maybe<IntFilter>;
  disable_surname?: Maybe<IntFilter>;
  disable_time?: Maybe<IntFilter>;
  email_confirm_id?: Maybe<IntFilter>;
  email_id?: Maybe<IntNullableFilter>;
  email_mode?: Maybe<IntFilter>;
  email_reminder_id?: Maybe<IntFilter>;
  end_time?: Maybe<StringFilter>;
  feedback_days_after?: Maybe<IntFilter>;
  feedback_fromemail?: Maybe<StringFilter>;
  feedback_id?: Maybe<IntFilter>;
  feedback_mode?: Maybe<IntFilter>;
  feedback_send_time?: Maybe<DateTimeFilter>;
  font_color?: Maybe<StringFilter>;
  font_size?: Maybe<IntFilter>;
  group_booking_cancel_email_enable?: Maybe<BoolFilter>;
  group_booking_cancel_template_id?: Maybe<IntFilter>;
  group_booking_change_email_enable?: Maybe<IntNullableFilter>;
  group_booking_change_template_id?: Maybe<IntNullableFilter>;
  holiday_default?: Maybe<StringNullableFilter>;
  holiday_per_month?: Maybe<StringNullableFilter>;
  holiday_reset_date?: Maybe<IntNullableFilter>;
  holiday_usual_day?: Maybe<StringNullableFilter>;
  id?: Maybe<IntFilter>;
  initials?: Maybe<IntFilter>;
  location_support?: Maybe<IntFilter>;
  lock_timer?: Maybe<IntFilter>;
  modified_by?: Maybe<IntFilter>;
  modified_date?: Maybe<DateTimeFilter>;
  noshow_count?: Maybe<IntFilter>;
  noshow_email_from?: Maybe<StringFilter>;
  noshow_email_notify?: Maybe<IntFilter>;
  noshow_email_tmpl?: Maybe<IntFilter>;
  noshow_sms_from?: Maybe<StringFilter>;
  noshow_sms_notify?: Maybe<IntFilter>;
  noshow_sms_tmpl?: Maybe<IntFilter>;
  occupier?: Maybe<IntFilter>;
  package_used_email_enable?: Maybe<IntFilter>;
  package_used_template_id?: Maybe<IntFilter>;
  reminder_fromemail?: Maybe<StringFilter>;
  reminder_mode?: Maybe<IntFilter>;
  reschedule_email_from?: Maybe<StringFilter>;
  reschedule_email_notify?: Maybe<IntFilter>;
  reschedule_email_tmpl?: Maybe<IntFilter>;
  reschedule_sms_from?: Maybe<StringFilter>;
  reschedule_sms_notify?: Maybe<IntFilter>;
  reschedule_sms_tmpl?: Maybe<IntFilter>;
  room_support?: Maybe<IntFilter>;
  send_email?: Maybe<IntFilter>;
  send_feedback?: Maybe<IntFilter>;
  send_reminder?: Maybe<IntFilter>;
  send_sms?: Maybe<IntFilter>;
  send_time?: Maybe<DateTimeFilter>;
  slot_interval?: Maybe<IntFilter>;
  sms_confirm_id?: Maybe<IntFilter>;
  sms_days_before?: Maybe<IntFilter>;
  sms_from?: Maybe<StringNullableFilter>;
  sms_id?: Maybe<IntFilter>;
  sms_mode?: Maybe<IntFilter>;
  sms_name?: Maybe<StringFilter>;
  sms_send_time?: Maybe<DateTimeFilter>;
  start_time?: Maybe<StringFilter>;
  tooltip_body?: Maybe<StringFilter>;
  tooltip_head?: Maybe<StringFilter>;
};

export type BookingSettingWhereUniqueInput = {
  id?: Maybe<Scalars['Int']>;
};

export type BookingStatus = {
  __typename?: 'BookingStatus';
  basic_field?: Maybe<Scalars['Boolean']>;
  company?: Maybe<Company>;
  company_id?: Maybe<Scalars['Int']>;
  icon?: Maybe<Scalars['String']>;
  icon_color?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  indicator?: Maybe<Booking_Statuses_Indicator>;
  name?: Maybe<Scalars['String']>;
  ord?: Maybe<Scalars['Float']>;
  track_time?: Maybe<Scalars['Int']>;
  value?: Maybe<Scalars['String']>;
};

export type BookingStatusChange = {
  __typename?: 'BookingStatusChange';
  booking_id?: Maybe<Scalars['Int']>;
  company_id?: Maybe<Scalars['Int']>;
  end_date?: Maybe<Scalars['DateTime']>;
  id?: Maybe<Scalars['Int']>;
  start_date?: Maybe<Scalars['DateTime']>;
  status?: Maybe<Scalars['String']>;
  user_id?: Maybe<Scalars['Int']>;
};

export type BookingStatusChangeCreateInput = {
  booking_id: Scalars['Int'];
  company_id: Scalars['Int'];
  end_date?: Maybe<Scalars['DateTime']>;
  start_date: Scalars['DateTime'];
  status: Scalars['String'];
  user_id: Scalars['Int'];
};

export type BookingStatusChangeOrderByInput = {
  booking_id?: Maybe<SortOrder>;
  company_id?: Maybe<SortOrder>;
  end_date?: Maybe<SortOrder>;
  id?: Maybe<SortOrder>;
  start_date?: Maybe<SortOrder>;
  status?: Maybe<SortOrder>;
  user_id?: Maybe<SortOrder>;
};

export type BookingStatusChangeUpdateInput = {
  booking_id?: Maybe<IntFieldUpdateOperationsInput>;
  company_id?: Maybe<IntFieldUpdateOperationsInput>;
  end_date?: Maybe<NullableDateTimeFieldUpdateOperationsInput>;
  start_date?: Maybe<DateTimeFieldUpdateOperationsInput>;
  status?: Maybe<StringFieldUpdateOperationsInput>;
  user_id?: Maybe<IntFieldUpdateOperationsInput>;
};

export type BookingStatusChangeUpdateManyMutationInput = {
  booking_id?: Maybe<IntFieldUpdateOperationsInput>;
  company_id?: Maybe<IntFieldUpdateOperationsInput>;
  end_date?: Maybe<NullableDateTimeFieldUpdateOperationsInput>;
  start_date?: Maybe<DateTimeFieldUpdateOperationsInput>;
  status?: Maybe<StringFieldUpdateOperationsInput>;
  user_id?: Maybe<IntFieldUpdateOperationsInput>;
};

export type BookingStatusChangeWhereInput = {
  AND?: Maybe<Array<Maybe<BookingStatusChangeWhereInput>>>;
  NOT?: Maybe<Array<Maybe<BookingStatusChangeWhereInput>>>;
  OR?: Maybe<Array<Maybe<BookingStatusChangeWhereInput>>>;
  booking_id?: Maybe<IntFilter>;
  company_id?: Maybe<IntFilter>;
  end_date?: Maybe<DateTimeNullableFilter>;
  id?: Maybe<IntFilter>;
  start_date?: Maybe<DateTimeFilter>;
  status?: Maybe<StringFilter>;
  user_id?: Maybe<IntFilter>;
};

export type BookingStatusChangeWhereUniqueInput = {
  id?: Maybe<Scalars['Int']>;
};

export type BookingStatusCreateInput = {
  basic_field: Scalars['Boolean'];
  company: CompanyCreateNestedOneWithoutBookingStatusInput;
  icon: Scalars['String'];
  icon_color: Scalars['String'];
  indicator?: Maybe<Booking_Statuses_Indicator>;
  name: Scalars['String'];
  ord?: Maybe<Scalars['Float']>;
  track_time?: Maybe<Scalars['Int']>;
  value: Scalars['String'];
};

export type BookingStatusCreateNestedManyWithoutCompanyInput = {
  connect?: Maybe<Array<Maybe<BookingStatusWhereUniqueInput>>>;
  connectOrCreate?: Maybe<Array<Maybe<BookingStatusCreateOrConnectWithoutCompanyInput>>>;
  create?: Maybe<Array<Maybe<BookingStatusCreateWithoutCompanyInput>>>;
};

export type BookingStatusCreateOrConnectWithoutCompanyInput = {
  create: BookingStatusUncheckedCreateWithoutCompanyInput;
  where: BookingStatusWhereUniqueInput;
};

export type BookingStatusCreateWithoutCompanyInput = {
  basic_field: Scalars['Boolean'];
  icon: Scalars['String'];
  icon_color: Scalars['String'];
  indicator?: Maybe<Booking_Statuses_Indicator>;
  name: Scalars['String'];
  ord?: Maybe<Scalars['Float']>;
  track_time?: Maybe<Scalars['Int']>;
  value: Scalars['String'];
};

export type BookingStatusListRelationFilter = {
  every?: Maybe<BookingStatusWhereInput>;
  none?: Maybe<BookingStatusWhereInput>;
  some?: Maybe<BookingStatusWhereInput>;
};

export type BookingStatusOrderByInput = {
  basic_field?: Maybe<SortOrder>;
  company_id?: Maybe<SortOrder>;
  icon?: Maybe<SortOrder>;
  icon_color?: Maybe<SortOrder>;
  id?: Maybe<SortOrder>;
  indicator?: Maybe<SortOrder>;
  name?: Maybe<SortOrder>;
  ord?: Maybe<SortOrder>;
  track_time?: Maybe<SortOrder>;
  value?: Maybe<SortOrder>;
};

export type BookingStatusScalarWhereInput = {
  AND?: Maybe<Array<Maybe<BookingStatusScalarWhereInput>>>;
  NOT?: Maybe<Array<Maybe<BookingStatusScalarWhereInput>>>;
  OR?: Maybe<Array<Maybe<BookingStatusScalarWhereInput>>>;
  basic_field?: Maybe<BoolFilter>;
  company_id?: Maybe<IntFilter>;
  icon?: Maybe<StringFilter>;
  icon_color?: Maybe<StringFilter>;
  id?: Maybe<IntFilter>;
  indicator?: Maybe<Enumbooking_Statuses_IndicatorNullableFilter>;
  name?: Maybe<StringFilter>;
  ord?: Maybe<FloatNullableFilter>;
  track_time?: Maybe<IntFilter>;
  value?: Maybe<StringFilter>;
};

export type BookingStatusUncheckedCreateNestedManyWithoutCompanyInput = {
  connect?: Maybe<Array<Maybe<BookingStatusWhereUniqueInput>>>;
  connectOrCreate?: Maybe<Array<Maybe<BookingStatusCreateOrConnectWithoutCompanyInput>>>;
  create?: Maybe<Array<Maybe<BookingStatusCreateWithoutCompanyInput>>>;
};

export type BookingStatusUncheckedCreateWithoutCompanyInput = {
  basic_field: Scalars['Boolean'];
  icon: Scalars['String'];
  icon_color: Scalars['String'];
  id?: Maybe<Scalars['Int']>;
  indicator?: Maybe<Booking_Statuses_Indicator>;
  name: Scalars['String'];
  ord?: Maybe<Scalars['Float']>;
  track_time?: Maybe<Scalars['Int']>;
  value: Scalars['String'];
};

export type BookingStatusUncheckedUpdateManyWithoutBookingStatusInput = {
  basic_field?: Maybe<BoolFieldUpdateOperationsInput>;
  icon?: Maybe<StringFieldUpdateOperationsInput>;
  icon_color?: Maybe<StringFieldUpdateOperationsInput>;
  id?: Maybe<IntFieldUpdateOperationsInput>;
  indicator?: Maybe<NullableEnumbooking_Statuses_IndicatorFieldUpdateOperationsInput>;
  name?: Maybe<StringFieldUpdateOperationsInput>;
  ord?: Maybe<NullableFloatFieldUpdateOperationsInput>;
  track_time?: Maybe<IntFieldUpdateOperationsInput>;
  value?: Maybe<StringFieldUpdateOperationsInput>;
};

export type BookingStatusUncheckedUpdateManyWithoutCompanyInput = {
  connect?: Maybe<Array<Maybe<BookingStatusWhereUniqueInput>>>;
  connectOrCreate?: Maybe<Array<Maybe<BookingStatusCreateOrConnectWithoutCompanyInput>>>;
  create?: Maybe<Array<Maybe<BookingStatusCreateWithoutCompanyInput>>>;
  delete?: Maybe<Array<Maybe<BookingStatusWhereUniqueInput>>>;
  deleteMany?: Maybe<Array<Maybe<BookingStatusScalarWhereInput>>>;
  disconnect?: Maybe<Array<Maybe<BookingStatusWhereUniqueInput>>>;
  set?: Maybe<Array<Maybe<BookingStatusWhereUniqueInput>>>;
  update?: Maybe<Array<Maybe<BookingStatusUpdateWithWhereUniqueWithoutCompanyInput>>>;
  updateMany?: Maybe<Array<Maybe<BookingStatusUpdateManyWithWhereWithoutCompanyInput>>>;
  upsert?: Maybe<Array<Maybe<BookingStatusUpsertWithWhereUniqueWithoutCompanyInput>>>;
};

export type BookingStatusUncheckedUpdateWithoutCompanyInput = {
  basic_field?: Maybe<BoolFieldUpdateOperationsInput>;
  icon?: Maybe<StringFieldUpdateOperationsInput>;
  icon_color?: Maybe<StringFieldUpdateOperationsInput>;
  id?: Maybe<IntFieldUpdateOperationsInput>;
  indicator?: Maybe<NullableEnumbooking_Statuses_IndicatorFieldUpdateOperationsInput>;
  name?: Maybe<StringFieldUpdateOperationsInput>;
  ord?: Maybe<NullableFloatFieldUpdateOperationsInput>;
  track_time?: Maybe<IntFieldUpdateOperationsInput>;
  value?: Maybe<StringFieldUpdateOperationsInput>;
};

export type BookingStatusUpdateInput = {
  basic_field?: Maybe<BoolFieldUpdateOperationsInput>;
  company?: Maybe<CompanyUpdateOneRequiredWithoutBookingStatusInput>;
  icon?: Maybe<StringFieldUpdateOperationsInput>;
  icon_color?: Maybe<StringFieldUpdateOperationsInput>;
  indicator?: Maybe<NullableEnumbooking_Statuses_IndicatorFieldUpdateOperationsInput>;
  name?: Maybe<StringFieldUpdateOperationsInput>;
  ord?: Maybe<NullableFloatFieldUpdateOperationsInput>;
  track_time?: Maybe<IntFieldUpdateOperationsInput>;
  value?: Maybe<StringFieldUpdateOperationsInput>;
};

export type BookingStatusUpdateManyMutationInput = {
  basic_field?: Maybe<BoolFieldUpdateOperationsInput>;
  icon?: Maybe<StringFieldUpdateOperationsInput>;
  icon_color?: Maybe<StringFieldUpdateOperationsInput>;
  indicator?: Maybe<NullableEnumbooking_Statuses_IndicatorFieldUpdateOperationsInput>;
  name?: Maybe<StringFieldUpdateOperationsInput>;
  ord?: Maybe<NullableFloatFieldUpdateOperationsInput>;
  track_time?: Maybe<IntFieldUpdateOperationsInput>;
  value?: Maybe<StringFieldUpdateOperationsInput>;
};

export type BookingStatusUpdateManyWithWhereWithoutCompanyInput = {
  data: BookingStatusUncheckedUpdateManyWithoutBookingStatusInput;
  where: BookingStatusScalarWhereInput;
};

export type BookingStatusUpdateManyWithoutCompanyInput = {
  connect?: Maybe<Array<Maybe<BookingStatusWhereUniqueInput>>>;
  connectOrCreate?: Maybe<Array<Maybe<BookingStatusCreateOrConnectWithoutCompanyInput>>>;
  create?: Maybe<Array<Maybe<BookingStatusCreateWithoutCompanyInput>>>;
  delete?: Maybe<Array<Maybe<BookingStatusWhereUniqueInput>>>;
  deleteMany?: Maybe<Array<Maybe<BookingStatusScalarWhereInput>>>;
  disconnect?: Maybe<Array<Maybe<BookingStatusWhereUniqueInput>>>;
  set?: Maybe<Array<Maybe<BookingStatusWhereUniqueInput>>>;
  update?: Maybe<Array<Maybe<BookingStatusUpdateWithWhereUniqueWithoutCompanyInput>>>;
  updateMany?: Maybe<Array<Maybe<BookingStatusUpdateManyWithWhereWithoutCompanyInput>>>;
  upsert?: Maybe<Array<Maybe<BookingStatusUpsertWithWhereUniqueWithoutCompanyInput>>>;
};

export type BookingStatusUpdateWithWhereUniqueWithoutCompanyInput = {
  data: BookingStatusUncheckedUpdateWithoutCompanyInput;
  where: BookingStatusWhereUniqueInput;
};

export type BookingStatusUpsertWithWhereUniqueWithoutCompanyInput = {
  create: BookingStatusUncheckedCreateWithoutCompanyInput;
  update: BookingStatusUncheckedUpdateWithoutCompanyInput;
  where: BookingStatusWhereUniqueInput;
};

export type BookingStatusValueCompoundUniqueInput = {
  company_id: Scalars['Int'];
  value: Scalars['String'];
};

export type BookingStatusWhereInput = {
  AND?: Maybe<Array<Maybe<BookingStatusWhereInput>>>;
  NOT?: Maybe<Array<Maybe<BookingStatusWhereInput>>>;
  OR?: Maybe<Array<Maybe<BookingStatusWhereInput>>>;
  basic_field?: Maybe<BoolFilter>;
  company?: Maybe<CompanyWhereInput>;
  company_id?: Maybe<IntFilter>;
  icon?: Maybe<StringFilter>;
  icon_color?: Maybe<StringFilter>;
  id?: Maybe<IntFilter>;
  indicator?: Maybe<Enumbooking_Statuses_IndicatorNullableFilter>;
  name?: Maybe<StringFilter>;
  ord?: Maybe<FloatNullableFilter>;
  track_time?: Maybe<IntFilter>;
  value?: Maybe<StringFilter>;
};

export type BookingStatusWhereUniqueInput = {
  id?: Maybe<Scalars['Int']>;
  value?: Maybe<BookingStatusValueCompoundUniqueInput>;
};

export type BookitProGeneral = {
  __typename?: 'BookitProGeneral';
  account_deposit?: Maybe<Scalars['Float']>;
  advance_time?: Maybe<Scalars['String']>;
  allow_cancel?: Maybe<Scalars['Int']>;
  allow_rating?: Maybe<Scalars['Boolean']>;
  booking_emails?: Maybe<Scalars['String']>;
  class_columns?: Maybe<Scalars['String']>;
  classes_email_confirm?: Maybe<Scalars['Int']>;
  connect_url?: Maybe<Scalars['String']>;
  consultations_only?: Maybe<Scalars['Boolean']>;
  coupon_active?: Maybe<Scalars['Int']>;
  create_invoice?: Maybe<Scalars['String']>;
  default_payment?: Maybe<Scalars['String']>;
  deposit?: Maybe<Scalars['Float']>;
  disable_extra_information?: Maybe<Scalars['Int']>;
  disable_facebook?: Maybe<Scalars['Int']>;
  disable_locations?: Maybe<Scalars['Int']>;
  disable_reviews?: Maybe<Scalars['Int']>;
  doc_shared_template?: Maybe<Scalars['Int']>;
  enable_bookings?: Maybe<Scalars['Int']>;
  enable_master_cat?: Maybe<Scalars['Boolean']>;
  enable_payments?: Maybe<Scalars['String']>;
  enable_title?: Maybe<Scalars['Int']>;
  fb_code?: Maybe<Scalars['String']>;
  fb_event?: Maybe<Scalars['String']>;
  force_new_existing_patient?: Maybe<Scalars['Boolean']>;
  ga_analytics?: Maybe<Scalars['String']>;
  gc_private_key?: Maybe<Scalars['String']>;
  gc_public_key?: Maybe<Scalars['String']>;
  group_by_region?: Maybe<Scalars['Boolean']>;
  gt_manager?: Maybe<Scalars['String']>;
  header_color?: Maybe<Scalars['String']>;
  hide_facebook_share?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  integration_method?: Maybe<Bookitpro_General_Integration_Method>;
  interval?: Maybe<Scalars['Int']>;
  new_stripe?: Maybe<Scalars['Int']>;
  no_vat_prices?: Maybe<Scalars['Boolean']>;
  occupier?: Maybe<Scalars['String']>;
  offline_message?: Maybe<Scalars['String']>;
  one_touch_book?: Maybe<Scalars['Boolean']>;
  online_color?: Maybe<Scalars['String']>;
  only_existing?: Maybe<Scalars['Boolean']>;
  payment_api_url?: Maybe<Scalars['String']>;
  paypal_address?: Maybe<Scalars['String']>;
  promo_codes?: Maybe<Scalars['Boolean']>;
  reccuring_search_btn?: Maybe<Scalars['String']>;
  receive_email?: Maybe<Scalars['String']>;
  redirect_url?: Maybe<Scalars['String']>;
  registration_optional?: Maybe<Scalars['Int']>;
  replace_job_titles?: Maybe<Scalars['Int']>;
  rolling_deposit?: Maybe<Scalars['Int']>;
  sage_password?: Maybe<Scalars['String']>;
  sage_username?: Maybe<Scalars['String']>;
  sage_vendor?: Maybe<Scalars['String']>;
  show_cat_photos?: Maybe<Scalars['Boolean']>;
  show_description?: Maybe<Scalars['Boolean']>;
  show_duration?: Maybe<Scalars['String']>;
  show_prices?: Maybe<Scalars['String']>;
  stripe_fee?: Maybe<Scalars['Float']>;
  stripe_private_key?: Maybe<Scalars['String']>;
  stripe_public_key?: Maybe<Scalars['String']>;
  stripe_reciever?: Maybe<Scalars['Int']>;
  terms_conditions?: Maybe<Scalars['String']>;
  theme?: Maybe<Scalars['String']>;
  use_new_connect?: Maybe<Scalars['Boolean']>;
  warning_message?: Maybe<Scalars['String']>;
};

export type BookitProGeneralCreateInput = {
  account_deposit: Scalars['Float'];
  advance_time: Scalars['String'];
  allow_cancel: Scalars['Int'];
  allow_rating?: Maybe<Scalars['Boolean']>;
  booking_emails: Scalars['String'];
  class_columns: Scalars['String'];
  classes_email_confirm: Scalars['Int'];
  connect_url?: Maybe<Scalars['String']>;
  consultations_only?: Maybe<Scalars['Boolean']>;
  coupon_active: Scalars['Int'];
  create_invoice: Scalars['String'];
  default_payment?: Maybe<Scalars['String']>;
  deposit: Scalars['Float'];
  disable_extra_information: Scalars['Int'];
  disable_facebook: Scalars['Int'];
  disable_locations: Scalars['Int'];
  disable_reviews: Scalars['Int'];
  doc_shared_template: Scalars['Int'];
  enable_bookings: Scalars['Int'];
  enable_master_cat?: Maybe<Scalars['Boolean']>;
  enable_payments: Scalars['String'];
  enable_title?: Maybe<Scalars['Int']>;
  fb_code: Scalars['String'];
  fb_event: Scalars['String'];
  force_new_existing_patient?: Maybe<Scalars['Boolean']>;
  ga_analytics: Scalars['String'];
  gc_private_key: Scalars['String'];
  gc_public_key: Scalars['String'];
  group_by_region?: Maybe<Scalars['Boolean']>;
  gt_manager?: Maybe<Scalars['String']>;
  header_color: Scalars['String'];
  hide_facebook_share: Scalars['Int'];
  integration_method?: Maybe<Bookitpro_General_Integration_Method>;
  interval?: Maybe<Scalars['Int']>;
  new_stripe?: Maybe<Scalars['Int']>;
  no_vat_prices?: Maybe<Scalars['Boolean']>;
  occupier: Scalars['String'];
  offline_message: Scalars['String'];
  one_touch_book?: Maybe<Scalars['Boolean']>;
  online_color: Scalars['String'];
  only_existing?: Maybe<Scalars['Boolean']>;
  payment_api_url: Scalars['String'];
  paypal_address: Scalars['String'];
  promo_codes?: Maybe<Scalars['Boolean']>;
  reccuring_search_btn?: Maybe<Scalars['String']>;
  receive_email: Scalars['String'];
  redirect_url: Scalars['String'];
  registration_optional: Scalars['Int'];
  replace_job_titles: Scalars['Int'];
  rolling_deposit: Scalars['Int'];
  sage_password: Scalars['String'];
  sage_username: Scalars['String'];
  sage_vendor: Scalars['String'];
  show_cat_photos?: Maybe<Scalars['Boolean']>;
  show_description?: Maybe<Scalars['Boolean']>;
  show_duration: Scalars['String'];
  show_prices: Scalars['String'];
  stripe_fee?: Maybe<Scalars['Float']>;
  stripe_private_key: Scalars['String'];
  stripe_public_key: Scalars['String'];
  stripe_reciever: Scalars['Int'];
  terms_conditions: Scalars['String'];
  theme?: Maybe<Scalars['String']>;
  use_new_connect?: Maybe<Scalars['Boolean']>;
  warning_message: Scalars['String'];
};

export type BookitProGeneralOrderByInput = {
  account_deposit?: Maybe<SortOrder>;
  advance_time?: Maybe<SortOrder>;
  allow_cancel?: Maybe<SortOrder>;
  allow_rating?: Maybe<SortOrder>;
  booking_emails?: Maybe<SortOrder>;
  class_columns?: Maybe<SortOrder>;
  classes_email_confirm?: Maybe<SortOrder>;
  connect_url?: Maybe<SortOrder>;
  consultations_only?: Maybe<SortOrder>;
  coupon_active?: Maybe<SortOrder>;
  create_invoice?: Maybe<SortOrder>;
  default_payment?: Maybe<SortOrder>;
  deposit?: Maybe<SortOrder>;
  disable_extra_information?: Maybe<SortOrder>;
  disable_facebook?: Maybe<SortOrder>;
  disable_locations?: Maybe<SortOrder>;
  disable_reviews?: Maybe<SortOrder>;
  doc_shared_template?: Maybe<SortOrder>;
  enable_bookings?: Maybe<SortOrder>;
  enable_master_cat?: Maybe<SortOrder>;
  enable_payments?: Maybe<SortOrder>;
  enable_title?: Maybe<SortOrder>;
  fb_code?: Maybe<SortOrder>;
  fb_event?: Maybe<SortOrder>;
  force_new_existing_patient?: Maybe<SortOrder>;
  ga_analytics?: Maybe<SortOrder>;
  gc_private_key?: Maybe<SortOrder>;
  gc_public_key?: Maybe<SortOrder>;
  group_by_region?: Maybe<SortOrder>;
  gt_manager?: Maybe<SortOrder>;
  header_color?: Maybe<SortOrder>;
  hide_facebook_share?: Maybe<SortOrder>;
  id?: Maybe<SortOrder>;
  integration_method?: Maybe<SortOrder>;
  interval?: Maybe<SortOrder>;
  new_stripe?: Maybe<SortOrder>;
  no_vat_prices?: Maybe<SortOrder>;
  occupier?: Maybe<SortOrder>;
  offline_message?: Maybe<SortOrder>;
  one_touch_book?: Maybe<SortOrder>;
  online_color?: Maybe<SortOrder>;
  only_existing?: Maybe<SortOrder>;
  payment_api_url?: Maybe<SortOrder>;
  paypal_address?: Maybe<SortOrder>;
  promo_codes?: Maybe<SortOrder>;
  reccuring_search_btn?: Maybe<SortOrder>;
  receive_email?: Maybe<SortOrder>;
  redirect_url?: Maybe<SortOrder>;
  registration_optional?: Maybe<SortOrder>;
  replace_job_titles?: Maybe<SortOrder>;
  rolling_deposit?: Maybe<SortOrder>;
  sage_password?: Maybe<SortOrder>;
  sage_username?: Maybe<SortOrder>;
  sage_vendor?: Maybe<SortOrder>;
  show_cat_photos?: Maybe<SortOrder>;
  show_description?: Maybe<SortOrder>;
  show_duration?: Maybe<SortOrder>;
  show_prices?: Maybe<SortOrder>;
  stripe_fee?: Maybe<SortOrder>;
  stripe_private_key?: Maybe<SortOrder>;
  stripe_public_key?: Maybe<SortOrder>;
  stripe_reciever?: Maybe<SortOrder>;
  terms_conditions?: Maybe<SortOrder>;
  theme?: Maybe<SortOrder>;
  use_new_connect?: Maybe<SortOrder>;
  warning_message?: Maybe<SortOrder>;
};

export type BookitProGeneralUpdateInput = {
  account_deposit?: Maybe<FloatFieldUpdateOperationsInput>;
  advance_time?: Maybe<StringFieldUpdateOperationsInput>;
  allow_cancel?: Maybe<IntFieldUpdateOperationsInput>;
  allow_rating?: Maybe<BoolFieldUpdateOperationsInput>;
  booking_emails?: Maybe<StringFieldUpdateOperationsInput>;
  class_columns?: Maybe<StringFieldUpdateOperationsInput>;
  classes_email_confirm?: Maybe<IntFieldUpdateOperationsInput>;
  connect_url?: Maybe<NullableStringFieldUpdateOperationsInput>;
  consultations_only?: Maybe<NullableBoolFieldUpdateOperationsInput>;
  coupon_active?: Maybe<IntFieldUpdateOperationsInput>;
  create_invoice?: Maybe<StringFieldUpdateOperationsInput>;
  default_payment?: Maybe<StringFieldUpdateOperationsInput>;
  deposit?: Maybe<FloatFieldUpdateOperationsInput>;
  disable_extra_information?: Maybe<IntFieldUpdateOperationsInput>;
  disable_facebook?: Maybe<IntFieldUpdateOperationsInput>;
  disable_locations?: Maybe<IntFieldUpdateOperationsInput>;
  disable_reviews?: Maybe<IntFieldUpdateOperationsInput>;
  doc_shared_template?: Maybe<IntFieldUpdateOperationsInput>;
  enable_bookings?: Maybe<IntFieldUpdateOperationsInput>;
  enable_master_cat?: Maybe<BoolFieldUpdateOperationsInput>;
  enable_payments?: Maybe<StringFieldUpdateOperationsInput>;
  enable_title?: Maybe<NullableIntFieldUpdateOperationsInput>;
  fb_code?: Maybe<StringFieldUpdateOperationsInput>;
  fb_event?: Maybe<StringFieldUpdateOperationsInput>;
  force_new_existing_patient?: Maybe<BoolFieldUpdateOperationsInput>;
  ga_analytics?: Maybe<StringFieldUpdateOperationsInput>;
  gc_private_key?: Maybe<StringFieldUpdateOperationsInput>;
  gc_public_key?: Maybe<StringFieldUpdateOperationsInput>;
  group_by_region?: Maybe<BoolFieldUpdateOperationsInput>;
  gt_manager?: Maybe<NullableStringFieldUpdateOperationsInput>;
  header_color?: Maybe<StringFieldUpdateOperationsInput>;
  hide_facebook_share?: Maybe<IntFieldUpdateOperationsInput>;
  integration_method?: Maybe<NullableEnumbookitpro_General_Integration_MethodFieldUpdateOperationsInput>;
  interval?: Maybe<IntFieldUpdateOperationsInput>;
  new_stripe?: Maybe<IntFieldUpdateOperationsInput>;
  no_vat_prices?: Maybe<BoolFieldUpdateOperationsInput>;
  occupier?: Maybe<StringFieldUpdateOperationsInput>;
  offline_message?: Maybe<StringFieldUpdateOperationsInput>;
  one_touch_book?: Maybe<BoolFieldUpdateOperationsInput>;
  online_color?: Maybe<StringFieldUpdateOperationsInput>;
  only_existing?: Maybe<BoolFieldUpdateOperationsInput>;
  payment_api_url?: Maybe<StringFieldUpdateOperationsInput>;
  paypal_address?: Maybe<StringFieldUpdateOperationsInput>;
  promo_codes?: Maybe<BoolFieldUpdateOperationsInput>;
  reccuring_search_btn?: Maybe<StringFieldUpdateOperationsInput>;
  receive_email?: Maybe<StringFieldUpdateOperationsInput>;
  redirect_url?: Maybe<StringFieldUpdateOperationsInput>;
  registration_optional?: Maybe<IntFieldUpdateOperationsInput>;
  replace_job_titles?: Maybe<IntFieldUpdateOperationsInput>;
  rolling_deposit?: Maybe<IntFieldUpdateOperationsInput>;
  sage_password?: Maybe<StringFieldUpdateOperationsInput>;
  sage_username?: Maybe<StringFieldUpdateOperationsInput>;
  sage_vendor?: Maybe<StringFieldUpdateOperationsInput>;
  show_cat_photos?: Maybe<BoolFieldUpdateOperationsInput>;
  show_description?: Maybe<BoolFieldUpdateOperationsInput>;
  show_duration?: Maybe<StringFieldUpdateOperationsInput>;
  show_prices?: Maybe<StringFieldUpdateOperationsInput>;
  stripe_fee?: Maybe<FloatFieldUpdateOperationsInput>;
  stripe_private_key?: Maybe<StringFieldUpdateOperationsInput>;
  stripe_public_key?: Maybe<StringFieldUpdateOperationsInput>;
  stripe_reciever?: Maybe<IntFieldUpdateOperationsInput>;
  terms_conditions?: Maybe<StringFieldUpdateOperationsInput>;
  theme?: Maybe<StringFieldUpdateOperationsInput>;
  use_new_connect?: Maybe<BoolFieldUpdateOperationsInput>;
  warning_message?: Maybe<StringFieldUpdateOperationsInput>;
};

export type BookitProGeneralUpdateManyMutationInput = {
  account_deposit?: Maybe<FloatFieldUpdateOperationsInput>;
  advance_time?: Maybe<StringFieldUpdateOperationsInput>;
  allow_cancel?: Maybe<IntFieldUpdateOperationsInput>;
  allow_rating?: Maybe<BoolFieldUpdateOperationsInput>;
  booking_emails?: Maybe<StringFieldUpdateOperationsInput>;
  class_columns?: Maybe<StringFieldUpdateOperationsInput>;
  classes_email_confirm?: Maybe<IntFieldUpdateOperationsInput>;
  connect_url?: Maybe<NullableStringFieldUpdateOperationsInput>;
  consultations_only?: Maybe<NullableBoolFieldUpdateOperationsInput>;
  coupon_active?: Maybe<IntFieldUpdateOperationsInput>;
  create_invoice?: Maybe<StringFieldUpdateOperationsInput>;
  default_payment?: Maybe<StringFieldUpdateOperationsInput>;
  deposit?: Maybe<FloatFieldUpdateOperationsInput>;
  disable_extra_information?: Maybe<IntFieldUpdateOperationsInput>;
  disable_facebook?: Maybe<IntFieldUpdateOperationsInput>;
  disable_locations?: Maybe<IntFieldUpdateOperationsInput>;
  disable_reviews?: Maybe<IntFieldUpdateOperationsInput>;
  doc_shared_template?: Maybe<IntFieldUpdateOperationsInput>;
  enable_bookings?: Maybe<IntFieldUpdateOperationsInput>;
  enable_master_cat?: Maybe<BoolFieldUpdateOperationsInput>;
  enable_payments?: Maybe<StringFieldUpdateOperationsInput>;
  enable_title?: Maybe<NullableIntFieldUpdateOperationsInput>;
  fb_code?: Maybe<StringFieldUpdateOperationsInput>;
  fb_event?: Maybe<StringFieldUpdateOperationsInput>;
  force_new_existing_patient?: Maybe<BoolFieldUpdateOperationsInput>;
  ga_analytics?: Maybe<StringFieldUpdateOperationsInput>;
  gc_private_key?: Maybe<StringFieldUpdateOperationsInput>;
  gc_public_key?: Maybe<StringFieldUpdateOperationsInput>;
  group_by_region?: Maybe<BoolFieldUpdateOperationsInput>;
  gt_manager?: Maybe<NullableStringFieldUpdateOperationsInput>;
  header_color?: Maybe<StringFieldUpdateOperationsInput>;
  hide_facebook_share?: Maybe<IntFieldUpdateOperationsInput>;
  integration_method?: Maybe<NullableEnumbookitpro_General_Integration_MethodFieldUpdateOperationsInput>;
  interval?: Maybe<IntFieldUpdateOperationsInput>;
  new_stripe?: Maybe<IntFieldUpdateOperationsInput>;
  no_vat_prices?: Maybe<BoolFieldUpdateOperationsInput>;
  occupier?: Maybe<StringFieldUpdateOperationsInput>;
  offline_message?: Maybe<StringFieldUpdateOperationsInput>;
  one_touch_book?: Maybe<BoolFieldUpdateOperationsInput>;
  online_color?: Maybe<StringFieldUpdateOperationsInput>;
  only_existing?: Maybe<BoolFieldUpdateOperationsInput>;
  payment_api_url?: Maybe<StringFieldUpdateOperationsInput>;
  paypal_address?: Maybe<StringFieldUpdateOperationsInput>;
  promo_codes?: Maybe<BoolFieldUpdateOperationsInput>;
  reccuring_search_btn?: Maybe<StringFieldUpdateOperationsInput>;
  receive_email?: Maybe<StringFieldUpdateOperationsInput>;
  redirect_url?: Maybe<StringFieldUpdateOperationsInput>;
  registration_optional?: Maybe<IntFieldUpdateOperationsInput>;
  replace_job_titles?: Maybe<IntFieldUpdateOperationsInput>;
  rolling_deposit?: Maybe<IntFieldUpdateOperationsInput>;
  sage_password?: Maybe<StringFieldUpdateOperationsInput>;
  sage_username?: Maybe<StringFieldUpdateOperationsInput>;
  sage_vendor?: Maybe<StringFieldUpdateOperationsInput>;
  show_cat_photos?: Maybe<BoolFieldUpdateOperationsInput>;
  show_description?: Maybe<BoolFieldUpdateOperationsInput>;
  show_duration?: Maybe<StringFieldUpdateOperationsInput>;
  show_prices?: Maybe<StringFieldUpdateOperationsInput>;
  stripe_fee?: Maybe<FloatFieldUpdateOperationsInput>;
  stripe_private_key?: Maybe<StringFieldUpdateOperationsInput>;
  stripe_public_key?: Maybe<StringFieldUpdateOperationsInput>;
  stripe_reciever?: Maybe<IntFieldUpdateOperationsInput>;
  terms_conditions?: Maybe<StringFieldUpdateOperationsInput>;
  theme?: Maybe<StringFieldUpdateOperationsInput>;
  use_new_connect?: Maybe<BoolFieldUpdateOperationsInput>;
  warning_message?: Maybe<StringFieldUpdateOperationsInput>;
};

export type BookitProGeneralWhereInput = {
  AND?: Maybe<Array<Maybe<BookitProGeneralWhereInput>>>;
  NOT?: Maybe<Array<Maybe<BookitProGeneralWhereInput>>>;
  OR?: Maybe<Array<Maybe<BookitProGeneralWhereInput>>>;
  account_deposit?: Maybe<FloatFilter>;
  advance_time?: Maybe<StringFilter>;
  allow_cancel?: Maybe<IntFilter>;
  allow_rating?: Maybe<BoolFilter>;
  booking_emails?: Maybe<StringFilter>;
  class_columns?: Maybe<StringFilter>;
  classes_email_confirm?: Maybe<IntFilter>;
  connect_url?: Maybe<StringNullableFilter>;
  consultations_only?: Maybe<BoolNullableFilter>;
  coupon_active?: Maybe<IntFilter>;
  create_invoice?: Maybe<StringFilter>;
  default_payment?: Maybe<StringFilter>;
  deposit?: Maybe<FloatFilter>;
  disable_extra_information?: Maybe<IntFilter>;
  disable_facebook?: Maybe<IntFilter>;
  disable_locations?: Maybe<IntFilter>;
  disable_reviews?: Maybe<IntFilter>;
  doc_shared_template?: Maybe<IntFilter>;
  enable_bookings?: Maybe<IntFilter>;
  enable_master_cat?: Maybe<BoolFilter>;
  enable_payments?: Maybe<StringFilter>;
  enable_title?: Maybe<IntNullableFilter>;
  fb_code?: Maybe<StringFilter>;
  fb_event?: Maybe<StringFilter>;
  force_new_existing_patient?: Maybe<BoolFilter>;
  ga_analytics?: Maybe<StringFilter>;
  gc_private_key?: Maybe<StringFilter>;
  gc_public_key?: Maybe<StringFilter>;
  group_by_region?: Maybe<BoolFilter>;
  gt_manager?: Maybe<StringNullableFilter>;
  header_color?: Maybe<StringFilter>;
  hide_facebook_share?: Maybe<IntFilter>;
  id?: Maybe<IntFilter>;
  integration_method?: Maybe<Enumbookitpro_General_Integration_MethodNullableFilter>;
  interval?: Maybe<IntFilter>;
  new_stripe?: Maybe<IntFilter>;
  no_vat_prices?: Maybe<BoolFilter>;
  occupier?: Maybe<StringFilter>;
  offline_message?: Maybe<StringFilter>;
  one_touch_book?: Maybe<BoolFilter>;
  online_color?: Maybe<StringFilter>;
  only_existing?: Maybe<BoolFilter>;
  payment_api_url?: Maybe<StringFilter>;
  paypal_address?: Maybe<StringFilter>;
  promo_codes?: Maybe<BoolFilter>;
  reccuring_search_btn?: Maybe<StringFilter>;
  receive_email?: Maybe<StringFilter>;
  redirect_url?: Maybe<StringFilter>;
  registration_optional?: Maybe<IntFilter>;
  replace_job_titles?: Maybe<IntFilter>;
  rolling_deposit?: Maybe<IntFilter>;
  sage_password?: Maybe<StringFilter>;
  sage_username?: Maybe<StringFilter>;
  sage_vendor?: Maybe<StringFilter>;
  show_cat_photos?: Maybe<BoolFilter>;
  show_description?: Maybe<BoolFilter>;
  show_duration?: Maybe<StringFilter>;
  show_prices?: Maybe<StringFilter>;
  stripe_fee?: Maybe<FloatFilter>;
  stripe_private_key?: Maybe<StringFilter>;
  stripe_public_key?: Maybe<StringFilter>;
  stripe_reciever?: Maybe<IntFilter>;
  terms_conditions?: Maybe<StringFilter>;
  theme?: Maybe<StringFilter>;
  use_new_connect?: Maybe<BoolFilter>;
  warning_message?: Maybe<StringFilter>;
};

export type BookitProGeneralWhereUniqueInput = {
  id?: Maybe<Scalars['Int']>;
};

export type BookitProSlider = {
  __typename?: 'BookitProSlider';
  id?: Maybe<Scalars['Int']>;
  occupier?: Maybe<Scalars['String']>;
  slider1?: Maybe<Scalars['String']>;
  slider2?: Maybe<Scalars['String']>;
  slider3?: Maybe<Scalars['String']>;
  slider4?: Maybe<Scalars['String']>;
};

export type BookitProSliderCreateInput = {
  occupier: Scalars['String'];
  slider1: Scalars['String'];
  slider2: Scalars['String'];
  slider3: Scalars['String'];
  slider4: Scalars['String'];
};

export type BookitProSliderOrderByInput = {
  id?: Maybe<SortOrder>;
  occupier?: Maybe<SortOrder>;
  slider1?: Maybe<SortOrder>;
  slider2?: Maybe<SortOrder>;
  slider3?: Maybe<SortOrder>;
  slider4?: Maybe<SortOrder>;
};

export type BookitProSliderUpdateInput = {
  occupier?: Maybe<StringFieldUpdateOperationsInput>;
  slider1?: Maybe<StringFieldUpdateOperationsInput>;
  slider2?: Maybe<StringFieldUpdateOperationsInput>;
  slider3?: Maybe<StringFieldUpdateOperationsInput>;
  slider4?: Maybe<StringFieldUpdateOperationsInput>;
};

export type BookitProSliderUpdateManyMutationInput = {
  occupier?: Maybe<StringFieldUpdateOperationsInput>;
  slider1?: Maybe<StringFieldUpdateOperationsInput>;
  slider2?: Maybe<StringFieldUpdateOperationsInput>;
  slider3?: Maybe<StringFieldUpdateOperationsInput>;
  slider4?: Maybe<StringFieldUpdateOperationsInput>;
};

export type BookitProSliderWhereInput = {
  AND?: Maybe<Array<Maybe<BookitProSliderWhereInput>>>;
  NOT?: Maybe<Array<Maybe<BookitProSliderWhereInput>>>;
  OR?: Maybe<Array<Maybe<BookitProSliderWhereInput>>>;
  id?: Maybe<IntFilter>;
  occupier?: Maybe<StringFilter>;
  slider1?: Maybe<StringFilter>;
  slider2?: Maybe<StringFilter>;
  slider3?: Maybe<StringFilter>;
  slider4?: Maybe<StringFilter>;
};

export type BookitProSliderWhereUniqueInput = {
  id?: Maybe<Scalars['Int']>;
};

export type BookmarkedPage = {
  __typename?: 'BookmarkedPage';
  companyid?: Maybe<Scalars['Int']>;
  icon?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  link?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  uid?: Maybe<Scalars['Int']>;
};

export type BookmarkedPageCreateInput = {
  companyid: Scalars['Int'];
  icon: Scalars['String'];
  link: Scalars['String'];
  title: Scalars['String'];
  uid: Scalars['Int'];
};

export type BookmarkedPageOrderByInput = {
  companyid?: Maybe<SortOrder>;
  icon?: Maybe<SortOrder>;
  id?: Maybe<SortOrder>;
  link?: Maybe<SortOrder>;
  title?: Maybe<SortOrder>;
  uid?: Maybe<SortOrder>;
};

export type BookmarkedPageUpdateInput = {
  companyid?: Maybe<IntFieldUpdateOperationsInput>;
  icon?: Maybe<StringFieldUpdateOperationsInput>;
  link?: Maybe<StringFieldUpdateOperationsInput>;
  title?: Maybe<StringFieldUpdateOperationsInput>;
  uid?: Maybe<IntFieldUpdateOperationsInput>;
};

export type BookmarkedPageUpdateManyMutationInput = {
  companyid?: Maybe<IntFieldUpdateOperationsInput>;
  icon?: Maybe<StringFieldUpdateOperationsInput>;
  link?: Maybe<StringFieldUpdateOperationsInput>;
  title?: Maybe<StringFieldUpdateOperationsInput>;
  uid?: Maybe<IntFieldUpdateOperationsInput>;
};

export type BookmarkedPageWhereInput = {
  AND?: Maybe<Array<Maybe<BookmarkedPageWhereInput>>>;
  NOT?: Maybe<Array<Maybe<BookmarkedPageWhereInput>>>;
  OR?: Maybe<Array<Maybe<BookmarkedPageWhereInput>>>;
  companyid?: Maybe<IntFilter>;
  icon?: Maybe<StringFilter>;
  id?: Maybe<IntFilter>;
  link?: Maybe<StringFilter>;
  title?: Maybe<StringFilter>;
  uid?: Maybe<IntFilter>;
};

export type BookmarkedPageWhereUniqueInput = {
  id?: Maybe<Scalars['Int']>;
};

export type BoolFieldUpdateOperationsInput = {
  set?: Maybe<Scalars['Boolean']>;
};

export type BoolFilter = {
  equals?: Maybe<Scalars['Boolean']>;
  not?: Maybe<NestedBoolFilter>;
};

export type BoolNullableFilter = {
  equals?: Maybe<Scalars['Boolean']>;
  not?: Maybe<NestedBoolNullableFilter>;
};

/** Boolean expression to compare columns of type "Boolean". All fields are combined with logical 'AND'. */
export type Boolean_Comparison_Exp = {
  _eq?: Maybe<Scalars['Boolean']>;
  _gt?: Maybe<Scalars['Boolean']>;
  _gte?: Maybe<Scalars['Boolean']>;
  _in?: Maybe<Array<Scalars['Boolean']>>;
  _is_null?: Maybe<Scalars['Boolean']>;
  _lt?: Maybe<Scalars['Boolean']>;
  _lte?: Maybe<Scalars['Boolean']>;
  _neq?: Maybe<Scalars['Boolean']>;
  _nin?: Maybe<Array<Scalars['Boolean']>>;
};

export type BugLog = {
  __typename?: 'BugLog';
  bug_message?: Maybe<Scalars['String']>;
  datetime?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  related_id?: Maybe<Scalars['Int']>;
  uid?: Maybe<Scalars['Int']>;
};

export type BugLogCreateInput = {
  bug_message: Scalars['String'];
  datetime: Scalars['Int'];
  related_id: Scalars['Int'];
  uid: Scalars['Int'];
};

export type BugLogOrderByInput = {
  bug_message?: Maybe<SortOrder>;
  datetime?: Maybe<SortOrder>;
  id?: Maybe<SortOrder>;
  related_id?: Maybe<SortOrder>;
  uid?: Maybe<SortOrder>;
};

export type BugLogUpdateInput = {
  bug_message?: Maybe<StringFieldUpdateOperationsInput>;
  datetime?: Maybe<IntFieldUpdateOperationsInput>;
  related_id?: Maybe<IntFieldUpdateOperationsInput>;
  uid?: Maybe<IntFieldUpdateOperationsInput>;
};

export type BugLogUpdateManyMutationInput = {
  bug_message?: Maybe<StringFieldUpdateOperationsInput>;
  datetime?: Maybe<IntFieldUpdateOperationsInput>;
  related_id?: Maybe<IntFieldUpdateOperationsInput>;
  uid?: Maybe<IntFieldUpdateOperationsInput>;
};

export type BugLogWhereInput = {
  AND?: Maybe<Array<Maybe<BugLogWhereInput>>>;
  NOT?: Maybe<Array<Maybe<BugLogWhereInput>>>;
  OR?: Maybe<Array<Maybe<BugLogWhereInput>>>;
  bug_message?: Maybe<StringFilter>;
  datetime?: Maybe<IntFilter>;
  id?: Maybe<IntFilter>;
  related_id?: Maybe<IntFilter>;
  uid?: Maybe<IntFilter>;
};

export type BugLogWhereUniqueInput = {
  id?: Maybe<Scalars['Int']>;
};

export type CalRangeRequest = {
  __typename?: 'CalRangeRequest';
  company_id?: Maybe<Scalars['Int']>;
  end_date?: Maybe<Scalars['DateTime']>;
  id?: Maybe<Scalars['Int']>;
  minutes?: Maybe<Scalars['Int']>;
  start_date?: Maybe<Scalars['DateTime']>;
};

export type CalRangeRequestCreateInput = {
  company_id: Scalars['Int'];
  end_date: Scalars['DateTime'];
  minutes: Scalars['Int'];
  start_date: Scalars['DateTime'];
};

export type CalRangeRequestOrderByInput = {
  company_id?: Maybe<SortOrder>;
  end_date?: Maybe<SortOrder>;
  id?: Maybe<SortOrder>;
  minutes?: Maybe<SortOrder>;
  start_date?: Maybe<SortOrder>;
};

export type CalRangeRequestUpdateInput = {
  company_id?: Maybe<IntFieldUpdateOperationsInput>;
  end_date?: Maybe<DateTimeFieldUpdateOperationsInput>;
  minutes?: Maybe<IntFieldUpdateOperationsInput>;
  start_date?: Maybe<DateTimeFieldUpdateOperationsInput>;
};

export type CalRangeRequestUpdateManyMutationInput = {
  company_id?: Maybe<IntFieldUpdateOperationsInput>;
  end_date?: Maybe<DateTimeFieldUpdateOperationsInput>;
  minutes?: Maybe<IntFieldUpdateOperationsInput>;
  start_date?: Maybe<DateTimeFieldUpdateOperationsInput>;
};

export type CalRangeRequestWhereInput = {
  AND?: Maybe<Array<Maybe<CalRangeRequestWhereInput>>>;
  NOT?: Maybe<Array<Maybe<CalRangeRequestWhereInput>>>;
  OR?: Maybe<Array<Maybe<CalRangeRequestWhereInput>>>;
  company_id?: Maybe<IntFilter>;
  end_date?: Maybe<DateTimeFilter>;
  id?: Maybe<IntFilter>;
  minutes?: Maybe<IntFilter>;
  start_date?: Maybe<DateTimeFilter>;
};

export type CalRangeRequestWhereUniqueInput = {
  id?: Maybe<Scalars['Int']>;
};

export type CalendarView = {
  __typename?: 'CalendarView';
  appointmentSize?: Maybe<Scalars['Int']>;
  dayViewMode?: Maybe<Scalars['String']>;
  employeeGroupsViewMode?: Maybe<Scalars['String']>;
  employeesViewMode?: Maybe<Scalars['String']>;
  favorite?: Maybe<Scalars['Int']>;
  favorite_id?: Maybe<Scalars['Int']>;
  favorite_name?: Maybe<Scalars['String']>;
  favorite_shared?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  locationsViewMode?: Maybe<Scalars['String']>;
  occupier?: Maybe<Scalars['Int']>;
  roomsViewMode?: Maybe<Scalars['String']>;
  serviceGroupsViewMode?: Maybe<Scalars['String']>;
  serviceMastersViewMode?: Maybe<Scalars['String']>;
  servicesViewMode?: Maybe<Scalars['String']>;
  user_id?: Maybe<Scalars['Int']>;
  viewMode?: Maybe<Scalars['String']>;
};

export type CalendarViewCreateInput = {
  appointmentSize?: Maybe<Scalars['Int']>;
  dayViewMode: Scalars['String'];
  employeeGroupsViewMode: Scalars['String'];
  employeesViewMode: Scalars['String'];
  favorite?: Maybe<Scalars['Int']>;
  favorite_id?: Maybe<Scalars['Int']>;
  favorite_name: Scalars['String'];
  favorite_shared?: Maybe<Scalars['Int']>;
  locationsViewMode: Scalars['String'];
  occupier: Scalars['Int'];
  roomsViewMode: Scalars['String'];
  serviceGroupsViewMode: Scalars['String'];
  serviceMastersViewMode: Scalars['String'];
  servicesViewMode: Scalars['String'];
  user_id: Scalars['Int'];
  viewMode: Scalars['String'];
};

export type CalendarViewOrderByInput = {
  appointmentSize?: Maybe<SortOrder>;
  dayViewMode?: Maybe<SortOrder>;
  employeeGroupsViewMode?: Maybe<SortOrder>;
  employeesViewMode?: Maybe<SortOrder>;
  favorite?: Maybe<SortOrder>;
  favorite_id?: Maybe<SortOrder>;
  favorite_name?: Maybe<SortOrder>;
  favorite_shared?: Maybe<SortOrder>;
  id?: Maybe<SortOrder>;
  locationsViewMode?: Maybe<SortOrder>;
  occupier?: Maybe<SortOrder>;
  roomsViewMode?: Maybe<SortOrder>;
  serviceGroupsViewMode?: Maybe<SortOrder>;
  serviceMastersViewMode?: Maybe<SortOrder>;
  servicesViewMode?: Maybe<SortOrder>;
  user_id?: Maybe<SortOrder>;
  viewMode?: Maybe<SortOrder>;
};

export type CalendarViewUpdateInput = {
  appointmentSize?: Maybe<IntFieldUpdateOperationsInput>;
  dayViewMode?: Maybe<StringFieldUpdateOperationsInput>;
  employeeGroupsViewMode?: Maybe<StringFieldUpdateOperationsInput>;
  employeesViewMode?: Maybe<StringFieldUpdateOperationsInput>;
  favorite?: Maybe<IntFieldUpdateOperationsInput>;
  favorite_id?: Maybe<IntFieldUpdateOperationsInput>;
  favorite_name?: Maybe<StringFieldUpdateOperationsInput>;
  favorite_shared?: Maybe<IntFieldUpdateOperationsInput>;
  locationsViewMode?: Maybe<StringFieldUpdateOperationsInput>;
  occupier?: Maybe<IntFieldUpdateOperationsInput>;
  roomsViewMode?: Maybe<StringFieldUpdateOperationsInput>;
  serviceGroupsViewMode?: Maybe<StringFieldUpdateOperationsInput>;
  serviceMastersViewMode?: Maybe<StringFieldUpdateOperationsInput>;
  servicesViewMode?: Maybe<StringFieldUpdateOperationsInput>;
  user_id?: Maybe<IntFieldUpdateOperationsInput>;
  viewMode?: Maybe<StringFieldUpdateOperationsInput>;
};

export type CalendarViewUpdateManyMutationInput = {
  appointmentSize?: Maybe<IntFieldUpdateOperationsInput>;
  dayViewMode?: Maybe<StringFieldUpdateOperationsInput>;
  employeeGroupsViewMode?: Maybe<StringFieldUpdateOperationsInput>;
  employeesViewMode?: Maybe<StringFieldUpdateOperationsInput>;
  favorite?: Maybe<IntFieldUpdateOperationsInput>;
  favorite_id?: Maybe<IntFieldUpdateOperationsInput>;
  favorite_name?: Maybe<StringFieldUpdateOperationsInput>;
  favorite_shared?: Maybe<IntFieldUpdateOperationsInput>;
  locationsViewMode?: Maybe<StringFieldUpdateOperationsInput>;
  occupier?: Maybe<IntFieldUpdateOperationsInput>;
  roomsViewMode?: Maybe<StringFieldUpdateOperationsInput>;
  serviceGroupsViewMode?: Maybe<StringFieldUpdateOperationsInput>;
  serviceMastersViewMode?: Maybe<StringFieldUpdateOperationsInput>;
  servicesViewMode?: Maybe<StringFieldUpdateOperationsInput>;
  user_id?: Maybe<IntFieldUpdateOperationsInput>;
  viewMode?: Maybe<StringFieldUpdateOperationsInput>;
};

export type CalendarViewWhereInput = {
  AND?: Maybe<Array<Maybe<CalendarViewWhereInput>>>;
  NOT?: Maybe<Array<Maybe<CalendarViewWhereInput>>>;
  OR?: Maybe<Array<Maybe<CalendarViewWhereInput>>>;
  appointmentSize?: Maybe<IntFilter>;
  dayViewMode?: Maybe<StringFilter>;
  employeeGroupsViewMode?: Maybe<StringFilter>;
  employeesViewMode?: Maybe<StringFilter>;
  favorite?: Maybe<IntFilter>;
  favorite_id?: Maybe<IntFilter>;
  favorite_name?: Maybe<StringFilter>;
  favorite_shared?: Maybe<IntFilter>;
  id?: Maybe<IntFilter>;
  locationsViewMode?: Maybe<StringFilter>;
  occupier?: Maybe<IntFilter>;
  roomsViewMode?: Maybe<StringFilter>;
  serviceGroupsViewMode?: Maybe<StringFilter>;
  serviceMastersViewMode?: Maybe<StringFilter>;
  servicesViewMode?: Maybe<StringFilter>;
  user_id?: Maybe<IntFilter>;
  viewMode?: Maybe<StringFilter>;
};

export type CalendarViewWhereUniqueInput = {
  id?: Maybe<Scalars['Int']>;
};

export type CampaignAttachment = {
  __typename?: 'CampaignAttachment';
  attach_id?: Maybe<Scalars['Int']>;
  attach_time?: Maybe<Scalars['String']>;
  attach_user_name?: Maybe<Scalars['String']>;
  attachment_type?: Maybe<Scalars['String']>;
  campaign_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  occupier?: Maybe<Scalars['Int']>;
};

export type CampaignAttachmentCreateInput = {
  attach_id: Scalars['Int'];
  attach_time: Scalars['String'];
  attach_user_name: Scalars['String'];
  attachment_type: Scalars['String'];
  campaign_id: Scalars['Int'];
  occupier: Scalars['Int'];
};

export type CampaignAttachmentOrderByInput = {
  attach_id?: Maybe<SortOrder>;
  attach_time?: Maybe<SortOrder>;
  attach_user_name?: Maybe<SortOrder>;
  attachment_type?: Maybe<SortOrder>;
  campaign_id?: Maybe<SortOrder>;
  id?: Maybe<SortOrder>;
  occupier?: Maybe<SortOrder>;
};

export type CampaignAttachmentUpdateInput = {
  attach_id?: Maybe<IntFieldUpdateOperationsInput>;
  attach_time?: Maybe<StringFieldUpdateOperationsInput>;
  attach_user_name?: Maybe<StringFieldUpdateOperationsInput>;
  attachment_type?: Maybe<StringFieldUpdateOperationsInput>;
  campaign_id?: Maybe<IntFieldUpdateOperationsInput>;
  occupier?: Maybe<IntFieldUpdateOperationsInput>;
};

export type CampaignAttachmentUpdateManyMutationInput = {
  attach_id?: Maybe<IntFieldUpdateOperationsInput>;
  attach_time?: Maybe<StringFieldUpdateOperationsInput>;
  attach_user_name?: Maybe<StringFieldUpdateOperationsInput>;
  attachment_type?: Maybe<StringFieldUpdateOperationsInput>;
  campaign_id?: Maybe<IntFieldUpdateOperationsInput>;
  occupier?: Maybe<IntFieldUpdateOperationsInput>;
};

export type CampaignAttachmentWhereInput = {
  AND?: Maybe<Array<Maybe<CampaignAttachmentWhereInput>>>;
  NOT?: Maybe<Array<Maybe<CampaignAttachmentWhereInput>>>;
  OR?: Maybe<Array<Maybe<CampaignAttachmentWhereInput>>>;
  attach_id?: Maybe<IntFilter>;
  attach_time?: Maybe<StringFilter>;
  attach_user_name?: Maybe<StringFilter>;
  attachment_type?: Maybe<StringFilter>;
  campaign_id?: Maybe<IntFilter>;
  id?: Maybe<IntFilter>;
  occupier?: Maybe<IntFilter>;
};

export type CampaignAttachmentWhereUniqueInput = {
  id?: Maybe<Scalars['Int']>;
};

export type CancelReason = {
  __typename?: 'CancelReason';
  apply_cancellation_policy?: Maybe<Scalars['Int']>;
  created_at?: Maybe<Scalars['DateTime']>;
  id?: Maybe<Scalars['Int']>;
  late_cancel?: Maybe<Scalars['Int']>;
  modified_at?: Maybe<Scalars['DateTime']>;
  occupier?: Maybe<Scalars['String']>;
  reason_name?: Maybe<Scalars['String']>;
};

export type CancelReasonCreateInput = {
  apply_cancellation_policy: Scalars['Int'];
  created_at: Scalars['DateTime'];
  late_cancel: Scalars['Int'];
  modified_at: Scalars['DateTime'];
  occupier: Scalars['String'];
  reason_name: Scalars['String'];
};

export type CancelReasonOrderByInput = {
  apply_cancellation_policy?: Maybe<SortOrder>;
  created_at?: Maybe<SortOrder>;
  id?: Maybe<SortOrder>;
  late_cancel?: Maybe<SortOrder>;
  modified_at?: Maybe<SortOrder>;
  occupier?: Maybe<SortOrder>;
  reason_name?: Maybe<SortOrder>;
};

export type CancelReasonUpdateInput = {
  apply_cancellation_policy?: Maybe<IntFieldUpdateOperationsInput>;
  created_at?: Maybe<DateTimeFieldUpdateOperationsInput>;
  late_cancel?: Maybe<IntFieldUpdateOperationsInput>;
  modified_at?: Maybe<DateTimeFieldUpdateOperationsInput>;
  occupier?: Maybe<StringFieldUpdateOperationsInput>;
  reason_name?: Maybe<StringFieldUpdateOperationsInput>;
};

export type CancelReasonUpdateManyMutationInput = {
  apply_cancellation_policy?: Maybe<IntFieldUpdateOperationsInput>;
  created_at?: Maybe<DateTimeFieldUpdateOperationsInput>;
  late_cancel?: Maybe<IntFieldUpdateOperationsInput>;
  modified_at?: Maybe<DateTimeFieldUpdateOperationsInput>;
  occupier?: Maybe<StringFieldUpdateOperationsInput>;
  reason_name?: Maybe<StringFieldUpdateOperationsInput>;
};

export type CancelReasonWhereInput = {
  AND?: Maybe<Array<Maybe<CancelReasonWhereInput>>>;
  NOT?: Maybe<Array<Maybe<CancelReasonWhereInput>>>;
  OR?: Maybe<Array<Maybe<CancelReasonWhereInput>>>;
  apply_cancellation_policy?: Maybe<IntFilter>;
  created_at?: Maybe<DateTimeFilter>;
  id?: Maybe<IntFilter>;
  late_cancel?: Maybe<IntFilter>;
  modified_at?: Maybe<DateTimeFilter>;
  occupier?: Maybe<StringFilter>;
  reason_name?: Maybe<StringFilter>;
};

export type CancelReasonWhereUniqueInput = {
  id?: Maybe<Scalars['Int']>;
};

export type CancellationPolicy = {
  __typename?: 'CancellationPolicy';
  advanced_cancellation_fee?: Maybe<Scalars['Int']>;
  creation_date?: Maybe<Scalars['DateTime']>;
  id?: Maybe<Scalars['Int']>;
  is_active?: Maybe<Scalars['Boolean']>;
  modified_date?: Maybe<Scalars['DateTime']>;
  no_show_fee?: Maybe<Scalars['Int']>;
  occupier?: Maybe<Scalars['Int']>;
  payment_protection?: Maybe<Scalars['Int']>;
  policy_action?: Maybe<Scalars['Int']>;
  policy_message?: Maybe<Scalars['String']>;
  policy_notice?: Maybe<Scalars['String']>;
  policy_override?: Maybe<Scalars['Int']>;
  policy_type?: Maybe<Scalars['Int']>;
  policy_value?: Maybe<Scalars['Float']>;
};

export type CancellationPolicyCreateInput = {
  advanced_cancellation_fee: Scalars['Int'];
  creation_date?: Maybe<Scalars['DateTime']>;
  is_active: Scalars['Boolean'];
  modified_date?: Maybe<Scalars['DateTime']>;
  no_show_fee: Scalars['Int'];
  occupier: Scalars['Int'];
  payment_protection: Scalars['Int'];
  policy_action: Scalars['Int'];
  policy_message?: Maybe<Scalars['String']>;
  policy_notice: Scalars['String'];
  policy_override: Scalars['Int'];
  policy_type?: Maybe<Scalars['Int']>;
  policy_value?: Maybe<Scalars['Float']>;
};

export type CancellationPolicyOrderByInput = {
  advanced_cancellation_fee?: Maybe<SortOrder>;
  creation_date?: Maybe<SortOrder>;
  id?: Maybe<SortOrder>;
  is_active?: Maybe<SortOrder>;
  modified_date?: Maybe<SortOrder>;
  no_show_fee?: Maybe<SortOrder>;
  occupier?: Maybe<SortOrder>;
  payment_protection?: Maybe<SortOrder>;
  policy_action?: Maybe<SortOrder>;
  policy_message?: Maybe<SortOrder>;
  policy_notice?: Maybe<SortOrder>;
  policy_override?: Maybe<SortOrder>;
  policy_type?: Maybe<SortOrder>;
  policy_value?: Maybe<SortOrder>;
};

export type CancellationPolicyUpdateInput = {
  advanced_cancellation_fee?: Maybe<IntFieldUpdateOperationsInput>;
  creation_date?: Maybe<NullableDateTimeFieldUpdateOperationsInput>;
  is_active?: Maybe<BoolFieldUpdateOperationsInput>;
  modified_date?: Maybe<NullableDateTimeFieldUpdateOperationsInput>;
  no_show_fee?: Maybe<IntFieldUpdateOperationsInput>;
  occupier?: Maybe<IntFieldUpdateOperationsInput>;
  payment_protection?: Maybe<IntFieldUpdateOperationsInput>;
  policy_action?: Maybe<IntFieldUpdateOperationsInput>;
  policy_message?: Maybe<NullableStringFieldUpdateOperationsInput>;
  policy_notice?: Maybe<StringFieldUpdateOperationsInput>;
  policy_override?: Maybe<IntFieldUpdateOperationsInput>;
  policy_type?: Maybe<IntFieldUpdateOperationsInput>;
  policy_value?: Maybe<FloatFieldUpdateOperationsInput>;
};

export type CancellationPolicyUpdateManyMutationInput = {
  advanced_cancellation_fee?: Maybe<IntFieldUpdateOperationsInput>;
  creation_date?: Maybe<NullableDateTimeFieldUpdateOperationsInput>;
  is_active?: Maybe<BoolFieldUpdateOperationsInput>;
  modified_date?: Maybe<NullableDateTimeFieldUpdateOperationsInput>;
  no_show_fee?: Maybe<IntFieldUpdateOperationsInput>;
  occupier?: Maybe<IntFieldUpdateOperationsInput>;
  payment_protection?: Maybe<IntFieldUpdateOperationsInput>;
  policy_action?: Maybe<IntFieldUpdateOperationsInput>;
  policy_message?: Maybe<NullableStringFieldUpdateOperationsInput>;
  policy_notice?: Maybe<StringFieldUpdateOperationsInput>;
  policy_override?: Maybe<IntFieldUpdateOperationsInput>;
  policy_type?: Maybe<IntFieldUpdateOperationsInput>;
  policy_value?: Maybe<FloatFieldUpdateOperationsInput>;
};

export type CancellationPolicyWhereInput = {
  AND?: Maybe<Array<Maybe<CancellationPolicyWhereInput>>>;
  NOT?: Maybe<Array<Maybe<CancellationPolicyWhereInput>>>;
  OR?: Maybe<Array<Maybe<CancellationPolicyWhereInput>>>;
  advanced_cancellation_fee?: Maybe<IntFilter>;
  creation_date?: Maybe<DateTimeNullableFilter>;
  id?: Maybe<IntFilter>;
  is_active?: Maybe<BoolFilter>;
  modified_date?: Maybe<DateTimeNullableFilter>;
  no_show_fee?: Maybe<IntFilter>;
  occupier?: Maybe<IntFilter>;
  payment_protection?: Maybe<IntFilter>;
  policy_action?: Maybe<IntFilter>;
  policy_message?: Maybe<StringNullableFilter>;
  policy_notice?: Maybe<StringFilter>;
  policy_override?: Maybe<IntFilter>;
  policy_type?: Maybe<IntFilter>;
  policy_value?: Maybe<FloatFilter>;
};

export type CancellationPolicyWhereUniqueInput = {
  id?: Maybe<Scalars['Int']>;
};

export type Candidate = {
  __typename?: 'Candidate';
  candidate_status?: Maybe<Scalars['String']>;
  company?: Maybe<Company>;
  company_id?: Maybe<Scalars['Int']>;
  contact_id?: Maybe<Scalars['Int']>;
  cover_letter?: Maybe<Scalars['String']>;
  created_date?: Maybe<Scalars['DateTime']>;
  date_available?: Maybe<Scalars['DateTime']>;
  how_heard?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  job_references?: Maybe<Scalars['String']>;
  linkedin?: Maybe<Scalars['String']>;
  opening_id?: Maybe<Scalars['Int']>;
  rating?: Maybe<Scalars['Int']>;
  referred_by?: Maybe<Scalars['String']>;
  resume?: Maybe<Scalars['String']>;
};

export type CandidateCreateInput = {
  candidate_status?: Maybe<Scalars['String']>;
  company?: Maybe<CompanyCreateNestedOneWithoutCandidateInput>;
  contact_id: Scalars['Int'];
  cover_letter: Scalars['String'];
  created_date: Scalars['DateTime'];
  date_available: Scalars['DateTime'];
  how_heard: Scalars['String'];
  job_references: Scalars['String'];
  linkedin: Scalars['String'];
  opening_id: Scalars['Int'];
  rating?: Maybe<Scalars['Int']>;
  referred_by: Scalars['String'];
  resume: Scalars['String'];
};

export type CandidateCreateNestedManyWithoutCompanyInput = {
  connect?: Maybe<Array<Maybe<CandidateWhereUniqueInput>>>;
  connectOrCreate?: Maybe<Array<Maybe<CandidateCreateOrConnectWithoutCompanyInput>>>;
  create?: Maybe<Array<Maybe<CandidateCreateWithoutCompanyInput>>>;
};

export type CandidateCreateOrConnectWithoutCompanyInput = {
  create: CandidateUncheckedCreateWithoutCompanyInput;
  where: CandidateWhereUniqueInput;
};

export type CandidateCreateWithoutCompanyInput = {
  candidate_status?: Maybe<Scalars['String']>;
  contact_id: Scalars['Int'];
  cover_letter: Scalars['String'];
  created_date: Scalars['DateTime'];
  date_available: Scalars['DateTime'];
  how_heard: Scalars['String'];
  job_references: Scalars['String'];
  linkedin: Scalars['String'];
  opening_id: Scalars['Int'];
  rating?: Maybe<Scalars['Int']>;
  referred_by: Scalars['String'];
  resume: Scalars['String'];
};

export type CandidateListRelationFilter = {
  every?: Maybe<CandidateWhereInput>;
  none?: Maybe<CandidateWhereInput>;
  some?: Maybe<CandidateWhereInput>;
};

export type CandidateOrderByInput = {
  candidate_status?: Maybe<SortOrder>;
  company_id?: Maybe<SortOrder>;
  contact_id?: Maybe<SortOrder>;
  cover_letter?: Maybe<SortOrder>;
  created_date?: Maybe<SortOrder>;
  date_available?: Maybe<SortOrder>;
  how_heard?: Maybe<SortOrder>;
  id?: Maybe<SortOrder>;
  job_references?: Maybe<SortOrder>;
  linkedin?: Maybe<SortOrder>;
  opening_id?: Maybe<SortOrder>;
  rating?: Maybe<SortOrder>;
  referred_by?: Maybe<SortOrder>;
  resume?: Maybe<SortOrder>;
};

export type CandidateScalarWhereInput = {
  AND?: Maybe<Array<Maybe<CandidateScalarWhereInput>>>;
  NOT?: Maybe<Array<Maybe<CandidateScalarWhereInput>>>;
  OR?: Maybe<Array<Maybe<CandidateScalarWhereInput>>>;
  candidate_status?: Maybe<StringNullableFilter>;
  company_id?: Maybe<IntNullableFilter>;
  contact_id?: Maybe<IntFilter>;
  cover_letter?: Maybe<StringFilter>;
  created_date?: Maybe<DateTimeFilter>;
  date_available?: Maybe<DateTimeFilter>;
  how_heard?: Maybe<StringFilter>;
  id?: Maybe<IntFilter>;
  job_references?: Maybe<StringFilter>;
  linkedin?: Maybe<StringFilter>;
  opening_id?: Maybe<IntFilter>;
  rating?: Maybe<IntFilter>;
  referred_by?: Maybe<StringFilter>;
  resume?: Maybe<StringFilter>;
};

export type CandidateUncheckedCreateNestedManyWithoutCompanyInput = {
  connect?: Maybe<Array<Maybe<CandidateWhereUniqueInput>>>;
  connectOrCreate?: Maybe<Array<Maybe<CandidateCreateOrConnectWithoutCompanyInput>>>;
  create?: Maybe<Array<Maybe<CandidateCreateWithoutCompanyInput>>>;
};

export type CandidateUncheckedCreateWithoutCompanyInput = {
  candidate_status?: Maybe<Scalars['String']>;
  contact_id: Scalars['Int'];
  cover_letter: Scalars['String'];
  created_date: Scalars['DateTime'];
  date_available: Scalars['DateTime'];
  how_heard: Scalars['String'];
  id?: Maybe<Scalars['Int']>;
  job_references: Scalars['String'];
  linkedin: Scalars['String'];
  opening_id: Scalars['Int'];
  rating?: Maybe<Scalars['Int']>;
  referred_by: Scalars['String'];
  resume: Scalars['String'];
};

export type CandidateUncheckedUpdateManyWithoutCandidateInput = {
  candidate_status?: Maybe<NullableStringFieldUpdateOperationsInput>;
  contact_id?: Maybe<IntFieldUpdateOperationsInput>;
  cover_letter?: Maybe<StringFieldUpdateOperationsInput>;
  created_date?: Maybe<DateTimeFieldUpdateOperationsInput>;
  date_available?: Maybe<DateTimeFieldUpdateOperationsInput>;
  how_heard?: Maybe<StringFieldUpdateOperationsInput>;
  id?: Maybe<IntFieldUpdateOperationsInput>;
  job_references?: Maybe<StringFieldUpdateOperationsInput>;
  linkedin?: Maybe<StringFieldUpdateOperationsInput>;
  opening_id?: Maybe<IntFieldUpdateOperationsInput>;
  rating?: Maybe<IntFieldUpdateOperationsInput>;
  referred_by?: Maybe<StringFieldUpdateOperationsInput>;
  resume?: Maybe<StringFieldUpdateOperationsInput>;
};

export type CandidateUncheckedUpdateManyWithoutCompanyInput = {
  connect?: Maybe<Array<Maybe<CandidateWhereUniqueInput>>>;
  connectOrCreate?: Maybe<Array<Maybe<CandidateCreateOrConnectWithoutCompanyInput>>>;
  create?: Maybe<Array<Maybe<CandidateCreateWithoutCompanyInput>>>;
  delete?: Maybe<Array<Maybe<CandidateWhereUniqueInput>>>;
  deleteMany?: Maybe<Array<Maybe<CandidateScalarWhereInput>>>;
  disconnect?: Maybe<Array<Maybe<CandidateWhereUniqueInput>>>;
  set?: Maybe<Array<Maybe<CandidateWhereUniqueInput>>>;
  update?: Maybe<Array<Maybe<CandidateUpdateWithWhereUniqueWithoutCompanyInput>>>;
  updateMany?: Maybe<Array<Maybe<CandidateUpdateManyWithWhereWithoutCompanyInput>>>;
  upsert?: Maybe<Array<Maybe<CandidateUpsertWithWhereUniqueWithoutCompanyInput>>>;
};

export type CandidateUncheckedUpdateWithoutCompanyInput = {
  candidate_status?: Maybe<NullableStringFieldUpdateOperationsInput>;
  contact_id?: Maybe<IntFieldUpdateOperationsInput>;
  cover_letter?: Maybe<StringFieldUpdateOperationsInput>;
  created_date?: Maybe<DateTimeFieldUpdateOperationsInput>;
  date_available?: Maybe<DateTimeFieldUpdateOperationsInput>;
  how_heard?: Maybe<StringFieldUpdateOperationsInput>;
  id?: Maybe<IntFieldUpdateOperationsInput>;
  job_references?: Maybe<StringFieldUpdateOperationsInput>;
  linkedin?: Maybe<StringFieldUpdateOperationsInput>;
  opening_id?: Maybe<IntFieldUpdateOperationsInput>;
  rating?: Maybe<IntFieldUpdateOperationsInput>;
  referred_by?: Maybe<StringFieldUpdateOperationsInput>;
  resume?: Maybe<StringFieldUpdateOperationsInput>;
};

export type CandidateUpdateInput = {
  candidate_status?: Maybe<NullableStringFieldUpdateOperationsInput>;
  company?: Maybe<CompanyUpdateOneWithoutCandidateInput>;
  contact_id?: Maybe<IntFieldUpdateOperationsInput>;
  cover_letter?: Maybe<StringFieldUpdateOperationsInput>;
  created_date?: Maybe<DateTimeFieldUpdateOperationsInput>;
  date_available?: Maybe<DateTimeFieldUpdateOperationsInput>;
  how_heard?: Maybe<StringFieldUpdateOperationsInput>;
  job_references?: Maybe<StringFieldUpdateOperationsInput>;
  linkedin?: Maybe<StringFieldUpdateOperationsInput>;
  opening_id?: Maybe<IntFieldUpdateOperationsInput>;
  rating?: Maybe<IntFieldUpdateOperationsInput>;
  referred_by?: Maybe<StringFieldUpdateOperationsInput>;
  resume?: Maybe<StringFieldUpdateOperationsInput>;
};

export type CandidateUpdateManyMutationInput = {
  candidate_status?: Maybe<NullableStringFieldUpdateOperationsInput>;
  contact_id?: Maybe<IntFieldUpdateOperationsInput>;
  cover_letter?: Maybe<StringFieldUpdateOperationsInput>;
  created_date?: Maybe<DateTimeFieldUpdateOperationsInput>;
  date_available?: Maybe<DateTimeFieldUpdateOperationsInput>;
  how_heard?: Maybe<StringFieldUpdateOperationsInput>;
  job_references?: Maybe<StringFieldUpdateOperationsInput>;
  linkedin?: Maybe<StringFieldUpdateOperationsInput>;
  opening_id?: Maybe<IntFieldUpdateOperationsInput>;
  rating?: Maybe<IntFieldUpdateOperationsInput>;
  referred_by?: Maybe<StringFieldUpdateOperationsInput>;
  resume?: Maybe<StringFieldUpdateOperationsInput>;
};

export type CandidateUpdateManyWithWhereWithoutCompanyInput = {
  data: CandidateUncheckedUpdateManyWithoutCandidateInput;
  where: CandidateScalarWhereInput;
};

export type CandidateUpdateManyWithoutCompanyInput = {
  connect?: Maybe<Array<Maybe<CandidateWhereUniqueInput>>>;
  connectOrCreate?: Maybe<Array<Maybe<CandidateCreateOrConnectWithoutCompanyInput>>>;
  create?: Maybe<Array<Maybe<CandidateCreateWithoutCompanyInput>>>;
  delete?: Maybe<Array<Maybe<CandidateWhereUniqueInput>>>;
  deleteMany?: Maybe<Array<Maybe<CandidateScalarWhereInput>>>;
  disconnect?: Maybe<Array<Maybe<CandidateWhereUniqueInput>>>;
  set?: Maybe<Array<Maybe<CandidateWhereUniqueInput>>>;
  update?: Maybe<Array<Maybe<CandidateUpdateWithWhereUniqueWithoutCompanyInput>>>;
  updateMany?: Maybe<Array<Maybe<CandidateUpdateManyWithWhereWithoutCompanyInput>>>;
  upsert?: Maybe<Array<Maybe<CandidateUpsertWithWhereUniqueWithoutCompanyInput>>>;
};

export type CandidateUpdateWithWhereUniqueWithoutCompanyInput = {
  data: CandidateUncheckedUpdateWithoutCompanyInput;
  where: CandidateWhereUniqueInput;
};

export type CandidateUpsertWithWhereUniqueWithoutCompanyInput = {
  create: CandidateUncheckedCreateWithoutCompanyInput;
  update: CandidateUncheckedUpdateWithoutCompanyInput;
  where: CandidateWhereUniqueInput;
};

export type CandidateWhereInput = {
  AND?: Maybe<Array<Maybe<CandidateWhereInput>>>;
  NOT?: Maybe<Array<Maybe<CandidateWhereInput>>>;
  OR?: Maybe<Array<Maybe<CandidateWhereInput>>>;
  candidate_status?: Maybe<StringNullableFilter>;
  company?: Maybe<CompanyWhereInput>;
  company_id?: Maybe<IntNullableFilter>;
  contact_id?: Maybe<IntFilter>;
  cover_letter?: Maybe<StringFilter>;
  created_date?: Maybe<DateTimeFilter>;
  date_available?: Maybe<DateTimeFilter>;
  how_heard?: Maybe<StringFilter>;
  id?: Maybe<IntFilter>;
  job_references?: Maybe<StringFilter>;
  linkedin?: Maybe<StringFilter>;
  opening_id?: Maybe<IntFilter>;
  rating?: Maybe<IntFilter>;
  referred_by?: Maybe<StringFilter>;
  resume?: Maybe<StringFilter>;
};

export type CandidateWhereUniqueInput = {
  id?: Maybe<Scalars['Int']>;
};

export type CardType = {
  __typename?: 'CardType';
  amex?: Maybe<Scalars['Int']>;
  amex_credit_charge?: Maybe<Scalars['Float']>;
  company_id?: Maybe<Scalars['Int']>;
  enable_reference?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  maestro?: Maybe<Scalars['Int']>;
  mastercard?: Maybe<Scalars['Int']>;
  mastercard_credit_charge?: Maybe<Scalars['Float']>;
  visa?: Maybe<Scalars['Int']>;
  visa_credit?: Maybe<Scalars['Int']>;
  visa_credit_charge?: Maybe<Scalars['Float']>;
  worldpay?: Maybe<Scalars['Int']>;
};

export type CardTypeCreateInput = {
  amex: Scalars['Int'];
  amex_credit_charge: Scalars['Float'];
  company_id: Scalars['Int'];
  enable_reference: Scalars['Int'];
  maestro: Scalars['Int'];
  mastercard: Scalars['Int'];
  mastercard_credit_charge: Scalars['Float'];
  visa: Scalars['Int'];
  visa_credit: Scalars['Int'];
  visa_credit_charge: Scalars['Float'];
  worldpay: Scalars['Int'];
};

export type CardTypeOrderByInput = {
  amex?: Maybe<SortOrder>;
  amex_credit_charge?: Maybe<SortOrder>;
  company_id?: Maybe<SortOrder>;
  enable_reference?: Maybe<SortOrder>;
  id?: Maybe<SortOrder>;
  maestro?: Maybe<SortOrder>;
  mastercard?: Maybe<SortOrder>;
  mastercard_credit_charge?: Maybe<SortOrder>;
  visa?: Maybe<SortOrder>;
  visa_credit?: Maybe<SortOrder>;
  visa_credit_charge?: Maybe<SortOrder>;
  worldpay?: Maybe<SortOrder>;
};

export type CardTypeUpdateInput = {
  amex?: Maybe<IntFieldUpdateOperationsInput>;
  amex_credit_charge?: Maybe<FloatFieldUpdateOperationsInput>;
  company_id?: Maybe<IntFieldUpdateOperationsInput>;
  enable_reference?: Maybe<IntFieldUpdateOperationsInput>;
  maestro?: Maybe<IntFieldUpdateOperationsInput>;
  mastercard?: Maybe<IntFieldUpdateOperationsInput>;
  mastercard_credit_charge?: Maybe<FloatFieldUpdateOperationsInput>;
  visa?: Maybe<IntFieldUpdateOperationsInput>;
  visa_credit?: Maybe<IntFieldUpdateOperationsInput>;
  visa_credit_charge?: Maybe<FloatFieldUpdateOperationsInput>;
  worldpay?: Maybe<IntFieldUpdateOperationsInput>;
};

export type CardTypeUpdateManyMutationInput = {
  amex?: Maybe<IntFieldUpdateOperationsInput>;
  amex_credit_charge?: Maybe<FloatFieldUpdateOperationsInput>;
  company_id?: Maybe<IntFieldUpdateOperationsInput>;
  enable_reference?: Maybe<IntFieldUpdateOperationsInput>;
  maestro?: Maybe<IntFieldUpdateOperationsInput>;
  mastercard?: Maybe<IntFieldUpdateOperationsInput>;
  mastercard_credit_charge?: Maybe<FloatFieldUpdateOperationsInput>;
  visa?: Maybe<IntFieldUpdateOperationsInput>;
  visa_credit?: Maybe<IntFieldUpdateOperationsInput>;
  visa_credit_charge?: Maybe<FloatFieldUpdateOperationsInput>;
  worldpay?: Maybe<IntFieldUpdateOperationsInput>;
};

export type CardTypeWhereInput = {
  AND?: Maybe<Array<Maybe<CardTypeWhereInput>>>;
  NOT?: Maybe<Array<Maybe<CardTypeWhereInput>>>;
  OR?: Maybe<Array<Maybe<CardTypeWhereInput>>>;
  amex?: Maybe<IntFilter>;
  amex_credit_charge?: Maybe<FloatFilter>;
  company_id?: Maybe<IntFilter>;
  enable_reference?: Maybe<IntFilter>;
  id?: Maybe<IntFilter>;
  maestro?: Maybe<IntFilter>;
  mastercard?: Maybe<IntFilter>;
  mastercard_credit_charge?: Maybe<FloatFilter>;
  visa?: Maybe<IntFilter>;
  visa_credit?: Maybe<IntFilter>;
  visa_credit_charge?: Maybe<FloatFilter>;
  worldpay?: Maybe<IntFilter>;
};

export type CardTypeWhereUniqueInput = {
  id?: Maybe<Scalars['Int']>;
};

export type CashupReport = {
  __typename?: 'CashupReport';
  card_actual?: Maybe<Scalars['Float']>;
  card_amount?: Maybe<Scalars['Float']>;
  card_difference?: Maybe<Scalars['Float']>;
  cash_actual?: Maybe<Scalars['Float']>;
  cash_amount?: Maybe<Scalars['Float']>;
  cash_difference?: Maybe<Scalars['Float']>;
  cashup_date?: Maybe<Scalars['DateTime']>;
  cheque_actual?: Maybe<Scalars['Float']>;
  cheque_amount?: Maybe<Scalars['Float']>;
  cheque_difference?: Maybe<Scalars['Float']>;
  comments?: Maybe<Scalars['String']>;
  company_id?: Maybe<Scalars['Int']>;
  finance_id?: Maybe<Scalars['Int']>;
  float_amount?: Maybe<Scalars['Float']>;
  giftvoucher_actual?: Maybe<Scalars['Float']>;
  giftvoucher_amount?: Maybe<Scalars['Float']>;
  giftvoucher_difference?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Int']>;
  location_id?: Maybe<Scalars['Int']>;
  opening_balance?: Maybe<Scalars['Float']>;
  staff_id?: Maybe<Scalars['Int']>;
};

export type CashupReportCreateInput = {
  card_actual: Scalars['Float'];
  card_amount: Scalars['Float'];
  card_difference: Scalars['Float'];
  cash_actual: Scalars['Float'];
  cash_amount: Scalars['Float'];
  cash_difference: Scalars['Float'];
  cashup_date: Scalars['DateTime'];
  cheque_actual: Scalars['Float'];
  cheque_amount: Scalars['Float'];
  cheque_difference: Scalars['Float'];
  comments: Scalars['String'];
  company_id: Scalars['Int'];
  finance_id: Scalars['Int'];
  float_amount: Scalars['Float'];
  giftvoucher_actual: Scalars['Float'];
  giftvoucher_amount: Scalars['Float'];
  giftvoucher_difference: Scalars['Float'];
  location_id?: Maybe<Scalars['Int']>;
  opening_balance: Scalars['Float'];
  staff_id: Scalars['Int'];
};

export type CashupReportCustom = {
  __typename?: 'CashupReportCustom';
  card_type?: Maybe<Scalars['String']>;
  cashup_date?: Maybe<Scalars['DateTime']>;
  company_id?: Maybe<Scalars['String']>;
  custom_actual?: Maybe<Scalars['Float']>;
  custom_amount?: Maybe<Scalars['Float']>;
  custom_difference?: Maybe<Scalars['Float']>;
  custom_type?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  location_id?: Maybe<Scalars['Int']>;
};

export type CashupReportCustomCreateInput = {
  card_type: Scalars['String'];
  cashup_date: Scalars['DateTime'];
  company_id: Scalars['String'];
  custom_actual: Scalars['Float'];
  custom_amount: Scalars['Float'];
  custom_difference: Scalars['Float'];
  custom_type: Scalars['String'];
  location_id?: Maybe<Scalars['Int']>;
};

export type CashupReportCustomOrderByInput = {
  card_type?: Maybe<SortOrder>;
  cashup_date?: Maybe<SortOrder>;
  company_id?: Maybe<SortOrder>;
  custom_actual?: Maybe<SortOrder>;
  custom_amount?: Maybe<SortOrder>;
  custom_difference?: Maybe<SortOrder>;
  custom_type?: Maybe<SortOrder>;
  id?: Maybe<SortOrder>;
  location_id?: Maybe<SortOrder>;
};

export type CashupReportCustomUpdateInput = {
  card_type?: Maybe<StringFieldUpdateOperationsInput>;
  cashup_date?: Maybe<DateTimeFieldUpdateOperationsInput>;
  company_id?: Maybe<StringFieldUpdateOperationsInput>;
  custom_actual?: Maybe<FloatFieldUpdateOperationsInput>;
  custom_amount?: Maybe<FloatFieldUpdateOperationsInput>;
  custom_difference?: Maybe<FloatFieldUpdateOperationsInput>;
  custom_type?: Maybe<StringFieldUpdateOperationsInput>;
  location_id?: Maybe<IntFieldUpdateOperationsInput>;
};

export type CashupReportCustomUpdateManyMutationInput = {
  card_type?: Maybe<StringFieldUpdateOperationsInput>;
  cashup_date?: Maybe<DateTimeFieldUpdateOperationsInput>;
  company_id?: Maybe<StringFieldUpdateOperationsInput>;
  custom_actual?: Maybe<FloatFieldUpdateOperationsInput>;
  custom_amount?: Maybe<FloatFieldUpdateOperationsInput>;
  custom_difference?: Maybe<FloatFieldUpdateOperationsInput>;
  custom_type?: Maybe<StringFieldUpdateOperationsInput>;
  location_id?: Maybe<IntFieldUpdateOperationsInput>;
};

export type CashupReportCustomWhereInput = {
  AND?: Maybe<Array<Maybe<CashupReportCustomWhereInput>>>;
  NOT?: Maybe<Array<Maybe<CashupReportCustomWhereInput>>>;
  OR?: Maybe<Array<Maybe<CashupReportCustomWhereInput>>>;
  card_type?: Maybe<StringFilter>;
  cashup_date?: Maybe<DateTimeFilter>;
  company_id?: Maybe<StringFilter>;
  custom_actual?: Maybe<FloatFilter>;
  custom_amount?: Maybe<FloatFilter>;
  custom_difference?: Maybe<FloatFilter>;
  custom_type?: Maybe<StringFilter>;
  id?: Maybe<IntFilter>;
  location_id?: Maybe<IntFilter>;
};

export type CashupReportCustomWhereUniqueInput = {
  id?: Maybe<Scalars['Int']>;
};

export type CashupReportOrderByInput = {
  card_actual?: Maybe<SortOrder>;
  card_amount?: Maybe<SortOrder>;
  card_difference?: Maybe<SortOrder>;
  cash_actual?: Maybe<SortOrder>;
  cash_amount?: Maybe<SortOrder>;
  cash_difference?: Maybe<SortOrder>;
  cashup_date?: Maybe<SortOrder>;
  cheque_actual?: Maybe<SortOrder>;
  cheque_amount?: Maybe<SortOrder>;
  cheque_difference?: Maybe<SortOrder>;
  comments?: Maybe<SortOrder>;
  company_id?: Maybe<SortOrder>;
  finance_id?: Maybe<SortOrder>;
  float_amount?: Maybe<SortOrder>;
  giftvoucher_actual?: Maybe<SortOrder>;
  giftvoucher_amount?: Maybe<SortOrder>;
  giftvoucher_difference?: Maybe<SortOrder>;
  id?: Maybe<SortOrder>;
  location_id?: Maybe<SortOrder>;
  opening_balance?: Maybe<SortOrder>;
  staff_id?: Maybe<SortOrder>;
};

export type CashupReportUpdateInput = {
  card_actual?: Maybe<FloatFieldUpdateOperationsInput>;
  card_amount?: Maybe<FloatFieldUpdateOperationsInput>;
  card_difference?: Maybe<FloatFieldUpdateOperationsInput>;
  cash_actual?: Maybe<FloatFieldUpdateOperationsInput>;
  cash_amount?: Maybe<FloatFieldUpdateOperationsInput>;
  cash_difference?: Maybe<FloatFieldUpdateOperationsInput>;
  cashup_date?: Maybe<DateTimeFieldUpdateOperationsInput>;
  cheque_actual?: Maybe<FloatFieldUpdateOperationsInput>;
  cheque_amount?: Maybe<FloatFieldUpdateOperationsInput>;
  cheque_difference?: Maybe<FloatFieldUpdateOperationsInput>;
  comments?: Maybe<StringFieldUpdateOperationsInput>;
  company_id?: Maybe<IntFieldUpdateOperationsInput>;
  finance_id?: Maybe<IntFieldUpdateOperationsInput>;
  float_amount?: Maybe<FloatFieldUpdateOperationsInput>;
  giftvoucher_actual?: Maybe<FloatFieldUpdateOperationsInput>;
  giftvoucher_amount?: Maybe<FloatFieldUpdateOperationsInput>;
  giftvoucher_difference?: Maybe<FloatFieldUpdateOperationsInput>;
  location_id?: Maybe<IntFieldUpdateOperationsInput>;
  opening_balance?: Maybe<FloatFieldUpdateOperationsInput>;
  staff_id?: Maybe<IntFieldUpdateOperationsInput>;
};

export type CashupReportUpdateManyMutationInput = {
  card_actual?: Maybe<FloatFieldUpdateOperationsInput>;
  card_amount?: Maybe<FloatFieldUpdateOperationsInput>;
  card_difference?: Maybe<FloatFieldUpdateOperationsInput>;
  cash_actual?: Maybe<FloatFieldUpdateOperationsInput>;
  cash_amount?: Maybe<FloatFieldUpdateOperationsInput>;
  cash_difference?: Maybe<FloatFieldUpdateOperationsInput>;
  cashup_date?: Maybe<DateTimeFieldUpdateOperationsInput>;
  cheque_actual?: Maybe<FloatFieldUpdateOperationsInput>;
  cheque_amount?: Maybe<FloatFieldUpdateOperationsInput>;
  cheque_difference?: Maybe<FloatFieldUpdateOperationsInput>;
  comments?: Maybe<StringFieldUpdateOperationsInput>;
  company_id?: Maybe<IntFieldUpdateOperationsInput>;
  finance_id?: Maybe<IntFieldUpdateOperationsInput>;
  float_amount?: Maybe<FloatFieldUpdateOperationsInput>;
  giftvoucher_actual?: Maybe<FloatFieldUpdateOperationsInput>;
  giftvoucher_amount?: Maybe<FloatFieldUpdateOperationsInput>;
  giftvoucher_difference?: Maybe<FloatFieldUpdateOperationsInput>;
  location_id?: Maybe<IntFieldUpdateOperationsInput>;
  opening_balance?: Maybe<FloatFieldUpdateOperationsInput>;
  staff_id?: Maybe<IntFieldUpdateOperationsInput>;
};

export type CashupReportWhereInput = {
  AND?: Maybe<Array<Maybe<CashupReportWhereInput>>>;
  NOT?: Maybe<Array<Maybe<CashupReportWhereInput>>>;
  OR?: Maybe<Array<Maybe<CashupReportWhereInput>>>;
  card_actual?: Maybe<FloatFilter>;
  card_amount?: Maybe<FloatFilter>;
  card_difference?: Maybe<FloatFilter>;
  cash_actual?: Maybe<FloatFilter>;
  cash_amount?: Maybe<FloatFilter>;
  cash_difference?: Maybe<FloatFilter>;
  cashup_date?: Maybe<DateTimeFilter>;
  cheque_actual?: Maybe<FloatFilter>;
  cheque_amount?: Maybe<FloatFilter>;
  cheque_difference?: Maybe<FloatFilter>;
  comments?: Maybe<StringFilter>;
  company_id?: Maybe<IntFilter>;
  finance_id?: Maybe<IntFilter>;
  float_amount?: Maybe<FloatFilter>;
  giftvoucher_actual?: Maybe<FloatFilter>;
  giftvoucher_amount?: Maybe<FloatFilter>;
  giftvoucher_difference?: Maybe<FloatFilter>;
  id?: Maybe<IntFilter>;
  location_id?: Maybe<IntFilter>;
  opening_balance?: Maybe<FloatFilter>;
  staff_id?: Maybe<IntFilter>;
};

export type CashupReportWhereUniqueInput = {
  id?: Maybe<Scalars['Int']>;
};

export type CheckinAppt = {
  __typename?: 'CheckinAppt';
  appt_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  spotify_uri?: Maybe<Scalars['String']>;
};

export type CheckinApptCreateInput = {
  appt_id: Scalars['Int'];
  spotify_uri: Scalars['String'];
};

export type CheckinApptOrderByInput = {
  appt_id?: Maybe<SortOrder>;
  id?: Maybe<SortOrder>;
  spotify_uri?: Maybe<SortOrder>;
};

export type CheckinApptUpdateInput = {
  appt_id?: Maybe<IntFieldUpdateOperationsInput>;
  spotify_uri?: Maybe<StringFieldUpdateOperationsInput>;
};

export type CheckinApptUpdateManyMutationInput = {
  appt_id?: Maybe<IntFieldUpdateOperationsInput>;
  spotify_uri?: Maybe<StringFieldUpdateOperationsInput>;
};

export type CheckinApptWhereInput = {
  AND?: Maybe<Array<Maybe<CheckinApptWhereInput>>>;
  NOT?: Maybe<Array<Maybe<CheckinApptWhereInput>>>;
  OR?: Maybe<Array<Maybe<CheckinApptWhereInput>>>;
  appt_id?: Maybe<IntFilter>;
  id?: Maybe<IntFilter>;
  spotify_uri?: Maybe<StringFilter>;
};

export type CheckinApptWhereUniqueInput = {
  id?: Maybe<Scalars['Int']>;
};

export type CheckinAverages = {
  __typename?: 'CheckinAverages';
  avg_time_seconds?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  product_id?: Maybe<Scalars['Int']>;
  uid?: Maybe<Scalars['Int']>;
};

export type CheckinAveragesCreateInput = {
  avg_time_seconds: Scalars['Int'];
  product_id: Scalars['Int'];
  uid: Scalars['Int'];
};

export type CheckinAveragesIdle = {
  __typename?: 'CheckinAveragesIdle';
  avg?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Int']>;
  retailutilisation_avg?: Maybe<Scalars['Float']>;
  uid?: Maybe<Scalars['Int']>;
  username?: Maybe<Scalars['String']>;
};

export type CheckinAveragesIdleCreateInput = {
  avg?: Maybe<Scalars['Float']>;
  retailutilisation_avg?: Maybe<Scalars['Float']>;
  uid: Scalars['Int'];
  username: Scalars['String'];
};

export type CheckinAveragesIdleOrderByInput = {
  avg?: Maybe<SortOrder>;
  id?: Maybe<SortOrder>;
  retailutilisation_avg?: Maybe<SortOrder>;
  uid?: Maybe<SortOrder>;
  username?: Maybe<SortOrder>;
};

export type CheckinAveragesIdleUpdateInput = {
  avg?: Maybe<NullableFloatFieldUpdateOperationsInput>;
  retailutilisation_avg?: Maybe<NullableFloatFieldUpdateOperationsInput>;
  uid?: Maybe<IntFieldUpdateOperationsInput>;
  username?: Maybe<StringFieldUpdateOperationsInput>;
};

export type CheckinAveragesIdleUpdateManyMutationInput = {
  avg?: Maybe<NullableFloatFieldUpdateOperationsInput>;
  retailutilisation_avg?: Maybe<NullableFloatFieldUpdateOperationsInput>;
  uid?: Maybe<IntFieldUpdateOperationsInput>;
  username?: Maybe<StringFieldUpdateOperationsInput>;
};

export type CheckinAveragesIdleWhereInput = {
  AND?: Maybe<Array<Maybe<CheckinAveragesIdleWhereInput>>>;
  NOT?: Maybe<Array<Maybe<CheckinAveragesIdleWhereInput>>>;
  OR?: Maybe<Array<Maybe<CheckinAveragesIdleWhereInput>>>;
  avg?: Maybe<FloatNullableFilter>;
  id?: Maybe<IntFilter>;
  retailutilisation_avg?: Maybe<FloatNullableFilter>;
  uid?: Maybe<IntFilter>;
  username?: Maybe<StringFilter>;
};

export type CheckinAveragesIdleWhereUniqueInput = {
  id?: Maybe<Scalars['Int']>;
  username?: Maybe<Scalars['String']>;
};

export type CheckinAveragesOrderByInput = {
  avg_time_seconds?: Maybe<SortOrder>;
  id?: Maybe<SortOrder>;
  product_id?: Maybe<SortOrder>;
  uid?: Maybe<SortOrder>;
};

export type CheckinAveragesUpdateInput = {
  avg_time_seconds?: Maybe<IntFieldUpdateOperationsInput>;
  product_id?: Maybe<IntFieldUpdateOperationsInput>;
  uid?: Maybe<IntFieldUpdateOperationsInput>;
};

export type CheckinAveragesUpdateManyMutationInput = {
  avg_time_seconds?: Maybe<IntFieldUpdateOperationsInput>;
  product_id?: Maybe<IntFieldUpdateOperationsInput>;
  uid?: Maybe<IntFieldUpdateOperationsInput>;
};

export type CheckinAveragesWhereInput = {
  AND?: Maybe<Array<Maybe<CheckinAveragesWhereInput>>>;
  NOT?: Maybe<Array<Maybe<CheckinAveragesWhereInput>>>;
  OR?: Maybe<Array<Maybe<CheckinAveragesWhereInput>>>;
  avg_time_seconds?: Maybe<IntFilter>;
  id?: Maybe<IntFilter>;
  product_id?: Maybe<IntFilter>;
  uid?: Maybe<IntFilter>;
};

export type CheckinAveragesWhereUniqueInput = {
  id?: Maybe<Scalars['Int']>;
};

export type CheckinProduct = {
  __typename?: 'CheckinProduct';
  date_end?: Maybe<Scalars['DateTime']>;
  date_start?: Maybe<Scalars['DateTime']>;
  id?: Maybe<Scalars['Int']>;
  inv_product_id?: Maybe<Scalars['Int']>;
  product_id?: Maybe<Scalars['Int']>;
  queue_id?: Maybe<Scalars['Int']>;
};

export type CheckinProductCreateInput = {
  date_end?: Maybe<Scalars['DateTime']>;
  date_start?: Maybe<Scalars['DateTime']>;
  inv_product_id?: Maybe<Scalars['Int']>;
  product_id: Scalars['Int'];
  queue_id: Scalars['Int'];
};

export type CheckinProductOrderByInput = {
  date_end?: Maybe<SortOrder>;
  date_start?: Maybe<SortOrder>;
  id?: Maybe<SortOrder>;
  inv_product_id?: Maybe<SortOrder>;
  product_id?: Maybe<SortOrder>;
  queue_id?: Maybe<SortOrder>;
};

export type CheckinProductUpdateInput = {
  date_end?: Maybe<NullableDateTimeFieldUpdateOperationsInput>;
  date_start?: Maybe<NullableDateTimeFieldUpdateOperationsInput>;
  inv_product_id?: Maybe<IntFieldUpdateOperationsInput>;
  product_id?: Maybe<IntFieldUpdateOperationsInput>;
  queue_id?: Maybe<IntFieldUpdateOperationsInput>;
};

export type CheckinProductUpdateManyMutationInput = {
  date_end?: Maybe<NullableDateTimeFieldUpdateOperationsInput>;
  date_start?: Maybe<NullableDateTimeFieldUpdateOperationsInput>;
  inv_product_id?: Maybe<IntFieldUpdateOperationsInput>;
  product_id?: Maybe<IntFieldUpdateOperationsInput>;
  queue_id?: Maybe<IntFieldUpdateOperationsInput>;
};

export type CheckinProductWhereInput = {
  AND?: Maybe<Array<Maybe<CheckinProductWhereInput>>>;
  NOT?: Maybe<Array<Maybe<CheckinProductWhereInput>>>;
  OR?: Maybe<Array<Maybe<CheckinProductWhereInput>>>;
  date_end?: Maybe<DateTimeNullableFilter>;
  date_start?: Maybe<DateTimeNullableFilter>;
  id?: Maybe<IntFilter>;
  inv_product_id?: Maybe<IntFilter>;
  product_id?: Maybe<IntFilter>;
  queue_id?: Maybe<IntFilter>;
};

export type CheckinProductWhereUniqueInput = {
  id?: Maybe<Scalars['Int']>;
};

export type CheckinQueue = {
  __typename?: 'CheckinQueue';
  accepted?: Maybe<Scalars['Boolean']>;
  been_before?: Maybe<Scalars['Boolean']>;
  connect_id?: Maybe<Scalars['Int']>;
  date_accepted?: Maybe<Scalars['DateTime']>;
  date_binned?: Maybe<Scalars['DateTime']>;
  date_end?: Maybe<Scalars['DateTime']>;
  date_start?: Maybe<Scalars['DateTime']>;
  finalise?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['Int']>;
  is_lunch?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
  skips?: Maybe<Scalars['Int']>;
  sms_number?: Maybe<Scalars['String']>;
  sms_sent?: Maybe<Scalars['DateTime']>;
  sms_wanted?: Maybe<Scalars['Boolean']>;
  spotify_uri?: Maybe<Scalars['String']>;
  uid?: Maybe<Scalars['Int']>;
  was_anyone?: Maybe<Scalars['Boolean']>;
};

export type CheckinQueueCreateInput = {
  accepted?: Maybe<Scalars['Boolean']>;
  been_before: Scalars['Boolean'];
  connect_id?: Maybe<Scalars['Int']>;
  date_accepted?: Maybe<Scalars['DateTime']>;
  date_binned?: Maybe<Scalars['DateTime']>;
  date_end?: Maybe<Scalars['DateTime']>;
  date_start: Scalars['DateTime'];
  finalise?: Maybe<Scalars['Boolean']>;
  is_lunch?: Maybe<Scalars['Boolean']>;
  name: Scalars['String'];
  order: Scalars['Int'];
  skips?: Maybe<Scalars['Int']>;
  sms_number?: Maybe<Scalars['String']>;
  sms_sent?: Maybe<Scalars['DateTime']>;
  sms_wanted?: Maybe<Scalars['Boolean']>;
  spotify_uri?: Maybe<Scalars['String']>;
  uid: Scalars['Int'];
  was_anyone: Scalars['Boolean'];
};

export type CheckinQueueOrderByInput = {
  accepted?: Maybe<SortOrder>;
  been_before?: Maybe<SortOrder>;
  connect_id?: Maybe<SortOrder>;
  date_accepted?: Maybe<SortOrder>;
  date_binned?: Maybe<SortOrder>;
  date_end?: Maybe<SortOrder>;
  date_start?: Maybe<SortOrder>;
  finalise?: Maybe<SortOrder>;
  id?: Maybe<SortOrder>;
  is_lunch?: Maybe<SortOrder>;
  name?: Maybe<SortOrder>;
  order?: Maybe<SortOrder>;
  skips?: Maybe<SortOrder>;
  sms_number?: Maybe<SortOrder>;
  sms_sent?: Maybe<SortOrder>;
  sms_wanted?: Maybe<SortOrder>;
  spotify_uri?: Maybe<SortOrder>;
  uid?: Maybe<SortOrder>;
  was_anyone?: Maybe<SortOrder>;
};

export type CheckinQueueUpdateInput = {
  accepted?: Maybe<BoolFieldUpdateOperationsInput>;
  been_before?: Maybe<BoolFieldUpdateOperationsInput>;
  connect_id?: Maybe<NullableIntFieldUpdateOperationsInput>;
  date_accepted?: Maybe<NullableDateTimeFieldUpdateOperationsInput>;
  date_binned?: Maybe<NullableDateTimeFieldUpdateOperationsInput>;
  date_end?: Maybe<NullableDateTimeFieldUpdateOperationsInput>;
  date_start?: Maybe<DateTimeFieldUpdateOperationsInput>;
  finalise?: Maybe<NullableBoolFieldUpdateOperationsInput>;
  is_lunch?: Maybe<BoolFieldUpdateOperationsInput>;
  name?: Maybe<StringFieldUpdateOperationsInput>;
  order?: Maybe<IntFieldUpdateOperationsInput>;
  skips?: Maybe<IntFieldUpdateOperationsInput>;
  sms_number?: Maybe<NullableStringFieldUpdateOperationsInput>;
  sms_sent?: Maybe<NullableDateTimeFieldUpdateOperationsInput>;
  sms_wanted?: Maybe<NullableBoolFieldUpdateOperationsInput>;
  spotify_uri?: Maybe<NullableStringFieldUpdateOperationsInput>;
  uid?: Maybe<IntFieldUpdateOperationsInput>;
  was_anyone?: Maybe<BoolFieldUpdateOperationsInput>;
};

export type CheckinQueueUpdateManyMutationInput = {
  accepted?: Maybe<BoolFieldUpdateOperationsInput>;
  been_before?: Maybe<BoolFieldUpdateOperationsInput>;
  connect_id?: Maybe<NullableIntFieldUpdateOperationsInput>;
  date_accepted?: Maybe<NullableDateTimeFieldUpdateOperationsInput>;
  date_binned?: Maybe<NullableDateTimeFieldUpdateOperationsInput>;
  date_end?: Maybe<NullableDateTimeFieldUpdateOperationsInput>;
  date_start?: Maybe<DateTimeFieldUpdateOperationsInput>;
  finalise?: Maybe<NullableBoolFieldUpdateOperationsInput>;
  is_lunch?: Maybe<BoolFieldUpdateOperationsInput>;
  name?: Maybe<StringFieldUpdateOperationsInput>;
  order?: Maybe<IntFieldUpdateOperationsInput>;
  skips?: Maybe<IntFieldUpdateOperationsInput>;
  sms_number?: Maybe<NullableStringFieldUpdateOperationsInput>;
  sms_sent?: Maybe<NullableDateTimeFieldUpdateOperationsInput>;
  sms_wanted?: Maybe<NullableBoolFieldUpdateOperationsInput>;
  spotify_uri?: Maybe<NullableStringFieldUpdateOperationsInput>;
  uid?: Maybe<IntFieldUpdateOperationsInput>;
  was_anyone?: Maybe<BoolFieldUpdateOperationsInput>;
};

export type CheckinQueueWhereInput = {
  AND?: Maybe<Array<Maybe<CheckinQueueWhereInput>>>;
  NOT?: Maybe<Array<Maybe<CheckinQueueWhereInput>>>;
  OR?: Maybe<Array<Maybe<CheckinQueueWhereInput>>>;
  accepted?: Maybe<BoolFilter>;
  been_before?: Maybe<BoolFilter>;
  connect_id?: Maybe<IntNullableFilter>;
  date_accepted?: Maybe<DateTimeNullableFilter>;
  date_binned?: Maybe<DateTimeNullableFilter>;
  date_end?: Maybe<DateTimeNullableFilter>;
  date_start?: Maybe<DateTimeFilter>;
  finalise?: Maybe<BoolNullableFilter>;
  id?: Maybe<IntFilter>;
  is_lunch?: Maybe<BoolFilter>;
  name?: Maybe<StringFilter>;
  order?: Maybe<IntFilter>;
  skips?: Maybe<IntFilter>;
  sms_number?: Maybe<StringNullableFilter>;
  sms_sent?: Maybe<DateTimeNullableFilter>;
  sms_wanted?: Maybe<BoolNullableFilter>;
  spotify_uri?: Maybe<StringNullableFilter>;
  uid?: Maybe<IntFilter>;
  was_anyone?: Maybe<BoolFilter>;
};

export type CheckinQueueWhereUniqueInput = {
  id?: Maybe<Scalars['Int']>;
};

export type ClassCategory = {
  __typename?: 'ClassCategory';
  code?: Maybe<Scalars['String']>;
  created_date?: Maybe<Scalars['DateTime']>;
  id?: Maybe<Scalars['Int']>;
  modified_date?: Maybe<Scalars['DateTime']>;
  name?: Maybe<Scalars['String']>;
  occupier?: Maybe<Scalars['Int']>;
  uid?: Maybe<Scalars['Int']>;
};

export type ClassCategoryCreateInput = {
  code: Scalars['String'];
  created_date?: Maybe<Scalars['DateTime']>;
  modified_date?: Maybe<Scalars['DateTime']>;
  name: Scalars['String'];
  occupier?: Maybe<Scalars['Int']>;
  uid?: Maybe<Scalars['Int']>;
};

export type ClassCategoryOrderByInput = {
  code?: Maybe<SortOrder>;
  created_date?: Maybe<SortOrder>;
  id?: Maybe<SortOrder>;
  modified_date?: Maybe<SortOrder>;
  name?: Maybe<SortOrder>;
  occupier?: Maybe<SortOrder>;
  uid?: Maybe<SortOrder>;
};

export type ClassCategoryUpdateInput = {
  code?: Maybe<StringFieldUpdateOperationsInput>;
  created_date?: Maybe<NullableDateTimeFieldUpdateOperationsInput>;
  modified_date?: Maybe<NullableDateTimeFieldUpdateOperationsInput>;
  name?: Maybe<StringFieldUpdateOperationsInput>;
  occupier?: Maybe<NullableIntFieldUpdateOperationsInput>;
  uid?: Maybe<NullableIntFieldUpdateOperationsInput>;
};

export type ClassCategoryUpdateManyMutationInput = {
  code?: Maybe<StringFieldUpdateOperationsInput>;
  created_date?: Maybe<NullableDateTimeFieldUpdateOperationsInput>;
  modified_date?: Maybe<NullableDateTimeFieldUpdateOperationsInput>;
  name?: Maybe<StringFieldUpdateOperationsInput>;
  occupier?: Maybe<NullableIntFieldUpdateOperationsInput>;
  uid?: Maybe<NullableIntFieldUpdateOperationsInput>;
};

export type ClassCategoryWhereInput = {
  AND?: Maybe<Array<Maybe<ClassCategoryWhereInput>>>;
  NOT?: Maybe<Array<Maybe<ClassCategoryWhereInput>>>;
  OR?: Maybe<Array<Maybe<ClassCategoryWhereInput>>>;
  code?: Maybe<StringFilter>;
  created_date?: Maybe<DateTimeNullableFilter>;
  id?: Maybe<IntFilter>;
  modified_date?: Maybe<DateTimeNullableFilter>;
  name?: Maybe<StringFilter>;
  occupier?: Maybe<IntNullableFilter>;
  uid?: Maybe<IntNullableFilter>;
};

export type ClassCategoryWhereUniqueInput = {
  id?: Maybe<Scalars['Int']>;
};

export type ClassGuests = {
  __typename?: 'ClassGuests';
  cancel_status?: Maybe<Scalars['Int']>;
  class_id?: Maybe<Scalars['Int']>;
  company_id?: Maybe<Scalars['Int']>;
  guest_name?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  mobile?: Maybe<Scalars['String']>;
  signing_date?: Maybe<Scalars['Int']>;
};

export type ClassGuestsCreateInput = {
  cancel_status: Scalars['Int'];
  class_id: Scalars['Int'];
  company_id: Scalars['Int'];
  guest_name: Scalars['String'];
  mobile: Scalars['String'];
  signing_date: Scalars['Int'];
};

export type ClassGuestsOrderByInput = {
  cancel_status?: Maybe<SortOrder>;
  class_id?: Maybe<SortOrder>;
  company_id?: Maybe<SortOrder>;
  guest_name?: Maybe<SortOrder>;
  id?: Maybe<SortOrder>;
  mobile?: Maybe<SortOrder>;
  signing_date?: Maybe<SortOrder>;
};

export type ClassGuestsUpdateInput = {
  cancel_status?: Maybe<IntFieldUpdateOperationsInput>;
  class_id?: Maybe<IntFieldUpdateOperationsInput>;
  company_id?: Maybe<IntFieldUpdateOperationsInput>;
  guest_name?: Maybe<StringFieldUpdateOperationsInput>;
  mobile?: Maybe<StringFieldUpdateOperationsInput>;
  signing_date?: Maybe<IntFieldUpdateOperationsInput>;
};

export type ClassGuestsUpdateManyMutationInput = {
  cancel_status?: Maybe<IntFieldUpdateOperationsInput>;
  class_id?: Maybe<IntFieldUpdateOperationsInput>;
  company_id?: Maybe<IntFieldUpdateOperationsInput>;
  guest_name?: Maybe<StringFieldUpdateOperationsInput>;
  mobile?: Maybe<StringFieldUpdateOperationsInput>;
  signing_date?: Maybe<IntFieldUpdateOperationsInput>;
};

export type ClassGuestsWhereInput = {
  AND?: Maybe<Array<Maybe<ClassGuestsWhereInput>>>;
  NOT?: Maybe<Array<Maybe<ClassGuestsWhereInput>>>;
  OR?: Maybe<Array<Maybe<ClassGuestsWhereInput>>>;
  cancel_status?: Maybe<IntFilter>;
  class_id?: Maybe<IntFilter>;
  company_id?: Maybe<IntFilter>;
  guest_name?: Maybe<StringFilter>;
  id?: Maybe<IntFilter>;
  mobile?: Maybe<StringFilter>;
  signing_date?: Maybe<IntFilter>;
};

export type ClassGuestsWhereUniqueInput = {
  id?: Maybe<Scalars['Int']>;
};

export type ClassMaster = {
  __typename?: 'ClassMaster';
  c_book?: Maybe<Scalars['String']>;
  c_companyid?: Maybe<Scalars['Int']>;
  c_date?: Maybe<Scalars['String']>;
  c_day?: Maybe<Scalars['String']>;
  c_duration?: Maybe<Scalars['String']>;
  c_empty?: Maybe<Scalars['String']>;
  c_exptime?: Maybe<Scalars['String']>;
  c_formattime?: Maybe<Scalars['String']>;
  c_id?: Maybe<Scalars['Int']>;
  c_location?: Maybe<Scalars['Int']>;
  c_price?: Maybe<Scalars['Float']>;
  c_room?: Maybe<Scalars['Int']>;
  c_slots?: Maybe<Scalars['String']>;
  c_startformattime?: Maybe<Scalars['String']>;
  c_teacher?: Maybe<Scalars['Int']>;
  c_time?: Maybe<Scalars['String']>;
  c_type?: Maybe<Scalars['Int']>;
  cancel_status?: Maybe<Scalars['Int']>;
  class_pay?: Maybe<Class_Master_Class_Pay>;
  product_id?: Maybe<Scalars['Int']>;
  sign_in_type?: Maybe<Scalars['String']>;
};

export type ClassMasterCreateInput = {
  c_book?: Maybe<Scalars['String']>;
  c_companyid?: Maybe<Scalars['Int']>;
  c_date?: Maybe<Scalars['String']>;
  c_day?: Maybe<Scalars['String']>;
  c_duration?: Maybe<Scalars['String']>;
  c_empty?: Maybe<Scalars['String']>;
  c_exptime?: Maybe<Scalars['String']>;
  c_formattime?: Maybe<Scalars['String']>;
  c_location?: Maybe<Scalars['Int']>;
  c_price?: Maybe<Scalars['Float']>;
  c_room?: Maybe<Scalars['Int']>;
  c_slots?: Maybe<Scalars['String']>;
  c_startformattime?: Maybe<Scalars['String']>;
  c_teacher?: Maybe<Scalars['Int']>;
  c_time?: Maybe<Scalars['String']>;
  c_type?: Maybe<Scalars['Int']>;
  cancel_status: Scalars['Int'];
  class_pay?: Maybe<Class_Master_Class_Pay>;
  product_id: Scalars['Int'];
  sign_in_type: Scalars['String'];
};

export type ClassMasterOrderByInput = {
  c_book?: Maybe<SortOrder>;
  c_companyid?: Maybe<SortOrder>;
  c_date?: Maybe<SortOrder>;
  c_day?: Maybe<SortOrder>;
  c_duration?: Maybe<SortOrder>;
  c_empty?: Maybe<SortOrder>;
  c_exptime?: Maybe<SortOrder>;
  c_formattime?: Maybe<SortOrder>;
  c_id?: Maybe<SortOrder>;
  c_location?: Maybe<SortOrder>;
  c_price?: Maybe<SortOrder>;
  c_room?: Maybe<SortOrder>;
  c_slots?: Maybe<SortOrder>;
  c_startformattime?: Maybe<SortOrder>;
  c_teacher?: Maybe<SortOrder>;
  c_time?: Maybe<SortOrder>;
  c_type?: Maybe<SortOrder>;
  cancel_status?: Maybe<SortOrder>;
  class_pay?: Maybe<SortOrder>;
  product_id?: Maybe<SortOrder>;
  sign_in_type?: Maybe<SortOrder>;
};

export type ClassMasterUpdateInput = {
  c_book?: Maybe<NullableStringFieldUpdateOperationsInput>;
  c_companyid?: Maybe<NullableIntFieldUpdateOperationsInput>;
  c_date?: Maybe<NullableStringFieldUpdateOperationsInput>;
  c_day?: Maybe<NullableStringFieldUpdateOperationsInput>;
  c_duration?: Maybe<NullableStringFieldUpdateOperationsInput>;
  c_empty?: Maybe<NullableStringFieldUpdateOperationsInput>;
  c_exptime?: Maybe<NullableStringFieldUpdateOperationsInput>;
  c_formattime?: Maybe<NullableStringFieldUpdateOperationsInput>;
  c_location?: Maybe<NullableIntFieldUpdateOperationsInput>;
  c_price?: Maybe<NullableFloatFieldUpdateOperationsInput>;
  c_room?: Maybe<NullableIntFieldUpdateOperationsInput>;
  c_slots?: Maybe<NullableStringFieldUpdateOperationsInput>;
  c_startformattime?: Maybe<NullableStringFieldUpdateOperationsInput>;
  c_teacher?: Maybe<NullableIntFieldUpdateOperationsInput>;
  c_time?: Maybe<NullableStringFieldUpdateOperationsInput>;
  c_type?: Maybe<NullableIntFieldUpdateOperationsInput>;
  cancel_status?: Maybe<IntFieldUpdateOperationsInput>;
  class_pay?: Maybe<NullableEnumclass_Master_Class_PayFieldUpdateOperationsInput>;
  product_id?: Maybe<IntFieldUpdateOperationsInput>;
  sign_in_type?: Maybe<StringFieldUpdateOperationsInput>;
};

export type ClassMasterUpdateManyMutationInput = {
  c_book?: Maybe<NullableStringFieldUpdateOperationsInput>;
  c_companyid?: Maybe<NullableIntFieldUpdateOperationsInput>;
  c_date?: Maybe<NullableStringFieldUpdateOperationsInput>;
  c_day?: Maybe<NullableStringFieldUpdateOperationsInput>;
  c_duration?: Maybe<NullableStringFieldUpdateOperationsInput>;
  c_empty?: Maybe<NullableStringFieldUpdateOperationsInput>;
  c_exptime?: Maybe<NullableStringFieldUpdateOperationsInput>;
  c_formattime?: Maybe<NullableStringFieldUpdateOperationsInput>;
  c_location?: Maybe<NullableIntFieldUpdateOperationsInput>;
  c_price?: Maybe<NullableFloatFieldUpdateOperationsInput>;
  c_room?: Maybe<NullableIntFieldUpdateOperationsInput>;
  c_slots?: Maybe<NullableStringFieldUpdateOperationsInput>;
  c_startformattime?: Maybe<NullableStringFieldUpdateOperationsInput>;
  c_teacher?: Maybe<NullableIntFieldUpdateOperationsInput>;
  c_time?: Maybe<NullableStringFieldUpdateOperationsInput>;
  c_type?: Maybe<NullableIntFieldUpdateOperationsInput>;
  cancel_status?: Maybe<IntFieldUpdateOperationsInput>;
  class_pay?: Maybe<NullableEnumclass_Master_Class_PayFieldUpdateOperationsInput>;
  product_id?: Maybe<IntFieldUpdateOperationsInput>;
  sign_in_type?: Maybe<StringFieldUpdateOperationsInput>;
};

export type ClassMasterWhereInput = {
  AND?: Maybe<Array<Maybe<ClassMasterWhereInput>>>;
  NOT?: Maybe<Array<Maybe<ClassMasterWhereInput>>>;
  OR?: Maybe<Array<Maybe<ClassMasterWhereInput>>>;
  c_book?: Maybe<StringNullableFilter>;
  c_companyid?: Maybe<IntNullableFilter>;
  c_date?: Maybe<StringNullableFilter>;
  c_day?: Maybe<StringNullableFilter>;
  c_duration?: Maybe<StringNullableFilter>;
  c_empty?: Maybe<StringNullableFilter>;
  c_exptime?: Maybe<StringNullableFilter>;
  c_formattime?: Maybe<StringNullableFilter>;
  c_id?: Maybe<IntFilter>;
  c_location?: Maybe<IntNullableFilter>;
  c_price?: Maybe<FloatNullableFilter>;
  c_room?: Maybe<IntNullableFilter>;
  c_slots?: Maybe<StringNullableFilter>;
  c_startformattime?: Maybe<StringNullableFilter>;
  c_teacher?: Maybe<IntNullableFilter>;
  c_time?: Maybe<StringNullableFilter>;
  c_type?: Maybe<IntNullableFilter>;
  cancel_status?: Maybe<IntFilter>;
  class_pay?: Maybe<Enumclass_Master_Class_PayNullableFilter>;
  product_id?: Maybe<IntFilter>;
  sign_in_type?: Maybe<StringFilter>;
};

export type ClassMasterWhereUniqueInput = {
  c_id?: Maybe<Scalars['Int']>;
};

export type ClassNotes = {
  __typename?: 'ClassNotes';
  author?: Maybe<Scalars['String']>;
  avatar?: Maybe<Scalars['String']>;
  class_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  note?: Maybe<Scalars['String']>;
  post_date?: Maybe<Scalars['String']>;
  public?: Maybe<Scalars['Boolean']>;
};

export type ClassNotesCreateInput = {
  author: Scalars['String'];
  avatar: Scalars['String'];
  class_id: Scalars['Int'];
  note: Scalars['String'];
  post_date: Scalars['String'];
  public: Scalars['Boolean'];
};

export type ClassNotesOrderByInput = {
  author?: Maybe<SortOrder>;
  avatar?: Maybe<SortOrder>;
  class_id?: Maybe<SortOrder>;
  id?: Maybe<SortOrder>;
  note?: Maybe<SortOrder>;
  post_date?: Maybe<SortOrder>;
  public?: Maybe<SortOrder>;
};

export type ClassNotesUpdateInput = {
  author?: Maybe<StringFieldUpdateOperationsInput>;
  avatar?: Maybe<StringFieldUpdateOperationsInput>;
  class_id?: Maybe<IntFieldUpdateOperationsInput>;
  note?: Maybe<StringFieldUpdateOperationsInput>;
  post_date?: Maybe<StringFieldUpdateOperationsInput>;
  public?: Maybe<BoolFieldUpdateOperationsInput>;
};

export type ClassNotesUpdateManyMutationInput = {
  author?: Maybe<StringFieldUpdateOperationsInput>;
  avatar?: Maybe<StringFieldUpdateOperationsInput>;
  class_id?: Maybe<IntFieldUpdateOperationsInput>;
  note?: Maybe<StringFieldUpdateOperationsInput>;
  post_date?: Maybe<StringFieldUpdateOperationsInput>;
  public?: Maybe<BoolFieldUpdateOperationsInput>;
};

export type ClassNotesWhereInput = {
  AND?: Maybe<Array<Maybe<ClassNotesWhereInput>>>;
  NOT?: Maybe<Array<Maybe<ClassNotesWhereInput>>>;
  OR?: Maybe<Array<Maybe<ClassNotesWhereInput>>>;
  author?: Maybe<StringFilter>;
  avatar?: Maybe<StringFilter>;
  class_id?: Maybe<IntFilter>;
  id?: Maybe<IntFilter>;
  note?: Maybe<StringFilter>;
  post_date?: Maybe<StringFilter>;
  public?: Maybe<BoolFilter>;
};

export type ClassNotesWhereUniqueInput = {
  id?: Maybe<Scalars['Int']>;
};

export type ClassProduct = {
  __typename?: 'ClassProduct';
  alert_quantity?: Maybe<Scalars['Int']>;
  category_id?: Maybe<Scalars['Int']>;
  code?: Maybe<Scalars['String']>;
  cost?: Maybe<Scalars['Float']>;
  created_date?: Maybe<Scalars['DateTime']>;
  id?: Maybe<Scalars['Int']>;
  image?: Maybe<Scalars['String']>;
  modified_date?: Maybe<Scalars['DateTime']>;
  name?: Maybe<Scalars['String']>;
  occupier?: Maybe<Scalars['Int']>;
  price?: Maybe<Scalars['Float']>;
  product_desc?: Maybe<Scalars['String']>;
  product_order?: Maybe<Scalars['Int']>;
  size?: Maybe<Scalars['String']>;
  uid?: Maybe<Scalars['Int']>;
  um?: Maybe<Scalars['String']>;
  unit?: Maybe<Scalars['String']>;
};

export type ClassProductCreateInput = {
  alert_quantity?: Maybe<Scalars['Int']>;
  category_id: Scalars['Int'];
  code: Scalars['String'];
  cost?: Maybe<Scalars['Float']>;
  created_date?: Maybe<Scalars['DateTime']>;
  image?: Maybe<Scalars['String']>;
  modified_date?: Maybe<Scalars['DateTime']>;
  name: Scalars['String'];
  occupier?: Maybe<Scalars['Int']>;
  price: Scalars['Float'];
  product_desc: Scalars['String'];
  product_order?: Maybe<Scalars['Int']>;
  size: Scalars['String'];
  uid?: Maybe<Scalars['Int']>;
  um: Scalars['String'];
  unit?: Maybe<Scalars['String']>;
};

export type ClassProductOrderByInput = {
  alert_quantity?: Maybe<SortOrder>;
  category_id?: Maybe<SortOrder>;
  code?: Maybe<SortOrder>;
  cost?: Maybe<SortOrder>;
  created_date?: Maybe<SortOrder>;
  id?: Maybe<SortOrder>;
  image?: Maybe<SortOrder>;
  modified_date?: Maybe<SortOrder>;
  name?: Maybe<SortOrder>;
  occupier?: Maybe<SortOrder>;
  price?: Maybe<SortOrder>;
  product_desc?: Maybe<SortOrder>;
  product_order?: Maybe<SortOrder>;
  size?: Maybe<SortOrder>;
  uid?: Maybe<SortOrder>;
  um?: Maybe<SortOrder>;
  unit?: Maybe<SortOrder>;
};

export type ClassProductUpdateInput = {
  alert_quantity?: Maybe<IntFieldUpdateOperationsInput>;
  category_id?: Maybe<IntFieldUpdateOperationsInput>;
  code?: Maybe<StringFieldUpdateOperationsInput>;
  cost?: Maybe<NullableFloatFieldUpdateOperationsInput>;
  created_date?: Maybe<NullableDateTimeFieldUpdateOperationsInput>;
  image?: Maybe<NullableStringFieldUpdateOperationsInput>;
  modified_date?: Maybe<NullableDateTimeFieldUpdateOperationsInput>;
  name?: Maybe<StringFieldUpdateOperationsInput>;
  occupier?: Maybe<NullableIntFieldUpdateOperationsInput>;
  price?: Maybe<FloatFieldUpdateOperationsInput>;
  product_desc?: Maybe<StringFieldUpdateOperationsInput>;
  product_order?: Maybe<NullableIntFieldUpdateOperationsInput>;
  size?: Maybe<StringFieldUpdateOperationsInput>;
  uid?: Maybe<NullableIntFieldUpdateOperationsInput>;
  um?: Maybe<StringFieldUpdateOperationsInput>;
  unit?: Maybe<NullableStringFieldUpdateOperationsInput>;
};

export type ClassProductUpdateManyMutationInput = {
  alert_quantity?: Maybe<IntFieldUpdateOperationsInput>;
  category_id?: Maybe<IntFieldUpdateOperationsInput>;
  code?: Maybe<StringFieldUpdateOperationsInput>;
  cost?: Maybe<NullableFloatFieldUpdateOperationsInput>;
  created_date?: Maybe<NullableDateTimeFieldUpdateOperationsInput>;
  image?: Maybe<NullableStringFieldUpdateOperationsInput>;
  modified_date?: Maybe<NullableDateTimeFieldUpdateOperationsInput>;
  name?: Maybe<StringFieldUpdateOperationsInput>;
  occupier?: Maybe<NullableIntFieldUpdateOperationsInput>;
  price?: Maybe<FloatFieldUpdateOperationsInput>;
  product_desc?: Maybe<StringFieldUpdateOperationsInput>;
  product_order?: Maybe<NullableIntFieldUpdateOperationsInput>;
  size?: Maybe<StringFieldUpdateOperationsInput>;
  uid?: Maybe<NullableIntFieldUpdateOperationsInput>;
  um?: Maybe<StringFieldUpdateOperationsInput>;
  unit?: Maybe<NullableStringFieldUpdateOperationsInput>;
};

export type ClassProductWhereInput = {
  AND?: Maybe<Array<Maybe<ClassProductWhereInput>>>;
  NOT?: Maybe<Array<Maybe<ClassProductWhereInput>>>;
  OR?: Maybe<Array<Maybe<ClassProductWhereInput>>>;
  alert_quantity?: Maybe<IntFilter>;
  category_id?: Maybe<IntFilter>;
  code?: Maybe<StringFilter>;
  cost?: Maybe<FloatNullableFilter>;
  created_date?: Maybe<DateTimeNullableFilter>;
  id?: Maybe<IntFilter>;
  image?: Maybe<StringNullableFilter>;
  modified_date?: Maybe<DateTimeNullableFilter>;
  name?: Maybe<StringFilter>;
  occupier?: Maybe<IntNullableFilter>;
  price?: Maybe<FloatFilter>;
  product_desc?: Maybe<StringFilter>;
  product_order?: Maybe<IntNullableFilter>;
  size?: Maybe<StringFilter>;
  uid?: Maybe<IntNullableFilter>;
  um?: Maybe<StringFilter>;
  unit?: Maybe<StringNullableFilter>;
};

export type ClassProductWhereUniqueInput = {
  id?: Maybe<Scalars['Int']>;
};

export type ClassSmsHistory = {
  __typename?: 'ClassSmsHistory';
  class_id?: Maybe<Scalars['Int']>;
  datetime?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  message?: Maybe<Scalars['String']>;
  user_id?: Maybe<Scalars['Int']>;
};

export type ClassSmsHistoryCreateInput = {
  class_id: Scalars['Int'];
  datetime: Scalars['String'];
  message: Scalars['String'];
  user_id: Scalars['Int'];
};

export type ClassSmsHistoryOrderByInput = {
  class_id?: Maybe<SortOrder>;
  datetime?: Maybe<SortOrder>;
  id?: Maybe<SortOrder>;
  message?: Maybe<SortOrder>;
  user_id?: Maybe<SortOrder>;
};

export type ClassSmsHistoryUpdateInput = {
  class_id?: Maybe<IntFieldUpdateOperationsInput>;
  datetime?: Maybe<StringFieldUpdateOperationsInput>;
  message?: Maybe<StringFieldUpdateOperationsInput>;
  user_id?: Maybe<IntFieldUpdateOperationsInput>;
};

export type ClassSmsHistoryUpdateManyMutationInput = {
  class_id?: Maybe<IntFieldUpdateOperationsInput>;
  datetime?: Maybe<StringFieldUpdateOperationsInput>;
  message?: Maybe<StringFieldUpdateOperationsInput>;
  user_id?: Maybe<IntFieldUpdateOperationsInput>;
};

export type ClassSmsHistoryWhereInput = {
  AND?: Maybe<Array<Maybe<ClassSmsHistoryWhereInput>>>;
  NOT?: Maybe<Array<Maybe<ClassSmsHistoryWhereInput>>>;
  OR?: Maybe<Array<Maybe<ClassSmsHistoryWhereInput>>>;
  class_id?: Maybe<IntFilter>;
  datetime?: Maybe<StringFilter>;
  id?: Maybe<IntFilter>;
  message?: Maybe<StringFilter>;
  user_id?: Maybe<IntFilter>;
};

export type ClassSmsHistoryWhereUniqueInput = {
  id?: Maybe<Scalars['Int']>;
};

export type ClassTemplateSetting = {
  __typename?: 'ClassTemplateSetting';
  class_wait_list_sms_template_enable?: Maybe<Scalars['Int']>;
  class_wait_list_sms_template_id?: Maybe<Scalars['Int']>;
  class_wait_list_template_enable?: Maybe<Scalars['Int']>;
  class_wait_list_template_id?: Maybe<Scalars['Int']>;
  company_id?: Maybe<Scalars['Int']>;
  creation_date?: Maybe<Scalars['DateTime']>;
  id?: Maybe<Scalars['Int']>;
  modified_date?: Maybe<Scalars['DateTime']>;
  uid?: Maybe<Scalars['Int']>;
};

export type ClassTemplateSettingCreateInput = {
  class_wait_list_sms_template_enable?: Maybe<Scalars['Int']>;
  class_wait_list_sms_template_id?: Maybe<Scalars['Int']>;
  class_wait_list_template_enable?: Maybe<Scalars['Int']>;
  class_wait_list_template_id?: Maybe<Scalars['Int']>;
  company_id?: Maybe<Scalars['Int']>;
  creation_date?: Maybe<Scalars['DateTime']>;
  modified_date?: Maybe<Scalars['DateTime']>;
  uid?: Maybe<Scalars['Int']>;
};

export type ClassTemplateSettingOrderByInput = {
  class_wait_list_sms_template_enable?: Maybe<SortOrder>;
  class_wait_list_sms_template_id?: Maybe<SortOrder>;
  class_wait_list_template_enable?: Maybe<SortOrder>;
  class_wait_list_template_id?: Maybe<SortOrder>;
  company_id?: Maybe<SortOrder>;
  creation_date?: Maybe<SortOrder>;
  id?: Maybe<SortOrder>;
  modified_date?: Maybe<SortOrder>;
  uid?: Maybe<SortOrder>;
};

export type ClassTemplateSettingUpdateInput = {
  class_wait_list_sms_template_enable?: Maybe<IntFieldUpdateOperationsInput>;
  class_wait_list_sms_template_id?: Maybe<IntFieldUpdateOperationsInput>;
  class_wait_list_template_enable?: Maybe<NullableIntFieldUpdateOperationsInput>;
  class_wait_list_template_id?: Maybe<NullableIntFieldUpdateOperationsInput>;
  company_id?: Maybe<IntFieldUpdateOperationsInput>;
  creation_date?: Maybe<NullableDateTimeFieldUpdateOperationsInput>;
  modified_date?: Maybe<NullableDateTimeFieldUpdateOperationsInput>;
  uid?: Maybe<NullableIntFieldUpdateOperationsInput>;
};

export type ClassTemplateSettingUpdateManyMutationInput = {
  class_wait_list_sms_template_enable?: Maybe<IntFieldUpdateOperationsInput>;
  class_wait_list_sms_template_id?: Maybe<IntFieldUpdateOperationsInput>;
  class_wait_list_template_enable?: Maybe<NullableIntFieldUpdateOperationsInput>;
  class_wait_list_template_id?: Maybe<NullableIntFieldUpdateOperationsInput>;
  company_id?: Maybe<IntFieldUpdateOperationsInput>;
  creation_date?: Maybe<NullableDateTimeFieldUpdateOperationsInput>;
  modified_date?: Maybe<NullableDateTimeFieldUpdateOperationsInput>;
  uid?: Maybe<NullableIntFieldUpdateOperationsInput>;
};

export type ClassTemplateSettingWhereInput = {
  AND?: Maybe<Array<Maybe<ClassTemplateSettingWhereInput>>>;
  NOT?: Maybe<Array<Maybe<ClassTemplateSettingWhereInput>>>;
  OR?: Maybe<Array<Maybe<ClassTemplateSettingWhereInput>>>;
  class_wait_list_sms_template_enable?: Maybe<IntFilter>;
  class_wait_list_sms_template_id?: Maybe<IntFilter>;
  class_wait_list_template_enable?: Maybe<IntNullableFilter>;
  class_wait_list_template_id?: Maybe<IntNullableFilter>;
  company_id?: Maybe<IntFilter>;
  creation_date?: Maybe<DateTimeNullableFilter>;
  id?: Maybe<IntFilter>;
  modified_date?: Maybe<DateTimeNullableFilter>;
  uid?: Maybe<IntNullableFilter>;
};

export type ClassTemplateSettingWhereUniqueInput = {
  id?: Maybe<Scalars['Int']>;
};

export type ClasstypeMaster = {
  __typename?: 'ClasstypeMaster';
  credit_option_disabled?: Maybe<Scalars['Int']>;
  ctype_color?: Maybe<Scalars['String']>;
  ctype_compid?: Maybe<Scalars['String']>;
  ctype_date?: Maybe<Scalars['String']>;
  ctype_description?: Maybe<Scalars['String']>;
  ctype_id?: Maybe<Scalars['Int']>;
  ctype_name?: Maybe<Scalars['String']>;
  payment_option_disabled?: Maybe<Scalars['Int']>;
};

export type ClasstypeMasterCreateInput = {
  credit_option_disabled: Scalars['Int'];
  ctype_color: Scalars['String'];
  ctype_compid: Scalars['String'];
  ctype_date: Scalars['String'];
  ctype_description: Scalars['String'];
  ctype_name?: Maybe<Scalars['String']>;
  payment_option_disabled: Scalars['Int'];
};

export type ClasstypeMasterOrderByInput = {
  credit_option_disabled?: Maybe<SortOrder>;
  ctype_color?: Maybe<SortOrder>;
  ctype_compid?: Maybe<SortOrder>;
  ctype_date?: Maybe<SortOrder>;
  ctype_description?: Maybe<SortOrder>;
  ctype_id?: Maybe<SortOrder>;
  ctype_name?: Maybe<SortOrder>;
  payment_option_disabled?: Maybe<SortOrder>;
};

export type ClasstypeMasterUpdateInput = {
  credit_option_disabled?: Maybe<IntFieldUpdateOperationsInput>;
  ctype_color?: Maybe<StringFieldUpdateOperationsInput>;
  ctype_compid?: Maybe<StringFieldUpdateOperationsInput>;
  ctype_date?: Maybe<StringFieldUpdateOperationsInput>;
  ctype_description?: Maybe<StringFieldUpdateOperationsInput>;
  ctype_name?: Maybe<NullableStringFieldUpdateOperationsInput>;
  payment_option_disabled?: Maybe<IntFieldUpdateOperationsInput>;
};

export type ClasstypeMasterUpdateManyMutationInput = {
  credit_option_disabled?: Maybe<IntFieldUpdateOperationsInput>;
  ctype_color?: Maybe<StringFieldUpdateOperationsInput>;
  ctype_compid?: Maybe<StringFieldUpdateOperationsInput>;
  ctype_date?: Maybe<StringFieldUpdateOperationsInput>;
  ctype_description?: Maybe<StringFieldUpdateOperationsInput>;
  ctype_name?: Maybe<NullableStringFieldUpdateOperationsInput>;
  payment_option_disabled?: Maybe<IntFieldUpdateOperationsInput>;
};

export type ClasstypeMasterWhereInput = {
  AND?: Maybe<Array<Maybe<ClasstypeMasterWhereInput>>>;
  NOT?: Maybe<Array<Maybe<ClasstypeMasterWhereInput>>>;
  OR?: Maybe<Array<Maybe<ClasstypeMasterWhereInput>>>;
  credit_option_disabled?: Maybe<IntFilter>;
  ctype_color?: Maybe<StringFilter>;
  ctype_compid?: Maybe<StringFilter>;
  ctype_date?: Maybe<StringFilter>;
  ctype_description?: Maybe<StringFilter>;
  ctype_id?: Maybe<IntFilter>;
  ctype_name?: Maybe<StringNullableFilter>;
  payment_option_disabled?: Maybe<IntFilter>;
};

export type ClasstypeMasterWhereUniqueInput = {
  ctype_id?: Maybe<Scalars['Int']>;
};

export type CleverpinSetting = {
  __typename?: 'CleverpinSetting';
  company_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  image_url?: Maybe<Scalars['String']>;
};

export type CleverpinSettingCreateInput = {
  company_id: Scalars['Int'];
  image_url: Scalars['String'];
};

export type CleverpinSettingOrderByInput = {
  company_id?: Maybe<SortOrder>;
  id?: Maybe<SortOrder>;
  image_url?: Maybe<SortOrder>;
};

export type CleverpinSettingUpdateInput = {
  company_id?: Maybe<IntFieldUpdateOperationsInput>;
  image_url?: Maybe<StringFieldUpdateOperationsInput>;
};

export type CleverpinSettingUpdateManyMutationInput = {
  company_id?: Maybe<IntFieldUpdateOperationsInput>;
  image_url?: Maybe<StringFieldUpdateOperationsInput>;
};

export type CleverpinSettingWhereInput = {
  AND?: Maybe<Array<Maybe<CleverpinSettingWhereInput>>>;
  NOT?: Maybe<Array<Maybe<CleverpinSettingWhereInput>>>;
  OR?: Maybe<Array<Maybe<CleverpinSettingWhereInput>>>;
  company_id?: Maybe<IntFilter>;
  id?: Maybe<IntFilter>;
  image_url?: Maybe<StringFilter>;
};

export type CleverpinSettingWhereUniqueInput = {
  id?: Maybe<Scalars['Int']>;
};

export type ClientFormSetting = {
  __typename?: 'ClientFormSetting';
  checked_by_default?: Maybe<Scalars['Int']>;
  company_id?: Maybe<Scalars['Int']>;
  enable_medical?: Maybe<Scalars['Int']>;
  enable_new_and_old?: Maybe<Scalars['Int']>;
  form_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  new_client_template?: Maybe<Scalars['Int']>;
  not_seen_months?: Maybe<Scalars['Int']>;
  not_seen_template?: Maybe<Scalars['Int']>;
};

export type ClientFormSettingCreateInput = {
  checked_by_default: Scalars['Int'];
  company_id: Scalars['Int'];
  enable_medical: Scalars['Int'];
  enable_new_and_old: Scalars['Int'];
  form_id: Scalars['Int'];
  new_client_template: Scalars['Int'];
  not_seen_months: Scalars['Int'];
  not_seen_template: Scalars['Int'];
};

export type ClientFormSettingOrderByInput = {
  checked_by_default?: Maybe<SortOrder>;
  company_id?: Maybe<SortOrder>;
  enable_medical?: Maybe<SortOrder>;
  enable_new_and_old?: Maybe<SortOrder>;
  form_id?: Maybe<SortOrder>;
  id?: Maybe<SortOrder>;
  new_client_template?: Maybe<SortOrder>;
  not_seen_months?: Maybe<SortOrder>;
  not_seen_template?: Maybe<SortOrder>;
};

export type ClientFormSettingUpdateInput = {
  checked_by_default?: Maybe<IntFieldUpdateOperationsInput>;
  company_id?: Maybe<IntFieldUpdateOperationsInput>;
  enable_medical?: Maybe<IntFieldUpdateOperationsInput>;
  enable_new_and_old?: Maybe<IntFieldUpdateOperationsInput>;
  form_id?: Maybe<IntFieldUpdateOperationsInput>;
  new_client_template?: Maybe<IntFieldUpdateOperationsInput>;
  not_seen_months?: Maybe<IntFieldUpdateOperationsInput>;
  not_seen_template?: Maybe<IntFieldUpdateOperationsInput>;
};

export type ClientFormSettingUpdateManyMutationInput = {
  checked_by_default?: Maybe<IntFieldUpdateOperationsInput>;
  company_id?: Maybe<IntFieldUpdateOperationsInput>;
  enable_medical?: Maybe<IntFieldUpdateOperationsInput>;
  enable_new_and_old?: Maybe<IntFieldUpdateOperationsInput>;
  form_id?: Maybe<IntFieldUpdateOperationsInput>;
  new_client_template?: Maybe<IntFieldUpdateOperationsInput>;
  not_seen_months?: Maybe<IntFieldUpdateOperationsInput>;
  not_seen_template?: Maybe<IntFieldUpdateOperationsInput>;
};

export type ClientFormSettingWhereInput = {
  AND?: Maybe<Array<Maybe<ClientFormSettingWhereInput>>>;
  NOT?: Maybe<Array<Maybe<ClientFormSettingWhereInput>>>;
  OR?: Maybe<Array<Maybe<ClientFormSettingWhereInput>>>;
  checked_by_default?: Maybe<IntFilter>;
  company_id?: Maybe<IntFilter>;
  enable_medical?: Maybe<IntFilter>;
  enable_new_and_old?: Maybe<IntFilter>;
  form_id?: Maybe<IntFilter>;
  id?: Maybe<IntFilter>;
  new_client_template?: Maybe<IntFilter>;
  not_seen_months?: Maybe<IntFilter>;
  not_seen_template?: Maybe<IntFilter>;
};

export type ClientFormSettingWhereUniqueInput = {
  id?: Maybe<Scalars['Int']>;
};

export type ClinicalSoftware = {
  __typename?: 'ClinicalSoftware';
  difficulty?: Maybe<Scalars['Int']>;
  frequency?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  name?: Maybe<Scalars['String']>;
};

export type ClinicalSoftwareCreateInput = {
  difficulty: Scalars['Int'];
  frequency: Scalars['Int'];
  name: Scalars['String'];
};

export type ClinicalSoftwareOrderByInput = {
  difficulty?: Maybe<SortOrder>;
  frequency?: Maybe<SortOrder>;
  id?: Maybe<SortOrder>;
  name?: Maybe<SortOrder>;
};

export type ClinicalSoftwareUpdateInput = {
  difficulty?: Maybe<IntFieldUpdateOperationsInput>;
  frequency?: Maybe<IntFieldUpdateOperationsInput>;
  name?: Maybe<StringFieldUpdateOperationsInput>;
};

export type ClinicalSoftwareUpdateManyMutationInput = {
  difficulty?: Maybe<IntFieldUpdateOperationsInput>;
  frequency?: Maybe<IntFieldUpdateOperationsInput>;
  name?: Maybe<StringFieldUpdateOperationsInput>;
};

export type ClinicalSoftwareWhereInput = {
  AND?: Maybe<Array<Maybe<ClinicalSoftwareWhereInput>>>;
  NOT?: Maybe<Array<Maybe<ClinicalSoftwareWhereInput>>>;
  OR?: Maybe<Array<Maybe<ClinicalSoftwareWhereInput>>>;
  difficulty?: Maybe<IntFilter>;
  frequency?: Maybe<IntFilter>;
  id?: Maybe<IntFilter>;
  name?: Maybe<StringFilter>;
};

export type ClinicalSoftwareWhereUniqueInput = {
  id?: Maybe<Scalars['Int']>;
};

export type ClockinBreak = {
  __typename?: 'ClockinBreak';
  break_time_id?: Maybe<Scalars['Int']>;
  break_time_out?: Maybe<Scalars['Int']>;
  break_time_start?: Maybe<Scalars['Int']>;
  clock_id?: Maybe<Scalars['Int']>;
};

export type ClockinBreakCreateInput = {
  break_time_out?: Maybe<Scalars['Int']>;
  break_time_start?: Maybe<Scalars['Int']>;
  clock_id: Scalars['Int'];
};

export type ClockinBreakOrderByInput = {
  break_time_id?: Maybe<SortOrder>;
  break_time_out?: Maybe<SortOrder>;
  break_time_start?: Maybe<SortOrder>;
  clock_id?: Maybe<SortOrder>;
};

export type ClockinBreakUpdateInput = {
  break_time_out?: Maybe<IntFieldUpdateOperationsInput>;
  break_time_start?: Maybe<IntFieldUpdateOperationsInput>;
  clock_id?: Maybe<IntFieldUpdateOperationsInput>;
};

export type ClockinBreakUpdateManyMutationInput = {
  break_time_out?: Maybe<IntFieldUpdateOperationsInput>;
  break_time_start?: Maybe<IntFieldUpdateOperationsInput>;
  clock_id?: Maybe<IntFieldUpdateOperationsInput>;
};

export type ClockinBreakWhereInput = {
  AND?: Maybe<Array<Maybe<ClockinBreakWhereInput>>>;
  NOT?: Maybe<Array<Maybe<ClockinBreakWhereInput>>>;
  OR?: Maybe<Array<Maybe<ClockinBreakWhereInput>>>;
  break_time_id?: Maybe<IntFilter>;
  break_time_out?: Maybe<IntFilter>;
  break_time_start?: Maybe<IntFilter>;
  clock_id?: Maybe<IntFilter>;
};

export type ClockinBreakWhereUniqueInput = {
  break_time_id?: Maybe<Scalars['Int']>;
};

export type ClockinLongpoll = {
  __typename?: 'ClockinLongpoll';
  clocked_out?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['Int']>;
  occupier?: Maybe<Scalars['Int']>;
  uid?: Maybe<Scalars['Int']>;
};

export type ClockinLongpollCreateInput = {
  clocked_out: Scalars['Boolean'];
  occupier: Scalars['Int'];
  uid: Scalars['Int'];
};

export type ClockinLongpollOrderByInput = {
  clocked_out?: Maybe<SortOrder>;
  id?: Maybe<SortOrder>;
  occupier?: Maybe<SortOrder>;
  uid?: Maybe<SortOrder>;
};

export type ClockinLongpollUpdateInput = {
  clocked_out?: Maybe<BoolFieldUpdateOperationsInput>;
  occupier?: Maybe<IntFieldUpdateOperationsInput>;
  uid?: Maybe<IntFieldUpdateOperationsInput>;
};

export type ClockinLongpollUpdateManyMutationInput = {
  clocked_out?: Maybe<BoolFieldUpdateOperationsInput>;
  occupier?: Maybe<IntFieldUpdateOperationsInput>;
  uid?: Maybe<IntFieldUpdateOperationsInput>;
};

export type ClockinLongpollWhereInput = {
  AND?: Maybe<Array<Maybe<ClockinLongpollWhereInput>>>;
  NOT?: Maybe<Array<Maybe<ClockinLongpollWhereInput>>>;
  OR?: Maybe<Array<Maybe<ClockinLongpollWhereInput>>>;
  clocked_out?: Maybe<BoolFilter>;
  id?: Maybe<IntFilter>;
  occupier?: Maybe<IntFilter>;
  uid?: Maybe<IntFilter>;
};

export type ClockinLongpollWhereUniqueInput = {
  id?: Maybe<Scalars['Int']>;
};

export type ClockinTimesheet = {
  __typename?: 'ClockinTimesheet';
  approved?: Maybe<Scalars['Boolean']>;
  clock_id?: Maybe<Scalars['Int']>;
  clockin?: Maybe<Scalars['Int']>;
  clockout?: Maybe<Scalars['Int']>;
  company_id?: Maybe<Scalars['Int']>;
  ip_address?: Maybe<Scalars['String']>;
  notes?: Maybe<Scalars['String']>;
  staff_name?: Maybe<Scalars['String']>;
  staff_uid?: Maybe<Scalars['Int']>;
  total_break_time?: Maybe<Scalars['Int']>;
  total_working_time?: Maybe<Scalars['Int']>;
};

export type ClockinTimesheetCreateInput = {
  approved: Scalars['Boolean'];
  clockin: Scalars['Int'];
  clockout: Scalars['Int'];
  company_id: Scalars['Int'];
  ip_address: Scalars['String'];
  notes: Scalars['String'];
  staff_name: Scalars['String'];
  staff_uid: Scalars['Int'];
  total_break_time?: Maybe<Scalars['Int']>;
  total_working_time?: Maybe<Scalars['Int']>;
};

export type ClockinTimesheetOrderByInput = {
  approved?: Maybe<SortOrder>;
  clock_id?: Maybe<SortOrder>;
  clockin?: Maybe<SortOrder>;
  clockout?: Maybe<SortOrder>;
  company_id?: Maybe<SortOrder>;
  ip_address?: Maybe<SortOrder>;
  notes?: Maybe<SortOrder>;
  staff_name?: Maybe<SortOrder>;
  staff_uid?: Maybe<SortOrder>;
  total_break_time?: Maybe<SortOrder>;
  total_working_time?: Maybe<SortOrder>;
};

export type ClockinTimesheetUpdateInput = {
  approved?: Maybe<BoolFieldUpdateOperationsInput>;
  clockin?: Maybe<IntFieldUpdateOperationsInput>;
  clockout?: Maybe<IntFieldUpdateOperationsInput>;
  company_id?: Maybe<IntFieldUpdateOperationsInput>;
  ip_address?: Maybe<StringFieldUpdateOperationsInput>;
  notes?: Maybe<StringFieldUpdateOperationsInput>;
  staff_name?: Maybe<StringFieldUpdateOperationsInput>;
  staff_uid?: Maybe<IntFieldUpdateOperationsInput>;
  total_break_time?: Maybe<IntFieldUpdateOperationsInput>;
  total_working_time?: Maybe<IntFieldUpdateOperationsInput>;
};

export type ClockinTimesheetUpdateManyMutationInput = {
  approved?: Maybe<BoolFieldUpdateOperationsInput>;
  clockin?: Maybe<IntFieldUpdateOperationsInput>;
  clockout?: Maybe<IntFieldUpdateOperationsInput>;
  company_id?: Maybe<IntFieldUpdateOperationsInput>;
  ip_address?: Maybe<StringFieldUpdateOperationsInput>;
  notes?: Maybe<StringFieldUpdateOperationsInput>;
  staff_name?: Maybe<StringFieldUpdateOperationsInput>;
  staff_uid?: Maybe<IntFieldUpdateOperationsInput>;
  total_break_time?: Maybe<IntFieldUpdateOperationsInput>;
  total_working_time?: Maybe<IntFieldUpdateOperationsInput>;
};

export type ClockinTimesheetWhereInput = {
  AND?: Maybe<Array<Maybe<ClockinTimesheetWhereInput>>>;
  NOT?: Maybe<Array<Maybe<ClockinTimesheetWhereInput>>>;
  OR?: Maybe<Array<Maybe<ClockinTimesheetWhereInput>>>;
  approved?: Maybe<BoolFilter>;
  clock_id?: Maybe<IntFilter>;
  clockin?: Maybe<IntFilter>;
  clockout?: Maybe<IntFilter>;
  company_id?: Maybe<IntFilter>;
  ip_address?: Maybe<StringFilter>;
  notes?: Maybe<StringFilter>;
  staff_name?: Maybe<StringFilter>;
  staff_uid?: Maybe<IntFilter>;
  total_break_time?: Maybe<IntFilter>;
  total_working_time?: Maybe<IntFilter>;
};

export type ClockinTimesheetWhereUniqueInput = {
  clock_id?: Maybe<Scalars['Int']>;
};

export type CmAccountNote = {
  __typename?: 'CmAccountNote';
  AccountID?: Maybe<Scalars['Int']>;
  CreatedDate?: Maybe<Scalars['DateTime']>;
  ID?: Maybe<Scalars['Int']>;
  IpAddress?: Maybe<Scalars['Int']>;
  Note?: Maybe<Scalars['String']>;
  OwnerID?: Maybe<Scalars['Int']>;
  Status?: Maybe<Cm_Account_Notes_Status>;
};

export type CmAccountNoteCreateInput = {
  AccountID: Scalars['Int'];
  CreatedDate: Scalars['DateTime'];
  IpAddress: Scalars['Int'];
  Note: Scalars['String'];
  OwnerID: Scalars['Int'];
  Status?: Maybe<Cm_Account_Notes_Status>;
};

export type CmAccountNoteOrderByInput = {
  AccountID?: Maybe<SortOrder>;
  CreatedDate?: Maybe<SortOrder>;
  ID?: Maybe<SortOrder>;
  IpAddress?: Maybe<SortOrder>;
  Note?: Maybe<SortOrder>;
  OwnerID?: Maybe<SortOrder>;
  Status?: Maybe<SortOrder>;
};

export type CmAccountNoteUpdateInput = {
  AccountID?: Maybe<IntFieldUpdateOperationsInput>;
  CreatedDate?: Maybe<DateTimeFieldUpdateOperationsInput>;
  IpAddress?: Maybe<IntFieldUpdateOperationsInput>;
  Note?: Maybe<StringFieldUpdateOperationsInput>;
  OwnerID?: Maybe<IntFieldUpdateOperationsInput>;
  Status?: Maybe<Enumcm_Account_Notes_StatusFieldUpdateOperationsInput>;
};

export type CmAccountNoteUpdateManyMutationInput = {
  AccountID?: Maybe<IntFieldUpdateOperationsInput>;
  CreatedDate?: Maybe<DateTimeFieldUpdateOperationsInput>;
  IpAddress?: Maybe<IntFieldUpdateOperationsInput>;
  Note?: Maybe<StringFieldUpdateOperationsInput>;
  OwnerID?: Maybe<IntFieldUpdateOperationsInput>;
  Status?: Maybe<Enumcm_Account_Notes_StatusFieldUpdateOperationsInput>;
};

export type CmAccountNoteWhereInput = {
  AND?: Maybe<Array<Maybe<CmAccountNoteWhereInput>>>;
  AccountID?: Maybe<IntFilter>;
  CreatedDate?: Maybe<DateTimeFilter>;
  ID?: Maybe<IntFilter>;
  IpAddress?: Maybe<IntFilter>;
  NOT?: Maybe<Array<Maybe<CmAccountNoteWhereInput>>>;
  Note?: Maybe<StringFilter>;
  OR?: Maybe<Array<Maybe<CmAccountNoteWhereInput>>>;
  OwnerID?: Maybe<IntFilter>;
  Status?: Maybe<Enumcm_Account_Notes_StatusFilter>;
};

export type CmAccountNoteWhereUniqueInput = {
  ID?: Maybe<Scalars['Int']>;
};

export type CmAppointmentCustom = {
  __typename?: 'CmAppointmentCustom';
  appointment_id?: Maybe<Scalars['Int']>;
  custom_field_id?: Maybe<Scalars['Int']>;
  custom_field_value?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  imported?: Maybe<Scalars['Int']>;
  occupier?: Maybe<Scalars['Int']>;
};

export type CmAppointmentCustomCreateInput = {
  appointment_id: Scalars['Int'];
  custom_field_id: Scalars['Int'];
  custom_field_value: Scalars['String'];
  imported: Scalars['Int'];
  occupier: Scalars['Int'];
};

export type CmAppointmentCustomOrderByInput = {
  appointment_id?: Maybe<SortOrder>;
  custom_field_id?: Maybe<SortOrder>;
  custom_field_value?: Maybe<SortOrder>;
  id?: Maybe<SortOrder>;
  imported?: Maybe<SortOrder>;
  occupier?: Maybe<SortOrder>;
};

export type CmAppointmentCustomUpdateInput = {
  appointment_id?: Maybe<IntFieldUpdateOperationsInput>;
  custom_field_id?: Maybe<IntFieldUpdateOperationsInput>;
  custom_field_value?: Maybe<StringFieldUpdateOperationsInput>;
  imported?: Maybe<IntFieldUpdateOperationsInput>;
  occupier?: Maybe<IntFieldUpdateOperationsInput>;
};

export type CmAppointmentCustomUpdateManyMutationInput = {
  appointment_id?: Maybe<IntFieldUpdateOperationsInput>;
  custom_field_id?: Maybe<IntFieldUpdateOperationsInput>;
  custom_field_value?: Maybe<StringFieldUpdateOperationsInput>;
  imported?: Maybe<IntFieldUpdateOperationsInput>;
  occupier?: Maybe<IntFieldUpdateOperationsInput>;
};

export type CmAppointmentCustomWhereInput = {
  AND?: Maybe<Array<Maybe<CmAppointmentCustomWhereInput>>>;
  NOT?: Maybe<Array<Maybe<CmAppointmentCustomWhereInput>>>;
  OR?: Maybe<Array<Maybe<CmAppointmentCustomWhereInput>>>;
  appointment_id?: Maybe<IntFilter>;
  custom_field_id?: Maybe<IntFilter>;
  custom_field_value?: Maybe<StringFilter>;
  id?: Maybe<IntFilter>;
  imported?: Maybe<IntFilter>;
  occupier?: Maybe<IntFilter>;
};

export type CmAppointmentCustomWhereUniqueInput = {
  id?: Maybe<Scalars['Int']>;
};

export type CmAppointmentsCustomImportHelper = {
  __typename?: 'CmAppointmentsCustomImportHelper';
  added?: Maybe<Scalars['Int']>;
  appointment_id?: Maybe<Scalars['Int']>;
  custom_appointment_id?: Maybe<Scalars['Int']>;
  custom_contact_name?: Maybe<Scalars['String']>;
  custom_field_name?: Maybe<Scalars['String']>;
  custom_field_value?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  occupier?: Maybe<Scalars['Int']>;
};

export type CmAppointmentsCustomImportHelperCreateInput = {
  added: Scalars['Int'];
  appointment_id: Scalars['Int'];
  custom_appointment_id: Scalars['Int'];
  custom_contact_name: Scalars['String'];
  custom_field_name: Scalars['String'];
  custom_field_value?: Maybe<Scalars['String']>;
  occupier: Scalars['Int'];
};

export type CmAppointmentsCustomImportHelperOrderByInput = {
  added?: Maybe<SortOrder>;
  appointment_id?: Maybe<SortOrder>;
  custom_appointment_id?: Maybe<SortOrder>;
  custom_contact_name?: Maybe<SortOrder>;
  custom_field_name?: Maybe<SortOrder>;
  custom_field_value?: Maybe<SortOrder>;
  id?: Maybe<SortOrder>;
  occupier?: Maybe<SortOrder>;
};

export type CmAppointmentsCustomImportHelperUpdateInput = {
  added?: Maybe<IntFieldUpdateOperationsInput>;
  appointment_id?: Maybe<IntFieldUpdateOperationsInput>;
  custom_appointment_id?: Maybe<IntFieldUpdateOperationsInput>;
  custom_contact_name?: Maybe<StringFieldUpdateOperationsInput>;
  custom_field_name?: Maybe<StringFieldUpdateOperationsInput>;
  custom_field_value?: Maybe<NullableStringFieldUpdateOperationsInput>;
  occupier?: Maybe<IntFieldUpdateOperationsInput>;
};

export type CmAppointmentsCustomImportHelperUpdateManyMutationInput = {
  added?: Maybe<IntFieldUpdateOperationsInput>;
  appointment_id?: Maybe<IntFieldUpdateOperationsInput>;
  custom_appointment_id?: Maybe<IntFieldUpdateOperationsInput>;
  custom_contact_name?: Maybe<StringFieldUpdateOperationsInput>;
  custom_field_name?: Maybe<StringFieldUpdateOperationsInput>;
  custom_field_value?: Maybe<NullableStringFieldUpdateOperationsInput>;
  occupier?: Maybe<IntFieldUpdateOperationsInput>;
};

export type CmAppointmentsCustomImportHelperWhereInput = {
  AND?: Maybe<Array<Maybe<CmAppointmentsCustomImportHelperWhereInput>>>;
  NOT?: Maybe<Array<Maybe<CmAppointmentsCustomImportHelperWhereInput>>>;
  OR?: Maybe<Array<Maybe<CmAppointmentsCustomImportHelperWhereInput>>>;
  added?: Maybe<IntFilter>;
  appointment_id?: Maybe<IntFilter>;
  custom_appointment_id?: Maybe<IntFilter>;
  custom_contact_name?: Maybe<StringFilter>;
  custom_field_name?: Maybe<StringFilter>;
  custom_field_value?: Maybe<StringNullableFilter>;
  id?: Maybe<IntFilter>;
  occupier?: Maybe<IntFilter>;
};

export type CmAppointmentsCustomImportHelperWhereUniqueInput = {
  id?: Maybe<Scalars['Int']>;
};

export type CmAuthorization = {
  __typename?: 'CmAuthorization';
  appointment_id?: Maybe<Scalars['Int']>;
  company_id?: Maybe<Scalars['Int']>;
  contact_id?: Maybe<Scalars['Int']>;
  diagnosis_code?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  title?: Maybe<Scalars['String']>;
  total_sessions?: Maybe<Scalars['Int']>;
};

export type CmAuthorizationCreateInput = {
  appointment_id: Scalars['Int'];
  company_id: Scalars['Int'];
  contact_id: Scalars['Int'];
  diagnosis_code: Scalars['String'];
  title: Scalars['String'];
  total_sessions: Scalars['Int'];
};

export type CmAuthorizationOrderByInput = {
  appointment_id?: Maybe<SortOrder>;
  company_id?: Maybe<SortOrder>;
  contact_id?: Maybe<SortOrder>;
  diagnosis_code?: Maybe<SortOrder>;
  id?: Maybe<SortOrder>;
  title?: Maybe<SortOrder>;
  total_sessions?: Maybe<SortOrder>;
};

export type CmAuthorizationUpdateInput = {
  appointment_id?: Maybe<IntFieldUpdateOperationsInput>;
  company_id?: Maybe<IntFieldUpdateOperationsInput>;
  contact_id?: Maybe<IntFieldUpdateOperationsInput>;
  diagnosis_code?: Maybe<StringFieldUpdateOperationsInput>;
  title?: Maybe<StringFieldUpdateOperationsInput>;
  total_sessions?: Maybe<IntFieldUpdateOperationsInput>;
};

export type CmAuthorizationUpdateManyMutationInput = {
  appointment_id?: Maybe<IntFieldUpdateOperationsInput>;
  company_id?: Maybe<IntFieldUpdateOperationsInput>;
  contact_id?: Maybe<IntFieldUpdateOperationsInput>;
  diagnosis_code?: Maybe<StringFieldUpdateOperationsInput>;
  title?: Maybe<StringFieldUpdateOperationsInput>;
  total_sessions?: Maybe<IntFieldUpdateOperationsInput>;
};

export type CmAuthorizationWhereInput = {
  AND?: Maybe<Array<Maybe<CmAuthorizationWhereInput>>>;
  NOT?: Maybe<Array<Maybe<CmAuthorizationWhereInput>>>;
  OR?: Maybe<Array<Maybe<CmAuthorizationWhereInput>>>;
  appointment_id?: Maybe<IntFilter>;
  company_id?: Maybe<IntFilter>;
  contact_id?: Maybe<IntFilter>;
  diagnosis_code?: Maybe<StringFilter>;
  id?: Maybe<IntFilter>;
  title?: Maybe<StringFilter>;
  total_sessions?: Maybe<IntFilter>;
};

export type CmAuthorizationWhereUniqueInput = {
  id?: Maybe<Scalars['Int']>;
};

export type CmBookingNote = {
  __typename?: 'CmBookingNote';
  AppointmentID?: Maybe<Scalars['Int']>;
  CreatedDate?: Maybe<Scalars['DateTime']>;
  ID?: Maybe<Scalars['Int']>;
  IpAddress?: Maybe<Scalars['Int']>;
  Note?: Maybe<Scalars['String']>;
  OwnerID?: Maybe<Scalars['Int']>;
  Status?: Maybe<Cm_Booking_Notes_Status>;
};

export type CmBookingNoteCreateInput = {
  AppointmentID: Scalars['Int'];
  CreatedDate: Scalars['DateTime'];
  IpAddress: Scalars['Int'];
  Note: Scalars['String'];
  OwnerID: Scalars['Int'];
  Status?: Maybe<Cm_Booking_Notes_Status>;
};

export type CmBookingNoteOrderByInput = {
  AppointmentID?: Maybe<SortOrder>;
  CreatedDate?: Maybe<SortOrder>;
  ID?: Maybe<SortOrder>;
  IpAddress?: Maybe<SortOrder>;
  Note?: Maybe<SortOrder>;
  OwnerID?: Maybe<SortOrder>;
  Status?: Maybe<SortOrder>;
};

export type CmBookingNoteUpdateInput = {
  AppointmentID?: Maybe<IntFieldUpdateOperationsInput>;
  CreatedDate?: Maybe<DateTimeFieldUpdateOperationsInput>;
  IpAddress?: Maybe<IntFieldUpdateOperationsInput>;
  Note?: Maybe<StringFieldUpdateOperationsInput>;
  OwnerID?: Maybe<IntFieldUpdateOperationsInput>;
  Status?: Maybe<Enumcm_Booking_Notes_StatusFieldUpdateOperationsInput>;
};

export type CmBookingNoteUpdateManyMutationInput = {
  AppointmentID?: Maybe<IntFieldUpdateOperationsInput>;
  CreatedDate?: Maybe<DateTimeFieldUpdateOperationsInput>;
  IpAddress?: Maybe<IntFieldUpdateOperationsInput>;
  Note?: Maybe<StringFieldUpdateOperationsInput>;
  OwnerID?: Maybe<IntFieldUpdateOperationsInput>;
  Status?: Maybe<Enumcm_Booking_Notes_StatusFieldUpdateOperationsInput>;
};

export type CmBookingNoteWhereInput = {
  AND?: Maybe<Array<Maybe<CmBookingNoteWhereInput>>>;
  AppointmentID?: Maybe<IntFilter>;
  CreatedDate?: Maybe<DateTimeFilter>;
  ID?: Maybe<IntFilter>;
  IpAddress?: Maybe<IntFilter>;
  NOT?: Maybe<Array<Maybe<CmBookingNoteWhereInput>>>;
  Note?: Maybe<StringFilter>;
  OR?: Maybe<Array<Maybe<CmBookingNoteWhereInput>>>;
  OwnerID?: Maybe<IntFilter>;
  Status?: Maybe<Enumcm_Booking_Notes_StatusFilter>;
};

export type CmBookingNoteWhereUniqueInput = {
  ID?: Maybe<Scalars['Int']>;
};

export type CmCampaign = {
  __typename?: 'CmCampaign';
  ActualCost?: Maybe<Scalars['String']>;
  BudgetedCost?: Maybe<Scalars['String']>;
  CompaignName?: Maybe<Scalars['String']>;
  CreatedDate?: Maybe<Scalars['DateTime']>;
  Description?: Maybe<Scalars['String']>;
  EndDate?: Maybe<Scalars['DateTime']>;
  ExpectedResponse?: Maybe<Scalars['String']>;
  ExpectedRevenue?: Maybe<Scalars['String']>;
  ID?: Maybe<Scalars['Int']>;
  IpAddress?: Maybe<Scalars['Int']>;
  NumSent?: Maybe<Scalars['String']>;
  OwnerID?: Maybe<Scalars['String']>;
  StartDate?: Maybe<Scalars['DateTime']>;
  Status?: Maybe<Scalars['Int']>;
  Type?: Maybe<Scalars['Int']>;
  company?: Maybe<Company>;
  company_id?: Maybe<Scalars['Int']>;
};

export type CmCampaignCreateInput = {
  ActualCost: Scalars['String'];
  BudgetedCost: Scalars['String'];
  CompaignName: Scalars['String'];
  CreatedDate: Scalars['DateTime'];
  Description: Scalars['String'];
  EndDate: Scalars['DateTime'];
  ExpectedResponse: Scalars['String'];
  ExpectedRevenue: Scalars['String'];
  IpAddress: Scalars['Int'];
  NumSent: Scalars['String'];
  OwnerID: Scalars['String'];
  StartDate: Scalars['DateTime'];
  Status: Scalars['Int'];
  Type: Scalars['Int'];
  company: CompanyCreateNestedOneWithoutCmCampaignInput;
};

export type CmCampaignCreateNestedManyWithoutCompanyInput = {
  connect?: Maybe<Array<Maybe<CmCampaignWhereUniqueInput>>>;
  connectOrCreate?: Maybe<Array<Maybe<CmCampaignCreateOrConnectWithoutCompanyInput>>>;
  create?: Maybe<Array<Maybe<CmCampaignCreateWithoutCompanyInput>>>;
};

export type CmCampaignCreateOrConnectWithoutCompanyInput = {
  create: CmCampaignUncheckedCreateWithoutCompanyInput;
  where: CmCampaignWhereUniqueInput;
};

export type CmCampaignCreateWithoutCompanyInput = {
  ActualCost: Scalars['String'];
  BudgetedCost: Scalars['String'];
  CompaignName: Scalars['String'];
  CreatedDate: Scalars['DateTime'];
  Description: Scalars['String'];
  EndDate: Scalars['DateTime'];
  ExpectedResponse: Scalars['String'];
  ExpectedRevenue: Scalars['String'];
  IpAddress: Scalars['Int'];
  NumSent: Scalars['String'];
  OwnerID: Scalars['String'];
  StartDate: Scalars['DateTime'];
  Status: Scalars['Int'];
  Type: Scalars['Int'];
};

export type CmCampaignListRelationFilter = {
  every?: Maybe<CmCampaignWhereInput>;
  none?: Maybe<CmCampaignWhereInput>;
  some?: Maybe<CmCampaignWhereInput>;
};

export type CmCampaignNote = {
  __typename?: 'CmCampaignNote';
  BookingID?: Maybe<Scalars['Int']>;
  CreatedDate?: Maybe<Scalars['DateTime']>;
  ID?: Maybe<Scalars['Int']>;
  IpAddress?: Maybe<Scalars['Int']>;
  Note?: Maybe<Scalars['String']>;
  OwnerID?: Maybe<Scalars['Int']>;
  Status?: Maybe<Cm_Compaign_Notes_Status>;
};

export type CmCampaignNoteCreateInput = {
  BookingID: Scalars['Int'];
  CreatedDate: Scalars['DateTime'];
  IpAddress: Scalars['Int'];
  Note: Scalars['String'];
  OwnerID: Scalars['Int'];
  Status?: Maybe<Cm_Compaign_Notes_Status>;
};

export type CmCampaignNoteOrderByInput = {
  BookingID?: Maybe<SortOrder>;
  CreatedDate?: Maybe<SortOrder>;
  ID?: Maybe<SortOrder>;
  IpAddress?: Maybe<SortOrder>;
  Note?: Maybe<SortOrder>;
  OwnerID?: Maybe<SortOrder>;
  Status?: Maybe<SortOrder>;
};

export type CmCampaignNoteUpdateInput = {
  BookingID?: Maybe<IntFieldUpdateOperationsInput>;
  CreatedDate?: Maybe<DateTimeFieldUpdateOperationsInput>;
  IpAddress?: Maybe<IntFieldUpdateOperationsInput>;
  Note?: Maybe<StringFieldUpdateOperationsInput>;
  OwnerID?: Maybe<IntFieldUpdateOperationsInput>;
  Status?: Maybe<Enumcm_Compaign_Notes_StatusFieldUpdateOperationsInput>;
};

export type CmCampaignNoteUpdateManyMutationInput = {
  BookingID?: Maybe<IntFieldUpdateOperationsInput>;
  CreatedDate?: Maybe<DateTimeFieldUpdateOperationsInput>;
  IpAddress?: Maybe<IntFieldUpdateOperationsInput>;
  Note?: Maybe<StringFieldUpdateOperationsInput>;
  OwnerID?: Maybe<IntFieldUpdateOperationsInput>;
  Status?: Maybe<Enumcm_Compaign_Notes_StatusFieldUpdateOperationsInput>;
};

export type CmCampaignNoteWhereInput = {
  AND?: Maybe<Array<Maybe<CmCampaignNoteWhereInput>>>;
  BookingID?: Maybe<IntFilter>;
  CreatedDate?: Maybe<DateTimeFilter>;
  ID?: Maybe<IntFilter>;
  IpAddress?: Maybe<IntFilter>;
  NOT?: Maybe<Array<Maybe<CmCampaignNoteWhereInput>>>;
  Note?: Maybe<StringFilter>;
  OR?: Maybe<Array<Maybe<CmCampaignNoteWhereInput>>>;
  OwnerID?: Maybe<IntFilter>;
  Status?: Maybe<Enumcm_Compaign_Notes_StatusFilter>;
};

export type CmCampaignNoteWhereUniqueInput = {
  ID?: Maybe<Scalars['Int']>;
};

export type CmCampaignOrderByInput = {
  ActualCost?: Maybe<SortOrder>;
  BudgetedCost?: Maybe<SortOrder>;
  CompaignName?: Maybe<SortOrder>;
  CreatedDate?: Maybe<SortOrder>;
  Description?: Maybe<SortOrder>;
  EndDate?: Maybe<SortOrder>;
  ExpectedResponse?: Maybe<SortOrder>;
  ExpectedRevenue?: Maybe<SortOrder>;
  ID?: Maybe<SortOrder>;
  IpAddress?: Maybe<SortOrder>;
  NumSent?: Maybe<SortOrder>;
  OwnerID?: Maybe<SortOrder>;
  StartDate?: Maybe<SortOrder>;
  Status?: Maybe<SortOrder>;
  Type?: Maybe<SortOrder>;
  company_id?: Maybe<SortOrder>;
};

export type CmCampaignScalarWhereInput = {
  AND?: Maybe<Array<Maybe<CmCampaignScalarWhereInput>>>;
  ActualCost?: Maybe<StringFilter>;
  BudgetedCost?: Maybe<StringFilter>;
  CompaignName?: Maybe<StringFilter>;
  CreatedDate?: Maybe<DateTimeFilter>;
  Description?: Maybe<StringFilter>;
  EndDate?: Maybe<DateTimeFilter>;
  ExpectedResponse?: Maybe<StringFilter>;
  ExpectedRevenue?: Maybe<StringFilter>;
  ID?: Maybe<IntFilter>;
  IpAddress?: Maybe<IntFilter>;
  NOT?: Maybe<Array<Maybe<CmCampaignScalarWhereInput>>>;
  NumSent?: Maybe<StringFilter>;
  OR?: Maybe<Array<Maybe<CmCampaignScalarWhereInput>>>;
  OwnerID?: Maybe<StringFilter>;
  StartDate?: Maybe<DateTimeFilter>;
  Status?: Maybe<IntFilter>;
  Type?: Maybe<IntFilter>;
  company_id?: Maybe<IntFilter>;
};

export type CmCampaignUncheckedCreateNestedManyWithoutCompanyInput = {
  connect?: Maybe<Array<Maybe<CmCampaignWhereUniqueInput>>>;
  connectOrCreate?: Maybe<Array<Maybe<CmCampaignCreateOrConnectWithoutCompanyInput>>>;
  create?: Maybe<Array<Maybe<CmCampaignCreateWithoutCompanyInput>>>;
};

export type CmCampaignUncheckedCreateWithoutCompanyInput = {
  ActualCost: Scalars['String'];
  BudgetedCost: Scalars['String'];
  CompaignName: Scalars['String'];
  CreatedDate: Scalars['DateTime'];
  Description: Scalars['String'];
  EndDate: Scalars['DateTime'];
  ExpectedResponse: Scalars['String'];
  ExpectedRevenue: Scalars['String'];
  ID?: Maybe<Scalars['Int']>;
  IpAddress: Scalars['Int'];
  NumSent: Scalars['String'];
  OwnerID: Scalars['String'];
  StartDate: Scalars['DateTime'];
  Status: Scalars['Int'];
  Type: Scalars['Int'];
};

export type CmCampaignUncheckedUpdateManyWithoutCmCampaignInput = {
  ActualCost?: Maybe<StringFieldUpdateOperationsInput>;
  BudgetedCost?: Maybe<StringFieldUpdateOperationsInput>;
  CompaignName?: Maybe<StringFieldUpdateOperationsInput>;
  CreatedDate?: Maybe<DateTimeFieldUpdateOperationsInput>;
  Description?: Maybe<StringFieldUpdateOperationsInput>;
  EndDate?: Maybe<DateTimeFieldUpdateOperationsInput>;
  ExpectedResponse?: Maybe<StringFieldUpdateOperationsInput>;
  ExpectedRevenue?: Maybe<StringFieldUpdateOperationsInput>;
  ID?: Maybe<IntFieldUpdateOperationsInput>;
  IpAddress?: Maybe<IntFieldUpdateOperationsInput>;
  NumSent?: Maybe<StringFieldUpdateOperationsInput>;
  OwnerID?: Maybe<StringFieldUpdateOperationsInput>;
  StartDate?: Maybe<DateTimeFieldUpdateOperationsInput>;
  Status?: Maybe<IntFieldUpdateOperationsInput>;
  Type?: Maybe<IntFieldUpdateOperationsInput>;
};

export type CmCampaignUncheckedUpdateManyWithoutCompanyInput = {
  connect?: Maybe<Array<Maybe<CmCampaignWhereUniqueInput>>>;
  connectOrCreate?: Maybe<Array<Maybe<CmCampaignCreateOrConnectWithoutCompanyInput>>>;
  create?: Maybe<Array<Maybe<CmCampaignCreateWithoutCompanyInput>>>;
  delete?: Maybe<Array<Maybe<CmCampaignWhereUniqueInput>>>;
  deleteMany?: Maybe<Array<Maybe<CmCampaignScalarWhereInput>>>;
  disconnect?: Maybe<Array<Maybe<CmCampaignWhereUniqueInput>>>;
  set?: Maybe<Array<Maybe<CmCampaignWhereUniqueInput>>>;
  update?: Maybe<Array<Maybe<CmCampaignUpdateWithWhereUniqueWithoutCompanyInput>>>;
  updateMany?: Maybe<Array<Maybe<CmCampaignUpdateManyWithWhereWithoutCompanyInput>>>;
  upsert?: Maybe<Array<Maybe<CmCampaignUpsertWithWhereUniqueWithoutCompanyInput>>>;
};

export type CmCampaignUncheckedUpdateWithoutCompanyInput = {
  ActualCost?: Maybe<StringFieldUpdateOperationsInput>;
  BudgetedCost?: Maybe<StringFieldUpdateOperationsInput>;
  CompaignName?: Maybe<StringFieldUpdateOperationsInput>;
  CreatedDate?: Maybe<DateTimeFieldUpdateOperationsInput>;
  Description?: Maybe<StringFieldUpdateOperationsInput>;
  EndDate?: Maybe<DateTimeFieldUpdateOperationsInput>;
  ExpectedResponse?: Maybe<StringFieldUpdateOperationsInput>;
  ExpectedRevenue?: Maybe<StringFieldUpdateOperationsInput>;
  ID?: Maybe<IntFieldUpdateOperationsInput>;
  IpAddress?: Maybe<IntFieldUpdateOperationsInput>;
  NumSent?: Maybe<StringFieldUpdateOperationsInput>;
  OwnerID?: Maybe<StringFieldUpdateOperationsInput>;
  StartDate?: Maybe<DateTimeFieldUpdateOperationsInput>;
  Status?: Maybe<IntFieldUpdateOperationsInput>;
  Type?: Maybe<IntFieldUpdateOperationsInput>;
};

export type CmCampaignUpdateInput = {
  ActualCost?: Maybe<StringFieldUpdateOperationsInput>;
  BudgetedCost?: Maybe<StringFieldUpdateOperationsInput>;
  CompaignName?: Maybe<StringFieldUpdateOperationsInput>;
  CreatedDate?: Maybe<DateTimeFieldUpdateOperationsInput>;
  Description?: Maybe<StringFieldUpdateOperationsInput>;
  EndDate?: Maybe<DateTimeFieldUpdateOperationsInput>;
  ExpectedResponse?: Maybe<StringFieldUpdateOperationsInput>;
  ExpectedRevenue?: Maybe<StringFieldUpdateOperationsInput>;
  IpAddress?: Maybe<IntFieldUpdateOperationsInput>;
  NumSent?: Maybe<StringFieldUpdateOperationsInput>;
  OwnerID?: Maybe<StringFieldUpdateOperationsInput>;
  StartDate?: Maybe<DateTimeFieldUpdateOperationsInput>;
  Status?: Maybe<IntFieldUpdateOperationsInput>;
  Type?: Maybe<IntFieldUpdateOperationsInput>;
  company?: Maybe<CompanyUpdateOneRequiredWithoutCmCampaignInput>;
};

export type CmCampaignUpdateManyMutationInput = {
  ActualCost?: Maybe<StringFieldUpdateOperationsInput>;
  BudgetedCost?: Maybe<StringFieldUpdateOperationsInput>;
  CompaignName?: Maybe<StringFieldUpdateOperationsInput>;
  CreatedDate?: Maybe<DateTimeFieldUpdateOperationsInput>;
  Description?: Maybe<StringFieldUpdateOperationsInput>;
  EndDate?: Maybe<DateTimeFieldUpdateOperationsInput>;
  ExpectedResponse?: Maybe<StringFieldUpdateOperationsInput>;
  ExpectedRevenue?: Maybe<StringFieldUpdateOperationsInput>;
  IpAddress?: Maybe<IntFieldUpdateOperationsInput>;
  NumSent?: Maybe<StringFieldUpdateOperationsInput>;
  OwnerID?: Maybe<StringFieldUpdateOperationsInput>;
  StartDate?: Maybe<DateTimeFieldUpdateOperationsInput>;
  Status?: Maybe<IntFieldUpdateOperationsInput>;
  Type?: Maybe<IntFieldUpdateOperationsInput>;
};

export type CmCampaignUpdateManyWithWhereWithoutCompanyInput = {
  data: CmCampaignUncheckedUpdateManyWithoutCmCampaignInput;
  where: CmCampaignScalarWhereInput;
};

export type CmCampaignUpdateManyWithoutCompanyInput = {
  connect?: Maybe<Array<Maybe<CmCampaignWhereUniqueInput>>>;
  connectOrCreate?: Maybe<Array<Maybe<CmCampaignCreateOrConnectWithoutCompanyInput>>>;
  create?: Maybe<Array<Maybe<CmCampaignCreateWithoutCompanyInput>>>;
  delete?: Maybe<Array<Maybe<CmCampaignWhereUniqueInput>>>;
  deleteMany?: Maybe<Array<Maybe<CmCampaignScalarWhereInput>>>;
  disconnect?: Maybe<Array<Maybe<CmCampaignWhereUniqueInput>>>;
  set?: Maybe<Array<Maybe<CmCampaignWhereUniqueInput>>>;
  update?: Maybe<Array<Maybe<CmCampaignUpdateWithWhereUniqueWithoutCompanyInput>>>;
  updateMany?: Maybe<Array<Maybe<CmCampaignUpdateManyWithWhereWithoutCompanyInput>>>;
  upsert?: Maybe<Array<Maybe<CmCampaignUpsertWithWhereUniqueWithoutCompanyInput>>>;
};

export type CmCampaignUpdateWithWhereUniqueWithoutCompanyInput = {
  data: CmCampaignUncheckedUpdateWithoutCompanyInput;
  where: CmCampaignWhereUniqueInput;
};

export type CmCampaignUpsertWithWhereUniqueWithoutCompanyInput = {
  create: CmCampaignUncheckedCreateWithoutCompanyInput;
  update: CmCampaignUncheckedUpdateWithoutCompanyInput;
  where: CmCampaignWhereUniqueInput;
};

export type CmCampaignWhereInput = {
  AND?: Maybe<Array<Maybe<CmCampaignWhereInput>>>;
  ActualCost?: Maybe<StringFilter>;
  BudgetedCost?: Maybe<StringFilter>;
  CompaignName?: Maybe<StringFilter>;
  CreatedDate?: Maybe<DateTimeFilter>;
  Description?: Maybe<StringFilter>;
  EndDate?: Maybe<DateTimeFilter>;
  ExpectedResponse?: Maybe<StringFilter>;
  ExpectedRevenue?: Maybe<StringFilter>;
  ID?: Maybe<IntFilter>;
  IpAddress?: Maybe<IntFilter>;
  NOT?: Maybe<Array<Maybe<CmCampaignWhereInput>>>;
  NumSent?: Maybe<StringFilter>;
  OR?: Maybe<Array<Maybe<CmCampaignWhereInput>>>;
  OwnerID?: Maybe<StringFilter>;
  StartDate?: Maybe<DateTimeFilter>;
  Status?: Maybe<IntFilter>;
  Type?: Maybe<IntFilter>;
  company?: Maybe<CompanyWhereInput>;
  company_id?: Maybe<IntFilter>;
};

export type CmCampaignWhereUniqueInput = {
  ID?: Maybe<Scalars['Int']>;
};

export type CmCase = {
  __typename?: 'CmCase';
  CreatedDate?: Maybe<Scalars['Int']>;
  IpAddress?: Maybe<Scalars['String']>;
  case_number?: Maybe<Scalars['String']>;
  comments?: Maybe<Scalars['String']>;
  company?: Maybe<Company>;
  company_id?: Maybe<Scalars['Int']>;
  contact?: Maybe<Scalars['String']>;
  critical?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  email?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  module2_type?: Maybe<Scalars['Int']>;
  module_type?: Maybe<Scalars['Int']>;
  ownerid?: Maybe<Scalars['Int']>;
  phone?: Maybe<Scalars['String']>;
  priority?: Maybe<Scalars['String']>;
  reason?: Maybe<Scalars['String']>;
  related_to?: Maybe<Scalars['Int']>;
  reported_by?: Maybe<Scalars['String']>;
  request?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  subject?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  user2_id?: Maybe<Scalars['Int']>;
  user_id?: Maybe<Scalars['Int']>;
};

export type CmCaseCreateInput = {
  CreatedDate?: Maybe<Scalars['Int']>;
  IpAddress?: Maybe<Scalars['String']>;
  case_number: Scalars['String'];
  comments?: Maybe<Scalars['String']>;
  company: CompanyCreateNestedOneWithoutCmCaseInput;
  contact?: Maybe<Scalars['String']>;
  critical?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  email?: Maybe<Scalars['String']>;
  module2_type?: Maybe<Scalars['Int']>;
  module_type?: Maybe<Scalars['Int']>;
  ownerid?: Maybe<Scalars['Int']>;
  phone?: Maybe<Scalars['String']>;
  priority?: Maybe<Scalars['String']>;
  reason?: Maybe<Scalars['String']>;
  related_to?: Maybe<Scalars['Int']>;
  reported_by?: Maybe<Scalars['String']>;
  request?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  subject?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  user2_id?: Maybe<Scalars['Int']>;
  user_id?: Maybe<Scalars['Int']>;
};

export type CmCaseCreateNestedManyWithoutCompanyInput = {
  connect?: Maybe<Array<Maybe<CmCaseWhereUniqueInput>>>;
  connectOrCreate?: Maybe<Array<Maybe<CmCaseCreateOrConnectWithoutCompanyInput>>>;
  create?: Maybe<Array<Maybe<CmCaseCreateWithoutCompanyInput>>>;
};

export type CmCaseCreateOrConnectWithoutCompanyInput = {
  create: CmCaseUncheckedCreateWithoutCompanyInput;
  where: CmCaseWhereUniqueInput;
};

export type CmCaseCreateWithoutCompanyInput = {
  CreatedDate?: Maybe<Scalars['Int']>;
  IpAddress?: Maybe<Scalars['String']>;
  case_number: Scalars['String'];
  comments?: Maybe<Scalars['String']>;
  contact?: Maybe<Scalars['String']>;
  critical?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  email?: Maybe<Scalars['String']>;
  module2_type?: Maybe<Scalars['Int']>;
  module_type?: Maybe<Scalars['Int']>;
  ownerid?: Maybe<Scalars['Int']>;
  phone?: Maybe<Scalars['String']>;
  priority?: Maybe<Scalars['String']>;
  reason?: Maybe<Scalars['String']>;
  related_to?: Maybe<Scalars['Int']>;
  reported_by?: Maybe<Scalars['String']>;
  request?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  subject?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  user2_id?: Maybe<Scalars['Int']>;
  user_id?: Maybe<Scalars['Int']>;
};

export type CmCaseListRelationFilter = {
  every?: Maybe<CmCaseWhereInput>;
  none?: Maybe<CmCaseWhereInput>;
  some?: Maybe<CmCaseWhereInput>;
};

export type CmCaseNote = {
  __typename?: 'CmCaseNote';
  CaseID?: Maybe<Scalars['Int']>;
  CreatedDate?: Maybe<Scalars['DateTime']>;
  ID?: Maybe<Scalars['Int']>;
  IpAddress?: Maybe<Scalars['Int']>;
  Note?: Maybe<Scalars['String']>;
  OwnerID?: Maybe<Scalars['Int']>;
  Status?: Maybe<Cm_Case_Notes_Status>;
};

export type CmCaseNoteCreateInput = {
  CaseID: Scalars['Int'];
  CreatedDate: Scalars['DateTime'];
  IpAddress: Scalars['Int'];
  Note: Scalars['String'];
  OwnerID: Scalars['Int'];
  Status?: Maybe<Cm_Case_Notes_Status>;
};

export type CmCaseNoteOrderByInput = {
  CaseID?: Maybe<SortOrder>;
  CreatedDate?: Maybe<SortOrder>;
  ID?: Maybe<SortOrder>;
  IpAddress?: Maybe<SortOrder>;
  Note?: Maybe<SortOrder>;
  OwnerID?: Maybe<SortOrder>;
  Status?: Maybe<SortOrder>;
};

export type CmCaseNoteUpdateInput = {
  CaseID?: Maybe<IntFieldUpdateOperationsInput>;
  CreatedDate?: Maybe<DateTimeFieldUpdateOperationsInput>;
  IpAddress?: Maybe<IntFieldUpdateOperationsInput>;
  Note?: Maybe<StringFieldUpdateOperationsInput>;
  OwnerID?: Maybe<IntFieldUpdateOperationsInput>;
  Status?: Maybe<Enumcm_Case_Notes_StatusFieldUpdateOperationsInput>;
};

export type CmCaseNoteUpdateManyMutationInput = {
  CaseID?: Maybe<IntFieldUpdateOperationsInput>;
  CreatedDate?: Maybe<DateTimeFieldUpdateOperationsInput>;
  IpAddress?: Maybe<IntFieldUpdateOperationsInput>;
  Note?: Maybe<StringFieldUpdateOperationsInput>;
  OwnerID?: Maybe<IntFieldUpdateOperationsInput>;
  Status?: Maybe<Enumcm_Case_Notes_StatusFieldUpdateOperationsInput>;
};

export type CmCaseNoteWhereInput = {
  AND?: Maybe<Array<Maybe<CmCaseNoteWhereInput>>>;
  CaseID?: Maybe<IntFilter>;
  CreatedDate?: Maybe<DateTimeFilter>;
  ID?: Maybe<IntFilter>;
  IpAddress?: Maybe<IntFilter>;
  NOT?: Maybe<Array<Maybe<CmCaseNoteWhereInput>>>;
  Note?: Maybe<StringFilter>;
  OR?: Maybe<Array<Maybe<CmCaseNoteWhereInput>>>;
  OwnerID?: Maybe<IntFilter>;
  Status?: Maybe<Enumcm_Case_Notes_StatusFilter>;
};

export type CmCaseNoteWhereUniqueInput = {
  ID?: Maybe<Scalars['Int']>;
};

export type CmCaseOrderByInput = {
  CreatedDate?: Maybe<SortOrder>;
  IpAddress?: Maybe<SortOrder>;
  case_number?: Maybe<SortOrder>;
  comments?: Maybe<SortOrder>;
  company_id?: Maybe<SortOrder>;
  contact?: Maybe<SortOrder>;
  critical?: Maybe<SortOrder>;
  description?: Maybe<SortOrder>;
  email?: Maybe<SortOrder>;
  id?: Maybe<SortOrder>;
  module2_type?: Maybe<SortOrder>;
  module_type?: Maybe<SortOrder>;
  ownerid?: Maybe<SortOrder>;
  phone?: Maybe<SortOrder>;
  priority?: Maybe<SortOrder>;
  reason?: Maybe<SortOrder>;
  related_to?: Maybe<SortOrder>;
  reported_by?: Maybe<SortOrder>;
  request?: Maybe<SortOrder>;
  status?: Maybe<SortOrder>;
  subject?: Maybe<SortOrder>;
  type?: Maybe<SortOrder>;
  user2_id?: Maybe<SortOrder>;
  user_id?: Maybe<SortOrder>;
};

export type CmCaseReply = {
  __typename?: 'CmCaseReply';
  CaseID?: Maybe<Scalars['Int']>;
  CompanyID?: Maybe<Scalars['Int']>;
  CreatedDate?: Maybe<Scalars['DateTime']>;
  Description?: Maybe<Scalars['String']>;
  ID?: Maybe<Scalars['Int']>;
  IpAddress?: Maybe<Scalars['Int']>;
  OwnerID?: Maybe<Scalars['Int']>;
  company?: Maybe<Company>;
};

export type CmCaseReplyCreateInput = {
  CaseID: Scalars['Int'];
  CreatedDate: Scalars['DateTime'];
  Description: Scalars['String'];
  IpAddress: Scalars['Int'];
  OwnerID: Scalars['Int'];
  company: CompanyCreateNestedOneWithoutCmCaseReplyInput;
};

export type CmCaseReplyCreateNestedManyWithoutCompanyInput = {
  connect?: Maybe<Array<Maybe<CmCaseReplyWhereUniqueInput>>>;
  connectOrCreate?: Maybe<Array<Maybe<CmCaseReplyCreateOrConnectWithoutCompanyInput>>>;
  create?: Maybe<Array<Maybe<CmCaseReplyCreateWithoutCompanyInput>>>;
};

export type CmCaseReplyCreateOrConnectWithoutCompanyInput = {
  create: CmCaseReplyUncheckedCreateWithoutCompanyInput;
  where: CmCaseReplyWhereUniqueInput;
};

export type CmCaseReplyCreateWithoutCompanyInput = {
  CaseID: Scalars['Int'];
  CreatedDate: Scalars['DateTime'];
  Description: Scalars['String'];
  IpAddress: Scalars['Int'];
  OwnerID: Scalars['Int'];
};

export type CmCaseReplyListRelationFilter = {
  every?: Maybe<CmCaseReplyWhereInput>;
  none?: Maybe<CmCaseReplyWhereInput>;
  some?: Maybe<CmCaseReplyWhereInput>;
};

export type CmCaseReplyOrderByInput = {
  CaseID?: Maybe<SortOrder>;
  CompanyID?: Maybe<SortOrder>;
  CreatedDate?: Maybe<SortOrder>;
  Description?: Maybe<SortOrder>;
  ID?: Maybe<SortOrder>;
  IpAddress?: Maybe<SortOrder>;
  OwnerID?: Maybe<SortOrder>;
};

export type CmCaseReplyScalarWhereInput = {
  AND?: Maybe<Array<Maybe<CmCaseReplyScalarWhereInput>>>;
  CaseID?: Maybe<IntFilter>;
  CompanyID?: Maybe<IntFilter>;
  CreatedDate?: Maybe<DateTimeFilter>;
  Description?: Maybe<StringFilter>;
  ID?: Maybe<IntFilter>;
  IpAddress?: Maybe<IntFilter>;
  NOT?: Maybe<Array<Maybe<CmCaseReplyScalarWhereInput>>>;
  OR?: Maybe<Array<Maybe<CmCaseReplyScalarWhereInput>>>;
  OwnerID?: Maybe<IntFilter>;
};

export type CmCaseReplyUncheckedCreateNestedManyWithoutCompanyInput = {
  connect?: Maybe<Array<Maybe<CmCaseReplyWhereUniqueInput>>>;
  connectOrCreate?: Maybe<Array<Maybe<CmCaseReplyCreateOrConnectWithoutCompanyInput>>>;
  create?: Maybe<Array<Maybe<CmCaseReplyCreateWithoutCompanyInput>>>;
};

export type CmCaseReplyUncheckedCreateWithoutCompanyInput = {
  CaseID: Scalars['Int'];
  CreatedDate: Scalars['DateTime'];
  Description: Scalars['String'];
  ID?: Maybe<Scalars['Int']>;
  IpAddress: Scalars['Int'];
  OwnerID: Scalars['Int'];
};

export type CmCaseReplyUncheckedUpdateManyWithoutCmCaseReplyInput = {
  CaseID?: Maybe<IntFieldUpdateOperationsInput>;
  CreatedDate?: Maybe<DateTimeFieldUpdateOperationsInput>;
  Description?: Maybe<StringFieldUpdateOperationsInput>;
  ID?: Maybe<IntFieldUpdateOperationsInput>;
  IpAddress?: Maybe<IntFieldUpdateOperationsInput>;
  OwnerID?: Maybe<IntFieldUpdateOperationsInput>;
};

export type CmCaseReplyUncheckedUpdateManyWithoutCompanyInput = {
  connect?: Maybe<Array<Maybe<CmCaseReplyWhereUniqueInput>>>;
  connectOrCreate?: Maybe<Array<Maybe<CmCaseReplyCreateOrConnectWithoutCompanyInput>>>;
  create?: Maybe<Array<Maybe<CmCaseReplyCreateWithoutCompanyInput>>>;
  delete?: Maybe<Array<Maybe<CmCaseReplyWhereUniqueInput>>>;
  deleteMany?: Maybe<Array<Maybe<CmCaseReplyScalarWhereInput>>>;
  disconnect?: Maybe<Array<Maybe<CmCaseReplyWhereUniqueInput>>>;
  set?: Maybe<Array<Maybe<CmCaseReplyWhereUniqueInput>>>;
  update?: Maybe<Array<Maybe<CmCaseReplyUpdateWithWhereUniqueWithoutCompanyInput>>>;
  updateMany?: Maybe<Array<Maybe<CmCaseReplyUpdateManyWithWhereWithoutCompanyInput>>>;
  upsert?: Maybe<Array<Maybe<CmCaseReplyUpsertWithWhereUniqueWithoutCompanyInput>>>;
};

export type CmCaseReplyUncheckedUpdateWithoutCompanyInput = {
  CaseID?: Maybe<IntFieldUpdateOperationsInput>;
  CreatedDate?: Maybe<DateTimeFieldUpdateOperationsInput>;
  Description?: Maybe<StringFieldUpdateOperationsInput>;
  ID?: Maybe<IntFieldUpdateOperationsInput>;
  IpAddress?: Maybe<IntFieldUpdateOperationsInput>;
  OwnerID?: Maybe<IntFieldUpdateOperationsInput>;
};

export type CmCaseReplyUpdateInput = {
  CaseID?: Maybe<IntFieldUpdateOperationsInput>;
  CreatedDate?: Maybe<DateTimeFieldUpdateOperationsInput>;
  Description?: Maybe<StringFieldUpdateOperationsInput>;
  IpAddress?: Maybe<IntFieldUpdateOperationsInput>;
  OwnerID?: Maybe<IntFieldUpdateOperationsInput>;
  company?: Maybe<CompanyUpdateOneRequiredWithoutCmCaseReplyInput>;
};

export type CmCaseReplyUpdateManyMutationInput = {
  CaseID?: Maybe<IntFieldUpdateOperationsInput>;
  CreatedDate?: Maybe<DateTimeFieldUpdateOperationsInput>;
  Description?: Maybe<StringFieldUpdateOperationsInput>;
  IpAddress?: Maybe<IntFieldUpdateOperationsInput>;
  OwnerID?: Maybe<IntFieldUpdateOperationsInput>;
};

export type CmCaseReplyUpdateManyWithWhereWithoutCompanyInput = {
  data: CmCaseReplyUncheckedUpdateManyWithoutCmCaseReplyInput;
  where: CmCaseReplyScalarWhereInput;
};

export type CmCaseReplyUpdateManyWithoutCompanyInput = {
  connect?: Maybe<Array<Maybe<CmCaseReplyWhereUniqueInput>>>;
  connectOrCreate?: Maybe<Array<Maybe<CmCaseReplyCreateOrConnectWithoutCompanyInput>>>;
  create?: Maybe<Array<Maybe<CmCaseReplyCreateWithoutCompanyInput>>>;
  delete?: Maybe<Array<Maybe<CmCaseReplyWhereUniqueInput>>>;
  deleteMany?: Maybe<Array<Maybe<CmCaseReplyScalarWhereInput>>>;
  disconnect?: Maybe<Array<Maybe<CmCaseReplyWhereUniqueInput>>>;
  set?: Maybe<Array<Maybe<CmCaseReplyWhereUniqueInput>>>;
  update?: Maybe<Array<Maybe<CmCaseReplyUpdateWithWhereUniqueWithoutCompanyInput>>>;
  updateMany?: Maybe<Array<Maybe<CmCaseReplyUpdateManyWithWhereWithoutCompanyInput>>>;
  upsert?: Maybe<Array<Maybe<CmCaseReplyUpsertWithWhereUniqueWithoutCompanyInput>>>;
};

export type CmCaseReplyUpdateWithWhereUniqueWithoutCompanyInput = {
  data: CmCaseReplyUncheckedUpdateWithoutCompanyInput;
  where: CmCaseReplyWhereUniqueInput;
};

export type CmCaseReplyUpsertWithWhereUniqueWithoutCompanyInput = {
  create: CmCaseReplyUncheckedCreateWithoutCompanyInput;
  update: CmCaseReplyUncheckedUpdateWithoutCompanyInput;
  where: CmCaseReplyWhereUniqueInput;
};

export type CmCaseReplyWhereInput = {
  AND?: Maybe<Array<Maybe<CmCaseReplyWhereInput>>>;
  CaseID?: Maybe<IntFilter>;
  CompanyID?: Maybe<IntFilter>;
  CreatedDate?: Maybe<DateTimeFilter>;
  Description?: Maybe<StringFilter>;
  ID?: Maybe<IntFilter>;
  IpAddress?: Maybe<IntFilter>;
  NOT?: Maybe<Array<Maybe<CmCaseReplyWhereInput>>>;
  OR?: Maybe<Array<Maybe<CmCaseReplyWhereInput>>>;
  OwnerID?: Maybe<IntFilter>;
  company?: Maybe<CompanyWhereInput>;
};

export type CmCaseReplyWhereUniqueInput = {
  ID?: Maybe<Scalars['Int']>;
};

export type CmCaseScalarWhereInput = {
  AND?: Maybe<Array<Maybe<CmCaseScalarWhereInput>>>;
  CreatedDate?: Maybe<IntNullableFilter>;
  IpAddress?: Maybe<StringNullableFilter>;
  NOT?: Maybe<Array<Maybe<CmCaseScalarWhereInput>>>;
  OR?: Maybe<Array<Maybe<CmCaseScalarWhereInput>>>;
  case_number?: Maybe<StringFilter>;
  comments?: Maybe<StringNullableFilter>;
  company_id?: Maybe<IntFilter>;
  contact?: Maybe<StringNullableFilter>;
  critical?: Maybe<StringNullableFilter>;
  description?: Maybe<StringNullableFilter>;
  email?: Maybe<StringNullableFilter>;
  id?: Maybe<IntFilter>;
  module2_type?: Maybe<IntNullableFilter>;
  module_type?: Maybe<IntNullableFilter>;
  ownerid?: Maybe<IntNullableFilter>;
  phone?: Maybe<StringNullableFilter>;
  priority?: Maybe<StringNullableFilter>;
  reason?: Maybe<StringNullableFilter>;
  related_to?: Maybe<IntNullableFilter>;
  reported_by?: Maybe<StringNullableFilter>;
  request?: Maybe<StringNullableFilter>;
  status?: Maybe<StringNullableFilter>;
  subject?: Maybe<StringNullableFilter>;
  type?: Maybe<StringNullableFilter>;
  user2_id?: Maybe<IntNullableFilter>;
  user_id?: Maybe<IntNullableFilter>;
};

export type CmCaseUncheckedCreateNestedManyWithoutCompanyInput = {
  connect?: Maybe<Array<Maybe<CmCaseWhereUniqueInput>>>;
  connectOrCreate?: Maybe<Array<Maybe<CmCaseCreateOrConnectWithoutCompanyInput>>>;
  create?: Maybe<Array<Maybe<CmCaseCreateWithoutCompanyInput>>>;
};

export type CmCaseUncheckedCreateWithoutCompanyInput = {
  CreatedDate?: Maybe<Scalars['Int']>;
  IpAddress?: Maybe<Scalars['String']>;
  case_number: Scalars['String'];
  comments?: Maybe<Scalars['String']>;
  contact?: Maybe<Scalars['String']>;
  critical?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  email?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  module2_type?: Maybe<Scalars['Int']>;
  module_type?: Maybe<Scalars['Int']>;
  ownerid?: Maybe<Scalars['Int']>;
  phone?: Maybe<Scalars['String']>;
  priority?: Maybe<Scalars['String']>;
  reason?: Maybe<Scalars['String']>;
  related_to?: Maybe<Scalars['Int']>;
  reported_by?: Maybe<Scalars['String']>;
  request?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  subject?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  user2_id?: Maybe<Scalars['Int']>;
  user_id?: Maybe<Scalars['Int']>;
};

export type CmCaseUncheckedUpdateManyWithoutCmCaseInput = {
  CreatedDate?: Maybe<NullableIntFieldUpdateOperationsInput>;
  IpAddress?: Maybe<NullableStringFieldUpdateOperationsInput>;
  case_number?: Maybe<StringFieldUpdateOperationsInput>;
  comments?: Maybe<NullableStringFieldUpdateOperationsInput>;
  contact?: Maybe<NullableStringFieldUpdateOperationsInput>;
  critical?: Maybe<NullableStringFieldUpdateOperationsInput>;
  description?: Maybe<NullableStringFieldUpdateOperationsInput>;
  email?: Maybe<NullableStringFieldUpdateOperationsInput>;
  id?: Maybe<IntFieldUpdateOperationsInput>;
  module2_type?: Maybe<NullableIntFieldUpdateOperationsInput>;
  module_type?: Maybe<NullableIntFieldUpdateOperationsInput>;
  ownerid?: Maybe<NullableIntFieldUpdateOperationsInput>;
  phone?: Maybe<NullableStringFieldUpdateOperationsInput>;
  priority?: Maybe<NullableStringFieldUpdateOperationsInput>;
  reason?: Maybe<NullableStringFieldUpdateOperationsInput>;
  related_to?: Maybe<NullableIntFieldUpdateOperationsInput>;
  reported_by?: Maybe<NullableStringFieldUpdateOperationsInput>;
  request?: Maybe<NullableStringFieldUpdateOperationsInput>;
  status?: Maybe<NullableStringFieldUpdateOperationsInput>;
  subject?: Maybe<NullableStringFieldUpdateOperationsInput>;
  type?: Maybe<NullableStringFieldUpdateOperationsInput>;
  user2_id?: Maybe<NullableIntFieldUpdateOperationsInput>;
  user_id?: Maybe<NullableIntFieldUpdateOperationsInput>;
};

export type CmCaseUncheckedUpdateManyWithoutCompanyInput = {
  connect?: Maybe<Array<Maybe<CmCaseWhereUniqueInput>>>;
  connectOrCreate?: Maybe<Array<Maybe<CmCaseCreateOrConnectWithoutCompanyInput>>>;
  create?: Maybe<Array<Maybe<CmCaseCreateWithoutCompanyInput>>>;
  delete?: Maybe<Array<Maybe<CmCaseWhereUniqueInput>>>;
  deleteMany?: Maybe<Array<Maybe<CmCaseScalarWhereInput>>>;
  disconnect?: Maybe<Array<Maybe<CmCaseWhereUniqueInput>>>;
  set?: Maybe<Array<Maybe<CmCaseWhereUniqueInput>>>;
  update?: Maybe<Array<Maybe<CmCaseUpdateWithWhereUniqueWithoutCompanyInput>>>;
  updateMany?: Maybe<Array<Maybe<CmCaseUpdateManyWithWhereWithoutCompanyInput>>>;
  upsert?: Maybe<Array<Maybe<CmCaseUpsertWithWhereUniqueWithoutCompanyInput>>>;
};

export type CmCaseUncheckedUpdateWithoutCompanyInput = {
  CreatedDate?: Maybe<NullableIntFieldUpdateOperationsInput>;
  IpAddress?: Maybe<NullableStringFieldUpdateOperationsInput>;
  case_number?: Maybe<StringFieldUpdateOperationsInput>;
  comments?: Maybe<NullableStringFieldUpdateOperationsInput>;
  contact?: Maybe<NullableStringFieldUpdateOperationsInput>;
  critical?: Maybe<NullableStringFieldUpdateOperationsInput>;
  description?: Maybe<NullableStringFieldUpdateOperationsInput>;
  email?: Maybe<NullableStringFieldUpdateOperationsInput>;
  id?: Maybe<IntFieldUpdateOperationsInput>;
  module2_type?: Maybe<NullableIntFieldUpdateOperationsInput>;
  module_type?: Maybe<NullableIntFieldUpdateOperationsInput>;
  ownerid?: Maybe<NullableIntFieldUpdateOperationsInput>;
  phone?: Maybe<NullableStringFieldUpdateOperationsInput>;
  priority?: Maybe<NullableStringFieldUpdateOperationsInput>;
  reason?: Maybe<NullableStringFieldUpdateOperationsInput>;
  related_to?: Maybe<NullableIntFieldUpdateOperationsInput>;
  reported_by?: Maybe<NullableStringFieldUpdateOperationsInput>;
  request?: Maybe<NullableStringFieldUpdateOperationsInput>;
  status?: Maybe<NullableStringFieldUpdateOperationsInput>;
  subject?: Maybe<NullableStringFieldUpdateOperationsInput>;
  type?: Maybe<NullableStringFieldUpdateOperationsInput>;
  user2_id?: Maybe<NullableIntFieldUpdateOperationsInput>;
  user_id?: Maybe<NullableIntFieldUpdateOperationsInput>;
};

export type CmCaseUpdateInput = {
  CreatedDate?: Maybe<NullableIntFieldUpdateOperationsInput>;
  IpAddress?: Maybe<NullableStringFieldUpdateOperationsInput>;
  case_number?: Maybe<StringFieldUpdateOperationsInput>;
  comments?: Maybe<NullableStringFieldUpdateOperationsInput>;
  company?: Maybe<CompanyUpdateOneRequiredWithoutCmCaseInput>;
  contact?: Maybe<NullableStringFieldUpdateOperationsInput>;
  critical?: Maybe<NullableStringFieldUpdateOperationsInput>;
  description?: Maybe<NullableStringFieldUpdateOperationsInput>;
  email?: Maybe<NullableStringFieldUpdateOperationsInput>;
  module2_type?: Maybe<NullableIntFieldUpdateOperationsInput>;
  module_type?: Maybe<NullableIntFieldUpdateOperationsInput>;
  ownerid?: Maybe<NullableIntFieldUpdateOperationsInput>;
  phone?: Maybe<NullableStringFieldUpdateOperationsInput>;
  priority?: Maybe<NullableStringFieldUpdateOperationsInput>;
  reason?: Maybe<NullableStringFieldUpdateOperationsInput>;
  related_to?: Maybe<NullableIntFieldUpdateOperationsInput>;
  reported_by?: Maybe<NullableStringFieldUpdateOperationsInput>;
  request?: Maybe<NullableStringFieldUpdateOperationsInput>;
  status?: Maybe<NullableStringFieldUpdateOperationsInput>;
  subject?: Maybe<NullableStringFieldUpdateOperationsInput>;
  type?: Maybe<NullableStringFieldUpdateOperationsInput>;
  user2_id?: Maybe<NullableIntFieldUpdateOperationsInput>;
  user_id?: Maybe<NullableIntFieldUpdateOperationsInput>;
};

export type CmCaseUpdateManyMutationInput = {
  CreatedDate?: Maybe<NullableIntFieldUpdateOperationsInput>;
  IpAddress?: Maybe<NullableStringFieldUpdateOperationsInput>;
  case_number?: Maybe<StringFieldUpdateOperationsInput>;
  comments?: Maybe<NullableStringFieldUpdateOperationsInput>;
  contact?: Maybe<NullableStringFieldUpdateOperationsInput>;
  critical?: Maybe<NullableStringFieldUpdateOperationsInput>;
  description?: Maybe<NullableStringFieldUpdateOperationsInput>;
  email?: Maybe<NullableStringFieldUpdateOperationsInput>;
  module2_type?: Maybe<NullableIntFieldUpdateOperationsInput>;
  module_type?: Maybe<NullableIntFieldUpdateOperationsInput>;
  ownerid?: Maybe<NullableIntFieldUpdateOperationsInput>;
  phone?: Maybe<NullableStringFieldUpdateOperationsInput>;
  priority?: Maybe<NullableStringFieldUpdateOperationsInput>;
  reason?: Maybe<NullableStringFieldUpdateOperationsInput>;
  related_to?: Maybe<NullableIntFieldUpdateOperationsInput>;
  reported_by?: Maybe<NullableStringFieldUpdateOperationsInput>;
  request?: Maybe<NullableStringFieldUpdateOperationsInput>;
  status?: Maybe<NullableStringFieldUpdateOperationsInput>;
  subject?: Maybe<NullableStringFieldUpdateOperationsInput>;
  type?: Maybe<NullableStringFieldUpdateOperationsInput>;
  user2_id?: Maybe<NullableIntFieldUpdateOperationsInput>;
  user_id?: Maybe<NullableIntFieldUpdateOperationsInput>;
};

export type CmCaseUpdateManyWithWhereWithoutCompanyInput = {
  data: CmCaseUncheckedUpdateManyWithoutCmCaseInput;
  where: CmCaseScalarWhereInput;
};

export type CmCaseUpdateManyWithoutCompanyInput = {
  connect?: Maybe<Array<Maybe<CmCaseWhereUniqueInput>>>;
  connectOrCreate?: Maybe<Array<Maybe<CmCaseCreateOrConnectWithoutCompanyInput>>>;
  create?: Maybe<Array<Maybe<CmCaseCreateWithoutCompanyInput>>>;
  delete?: Maybe<Array<Maybe<CmCaseWhereUniqueInput>>>;
  deleteMany?: Maybe<Array<Maybe<CmCaseScalarWhereInput>>>;
  disconnect?: Maybe<Array<Maybe<CmCaseWhereUniqueInput>>>;
  set?: Maybe<Array<Maybe<CmCaseWhereUniqueInput>>>;
  update?: Maybe<Array<Maybe<CmCaseUpdateWithWhereUniqueWithoutCompanyInput>>>;
  updateMany?: Maybe<Array<Maybe<CmCaseUpdateManyWithWhereWithoutCompanyInput>>>;
  upsert?: Maybe<Array<Maybe<CmCaseUpsertWithWhereUniqueWithoutCompanyInput>>>;
};

export type CmCaseUpdateWithWhereUniqueWithoutCompanyInput = {
  data: CmCaseUncheckedUpdateWithoutCompanyInput;
  where: CmCaseWhereUniqueInput;
};

export type CmCaseUpsertWithWhereUniqueWithoutCompanyInput = {
  create: CmCaseUncheckedCreateWithoutCompanyInput;
  update: CmCaseUncheckedUpdateWithoutCompanyInput;
  where: CmCaseWhereUniqueInput;
};

export type CmCaseWhereInput = {
  AND?: Maybe<Array<Maybe<CmCaseWhereInput>>>;
  CreatedDate?: Maybe<IntNullableFilter>;
  IpAddress?: Maybe<StringNullableFilter>;
  NOT?: Maybe<Array<Maybe<CmCaseWhereInput>>>;
  OR?: Maybe<Array<Maybe<CmCaseWhereInput>>>;
  case_number?: Maybe<StringFilter>;
  comments?: Maybe<StringNullableFilter>;
  company?: Maybe<CompanyWhereInput>;
  company_id?: Maybe<IntFilter>;
  contact?: Maybe<StringNullableFilter>;
  critical?: Maybe<StringNullableFilter>;
  description?: Maybe<StringNullableFilter>;
  email?: Maybe<StringNullableFilter>;
  id?: Maybe<IntFilter>;
  module2_type?: Maybe<IntNullableFilter>;
  module_type?: Maybe<IntNullableFilter>;
  ownerid?: Maybe<IntNullableFilter>;
  phone?: Maybe<StringNullableFilter>;
  priority?: Maybe<StringNullableFilter>;
  reason?: Maybe<StringNullableFilter>;
  related_to?: Maybe<IntNullableFilter>;
  reported_by?: Maybe<StringNullableFilter>;
  request?: Maybe<StringNullableFilter>;
  status?: Maybe<StringNullableFilter>;
  subject?: Maybe<StringNullableFilter>;
  type?: Maybe<StringNullableFilter>;
  user2_id?: Maybe<IntNullableFilter>;
  user_id?: Maybe<IntNullableFilter>;
};

export type CmCaseWhereUniqueInput = {
  id?: Maybe<Scalars['Int']>;
};

export type CmContact = {
  __typename?: 'CmContact';
  AddToQuickBooks?: Maybe<Cm_Contacts_AddToQuickBooks>;
  Assistant?: Maybe<Scalars['String']>;
  AsstPhone?: Maybe<Scalars['String']>;
  Avatar?: Maybe<Scalars['String']>;
  CreatedDate?: Maybe<Scalars['DateTime']>;
  DOB?: Maybe<Scalars['DateTime']>;
  Department?: Maybe<Scalars['String']>;
  Description?: Maybe<Scalars['String']>;
  Email?: Maybe<Scalars['String']>;
  EmailOptOut?: Maybe<Cm_Contacts_EmailOptOut>;
  Fax?: Maybe<Scalars['String']>;
  Fname?: Maybe<Scalars['String']>;
  HomePhone?: Maybe<Scalars['String']>;
  ID?: Maybe<Scalars['Int']>;
  IpAddress?: Maybe<Scalars['Int']>;
  LeadID?: Maybe<Scalars['Int']>;
  LeadSource?: Maybe<Scalars['String']>;
  Lname?: Maybe<Scalars['String']>;
  MailingCity?: Maybe<Scalars['String']>;
  MailingCountry?: Maybe<Scalars['String']>;
  MailingPostal?: Maybe<Scalars['String']>;
  MailingProvince?: Maybe<Scalars['String']>;
  MailingStreet?: Maybe<Scalars['String']>;
  MarketingOptInAll?: Maybe<Scalars['Int']>;
  MarketingOptInEmail?: Maybe<Scalars['Int']>;
  MarketingOptInNewsletter?: Maybe<Scalars['Int']>;
  MarketingOptInPhone?: Maybe<Scalars['Int']>;
  MarketingOptInPost?: Maybe<Scalars['Int']>;
  MarketingOptInText?: Maybe<Scalars['Int']>;
  MarketingSource?: Maybe<Scalars['Int']>;
  MarketingSourceRelated?: Maybe<Scalars['Int']>;
  Mobile?: Maybe<Scalars['String']>;
  Occupier?: Maybe<Scalars['Int']>;
  OtherCity?: Maybe<Scalars['String']>;
  OtherCountry?: Maybe<Scalars['String']>;
  OtherPhone?: Maybe<Scalars['String']>;
  OtherPostal?: Maybe<Scalars['String']>;
  OtherProvince?: Maybe<Scalars['String']>;
  OtherStreet?: Maybe<Scalars['String']>;
  OwnerID?: Maybe<Scalars['Int']>;
  Phone?: Maybe<Scalars['String']>;
  RefferalSource?: Maybe<Scalars['String']>;
  ReportsTo?: Maybe<Scalars['String']>;
  Salutation?: Maybe<Scalars['String']>;
  SecondaryEmail?: Maybe<Scalars['String']>;
  SkypeId?: Maybe<Scalars['String']>;
  Status?: Maybe<Cm_Contacts_Status>;
  Title?: Maybe<Scalars['String']>;
  Twitter?: Maybe<Scalars['String']>;
  UpdatedDate?: Maybe<Scalars['DateTime']>;
  alerts_drop?: Maybe<Scalars['String']>;
  ambassador_id?: Maybe<Scalars['Int']>;
  contact_type?: Maybe<Scalars['Int']>;
  contract_id?: Maybe<Scalars['Int']>;
  custom_clinic_id?: Maybe<Scalars['Int']>;
  custom_id?: Maybe<Scalars['String']>;
  custom_marketing_source?: Maybe<Scalars['String']>;
  customer_reference?: Maybe<Scalars['String']>;
  discount_type?: Maybe<Scalars['Int']>;
  fbimg?: Maybe<Scalars['String']>;
  gender?: Maybe<Scalars['String']>;
  group_tag?: Maybe<Scalars['String']>;
  imported?: Maybe<Scalars['Int']>;
  insurer_id?: Maybe<Scalars['Int']>;
  is_active?: Maybe<Scalars['Int']>;
  is_ambassador?: Maybe<Scalars['Int']>;
  location_id?: Maybe<Scalars['Int']>;
  need_to_knows?: Maybe<Scalars['Boolean']>;
  notes_drop?: Maybe<Scalars['String']>;
  polite_notice?: Maybe<Scalars['String']>;
  privacy_policy?: Maybe<Scalars['String']>;
  xero_contact_id?: Maybe<Scalars['String']>;
  xero_updated_date?: Maybe<Scalars['DateTime']>;
};

export type CmContactCreateInput = {
  AddToQuickBooks?: Maybe<Cm_Contacts_AddToQuickBooks>;
  Assistant: Scalars['String'];
  AsstPhone: Scalars['String'];
  Avatar: Scalars['String'];
  CreatedDate: Scalars['DateTime'];
  DOB?: Maybe<Scalars['DateTime']>;
  Department: Scalars['String'];
  Description: Scalars['String'];
  Email: Scalars['String'];
  EmailOptOut?: Maybe<Cm_Contacts_EmailOptOut>;
  Fax: Scalars['String'];
  Fname: Scalars['String'];
  HomePhone: Scalars['String'];
  IpAddress: Scalars['Int'];
  LeadID: Scalars['Int'];
  LeadSource: Scalars['String'];
  Lname: Scalars['String'];
  MailingCity: Scalars['String'];
  MailingCountry: Scalars['String'];
  MailingPostal: Scalars['String'];
  MailingProvince: Scalars['String'];
  MailingStreet: Scalars['String'];
  MarketingOptInAll?: Maybe<Scalars['Int']>;
  MarketingOptInEmail?: Maybe<Scalars['Int']>;
  MarketingOptInNewsletter?: Maybe<Scalars['Int']>;
  MarketingOptInPhone?: Maybe<Scalars['Int']>;
  MarketingOptInPost?: Maybe<Scalars['Int']>;
  MarketingOptInText?: Maybe<Scalars['Int']>;
  MarketingSource: Scalars['Int'];
  MarketingSourceRelated: Scalars['Int'];
  Mobile: Scalars['String'];
  Occupier: Scalars['Int'];
  OtherCity: Scalars['String'];
  OtherCountry: Scalars['String'];
  OtherPhone: Scalars['String'];
  OtherPostal: Scalars['String'];
  OtherProvince: Scalars['String'];
  OtherStreet: Scalars['String'];
  OwnerID: Scalars['Int'];
  Phone: Scalars['String'];
  RefferalSource?: Maybe<Scalars['String']>;
  ReportsTo: Scalars['String'];
  Salutation?: Maybe<Scalars['String']>;
  SecondaryEmail: Scalars['String'];
  SkypeId: Scalars['String'];
  Status?: Maybe<Cm_Contacts_Status>;
  Title: Scalars['String'];
  Twitter: Scalars['String'];
  UpdatedDate: Scalars['DateTime'];
  alerts_drop: Scalars['String'];
  ambassador_id: Scalars['Int'];
  contact_type?: Maybe<Scalars['Int']>;
  contract_id: Scalars['Int'];
  custom_clinic_id: Scalars['Int'];
  custom_id: Scalars['String'];
  custom_marketing_source: Scalars['String'];
  customer_reference: Scalars['String'];
  discount_type: Scalars['Int'];
  fbimg: Scalars['String'];
  gender: Scalars['String'];
  group_tag: Scalars['String'];
  imported: Scalars['Int'];
  insurer_id: Scalars['Int'];
  is_active?: Maybe<Scalars['Int']>;
  is_ambassador?: Maybe<Scalars['Int']>;
  location_id?: Maybe<Scalars['Int']>;
  need_to_knows?: Maybe<Scalars['Boolean']>;
  notes_drop: Scalars['String'];
  polite_notice: Scalars['String'];
  privacy_policy: Scalars['String'];
  xero_contact_id: Scalars['String'];
  xero_updated_date: Scalars['DateTime'];
};

export type CmContactOrderByInput = {
  AddToQuickBooks?: Maybe<SortOrder>;
  Assistant?: Maybe<SortOrder>;
  AsstPhone?: Maybe<SortOrder>;
  Avatar?: Maybe<SortOrder>;
  CreatedDate?: Maybe<SortOrder>;
  DOB?: Maybe<SortOrder>;
  Department?: Maybe<SortOrder>;
  Description?: Maybe<SortOrder>;
  Email?: Maybe<SortOrder>;
  EmailOptOut?: Maybe<SortOrder>;
  Fax?: Maybe<SortOrder>;
  Fname?: Maybe<SortOrder>;
  HomePhone?: Maybe<SortOrder>;
  ID?: Maybe<SortOrder>;
  IpAddress?: Maybe<SortOrder>;
  LeadID?: Maybe<SortOrder>;
  LeadSource?: Maybe<SortOrder>;
  Lname?: Maybe<SortOrder>;
  MailingCity?: Maybe<SortOrder>;
  MailingCountry?: Maybe<SortOrder>;
  MailingPostal?: Maybe<SortOrder>;
  MailingProvince?: Maybe<SortOrder>;
  MailingStreet?: Maybe<SortOrder>;
  MarketingOptInAll?: Maybe<SortOrder>;
  MarketingOptInEmail?: Maybe<SortOrder>;
  MarketingOptInNewsletter?: Maybe<SortOrder>;
  MarketingOptInPhone?: Maybe<SortOrder>;
  MarketingOptInPost?: Maybe<SortOrder>;
  MarketingOptInText?: Maybe<SortOrder>;
  MarketingSource?: Maybe<SortOrder>;
  MarketingSourceRelated?: Maybe<SortOrder>;
  Mobile?: Maybe<SortOrder>;
  Occupier?: Maybe<SortOrder>;
  OtherCity?: Maybe<SortOrder>;
  OtherCountry?: Maybe<SortOrder>;
  OtherPhone?: Maybe<SortOrder>;
  OtherPostal?: Maybe<SortOrder>;
  OtherProvince?: Maybe<SortOrder>;
  OtherStreet?: Maybe<SortOrder>;
  OwnerID?: Maybe<SortOrder>;
  Phone?: Maybe<SortOrder>;
  RefferalSource?: Maybe<SortOrder>;
  ReportsTo?: Maybe<SortOrder>;
  Salutation?: Maybe<SortOrder>;
  SecondaryEmail?: Maybe<SortOrder>;
  SkypeId?: Maybe<SortOrder>;
  Status?: Maybe<SortOrder>;
  Title?: Maybe<SortOrder>;
  Twitter?: Maybe<SortOrder>;
  UpdatedDate?: Maybe<SortOrder>;
  alerts_drop?: Maybe<SortOrder>;
  ambassador_id?: Maybe<SortOrder>;
  contact_type?: Maybe<SortOrder>;
  contract_id?: Maybe<SortOrder>;
  custom_clinic_id?: Maybe<SortOrder>;
  custom_id?: Maybe<SortOrder>;
  custom_marketing_source?: Maybe<SortOrder>;
  customer_reference?: Maybe<SortOrder>;
  discount_type?: Maybe<SortOrder>;
  fbimg?: Maybe<SortOrder>;
  gender?: Maybe<SortOrder>;
  group_tag?: Maybe<SortOrder>;
  imported?: Maybe<SortOrder>;
  insurer_id?: Maybe<SortOrder>;
  is_active?: Maybe<SortOrder>;
  is_ambassador?: Maybe<SortOrder>;
  location_id?: Maybe<SortOrder>;
  need_to_knows?: Maybe<SortOrder>;
  notes_drop?: Maybe<SortOrder>;
  polite_notice?: Maybe<SortOrder>;
  privacy_policy?: Maybe<SortOrder>;
  xero_contact_id?: Maybe<SortOrder>;
  xero_updated_date?: Maybe<SortOrder>;
};

export type CmContactUpdateInput = {
  AddToQuickBooks?: Maybe<Enumcm_Contacts_AddToQuickBooksFieldUpdateOperationsInput>;
  Assistant?: Maybe<StringFieldUpdateOperationsInput>;
  AsstPhone?: Maybe<StringFieldUpdateOperationsInput>;
  Avatar?: Maybe<StringFieldUpdateOperationsInput>;
  CreatedDate?: Maybe<DateTimeFieldUpdateOperationsInput>;
  DOB?: Maybe<NullableDateTimeFieldUpdateOperationsInput>;
  Department?: Maybe<StringFieldUpdateOperationsInput>;
  Description?: Maybe<StringFieldUpdateOperationsInput>;
  Email?: Maybe<StringFieldUpdateOperationsInput>;
  EmailOptOut?: Maybe<Enumcm_Contacts_EmailOptOutFieldUpdateOperationsInput>;
  Fax?: Maybe<StringFieldUpdateOperationsInput>;
  Fname?: Maybe<StringFieldUpdateOperationsInput>;
  HomePhone?: Maybe<StringFieldUpdateOperationsInput>;
  IpAddress?: Maybe<IntFieldUpdateOperationsInput>;
  LeadID?: Maybe<IntFieldUpdateOperationsInput>;
  LeadSource?: Maybe<StringFieldUpdateOperationsInput>;
  Lname?: Maybe<StringFieldUpdateOperationsInput>;
  MailingCity?: Maybe<StringFieldUpdateOperationsInput>;
  MailingCountry?: Maybe<StringFieldUpdateOperationsInput>;
  MailingPostal?: Maybe<StringFieldUpdateOperationsInput>;
  MailingProvince?: Maybe<StringFieldUpdateOperationsInput>;
  MailingStreet?: Maybe<StringFieldUpdateOperationsInput>;
  MarketingOptInAll?: Maybe<NullableIntFieldUpdateOperationsInput>;
  MarketingOptInEmail?: Maybe<NullableIntFieldUpdateOperationsInput>;
  MarketingOptInNewsletter?: Maybe<IntFieldUpdateOperationsInput>;
  MarketingOptInPhone?: Maybe<NullableIntFieldUpdateOperationsInput>;
  MarketingOptInPost?: Maybe<NullableIntFieldUpdateOperationsInput>;
  MarketingOptInText?: Maybe<NullableIntFieldUpdateOperationsInput>;
  MarketingSource?: Maybe<IntFieldUpdateOperationsInput>;
  MarketingSourceRelated?: Maybe<IntFieldUpdateOperationsInput>;
  Mobile?: Maybe<StringFieldUpdateOperationsInput>;
  Occupier?: Maybe<IntFieldUpdateOperationsInput>;
  OtherCity?: Maybe<StringFieldUpdateOperationsInput>;
  OtherCountry?: Maybe<StringFieldUpdateOperationsInput>;
  OtherPhone?: Maybe<StringFieldUpdateOperationsInput>;
  OtherPostal?: Maybe<StringFieldUpdateOperationsInput>;
  OtherProvince?: Maybe<StringFieldUpdateOperationsInput>;
  OtherStreet?: Maybe<StringFieldUpdateOperationsInput>;
  OwnerID?: Maybe<IntFieldUpdateOperationsInput>;
  Phone?: Maybe<StringFieldUpdateOperationsInput>;
  RefferalSource?: Maybe<NullableStringFieldUpdateOperationsInput>;
  ReportsTo?: Maybe<StringFieldUpdateOperationsInput>;
  Salutation?: Maybe<StringFieldUpdateOperationsInput>;
  SecondaryEmail?: Maybe<StringFieldUpdateOperationsInput>;
  SkypeId?: Maybe<StringFieldUpdateOperationsInput>;
  Status?: Maybe<Enumcm_Contacts_StatusFieldUpdateOperationsInput>;
  Title?: Maybe<StringFieldUpdateOperationsInput>;
  Twitter?: Maybe<StringFieldUpdateOperationsInput>;
  UpdatedDate?: Maybe<DateTimeFieldUpdateOperationsInput>;
  alerts_drop?: Maybe<StringFieldUpdateOperationsInput>;
  ambassador_id?: Maybe<IntFieldUpdateOperationsInput>;
  contact_type?: Maybe<IntFieldUpdateOperationsInput>;
  contract_id?: Maybe<IntFieldUpdateOperationsInput>;
  custom_clinic_id?: Maybe<IntFieldUpdateOperationsInput>;
  custom_id?: Maybe<StringFieldUpdateOperationsInput>;
  custom_marketing_source?: Maybe<StringFieldUpdateOperationsInput>;
  customer_reference?: Maybe<StringFieldUpdateOperationsInput>;
  discount_type?: Maybe<IntFieldUpdateOperationsInput>;
  fbimg?: Maybe<StringFieldUpdateOperationsInput>;
  gender?: Maybe<StringFieldUpdateOperationsInput>;
  group_tag?: Maybe<StringFieldUpdateOperationsInput>;
  imported?: Maybe<IntFieldUpdateOperationsInput>;
  insurer_id?: Maybe<IntFieldUpdateOperationsInput>;
  is_active?: Maybe<IntFieldUpdateOperationsInput>;
  is_ambassador?: Maybe<IntFieldUpdateOperationsInput>;
  location_id?: Maybe<IntFieldUpdateOperationsInput>;
  need_to_knows?: Maybe<BoolFieldUpdateOperationsInput>;
  notes_drop?: Maybe<StringFieldUpdateOperationsInput>;
  polite_notice?: Maybe<StringFieldUpdateOperationsInput>;
  privacy_policy?: Maybe<StringFieldUpdateOperationsInput>;
  xero_contact_id?: Maybe<StringFieldUpdateOperationsInput>;
  xero_updated_date?: Maybe<DateTimeFieldUpdateOperationsInput>;
};

export type CmContactUpdateManyMutationInput = {
  AddToQuickBooks?: Maybe<Enumcm_Contacts_AddToQuickBooksFieldUpdateOperationsInput>;
  Assistant?: Maybe<StringFieldUpdateOperationsInput>;
  AsstPhone?: Maybe<StringFieldUpdateOperationsInput>;
  Avatar?: Maybe<StringFieldUpdateOperationsInput>;
  CreatedDate?: Maybe<DateTimeFieldUpdateOperationsInput>;
  DOB?: Maybe<NullableDateTimeFieldUpdateOperationsInput>;
  Department?: Maybe<StringFieldUpdateOperationsInput>;
  Description?: Maybe<StringFieldUpdateOperationsInput>;
  Email?: Maybe<StringFieldUpdateOperationsInput>;
  EmailOptOut?: Maybe<Enumcm_Contacts_EmailOptOutFieldUpdateOperationsInput>;
  Fax?: Maybe<StringFieldUpdateOperationsInput>;
  Fname?: Maybe<StringFieldUpdateOperationsInput>;
  HomePhone?: Maybe<StringFieldUpdateOperationsInput>;
  IpAddress?: Maybe<IntFieldUpdateOperationsInput>;
  LeadID?: Maybe<IntFieldUpdateOperationsInput>;
  LeadSource?: Maybe<StringFieldUpdateOperationsInput>;
  Lname?: Maybe<StringFieldUpdateOperationsInput>;
  MailingCity?: Maybe<StringFieldUpdateOperationsInput>;
  MailingCountry?: Maybe<StringFieldUpdateOperationsInput>;
  MailingPostal?: Maybe<StringFieldUpdateOperationsInput>;
  MailingProvince?: Maybe<StringFieldUpdateOperationsInput>;
  MailingStreet?: Maybe<StringFieldUpdateOperationsInput>;
  MarketingOptInAll?: Maybe<NullableIntFieldUpdateOperationsInput>;
  MarketingOptInEmail?: Maybe<NullableIntFieldUpdateOperationsInput>;
  MarketingOptInNewsletter?: Maybe<IntFieldUpdateOperationsInput>;
  MarketingOptInPhone?: Maybe<NullableIntFieldUpdateOperationsInput>;
  MarketingOptInPost?: Maybe<NullableIntFieldUpdateOperationsInput>;
  MarketingOptInText?: Maybe<NullableIntFieldUpdateOperationsInput>;
  MarketingSource?: Maybe<IntFieldUpdateOperationsInput>;
  MarketingSourceRelated?: Maybe<IntFieldUpdateOperationsInput>;
  Mobile?: Maybe<StringFieldUpdateOperationsInput>;
  Occupier?: Maybe<IntFieldUpdateOperationsInput>;
  OtherCity?: Maybe<StringFieldUpdateOperationsInput>;
  OtherCountry?: Maybe<StringFieldUpdateOperationsInput>;
  OtherPhone?: Maybe<StringFieldUpdateOperationsInput>;
  OtherPostal?: Maybe<StringFieldUpdateOperationsInput>;
  OtherProvince?: Maybe<StringFieldUpdateOperationsInput>;
  OtherStreet?: Maybe<StringFieldUpdateOperationsInput>;
  OwnerID?: Maybe<IntFieldUpdateOperationsInput>;
  Phone?: Maybe<StringFieldUpdateOperationsInput>;
  RefferalSource?: Maybe<NullableStringFieldUpdateOperationsInput>;
  ReportsTo?: Maybe<StringFieldUpdateOperationsInput>;
  Salutation?: Maybe<StringFieldUpdateOperationsInput>;
  SecondaryEmail?: Maybe<StringFieldUpdateOperationsInput>;
  SkypeId?: Maybe<StringFieldUpdateOperationsInput>;
  Status?: Maybe<Enumcm_Contacts_StatusFieldUpdateOperationsInput>;
  Title?: Maybe<StringFieldUpdateOperationsInput>;
  Twitter?: Maybe<StringFieldUpdateOperationsInput>;
  UpdatedDate?: Maybe<DateTimeFieldUpdateOperationsInput>;
  alerts_drop?: Maybe<StringFieldUpdateOperationsInput>;
  ambassador_id?: Maybe<IntFieldUpdateOperationsInput>;
  contact_type?: Maybe<IntFieldUpdateOperationsInput>;
  contract_id?: Maybe<IntFieldUpdateOperationsInput>;
  custom_clinic_id?: Maybe<IntFieldUpdateOperationsInput>;
  custom_id?: Maybe<StringFieldUpdateOperationsInput>;
  custom_marketing_source?: Maybe<StringFieldUpdateOperationsInput>;
  customer_reference?: Maybe<StringFieldUpdateOperationsInput>;
  discount_type?: Maybe<IntFieldUpdateOperationsInput>;
  fbimg?: Maybe<StringFieldUpdateOperationsInput>;
  gender?: Maybe<StringFieldUpdateOperationsInput>;
  group_tag?: Maybe<StringFieldUpdateOperationsInput>;
  imported?: Maybe<IntFieldUpdateOperationsInput>;
  insurer_id?: Maybe<IntFieldUpdateOperationsInput>;
  is_active?: Maybe<IntFieldUpdateOperationsInput>;
  is_ambassador?: Maybe<IntFieldUpdateOperationsInput>;
  location_id?: Maybe<IntFieldUpdateOperationsInput>;
  need_to_knows?: Maybe<BoolFieldUpdateOperationsInput>;
  notes_drop?: Maybe<StringFieldUpdateOperationsInput>;
  polite_notice?: Maybe<StringFieldUpdateOperationsInput>;
  privacy_policy?: Maybe<StringFieldUpdateOperationsInput>;
  xero_contact_id?: Maybe<StringFieldUpdateOperationsInput>;
  xero_updated_date?: Maybe<DateTimeFieldUpdateOperationsInput>;
};

export type CmContactWhereInput = {
  AND?: Maybe<Array<Maybe<CmContactWhereInput>>>;
  AddToQuickBooks?: Maybe<Enumcm_Contacts_AddToQuickBooksFilter>;
  Assistant?: Maybe<StringFilter>;
  AsstPhone?: Maybe<StringFilter>;
  Avatar?: Maybe<StringFilter>;
  CreatedDate?: Maybe<DateTimeFilter>;
  DOB?: Maybe<DateTimeNullableFilter>;
  Department?: Maybe<StringFilter>;
  Description?: Maybe<StringFilter>;
  Email?: Maybe<StringFilter>;
  EmailOptOut?: Maybe<Enumcm_Contacts_EmailOptOutFilter>;
  Fax?: Maybe<StringFilter>;
  Fname?: Maybe<StringFilter>;
  HomePhone?: Maybe<StringFilter>;
  ID?: Maybe<IntFilter>;
  IpAddress?: Maybe<IntFilter>;
  LeadID?: Maybe<IntFilter>;
  LeadSource?: Maybe<StringFilter>;
  Lname?: Maybe<StringFilter>;
  MailingCity?: Maybe<StringFilter>;
  MailingCountry?: Maybe<StringFilter>;
  MailingPostal?: Maybe<StringFilter>;
  MailingProvince?: Maybe<StringFilter>;
  MailingStreet?: Maybe<StringFilter>;
  MarketingOptInAll?: Maybe<IntNullableFilter>;
  MarketingOptInEmail?: Maybe<IntNullableFilter>;
  MarketingOptInNewsletter?: Maybe<IntFilter>;
  MarketingOptInPhone?: Maybe<IntNullableFilter>;
  MarketingOptInPost?: Maybe<IntNullableFilter>;
  MarketingOptInText?: Maybe<IntNullableFilter>;
  MarketingSource?: Maybe<IntFilter>;
  MarketingSourceRelated?: Maybe<IntFilter>;
  Mobile?: Maybe<StringFilter>;
  NOT?: Maybe<Array<Maybe<CmContactWhereInput>>>;
  OR?: Maybe<Array<Maybe<CmContactWhereInput>>>;
  Occupier?: Maybe<IntFilter>;
  OtherCity?: Maybe<StringFilter>;
  OtherCountry?: Maybe<StringFilter>;
  OtherPhone?: Maybe<StringFilter>;
  OtherPostal?: Maybe<StringFilter>;
  OtherProvince?: Maybe<StringFilter>;
  OtherStreet?: Maybe<StringFilter>;
  OwnerID?: Maybe<IntFilter>;
  Phone?: Maybe<StringFilter>;
  RefferalSource?: Maybe<StringNullableFilter>;
  ReportsTo?: Maybe<StringFilter>;
  Salutation?: Maybe<StringFilter>;
  SecondaryEmail?: Maybe<StringFilter>;
  SkypeId?: Maybe<StringFilter>;
  Status?: Maybe<Enumcm_Contacts_StatusFilter>;
  Title?: Maybe<StringFilter>;
  Twitter?: Maybe<StringFilter>;
  UpdatedDate?: Maybe<DateTimeFilter>;
  alerts_drop?: Maybe<StringFilter>;
  ambassador_id?: Maybe<IntFilter>;
  contact_type?: Maybe<IntFilter>;
  contract_id?: Maybe<IntFilter>;
  custom_clinic_id?: Maybe<IntFilter>;
  custom_id?: Maybe<StringFilter>;
  custom_marketing_source?: Maybe<StringFilter>;
  customer_reference?: Maybe<StringFilter>;
  discount_type?: Maybe<IntFilter>;
  fbimg?: Maybe<StringFilter>;
  gender?: Maybe<StringFilter>;
  group_tag?: Maybe<StringFilter>;
  imported?: Maybe<IntFilter>;
  insurer_id?: Maybe<IntFilter>;
  is_active?: Maybe<IntFilter>;
  is_ambassador?: Maybe<IntFilter>;
  location_id?: Maybe<IntFilter>;
  need_to_knows?: Maybe<BoolFilter>;
  notes_drop?: Maybe<StringFilter>;
  polite_notice?: Maybe<StringFilter>;
  privacy_policy?: Maybe<StringFilter>;
  xero_contact_id?: Maybe<StringFilter>;
  xero_updated_date?: Maybe<DateTimeFilter>;
};

export type CmContactWhereUniqueInput = {
  ID?: Maybe<Scalars['Int']>;
};

export type Company = {
  __typename?: 'Company';
  AcceptEmailToken: Array<Maybe<AcceptEmailToken>>;
  AccountBalance: Array<Maybe<AccountBalance>>;
  BookingStatus: Array<Maybe<BookingStatus>>;
  Candidate: Array<Maybe<Candidate>>;
  CmCampaign: Array<Maybe<CmCampaign>>;
  CmCase: Array<Maybe<CmCase>>;
  CmCaseReply: Array<Maybe<CmCaseReply>>;
  MarketingSource: Array<Maybe<MarketingSource>>;
  ThirdPartyAccess: Array<Maybe<ThirdPartyAccess>>;
  TwoFactorHistory: Array<Maybe<TwoFactorHistory>>;
  User: Array<Maybe<User>>;
  admin?: Maybe<Scalars['Int']>;
  creation_date?: Maybe<Scalars['DateTime']>;
  cron_enabled?: Maybe<Scalars['Boolean']>;
  details?: Maybe<CompanyDetails>;
  digit8?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  image?: Maybe<Scalars['String']>;
  remote_connect?: Maybe<Scalars['String']>;
  remote_url?: Maybe<Scalars['String']>;
  slug?: Maybe<Scalars['String']>;
  subscription?: Maybe<CompanySubscription>;
  user?: Maybe<Scalars['String']>;
};


export type CompanyAcceptEmailTokenArgs = {
  cursor?: Maybe<AcceptEmailTokenWhereUniqueInput>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
};


export type CompanyAccountBalanceArgs = {
  cursor?: Maybe<AccountBalanceWhereUniqueInput>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
};


export type CompanyBookingStatusArgs = {
  cursor?: Maybe<BookingStatusWhereUniqueInput>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
};


export type CompanyCandidateArgs = {
  cursor?: Maybe<CandidateWhereUniqueInput>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
};


export type CompanyCmCampaignArgs = {
  cursor?: Maybe<CmCampaignWhereUniqueInput>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
};


export type CompanyCmCaseArgs = {
  cursor?: Maybe<CmCaseWhereUniqueInput>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
};


export type CompanyCmCaseReplyArgs = {
  cursor?: Maybe<CmCaseReplyWhereUniqueInput>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
};


export type CompanyMarketingSourceArgs = {
  cursor?: Maybe<MarketingSourceWhereUniqueInput>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
};


export type CompanyThirdPartyAccessArgs = {
  cursor?: Maybe<ThirdPartyAccessWhereUniqueInput>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
};


export type CompanyTwoFactorHistoryArgs = {
  cursor?: Maybe<TwoFactorHistoryWhereUniqueInput>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
};


export type CompanyUserArgs = {
  cursor?: Maybe<UserWhereUniqueInput>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
};

export type CompanyCreateInput = {
  AcceptEmailToken?: Maybe<AcceptEmailTokenCreateNestedManyWithoutCompanyInput>;
  AccountBalance?: Maybe<AccountBalanceCreateNestedManyWithoutCompanyInput>;
  BookingStatus?: Maybe<BookingStatusCreateNestedManyWithoutCompanyInput>;
  Candidate?: Maybe<CandidateCreateNestedManyWithoutCompanyInput>;
  CmCampaign?: Maybe<CmCampaignCreateNestedManyWithoutCompanyInput>;
  CmCase?: Maybe<CmCaseCreateNestedManyWithoutCompanyInput>;
  CmCaseReply?: Maybe<CmCaseReplyCreateNestedManyWithoutCompanyInput>;
  MarketingSource?: Maybe<MarketingSourceCreateNestedManyWithoutCompanyInput>;
  ThirdPartyAccess?: Maybe<ThirdPartyAccessCreateNestedManyWithoutCompanyInput>;
  TwoFactorHistory?: Maybe<TwoFactorHistoryCreateNestedManyWithoutCompanyInput>;
  User?: Maybe<UserCreateNestedManyWithoutCompanyInput>;
  admin: Scalars['Int'];
  creation_date: Scalars['DateTime'];
  cron_enabled?: Maybe<Scalars['Boolean']>;
  details?: Maybe<CompanyDetailsCreateNestedOneWithoutCompanyInput>;
  digit8: Scalars['Int'];
  image: Scalars['String'];
  remote_connect?: Maybe<Scalars['String']>;
  remote_url?: Maybe<Scalars['String']>;
  slug?: Maybe<Scalars['String']>;
  subscription?: Maybe<CompanySubscriptionCreateNestedOneWithoutCompanyInput>;
  user: Scalars['String'];
};

export type CompanyCreateNestedOneWithoutAcceptEmailTokenInput = {
  connect?: Maybe<CompanyWhereUniqueInput>;
  connectOrCreate?: Maybe<CompanyCreateOrConnectWithoutAcceptEmailTokenInput>;
  create?: Maybe<CompanyUncheckedCreateWithoutAcceptEmailTokenInput>;
};

export type CompanyCreateNestedOneWithoutAccountBalanceInput = {
  connect?: Maybe<CompanyWhereUniqueInput>;
  connectOrCreate?: Maybe<CompanyCreateOrConnectWithoutAccountBalanceInput>;
  create?: Maybe<CompanyUncheckedCreateWithoutAccountBalanceInput>;
};

export type CompanyCreateNestedOneWithoutBookingStatusInput = {
  connect?: Maybe<CompanyWhereUniqueInput>;
  connectOrCreate?: Maybe<CompanyCreateOrConnectWithoutBookingStatusInput>;
  create?: Maybe<CompanyUncheckedCreateWithoutBookingStatusInput>;
};

export type CompanyCreateNestedOneWithoutCandidateInput = {
  connect?: Maybe<CompanyWhereUniqueInput>;
  connectOrCreate?: Maybe<CompanyCreateOrConnectWithoutCandidateInput>;
  create?: Maybe<CompanyUncheckedCreateWithoutCandidateInput>;
};

export type CompanyCreateNestedOneWithoutCmCampaignInput = {
  connect?: Maybe<CompanyWhereUniqueInput>;
  connectOrCreate?: Maybe<CompanyCreateOrConnectWithoutCmCampaignInput>;
  create?: Maybe<CompanyUncheckedCreateWithoutCmCampaignInput>;
};

export type CompanyCreateNestedOneWithoutCmCaseInput = {
  connect?: Maybe<CompanyWhereUniqueInput>;
  connectOrCreate?: Maybe<CompanyCreateOrConnectWithoutCmCaseInput>;
  create?: Maybe<CompanyUncheckedCreateWithoutCmCaseInput>;
};

export type CompanyCreateNestedOneWithoutCmCaseReplyInput = {
  connect?: Maybe<CompanyWhereUniqueInput>;
  connectOrCreate?: Maybe<CompanyCreateOrConnectWithoutCmCaseReplyInput>;
  create?: Maybe<CompanyUncheckedCreateWithoutCmCaseReplyInput>;
};

export type CompanyCreateNestedOneWithoutDetailsInput = {
  connect?: Maybe<CompanyWhereUniqueInput>;
  connectOrCreate?: Maybe<CompanyCreateOrConnectWithoutDetailsInput>;
  create?: Maybe<CompanyUncheckedCreateWithoutDetailsInput>;
};

export type CompanyCreateNestedOneWithoutMarketingSourceInput = {
  connect?: Maybe<CompanyWhereUniqueInput>;
  connectOrCreate?: Maybe<CompanyCreateOrConnectWithoutMarketingSourceInput>;
  create?: Maybe<CompanyUncheckedCreateWithoutMarketingSourceInput>;
};

export type CompanyCreateNestedOneWithoutSubscriptionInput = {
  connect?: Maybe<CompanyWhereUniqueInput>;
  connectOrCreate?: Maybe<CompanyCreateOrConnectWithoutSubscriptionInput>;
  create?: Maybe<CompanyUncheckedCreateWithoutSubscriptionInput>;
};

export type CompanyCreateNestedOneWithoutThirdPartyAccessInput = {
  connect?: Maybe<CompanyWhereUniqueInput>;
  connectOrCreate?: Maybe<CompanyCreateOrConnectWithoutThirdPartyAccessInput>;
  create?: Maybe<CompanyUncheckedCreateWithoutThirdPartyAccessInput>;
};

export type CompanyCreateNestedOneWithoutTwoFactorHistoryInput = {
  connect?: Maybe<CompanyWhereUniqueInput>;
  connectOrCreate?: Maybe<CompanyCreateOrConnectWithoutTwoFactorHistoryInput>;
  create?: Maybe<CompanyUncheckedCreateWithoutTwoFactorHistoryInput>;
};

export type CompanyCreateNestedOneWithoutUserInput = {
  connect?: Maybe<CompanyWhereUniqueInput>;
  connectOrCreate?: Maybe<CompanyCreateOrConnectWithoutUserInput>;
  create?: Maybe<CompanyUncheckedCreateWithoutUserInput>;
};

export type CompanyCreateOrConnectWithoutAcceptEmailTokenInput = {
  create: CompanyUncheckedCreateWithoutAcceptEmailTokenInput;
  where: CompanyWhereUniqueInput;
};

export type CompanyCreateOrConnectWithoutAccountBalanceInput = {
  create: CompanyUncheckedCreateWithoutAccountBalanceInput;
  where: CompanyWhereUniqueInput;
};

export type CompanyCreateOrConnectWithoutBookingStatusInput = {
  create: CompanyUncheckedCreateWithoutBookingStatusInput;
  where: CompanyWhereUniqueInput;
};

export type CompanyCreateOrConnectWithoutCandidateInput = {
  create: CompanyUncheckedCreateWithoutCandidateInput;
  where: CompanyWhereUniqueInput;
};

export type CompanyCreateOrConnectWithoutCmCampaignInput = {
  create: CompanyUncheckedCreateWithoutCmCampaignInput;
  where: CompanyWhereUniqueInput;
};

export type CompanyCreateOrConnectWithoutCmCaseInput = {
  create: CompanyUncheckedCreateWithoutCmCaseInput;
  where: CompanyWhereUniqueInput;
};

export type CompanyCreateOrConnectWithoutCmCaseReplyInput = {
  create: CompanyUncheckedCreateWithoutCmCaseReplyInput;
  where: CompanyWhereUniqueInput;
};

export type CompanyCreateOrConnectWithoutDetailsInput = {
  create: CompanyUncheckedCreateWithoutDetailsInput;
  where: CompanyWhereUniqueInput;
};

export type CompanyCreateOrConnectWithoutMarketingSourceInput = {
  create: CompanyUncheckedCreateWithoutMarketingSourceInput;
  where: CompanyWhereUniqueInput;
};

export type CompanyCreateOrConnectWithoutSubscriptionInput = {
  create: CompanyUncheckedCreateWithoutSubscriptionInput;
  where: CompanyWhereUniqueInput;
};

export type CompanyCreateOrConnectWithoutThirdPartyAccessInput = {
  create: CompanyUncheckedCreateWithoutThirdPartyAccessInput;
  where: CompanyWhereUniqueInput;
};

export type CompanyCreateOrConnectWithoutTwoFactorHistoryInput = {
  create: CompanyUncheckedCreateWithoutTwoFactorHistoryInput;
  where: CompanyWhereUniqueInput;
};

export type CompanyCreateOrConnectWithoutUserInput = {
  create: CompanyUncheckedCreateWithoutUserInput;
  where: CompanyWhereUniqueInput;
};

export type CompanyDetails = {
  __typename?: 'CompanyDetails';
  accept_insurance?: Maybe<Scalars['Int']>;
  admin?: Maybe<Scalars['Int']>;
  append_client_pref?: Maybe<Scalars['Int']>;
  auto_sms?: Maybe<Scalars['Int']>;
  calendar_version?: Maybe<Scalars['String']>;
  capital_surname?: Maybe<Scalars['Boolean']>;
  city?: Maybe<Scalars['String']>;
  class_teacher_singular?: Maybe<Scalars['String']>;
  class_term_plural?: Maybe<Scalars['String']>;
  class_term_singular?: Maybe<Scalars['String']>;
  company?: Maybe<Company>;
  company_id?: Maybe<Scalars['Int']>;
  company_name?: Maybe<Scalars['String']>;
  company_notes?: Maybe<Scalars['String']>;
  completed_setup?: Maybe<Scalars['Boolean']>;
  contact_term_plural?: Maybe<Scalars['String']>;
  contact_term_singular?: Maybe<Scalars['String']>;
  converted_value?: Maybe<Scalars['Float']>;
  country?: Maybe<Scalars['String']>;
  county?: Maybe<Scalars['String']>;
  currency?: Maybe<Scalars['String']>;
  cycles_display?: Maybe<Scalars['Int']>;
  date_format?: Maybe<Scalars['String']>;
  db_lock?: Maybe<Scalars['Int']>;
  debrand_logo?: Maybe<Scalars['Int']>;
  default_inv_template_id?: Maybe<Scalars['Int']>;
  default_search?: Maybe<Scalars['String']>;
  demo_mode?: Maybe<Scalars['Int']>;
  details_id?: Maybe<Scalars['Int']>;
  diagnosis_codes_type?: Maybe<Scalars['String']>;
  disable_prescriptions?: Maybe<Scalars['Int']>;
  employee_clock_track?: Maybe<Scalars['Boolean']>;
  employee_term_plural?: Maybe<Scalars['String']>;
  employee_term_singular?: Maybe<Scalars['String']>;
  employees?: Maybe<Scalars['String']>;
  enable_2fa?: Maybe<Scalars['Int']>;
  enable_ad?: Maybe<Scalars['Int']>;
  enable_ad_code?: Maybe<Scalars['String']>;
  enable_ip_filter?: Maybe<Scalars['Int']>;
  enable_sens_data?: Maybe<Scalars['Int']>;
  facebook_page?: Maybe<Scalars['String']>;
  fax?: Maybe<Scalars['String']>;
  flag_enabled?: Maybe<Scalars['Int']>;
  footer_logo?: Maybe<Scalars['String']>;
  head_office?: Maybe<Scalars['Int']>;
  header_logo?: Maybe<Scalars['String']>;
  healthcode_live?: Maybe<Scalars['Boolean']>;
  industry_sector?: Maybe<Scalars['String']>;
  info_email?: Maybe<Scalars['String']>;
  is_surgical?: Maybe<Scalars['Int']>;
  language?: Maybe<Scalars['String']>;
  legacy_consultations?: Maybe<Scalars['Boolean']>;
  linkedin_page?: Maybe<Scalars['String']>;
  lock_export?: Maybe<Scalars['Int']>;
  lock_prescription?: Maybe<Scalars['Int']>;
  logo?: Maybe<Scalars['String']>;
  medical_approvals?: Maybe<Scalars['Int']>;
  merge_bookings_tabs?: Maybe<Scalars['Boolean']>;
  new_reports?: Maybe<Scalars['Int']>;
  phone?: Maybe<Scalars['String']>;
  phone_prefix?: Maybe<Scalars['Int']>;
  post_code?: Maybe<Scalars['String']>;
  preferences_email?: Maybe<Scalars['Int']>;
  preferences_newsletters?: Maybe<Scalars['Int']>;
  preferences_post?: Maybe<Scalars['Int']>;
  preferences_sms?: Maybe<Scalars['Int']>;
  private_treatment_notes?: Maybe<Scalars['Int']>;
  rota_version?: Maybe<Scalars['String']>;
  secure_medical_forms?: Maybe<Scalars['Int']>;
  sensitive_data_question?: Maybe<Scalars['Int']>;
  show_report_logo?: Maybe<Scalars['Boolean']>;
  slug?: Maybe<Scalars['String']>;
  sms_active?: Maybe<Scalars['Int']>;
  stock_manager?: Maybe<Scalars['String']>;
  street?: Maybe<Scalars['String']>;
  subscription?: Maybe<Scalars['String']>;
  tax_name?: Maybe<Company_Details_Tax_Name>;
  timezone?: Maybe<Timezone>;
  timezone_id?: Maybe<Scalars['Int']>;
  twitter_page?: Maybe<Scalars['String']>;
  use_google_auth?: Maybe<Scalars['Boolean']>;
  vat?: Maybe<Scalars['String']>;
  website?: Maybe<Scalars['String']>;
  week_start_day?: Maybe<Scalars['String']>;
  youtube_page?: Maybe<Scalars['String']>;
};

export type CompanyDetailsCreateInput = {
  accept_insurance: Scalars['Int'];
  admin: Scalars['Int'];
  append_client_pref: Scalars['Int'];
  auto_sms?: Maybe<Scalars['Int']>;
  calendar_version: Scalars['String'];
  capital_surname?: Maybe<Scalars['Boolean']>;
  city: Scalars['String'];
  class_teacher_singular?: Maybe<Scalars['String']>;
  class_term_plural?: Maybe<Scalars['String']>;
  class_term_singular?: Maybe<Scalars['String']>;
  company: CompanyCreateNestedOneWithoutDetailsInput;
  company_name: Scalars['String'];
  company_notes: Scalars['String'];
  completed_setup?: Maybe<Scalars['Boolean']>;
  contact_term_plural?: Maybe<Scalars['String']>;
  contact_term_singular?: Maybe<Scalars['String']>;
  converted_value: Scalars['Float'];
  country?: Maybe<Scalars['String']>;
  county: Scalars['String'];
  currency?: Maybe<Scalars['String']>;
  cycles_display?: Maybe<Scalars['Int']>;
  date_format?: Maybe<Scalars['String']>;
  db_lock: Scalars['Int'];
  debrand_logo: Scalars['Int'];
  default_inv_template_id: Scalars['Int'];
  default_search?: Maybe<Scalars['String']>;
  demo_mode: Scalars['Int'];
  diagnosis_codes_type?: Maybe<Scalars['String']>;
  disable_prescriptions: Scalars['Int'];
  employee_clock_track?: Maybe<Scalars['Boolean']>;
  employee_term_plural?: Maybe<Scalars['String']>;
  employee_term_singular?: Maybe<Scalars['String']>;
  employees: Scalars['String'];
  enable_2fa: Scalars['Int'];
  enable_ad?: Maybe<Scalars['Int']>;
  enable_ad_code?: Maybe<Scalars['String']>;
  enable_ip_filter?: Maybe<Scalars['Int']>;
  enable_sens_data: Scalars['Int'];
  facebook_page: Scalars['String'];
  fax: Scalars['String'];
  flag_enabled?: Maybe<Scalars['Int']>;
  footer_logo: Scalars['String'];
  head_office: Scalars['Int'];
  header_logo: Scalars['String'];
  healthcode_live?: Maybe<Scalars['Boolean']>;
  industry_sector: Scalars['String'];
  info_email: Scalars['String'];
  is_surgical: Scalars['Int'];
  language: Scalars['String'];
  legacy_consultations?: Maybe<Scalars['Boolean']>;
  linkedin_page: Scalars['String'];
  lock_export: Scalars['Int'];
  lock_prescription: Scalars['Int'];
  logo: Scalars['String'];
  medical_approvals: Scalars['Int'];
  merge_bookings_tabs?: Maybe<Scalars['Boolean']>;
  new_reports: Scalars['Int'];
  phone: Scalars['String'];
  phone_prefix: Scalars['Int'];
  post_code: Scalars['String'];
  preferences_email?: Maybe<Scalars['Int']>;
  preferences_newsletters?: Maybe<Scalars['Int']>;
  preferences_post?: Maybe<Scalars['Int']>;
  preferences_sms?: Maybe<Scalars['Int']>;
  private_treatment_notes: Scalars['Int'];
  rota_version: Scalars['String'];
  secure_medical_forms?: Maybe<Scalars['Int']>;
  sensitive_data_question?: Maybe<Scalars['Int']>;
  show_report_logo?: Maybe<Scalars['Boolean']>;
  slug?: Maybe<Scalars['String']>;
  sms_active: Scalars['Int'];
  stock_manager: Scalars['String'];
  street: Scalars['String'];
  subscription: Scalars['String'];
  tax_name?: Maybe<Company_Details_Tax_Name>;
  timezone?: Maybe<TimezoneCreateNestedOneWithoutCompanyDetailsInput>;
  twitter_page: Scalars['String'];
  use_google_auth?: Maybe<Scalars['Boolean']>;
  vat: Scalars['String'];
  website: Scalars['String'];
  week_start_day?: Maybe<Scalars['String']>;
  youtube_page: Scalars['String'];
};

export type CompanyDetailsCreateNestedManyWithoutTimezoneInput = {
  connect?: Maybe<Array<Maybe<CompanyDetailsWhereUniqueInput>>>;
  connectOrCreate?: Maybe<Array<Maybe<CompanyDetailsCreateOrConnectWithoutTimezoneInput>>>;
  create?: Maybe<Array<Maybe<CompanyDetailsCreateWithoutTimezoneInput>>>;
};

export type CompanyDetailsCreateNestedOneWithoutCompanyInput = {
  connect?: Maybe<CompanyDetailsWhereUniqueInput>;
  connectOrCreate?: Maybe<CompanyDetailsCreateOrConnectWithoutCompanyInput>;
  create?: Maybe<CompanyDetailsUncheckedCreateWithoutCompanyInput>;
};

export type CompanyDetailsCreateOrConnectWithoutCompanyInput = {
  create: CompanyDetailsUncheckedCreateWithoutCompanyInput;
  where: CompanyDetailsWhereUniqueInput;
};

export type CompanyDetailsCreateOrConnectWithoutTimezoneInput = {
  create: CompanyDetailsUncheckedCreateWithoutTimezoneInput;
  where: CompanyDetailsWhereUniqueInput;
};

export type CompanyDetailsCreateWithoutTimezoneInput = {
  accept_insurance: Scalars['Int'];
  admin: Scalars['Int'];
  append_client_pref: Scalars['Int'];
  auto_sms?: Maybe<Scalars['Int']>;
  calendar_version: Scalars['String'];
  capital_surname?: Maybe<Scalars['Boolean']>;
  city: Scalars['String'];
  class_teacher_singular?: Maybe<Scalars['String']>;
  class_term_plural?: Maybe<Scalars['String']>;
  class_term_singular?: Maybe<Scalars['String']>;
  company: CompanyCreateNestedOneWithoutDetailsInput;
  company_name: Scalars['String'];
  company_notes: Scalars['String'];
  completed_setup?: Maybe<Scalars['Boolean']>;
  contact_term_plural?: Maybe<Scalars['String']>;
  contact_term_singular?: Maybe<Scalars['String']>;
  converted_value: Scalars['Float'];
  country?: Maybe<Scalars['String']>;
  county: Scalars['String'];
  currency?: Maybe<Scalars['String']>;
  cycles_display?: Maybe<Scalars['Int']>;
  date_format?: Maybe<Scalars['String']>;
  db_lock: Scalars['Int'];
  debrand_logo: Scalars['Int'];
  default_inv_template_id: Scalars['Int'];
  default_search?: Maybe<Scalars['String']>;
  demo_mode: Scalars['Int'];
  diagnosis_codes_type?: Maybe<Scalars['String']>;
  disable_prescriptions: Scalars['Int'];
  employee_clock_track?: Maybe<Scalars['Boolean']>;
  employee_term_plural?: Maybe<Scalars['String']>;
  employee_term_singular?: Maybe<Scalars['String']>;
  employees: Scalars['String'];
  enable_2fa: Scalars['Int'];
  enable_ad?: Maybe<Scalars['Int']>;
  enable_ad_code?: Maybe<Scalars['String']>;
  enable_ip_filter?: Maybe<Scalars['Int']>;
  enable_sens_data: Scalars['Int'];
  facebook_page: Scalars['String'];
  fax: Scalars['String'];
  flag_enabled?: Maybe<Scalars['Int']>;
  footer_logo: Scalars['String'];
  head_office: Scalars['Int'];
  header_logo: Scalars['String'];
  healthcode_live?: Maybe<Scalars['Boolean']>;
  industry_sector: Scalars['String'];
  info_email: Scalars['String'];
  is_surgical: Scalars['Int'];
  language: Scalars['String'];
  legacy_consultations?: Maybe<Scalars['Boolean']>;
  linkedin_page: Scalars['String'];
  lock_export: Scalars['Int'];
  lock_prescription: Scalars['Int'];
  logo: Scalars['String'];
  medical_approvals: Scalars['Int'];
  merge_bookings_tabs?: Maybe<Scalars['Boolean']>;
  new_reports: Scalars['Int'];
  phone: Scalars['String'];
  phone_prefix: Scalars['Int'];
  post_code: Scalars['String'];
  preferences_email?: Maybe<Scalars['Int']>;
  preferences_newsletters?: Maybe<Scalars['Int']>;
  preferences_post?: Maybe<Scalars['Int']>;
  preferences_sms?: Maybe<Scalars['Int']>;
  private_treatment_notes: Scalars['Int'];
  rota_version: Scalars['String'];
  secure_medical_forms?: Maybe<Scalars['Int']>;
  sensitive_data_question?: Maybe<Scalars['Int']>;
  show_report_logo?: Maybe<Scalars['Boolean']>;
  slug?: Maybe<Scalars['String']>;
  sms_active: Scalars['Int'];
  stock_manager: Scalars['String'];
  street: Scalars['String'];
  subscription: Scalars['String'];
  tax_name?: Maybe<Company_Details_Tax_Name>;
  twitter_page: Scalars['String'];
  use_google_auth?: Maybe<Scalars['Boolean']>;
  vat: Scalars['String'];
  website: Scalars['String'];
  week_start_day?: Maybe<Scalars['String']>;
  youtube_page: Scalars['String'];
};

export type CompanyDetailsListRelationFilter = {
  every?: Maybe<CompanyDetailsWhereInput>;
  none?: Maybe<CompanyDetailsWhereInput>;
  some?: Maybe<CompanyDetailsWhereInput>;
};

export type CompanyDetailsOrderByInput = {
  accept_insurance?: Maybe<SortOrder>;
  admin?: Maybe<SortOrder>;
  append_client_pref?: Maybe<SortOrder>;
  auto_sms?: Maybe<SortOrder>;
  calendar_version?: Maybe<SortOrder>;
  capital_surname?: Maybe<SortOrder>;
  city?: Maybe<SortOrder>;
  class_teacher_singular?: Maybe<SortOrder>;
  class_term_plural?: Maybe<SortOrder>;
  class_term_singular?: Maybe<SortOrder>;
  company_id?: Maybe<SortOrder>;
  company_name?: Maybe<SortOrder>;
  company_notes?: Maybe<SortOrder>;
  completed_setup?: Maybe<SortOrder>;
  contact_term_plural?: Maybe<SortOrder>;
  contact_term_singular?: Maybe<SortOrder>;
  converted_value?: Maybe<SortOrder>;
  country?: Maybe<SortOrder>;
  county?: Maybe<SortOrder>;
  currency?: Maybe<SortOrder>;
  cycles_display?: Maybe<SortOrder>;
  date_format?: Maybe<SortOrder>;
  db_lock?: Maybe<SortOrder>;
  debrand_logo?: Maybe<SortOrder>;
  default_inv_template_id?: Maybe<SortOrder>;
  default_search?: Maybe<SortOrder>;
  demo_mode?: Maybe<SortOrder>;
  details_id?: Maybe<SortOrder>;
  diagnosis_codes_type?: Maybe<SortOrder>;
  disable_prescriptions?: Maybe<SortOrder>;
  employee_clock_track?: Maybe<SortOrder>;
  employee_term_plural?: Maybe<SortOrder>;
  employee_term_singular?: Maybe<SortOrder>;
  employees?: Maybe<SortOrder>;
  enable_2fa?: Maybe<SortOrder>;
  enable_ad?: Maybe<SortOrder>;
  enable_ad_code?: Maybe<SortOrder>;
  enable_ip_filter?: Maybe<SortOrder>;
  enable_sens_data?: Maybe<SortOrder>;
  facebook_page?: Maybe<SortOrder>;
  fax?: Maybe<SortOrder>;
  flag_enabled?: Maybe<SortOrder>;
  footer_logo?: Maybe<SortOrder>;
  head_office?: Maybe<SortOrder>;
  header_logo?: Maybe<SortOrder>;
  healthcode_live?: Maybe<SortOrder>;
  industry_sector?: Maybe<SortOrder>;
  info_email?: Maybe<SortOrder>;
  is_surgical?: Maybe<SortOrder>;
  language?: Maybe<SortOrder>;
  legacy_consultations?: Maybe<SortOrder>;
  linkedin_page?: Maybe<SortOrder>;
  lock_export?: Maybe<SortOrder>;
  lock_prescription?: Maybe<SortOrder>;
  logo?: Maybe<SortOrder>;
  medical_approvals?: Maybe<SortOrder>;
  merge_bookings_tabs?: Maybe<SortOrder>;
  new_reports?: Maybe<SortOrder>;
  phone?: Maybe<SortOrder>;
  phone_prefix?: Maybe<SortOrder>;
  post_code?: Maybe<SortOrder>;
  preferences_email?: Maybe<SortOrder>;
  preferences_newsletters?: Maybe<SortOrder>;
  preferences_post?: Maybe<SortOrder>;
  preferences_sms?: Maybe<SortOrder>;
  private_treatment_notes?: Maybe<SortOrder>;
  rota_version?: Maybe<SortOrder>;
  secure_medical_forms?: Maybe<SortOrder>;
  sensitive_data_question?: Maybe<SortOrder>;
  show_report_logo?: Maybe<SortOrder>;
  slug?: Maybe<SortOrder>;
  sms_active?: Maybe<SortOrder>;
  stock_manager?: Maybe<SortOrder>;
  street?: Maybe<SortOrder>;
  subscription?: Maybe<SortOrder>;
  tax_name?: Maybe<SortOrder>;
  timezone_id?: Maybe<SortOrder>;
  twitter_page?: Maybe<SortOrder>;
  use_google_auth?: Maybe<SortOrder>;
  vat?: Maybe<SortOrder>;
  website?: Maybe<SortOrder>;
  week_start_day?: Maybe<SortOrder>;
  youtube_page?: Maybe<SortOrder>;
};

export type CompanyDetailsScalarWhereInput = {
  AND?: Maybe<Array<Maybe<CompanyDetailsScalarWhereInput>>>;
  NOT?: Maybe<Array<Maybe<CompanyDetailsScalarWhereInput>>>;
  OR?: Maybe<Array<Maybe<CompanyDetailsScalarWhereInput>>>;
  accept_insurance?: Maybe<IntFilter>;
  admin?: Maybe<IntFilter>;
  append_client_pref?: Maybe<IntFilter>;
  auto_sms?: Maybe<IntFilter>;
  calendar_version?: Maybe<StringFilter>;
  capital_surname?: Maybe<BoolFilter>;
  city?: Maybe<StringFilter>;
  class_teacher_singular?: Maybe<StringFilter>;
  class_term_plural?: Maybe<StringFilter>;
  class_term_singular?: Maybe<StringFilter>;
  company_id?: Maybe<IntFilter>;
  company_name?: Maybe<StringFilter>;
  company_notes?: Maybe<StringFilter>;
  completed_setup?: Maybe<BoolFilter>;
  contact_term_plural?: Maybe<StringFilter>;
  contact_term_singular?: Maybe<StringFilter>;
  converted_value?: Maybe<FloatFilter>;
  country?: Maybe<StringFilter>;
  county?: Maybe<StringFilter>;
  currency?: Maybe<StringFilter>;
  cycles_display?: Maybe<IntFilter>;
  date_format?: Maybe<StringFilter>;
  db_lock?: Maybe<IntFilter>;
  debrand_logo?: Maybe<IntFilter>;
  default_inv_template_id?: Maybe<IntFilter>;
  default_search?: Maybe<StringFilter>;
  demo_mode?: Maybe<IntFilter>;
  details_id?: Maybe<IntFilter>;
  diagnosis_codes_type?: Maybe<StringFilter>;
  disable_prescriptions?: Maybe<IntFilter>;
  employee_clock_track?: Maybe<BoolFilter>;
  employee_term_plural?: Maybe<StringFilter>;
  employee_term_singular?: Maybe<StringFilter>;
  employees?: Maybe<StringFilter>;
  enable_2fa?: Maybe<IntFilter>;
  enable_ad?: Maybe<IntFilter>;
  enable_ad_code?: Maybe<StringNullableFilter>;
  enable_ip_filter?: Maybe<IntNullableFilter>;
  enable_sens_data?: Maybe<IntFilter>;
  facebook_page?: Maybe<StringFilter>;
  fax?: Maybe<StringFilter>;
  flag_enabled?: Maybe<IntFilter>;
  footer_logo?: Maybe<StringFilter>;
  head_office?: Maybe<IntFilter>;
  header_logo?: Maybe<StringFilter>;
  healthcode_live?: Maybe<BoolNullableFilter>;
  industry_sector?: Maybe<StringFilter>;
  info_email?: Maybe<StringFilter>;
  is_surgical?: Maybe<IntFilter>;
  language?: Maybe<StringFilter>;
  legacy_consultations?: Maybe<BoolFilter>;
  linkedin_page?: Maybe<StringFilter>;
  lock_export?: Maybe<IntFilter>;
  lock_prescription?: Maybe<IntFilter>;
  logo?: Maybe<StringFilter>;
  medical_approvals?: Maybe<IntFilter>;
  merge_bookings_tabs?: Maybe<BoolFilter>;
  new_reports?: Maybe<IntFilter>;
  phone?: Maybe<StringFilter>;
  phone_prefix?: Maybe<IntFilter>;
  post_code?: Maybe<StringFilter>;
  preferences_email?: Maybe<IntFilter>;
  preferences_newsletters?: Maybe<IntFilter>;
  preferences_post?: Maybe<IntFilter>;
  preferences_sms?: Maybe<IntFilter>;
  private_treatment_notes?: Maybe<IntFilter>;
  rota_version?: Maybe<StringFilter>;
  secure_medical_forms?: Maybe<IntFilter>;
  sensitive_data_question?: Maybe<IntFilter>;
  show_report_logo?: Maybe<BoolFilter>;
  slug?: Maybe<StringNullableFilter>;
  sms_active?: Maybe<IntFilter>;
  stock_manager?: Maybe<StringFilter>;
  street?: Maybe<StringFilter>;
  subscription?: Maybe<StringFilter>;
  tax_name?: Maybe<Enumcompany_Details_Tax_NameFilter>;
  timezone_id?: Maybe<IntFilter>;
  twitter_page?: Maybe<StringFilter>;
  use_google_auth?: Maybe<BoolFilter>;
  vat?: Maybe<StringFilter>;
  website?: Maybe<StringFilter>;
  week_start_day?: Maybe<StringFilter>;
  youtube_page?: Maybe<StringFilter>;
};

export type CompanyDetailsUncheckedCreateNestedOneWithoutCompanyInput = {
  connect?: Maybe<CompanyDetailsWhereUniqueInput>;
  connectOrCreate?: Maybe<CompanyDetailsCreateOrConnectWithoutCompanyInput>;
  create?: Maybe<CompanyDetailsUncheckedCreateWithoutCompanyInput>;
};

export type CompanyDetailsUncheckedCreateWithoutCompanyInput = {
  accept_insurance: Scalars['Int'];
  admin: Scalars['Int'];
  append_client_pref: Scalars['Int'];
  auto_sms?: Maybe<Scalars['Int']>;
  calendar_version: Scalars['String'];
  capital_surname?: Maybe<Scalars['Boolean']>;
  city: Scalars['String'];
  class_teacher_singular?: Maybe<Scalars['String']>;
  class_term_plural?: Maybe<Scalars['String']>;
  class_term_singular?: Maybe<Scalars['String']>;
  company_name: Scalars['String'];
  company_notes: Scalars['String'];
  completed_setup?: Maybe<Scalars['Boolean']>;
  contact_term_plural?: Maybe<Scalars['String']>;
  contact_term_singular?: Maybe<Scalars['String']>;
  converted_value: Scalars['Float'];
  country?: Maybe<Scalars['String']>;
  county: Scalars['String'];
  currency?: Maybe<Scalars['String']>;
  cycles_display?: Maybe<Scalars['Int']>;
  date_format?: Maybe<Scalars['String']>;
  db_lock: Scalars['Int'];
  debrand_logo: Scalars['Int'];
  default_inv_template_id: Scalars['Int'];
  default_search?: Maybe<Scalars['String']>;
  demo_mode: Scalars['Int'];
  details_id?: Maybe<Scalars['Int']>;
  diagnosis_codes_type?: Maybe<Scalars['String']>;
  disable_prescriptions: Scalars['Int'];
  employee_clock_track?: Maybe<Scalars['Boolean']>;
  employee_term_plural?: Maybe<Scalars['String']>;
  employee_term_singular?: Maybe<Scalars['String']>;
  employees: Scalars['String'];
  enable_2fa: Scalars['Int'];
  enable_ad?: Maybe<Scalars['Int']>;
  enable_ad_code?: Maybe<Scalars['String']>;
  enable_ip_filter?: Maybe<Scalars['Int']>;
  enable_sens_data: Scalars['Int'];
  facebook_page: Scalars['String'];
  fax: Scalars['String'];
  flag_enabled?: Maybe<Scalars['Int']>;
  footer_logo: Scalars['String'];
  head_office: Scalars['Int'];
  header_logo: Scalars['String'];
  healthcode_live?: Maybe<Scalars['Boolean']>;
  industry_sector: Scalars['String'];
  info_email: Scalars['String'];
  is_surgical: Scalars['Int'];
  language: Scalars['String'];
  legacy_consultations?: Maybe<Scalars['Boolean']>;
  linkedin_page: Scalars['String'];
  lock_export: Scalars['Int'];
  lock_prescription: Scalars['Int'];
  logo: Scalars['String'];
  medical_approvals: Scalars['Int'];
  merge_bookings_tabs?: Maybe<Scalars['Boolean']>;
  new_reports: Scalars['Int'];
  phone: Scalars['String'];
  phone_prefix: Scalars['Int'];
  post_code: Scalars['String'];
  preferences_email?: Maybe<Scalars['Int']>;
  preferences_newsletters?: Maybe<Scalars['Int']>;
  preferences_post?: Maybe<Scalars['Int']>;
  preferences_sms?: Maybe<Scalars['Int']>;
  private_treatment_notes: Scalars['Int'];
  rota_version: Scalars['String'];
  secure_medical_forms?: Maybe<Scalars['Int']>;
  sensitive_data_question?: Maybe<Scalars['Int']>;
  show_report_logo?: Maybe<Scalars['Boolean']>;
  slug?: Maybe<Scalars['String']>;
  sms_active: Scalars['Int'];
  stock_manager: Scalars['String'];
  street: Scalars['String'];
  subscription: Scalars['String'];
  tax_name?: Maybe<Company_Details_Tax_Name>;
  timezone_id?: Maybe<Scalars['Int']>;
  twitter_page: Scalars['String'];
  use_google_auth?: Maybe<Scalars['Boolean']>;
  vat: Scalars['String'];
  website: Scalars['String'];
  week_start_day?: Maybe<Scalars['String']>;
  youtube_page: Scalars['String'];
};

export type CompanyDetailsUncheckedCreateWithoutTimezoneInput = {
  accept_insurance: Scalars['Int'];
  admin: Scalars['Int'];
  append_client_pref: Scalars['Int'];
  auto_sms?: Maybe<Scalars['Int']>;
  calendar_version: Scalars['String'];
  capital_surname?: Maybe<Scalars['Boolean']>;
  city: Scalars['String'];
  class_teacher_singular?: Maybe<Scalars['String']>;
  class_term_plural?: Maybe<Scalars['String']>;
  class_term_singular?: Maybe<Scalars['String']>;
  company_id: Scalars['Int'];
  company_name: Scalars['String'];
  company_notes: Scalars['String'];
  completed_setup?: Maybe<Scalars['Boolean']>;
  contact_term_plural?: Maybe<Scalars['String']>;
  contact_term_singular?: Maybe<Scalars['String']>;
  converted_value: Scalars['Float'];
  country?: Maybe<Scalars['String']>;
  county: Scalars['String'];
  currency?: Maybe<Scalars['String']>;
  cycles_display?: Maybe<Scalars['Int']>;
  date_format?: Maybe<Scalars['String']>;
  db_lock: Scalars['Int'];
  debrand_logo: Scalars['Int'];
  default_inv_template_id: Scalars['Int'];
  default_search?: Maybe<Scalars['String']>;
  demo_mode: Scalars['Int'];
  details_id?: Maybe<Scalars['Int']>;
  diagnosis_codes_type?: Maybe<Scalars['String']>;
  disable_prescriptions: Scalars['Int'];
  employee_clock_track?: Maybe<Scalars['Boolean']>;
  employee_term_plural?: Maybe<Scalars['String']>;
  employee_term_singular?: Maybe<Scalars['String']>;
  employees: Scalars['String'];
  enable_2fa: Scalars['Int'];
  enable_ad?: Maybe<Scalars['Int']>;
  enable_ad_code?: Maybe<Scalars['String']>;
  enable_ip_filter?: Maybe<Scalars['Int']>;
  enable_sens_data: Scalars['Int'];
  facebook_page: Scalars['String'];
  fax: Scalars['String'];
  flag_enabled?: Maybe<Scalars['Int']>;
  footer_logo: Scalars['String'];
  head_office: Scalars['Int'];
  header_logo: Scalars['String'];
  healthcode_live?: Maybe<Scalars['Boolean']>;
  industry_sector: Scalars['String'];
  info_email: Scalars['String'];
  is_surgical: Scalars['Int'];
  language: Scalars['String'];
  legacy_consultations?: Maybe<Scalars['Boolean']>;
  linkedin_page: Scalars['String'];
  lock_export: Scalars['Int'];
  lock_prescription: Scalars['Int'];
  logo: Scalars['String'];
  medical_approvals: Scalars['Int'];
  merge_bookings_tabs?: Maybe<Scalars['Boolean']>;
  new_reports: Scalars['Int'];
  phone: Scalars['String'];
  phone_prefix: Scalars['Int'];
  post_code: Scalars['String'];
  preferences_email?: Maybe<Scalars['Int']>;
  preferences_newsletters?: Maybe<Scalars['Int']>;
  preferences_post?: Maybe<Scalars['Int']>;
  preferences_sms?: Maybe<Scalars['Int']>;
  private_treatment_notes: Scalars['Int'];
  rota_version: Scalars['String'];
  secure_medical_forms?: Maybe<Scalars['Int']>;
  sensitive_data_question?: Maybe<Scalars['Int']>;
  show_report_logo?: Maybe<Scalars['Boolean']>;
  slug?: Maybe<Scalars['String']>;
  sms_active: Scalars['Int'];
  stock_manager: Scalars['String'];
  street: Scalars['String'];
  subscription: Scalars['String'];
  tax_name?: Maybe<Company_Details_Tax_Name>;
  twitter_page: Scalars['String'];
  use_google_auth?: Maybe<Scalars['Boolean']>;
  vat: Scalars['String'];
  website: Scalars['String'];
  week_start_day?: Maybe<Scalars['String']>;
  youtube_page: Scalars['String'];
};

export type CompanyDetailsUncheckedUpdateManyWithoutCompanyDetailsInput = {
  accept_insurance?: Maybe<IntFieldUpdateOperationsInput>;
  admin?: Maybe<IntFieldUpdateOperationsInput>;
  append_client_pref?: Maybe<IntFieldUpdateOperationsInput>;
  auto_sms?: Maybe<IntFieldUpdateOperationsInput>;
  calendar_version?: Maybe<StringFieldUpdateOperationsInput>;
  capital_surname?: Maybe<BoolFieldUpdateOperationsInput>;
  city?: Maybe<StringFieldUpdateOperationsInput>;
  class_teacher_singular?: Maybe<StringFieldUpdateOperationsInput>;
  class_term_plural?: Maybe<StringFieldUpdateOperationsInput>;
  class_term_singular?: Maybe<StringFieldUpdateOperationsInput>;
  company_id?: Maybe<IntFieldUpdateOperationsInput>;
  company_name?: Maybe<StringFieldUpdateOperationsInput>;
  company_notes?: Maybe<StringFieldUpdateOperationsInput>;
  completed_setup?: Maybe<BoolFieldUpdateOperationsInput>;
  contact_term_plural?: Maybe<StringFieldUpdateOperationsInput>;
  contact_term_singular?: Maybe<StringFieldUpdateOperationsInput>;
  converted_value?: Maybe<FloatFieldUpdateOperationsInput>;
  country?: Maybe<StringFieldUpdateOperationsInput>;
  county?: Maybe<StringFieldUpdateOperationsInput>;
  currency?: Maybe<StringFieldUpdateOperationsInput>;
  cycles_display?: Maybe<IntFieldUpdateOperationsInput>;
  date_format?: Maybe<StringFieldUpdateOperationsInput>;
  db_lock?: Maybe<IntFieldUpdateOperationsInput>;
  debrand_logo?: Maybe<IntFieldUpdateOperationsInput>;
  default_inv_template_id?: Maybe<IntFieldUpdateOperationsInput>;
  default_search?: Maybe<StringFieldUpdateOperationsInput>;
  demo_mode?: Maybe<IntFieldUpdateOperationsInput>;
  details_id?: Maybe<IntFieldUpdateOperationsInput>;
  diagnosis_codes_type?: Maybe<StringFieldUpdateOperationsInput>;
  disable_prescriptions?: Maybe<IntFieldUpdateOperationsInput>;
  employee_clock_track?: Maybe<BoolFieldUpdateOperationsInput>;
  employee_term_plural?: Maybe<StringFieldUpdateOperationsInput>;
  employee_term_singular?: Maybe<StringFieldUpdateOperationsInput>;
  employees?: Maybe<StringFieldUpdateOperationsInput>;
  enable_2fa?: Maybe<IntFieldUpdateOperationsInput>;
  enable_ad?: Maybe<IntFieldUpdateOperationsInput>;
  enable_ad_code?: Maybe<NullableStringFieldUpdateOperationsInput>;
  enable_ip_filter?: Maybe<NullableIntFieldUpdateOperationsInput>;
  enable_sens_data?: Maybe<IntFieldUpdateOperationsInput>;
  facebook_page?: Maybe<StringFieldUpdateOperationsInput>;
  fax?: Maybe<StringFieldUpdateOperationsInput>;
  flag_enabled?: Maybe<IntFieldUpdateOperationsInput>;
  footer_logo?: Maybe<StringFieldUpdateOperationsInput>;
  head_office?: Maybe<IntFieldUpdateOperationsInput>;
  header_logo?: Maybe<StringFieldUpdateOperationsInput>;
  healthcode_live?: Maybe<NullableBoolFieldUpdateOperationsInput>;
  industry_sector?: Maybe<StringFieldUpdateOperationsInput>;
  info_email?: Maybe<StringFieldUpdateOperationsInput>;
  is_surgical?: Maybe<IntFieldUpdateOperationsInput>;
  language?: Maybe<StringFieldUpdateOperationsInput>;
  legacy_consultations?: Maybe<BoolFieldUpdateOperationsInput>;
  linkedin_page?: Maybe<StringFieldUpdateOperationsInput>;
  lock_export?: Maybe<IntFieldUpdateOperationsInput>;
  lock_prescription?: Maybe<IntFieldUpdateOperationsInput>;
  logo?: Maybe<StringFieldUpdateOperationsInput>;
  medical_approvals?: Maybe<IntFieldUpdateOperationsInput>;
  merge_bookings_tabs?: Maybe<BoolFieldUpdateOperationsInput>;
  new_reports?: Maybe<IntFieldUpdateOperationsInput>;
  phone?: Maybe<StringFieldUpdateOperationsInput>;
  phone_prefix?: Maybe<IntFieldUpdateOperationsInput>;
  post_code?: Maybe<StringFieldUpdateOperationsInput>;
  preferences_email?: Maybe<IntFieldUpdateOperationsInput>;
  preferences_newsletters?: Maybe<IntFieldUpdateOperationsInput>;
  preferences_post?: Maybe<IntFieldUpdateOperationsInput>;
  preferences_sms?: Maybe<IntFieldUpdateOperationsInput>;
  private_treatment_notes?: Maybe<IntFieldUpdateOperationsInput>;
  rota_version?: Maybe<StringFieldUpdateOperationsInput>;
  secure_medical_forms?: Maybe<IntFieldUpdateOperationsInput>;
  sensitive_data_question?: Maybe<IntFieldUpdateOperationsInput>;
  show_report_logo?: Maybe<BoolFieldUpdateOperationsInput>;
  slug?: Maybe<NullableStringFieldUpdateOperationsInput>;
  sms_active?: Maybe<IntFieldUpdateOperationsInput>;
  stock_manager?: Maybe<StringFieldUpdateOperationsInput>;
  street?: Maybe<StringFieldUpdateOperationsInput>;
  subscription?: Maybe<StringFieldUpdateOperationsInput>;
  tax_name?: Maybe<Enumcompany_Details_Tax_NameFieldUpdateOperationsInput>;
  twitter_page?: Maybe<StringFieldUpdateOperationsInput>;
  use_google_auth?: Maybe<BoolFieldUpdateOperationsInput>;
  vat?: Maybe<StringFieldUpdateOperationsInput>;
  website?: Maybe<StringFieldUpdateOperationsInput>;
  week_start_day?: Maybe<StringFieldUpdateOperationsInput>;
  youtube_page?: Maybe<StringFieldUpdateOperationsInput>;
};

export type CompanyDetailsUncheckedUpdateOneWithoutCompanyInput = {
  connect?: Maybe<CompanyDetailsWhereUniqueInput>;
  connectOrCreate?: Maybe<CompanyDetailsCreateOrConnectWithoutCompanyInput>;
  create?: Maybe<CompanyDetailsUncheckedCreateWithoutCompanyInput>;
  delete?: Maybe<Scalars['Boolean']>;
  disconnect?: Maybe<Scalars['Boolean']>;
  update?: Maybe<CompanyDetailsUncheckedUpdateWithoutCompanyInput>;
  upsert?: Maybe<CompanyDetailsUpsertWithoutCompanyInput>;
};

export type CompanyDetailsUncheckedUpdateWithoutCompanyInput = {
  accept_insurance?: Maybe<IntFieldUpdateOperationsInput>;
  admin?: Maybe<IntFieldUpdateOperationsInput>;
  append_client_pref?: Maybe<IntFieldUpdateOperationsInput>;
  auto_sms?: Maybe<IntFieldUpdateOperationsInput>;
  calendar_version?: Maybe<StringFieldUpdateOperationsInput>;
  capital_surname?: Maybe<BoolFieldUpdateOperationsInput>;
  city?: Maybe<StringFieldUpdateOperationsInput>;
  class_teacher_singular?: Maybe<StringFieldUpdateOperationsInput>;
  class_term_plural?: Maybe<StringFieldUpdateOperationsInput>;
  class_term_singular?: Maybe<StringFieldUpdateOperationsInput>;
  company_name?: Maybe<StringFieldUpdateOperationsInput>;
  company_notes?: Maybe<StringFieldUpdateOperationsInput>;
  completed_setup?: Maybe<BoolFieldUpdateOperationsInput>;
  contact_term_plural?: Maybe<StringFieldUpdateOperationsInput>;
  contact_term_singular?: Maybe<StringFieldUpdateOperationsInput>;
  converted_value?: Maybe<FloatFieldUpdateOperationsInput>;
  country?: Maybe<StringFieldUpdateOperationsInput>;
  county?: Maybe<StringFieldUpdateOperationsInput>;
  currency?: Maybe<StringFieldUpdateOperationsInput>;
  cycles_display?: Maybe<IntFieldUpdateOperationsInput>;
  date_format?: Maybe<StringFieldUpdateOperationsInput>;
  db_lock?: Maybe<IntFieldUpdateOperationsInput>;
  debrand_logo?: Maybe<IntFieldUpdateOperationsInput>;
  default_inv_template_id?: Maybe<IntFieldUpdateOperationsInput>;
  default_search?: Maybe<StringFieldUpdateOperationsInput>;
  demo_mode?: Maybe<IntFieldUpdateOperationsInput>;
  details_id?: Maybe<IntFieldUpdateOperationsInput>;
  diagnosis_codes_type?: Maybe<StringFieldUpdateOperationsInput>;
  disable_prescriptions?: Maybe<IntFieldUpdateOperationsInput>;
  employee_clock_track?: Maybe<BoolFieldUpdateOperationsInput>;
  employee_term_plural?: Maybe<StringFieldUpdateOperationsInput>;
  employee_term_singular?: Maybe<StringFieldUpdateOperationsInput>;
  employees?: Maybe<StringFieldUpdateOperationsInput>;
  enable_2fa?: Maybe<IntFieldUpdateOperationsInput>;
  enable_ad?: Maybe<IntFieldUpdateOperationsInput>;
  enable_ad_code?: Maybe<NullableStringFieldUpdateOperationsInput>;
  enable_ip_filter?: Maybe<NullableIntFieldUpdateOperationsInput>;
  enable_sens_data?: Maybe<IntFieldUpdateOperationsInput>;
  facebook_page?: Maybe<StringFieldUpdateOperationsInput>;
  fax?: Maybe<StringFieldUpdateOperationsInput>;
  flag_enabled?: Maybe<IntFieldUpdateOperationsInput>;
  footer_logo?: Maybe<StringFieldUpdateOperationsInput>;
  head_office?: Maybe<IntFieldUpdateOperationsInput>;
  header_logo?: Maybe<StringFieldUpdateOperationsInput>;
  healthcode_live?: Maybe<NullableBoolFieldUpdateOperationsInput>;
  industry_sector?: Maybe<StringFieldUpdateOperationsInput>;
  info_email?: Maybe<StringFieldUpdateOperationsInput>;
  is_surgical?: Maybe<IntFieldUpdateOperationsInput>;
  language?: Maybe<StringFieldUpdateOperationsInput>;
  legacy_consultations?: Maybe<BoolFieldUpdateOperationsInput>;
  linkedin_page?: Maybe<StringFieldUpdateOperationsInput>;
  lock_export?: Maybe<IntFieldUpdateOperationsInput>;
  lock_prescription?: Maybe<IntFieldUpdateOperationsInput>;
  logo?: Maybe<StringFieldUpdateOperationsInput>;
  medical_approvals?: Maybe<IntFieldUpdateOperationsInput>;
  merge_bookings_tabs?: Maybe<BoolFieldUpdateOperationsInput>;
  new_reports?: Maybe<IntFieldUpdateOperationsInput>;
  phone?: Maybe<StringFieldUpdateOperationsInput>;
  phone_prefix?: Maybe<IntFieldUpdateOperationsInput>;
  post_code?: Maybe<StringFieldUpdateOperationsInput>;
  preferences_email?: Maybe<IntFieldUpdateOperationsInput>;
  preferences_newsletters?: Maybe<IntFieldUpdateOperationsInput>;
  preferences_post?: Maybe<IntFieldUpdateOperationsInput>;
  preferences_sms?: Maybe<IntFieldUpdateOperationsInput>;
  private_treatment_notes?: Maybe<IntFieldUpdateOperationsInput>;
  rota_version?: Maybe<StringFieldUpdateOperationsInput>;
  secure_medical_forms?: Maybe<IntFieldUpdateOperationsInput>;
  sensitive_data_question?: Maybe<IntFieldUpdateOperationsInput>;
  show_report_logo?: Maybe<BoolFieldUpdateOperationsInput>;
  slug?: Maybe<NullableStringFieldUpdateOperationsInput>;
  sms_active?: Maybe<IntFieldUpdateOperationsInput>;
  stock_manager?: Maybe<StringFieldUpdateOperationsInput>;
  street?: Maybe<StringFieldUpdateOperationsInput>;
  subscription?: Maybe<StringFieldUpdateOperationsInput>;
  tax_name?: Maybe<Enumcompany_Details_Tax_NameFieldUpdateOperationsInput>;
  timezone_id?: Maybe<IntFieldUpdateOperationsInput>;
  twitter_page?: Maybe<StringFieldUpdateOperationsInput>;
  use_google_auth?: Maybe<BoolFieldUpdateOperationsInput>;
  vat?: Maybe<StringFieldUpdateOperationsInput>;
  website?: Maybe<StringFieldUpdateOperationsInput>;
  week_start_day?: Maybe<StringFieldUpdateOperationsInput>;
  youtube_page?: Maybe<StringFieldUpdateOperationsInput>;
};

export type CompanyDetailsUncheckedUpdateWithoutTimezoneInput = {
  accept_insurance?: Maybe<IntFieldUpdateOperationsInput>;
  admin?: Maybe<IntFieldUpdateOperationsInput>;
  append_client_pref?: Maybe<IntFieldUpdateOperationsInput>;
  auto_sms?: Maybe<IntFieldUpdateOperationsInput>;
  calendar_version?: Maybe<StringFieldUpdateOperationsInput>;
  capital_surname?: Maybe<BoolFieldUpdateOperationsInput>;
  city?: Maybe<StringFieldUpdateOperationsInput>;
  class_teacher_singular?: Maybe<StringFieldUpdateOperationsInput>;
  class_term_plural?: Maybe<StringFieldUpdateOperationsInput>;
  class_term_singular?: Maybe<StringFieldUpdateOperationsInput>;
  company_id?: Maybe<IntFieldUpdateOperationsInput>;
  company_name?: Maybe<StringFieldUpdateOperationsInput>;
  company_notes?: Maybe<StringFieldUpdateOperationsInput>;
  completed_setup?: Maybe<BoolFieldUpdateOperationsInput>;
  contact_term_plural?: Maybe<StringFieldUpdateOperationsInput>;
  contact_term_singular?: Maybe<StringFieldUpdateOperationsInput>;
  converted_value?: Maybe<FloatFieldUpdateOperationsInput>;
  country?: Maybe<StringFieldUpdateOperationsInput>;
  county?: Maybe<StringFieldUpdateOperationsInput>;
  currency?: Maybe<StringFieldUpdateOperationsInput>;
  cycles_display?: Maybe<IntFieldUpdateOperationsInput>;
  date_format?: Maybe<StringFieldUpdateOperationsInput>;
  db_lock?: Maybe<IntFieldUpdateOperationsInput>;
  debrand_logo?: Maybe<IntFieldUpdateOperationsInput>;
  default_inv_template_id?: Maybe<IntFieldUpdateOperationsInput>;
  default_search?: Maybe<StringFieldUpdateOperationsInput>;
  demo_mode?: Maybe<IntFieldUpdateOperationsInput>;
  details_id?: Maybe<IntFieldUpdateOperationsInput>;
  diagnosis_codes_type?: Maybe<StringFieldUpdateOperationsInput>;
  disable_prescriptions?: Maybe<IntFieldUpdateOperationsInput>;
  employee_clock_track?: Maybe<BoolFieldUpdateOperationsInput>;
  employee_term_plural?: Maybe<StringFieldUpdateOperationsInput>;
  employee_term_singular?: Maybe<StringFieldUpdateOperationsInput>;
  employees?: Maybe<StringFieldUpdateOperationsInput>;
  enable_2fa?: Maybe<IntFieldUpdateOperationsInput>;
  enable_ad?: Maybe<IntFieldUpdateOperationsInput>;
  enable_ad_code?: Maybe<NullableStringFieldUpdateOperationsInput>;
  enable_ip_filter?: Maybe<NullableIntFieldUpdateOperationsInput>;
  enable_sens_data?: Maybe<IntFieldUpdateOperationsInput>;
  facebook_page?: Maybe<StringFieldUpdateOperationsInput>;
  fax?: Maybe<StringFieldUpdateOperationsInput>;
  flag_enabled?: Maybe<IntFieldUpdateOperationsInput>;
  footer_logo?: Maybe<StringFieldUpdateOperationsInput>;
  head_office?: Maybe<IntFieldUpdateOperationsInput>;
  header_logo?: Maybe<StringFieldUpdateOperationsInput>;
  healthcode_live?: Maybe<NullableBoolFieldUpdateOperationsInput>;
  industry_sector?: Maybe<StringFieldUpdateOperationsInput>;
  info_email?: Maybe<StringFieldUpdateOperationsInput>;
  is_surgical?: Maybe<IntFieldUpdateOperationsInput>;
  language?: Maybe<StringFieldUpdateOperationsInput>;
  legacy_consultations?: Maybe<BoolFieldUpdateOperationsInput>;
  linkedin_page?: Maybe<StringFieldUpdateOperationsInput>;
  lock_export?: Maybe<IntFieldUpdateOperationsInput>;
  lock_prescription?: Maybe<IntFieldUpdateOperationsInput>;
  logo?: Maybe<StringFieldUpdateOperationsInput>;
  medical_approvals?: Maybe<IntFieldUpdateOperationsInput>;
  merge_bookings_tabs?: Maybe<BoolFieldUpdateOperationsInput>;
  new_reports?: Maybe<IntFieldUpdateOperationsInput>;
  phone?: Maybe<StringFieldUpdateOperationsInput>;
  phone_prefix?: Maybe<IntFieldUpdateOperationsInput>;
  post_code?: Maybe<StringFieldUpdateOperationsInput>;
  preferences_email?: Maybe<IntFieldUpdateOperationsInput>;
  preferences_newsletters?: Maybe<IntFieldUpdateOperationsInput>;
  preferences_post?: Maybe<IntFieldUpdateOperationsInput>;
  preferences_sms?: Maybe<IntFieldUpdateOperationsInput>;
  private_treatment_notes?: Maybe<IntFieldUpdateOperationsInput>;
  rota_version?: Maybe<StringFieldUpdateOperationsInput>;
  secure_medical_forms?: Maybe<IntFieldUpdateOperationsInput>;
  sensitive_data_question?: Maybe<IntFieldUpdateOperationsInput>;
  show_report_logo?: Maybe<BoolFieldUpdateOperationsInput>;
  slug?: Maybe<NullableStringFieldUpdateOperationsInput>;
  sms_active?: Maybe<IntFieldUpdateOperationsInput>;
  stock_manager?: Maybe<StringFieldUpdateOperationsInput>;
  street?: Maybe<StringFieldUpdateOperationsInput>;
  subscription?: Maybe<StringFieldUpdateOperationsInput>;
  tax_name?: Maybe<Enumcompany_Details_Tax_NameFieldUpdateOperationsInput>;
  twitter_page?: Maybe<StringFieldUpdateOperationsInput>;
  use_google_auth?: Maybe<BoolFieldUpdateOperationsInput>;
  vat?: Maybe<StringFieldUpdateOperationsInput>;
  website?: Maybe<StringFieldUpdateOperationsInput>;
  week_start_day?: Maybe<StringFieldUpdateOperationsInput>;
  youtube_page?: Maybe<StringFieldUpdateOperationsInput>;
};

export type CompanyDetailsUpdateInput = {
  accept_insurance?: Maybe<IntFieldUpdateOperationsInput>;
  admin?: Maybe<IntFieldUpdateOperationsInput>;
  append_client_pref?: Maybe<IntFieldUpdateOperationsInput>;
  auto_sms?: Maybe<IntFieldUpdateOperationsInput>;
  calendar_version?: Maybe<StringFieldUpdateOperationsInput>;
  capital_surname?: Maybe<BoolFieldUpdateOperationsInput>;
  city?: Maybe<StringFieldUpdateOperationsInput>;
  class_teacher_singular?: Maybe<StringFieldUpdateOperationsInput>;
  class_term_plural?: Maybe<StringFieldUpdateOperationsInput>;
  class_term_singular?: Maybe<StringFieldUpdateOperationsInput>;
  company?: Maybe<CompanyUpdateOneRequiredWithoutDetailsInput>;
  company_name?: Maybe<StringFieldUpdateOperationsInput>;
  company_notes?: Maybe<StringFieldUpdateOperationsInput>;
  completed_setup?: Maybe<BoolFieldUpdateOperationsInput>;
  contact_term_plural?: Maybe<StringFieldUpdateOperationsInput>;
  contact_term_singular?: Maybe<StringFieldUpdateOperationsInput>;
  converted_value?: Maybe<FloatFieldUpdateOperationsInput>;
  country?: Maybe<StringFieldUpdateOperationsInput>;
  county?: Maybe<StringFieldUpdateOperationsInput>;
  currency?: Maybe<StringFieldUpdateOperationsInput>;
  cycles_display?: Maybe<IntFieldUpdateOperationsInput>;
  date_format?: Maybe<StringFieldUpdateOperationsInput>;
  db_lock?: Maybe<IntFieldUpdateOperationsInput>;
  debrand_logo?: Maybe<IntFieldUpdateOperationsInput>;
  default_inv_template_id?: Maybe<IntFieldUpdateOperationsInput>;
  default_search?: Maybe<StringFieldUpdateOperationsInput>;
  demo_mode?: Maybe<IntFieldUpdateOperationsInput>;
  diagnosis_codes_type?: Maybe<StringFieldUpdateOperationsInput>;
  disable_prescriptions?: Maybe<IntFieldUpdateOperationsInput>;
  employee_clock_track?: Maybe<BoolFieldUpdateOperationsInput>;
  employee_term_plural?: Maybe<StringFieldUpdateOperationsInput>;
  employee_term_singular?: Maybe<StringFieldUpdateOperationsInput>;
  employees?: Maybe<StringFieldUpdateOperationsInput>;
  enable_2fa?: Maybe<IntFieldUpdateOperationsInput>;
  enable_ad?: Maybe<IntFieldUpdateOperationsInput>;
  enable_ad_code?: Maybe<NullableStringFieldUpdateOperationsInput>;
  enable_ip_filter?: Maybe<NullableIntFieldUpdateOperationsInput>;
  enable_sens_data?: Maybe<IntFieldUpdateOperationsInput>;
  facebook_page?: Maybe<StringFieldUpdateOperationsInput>;
  fax?: Maybe<StringFieldUpdateOperationsInput>;
  flag_enabled?: Maybe<IntFieldUpdateOperationsInput>;
  footer_logo?: Maybe<StringFieldUpdateOperationsInput>;
  head_office?: Maybe<IntFieldUpdateOperationsInput>;
  header_logo?: Maybe<StringFieldUpdateOperationsInput>;
  healthcode_live?: Maybe<NullableBoolFieldUpdateOperationsInput>;
  industry_sector?: Maybe<StringFieldUpdateOperationsInput>;
  info_email?: Maybe<StringFieldUpdateOperationsInput>;
  is_surgical?: Maybe<IntFieldUpdateOperationsInput>;
  language?: Maybe<StringFieldUpdateOperationsInput>;
  legacy_consultations?: Maybe<BoolFieldUpdateOperationsInput>;
  linkedin_page?: Maybe<StringFieldUpdateOperationsInput>;
  lock_export?: Maybe<IntFieldUpdateOperationsInput>;
  lock_prescription?: Maybe<IntFieldUpdateOperationsInput>;
  logo?: Maybe<StringFieldUpdateOperationsInput>;
  medical_approvals?: Maybe<IntFieldUpdateOperationsInput>;
  merge_bookings_tabs?: Maybe<BoolFieldUpdateOperationsInput>;
  new_reports?: Maybe<IntFieldUpdateOperationsInput>;
  phone?: Maybe<StringFieldUpdateOperationsInput>;
  phone_prefix?: Maybe<IntFieldUpdateOperationsInput>;
  post_code?: Maybe<StringFieldUpdateOperationsInput>;
  preferences_email?: Maybe<IntFieldUpdateOperationsInput>;
  preferences_newsletters?: Maybe<IntFieldUpdateOperationsInput>;
  preferences_post?: Maybe<IntFieldUpdateOperationsInput>;
  preferences_sms?: Maybe<IntFieldUpdateOperationsInput>;
  private_treatment_notes?: Maybe<IntFieldUpdateOperationsInput>;
  rota_version?: Maybe<StringFieldUpdateOperationsInput>;
  secure_medical_forms?: Maybe<IntFieldUpdateOperationsInput>;
  sensitive_data_question?: Maybe<IntFieldUpdateOperationsInput>;
  show_report_logo?: Maybe<BoolFieldUpdateOperationsInput>;
  slug?: Maybe<NullableStringFieldUpdateOperationsInput>;
  sms_active?: Maybe<IntFieldUpdateOperationsInput>;
  stock_manager?: Maybe<StringFieldUpdateOperationsInput>;
  street?: Maybe<StringFieldUpdateOperationsInput>;
  subscription?: Maybe<StringFieldUpdateOperationsInput>;
  tax_name?: Maybe<Enumcompany_Details_Tax_NameFieldUpdateOperationsInput>;
  timezone?: Maybe<TimezoneUpdateOneRequiredWithoutCompanyDetailsInput>;
  twitter_page?: Maybe<StringFieldUpdateOperationsInput>;
  use_google_auth?: Maybe<BoolFieldUpdateOperationsInput>;
  vat?: Maybe<StringFieldUpdateOperationsInput>;
  website?: Maybe<StringFieldUpdateOperationsInput>;
  week_start_day?: Maybe<StringFieldUpdateOperationsInput>;
  youtube_page?: Maybe<StringFieldUpdateOperationsInput>;
};

export type CompanyDetailsUpdateManyMutationInput = {
  accept_insurance?: Maybe<IntFieldUpdateOperationsInput>;
  admin?: Maybe<IntFieldUpdateOperationsInput>;
  append_client_pref?: Maybe<IntFieldUpdateOperationsInput>;
  auto_sms?: Maybe<IntFieldUpdateOperationsInput>;
  calendar_version?: Maybe<StringFieldUpdateOperationsInput>;
  capital_surname?: Maybe<BoolFieldUpdateOperationsInput>;
  city?: Maybe<StringFieldUpdateOperationsInput>;
  class_teacher_singular?: Maybe<StringFieldUpdateOperationsInput>;
  class_term_plural?: Maybe<StringFieldUpdateOperationsInput>;
  class_term_singular?: Maybe<StringFieldUpdateOperationsInput>;
  company_name?: Maybe<StringFieldUpdateOperationsInput>;
  company_notes?: Maybe<StringFieldUpdateOperationsInput>;
  completed_setup?: Maybe<BoolFieldUpdateOperationsInput>;
  contact_term_plural?: Maybe<StringFieldUpdateOperationsInput>;
  contact_term_singular?: Maybe<StringFieldUpdateOperationsInput>;
  converted_value?: Maybe<FloatFieldUpdateOperationsInput>;
  country?: Maybe<StringFieldUpdateOperationsInput>;
  county?: Maybe<StringFieldUpdateOperationsInput>;
  currency?: Maybe<StringFieldUpdateOperationsInput>;
  cycles_display?: Maybe<IntFieldUpdateOperationsInput>;
  date_format?: Maybe<StringFieldUpdateOperationsInput>;
  db_lock?: Maybe<IntFieldUpdateOperationsInput>;
  debrand_logo?: Maybe<IntFieldUpdateOperationsInput>;
  default_inv_template_id?: Maybe<IntFieldUpdateOperationsInput>;
  default_search?: Maybe<StringFieldUpdateOperationsInput>;
  demo_mode?: Maybe<IntFieldUpdateOperationsInput>;
  diagnosis_codes_type?: Maybe<StringFieldUpdateOperationsInput>;
  disable_prescriptions?: Maybe<IntFieldUpdateOperationsInput>;
  employee_clock_track?: Maybe<BoolFieldUpdateOperationsInput>;
  employee_term_plural?: Maybe<StringFieldUpdateOperationsInput>;
  employee_term_singular?: Maybe<StringFieldUpdateOperationsInput>;
  employees?: Maybe<StringFieldUpdateOperationsInput>;
  enable_2fa?: Maybe<IntFieldUpdateOperationsInput>;
  enable_ad?: Maybe<IntFieldUpdateOperationsInput>;
  enable_ad_code?: Maybe<NullableStringFieldUpdateOperationsInput>;
  enable_ip_filter?: Maybe<NullableIntFieldUpdateOperationsInput>;
  enable_sens_data?: Maybe<IntFieldUpdateOperationsInput>;
  facebook_page?: Maybe<StringFieldUpdateOperationsInput>;
  fax?: Maybe<StringFieldUpdateOperationsInput>;
  flag_enabled?: Maybe<IntFieldUpdateOperationsInput>;
  footer_logo?: Maybe<StringFieldUpdateOperationsInput>;
  head_office?: Maybe<IntFieldUpdateOperationsInput>;
  header_logo?: Maybe<StringFieldUpdateOperationsInput>;
  healthcode_live?: Maybe<NullableBoolFieldUpdateOperationsInput>;
  industry_sector?: Maybe<StringFieldUpdateOperationsInput>;
  info_email?: Maybe<StringFieldUpdateOperationsInput>;
  is_surgical?: Maybe<IntFieldUpdateOperationsInput>;
  language?: Maybe<StringFieldUpdateOperationsInput>;
  legacy_consultations?: Maybe<BoolFieldUpdateOperationsInput>;
  linkedin_page?: Maybe<StringFieldUpdateOperationsInput>;
  lock_export?: Maybe<IntFieldUpdateOperationsInput>;
  lock_prescription?: Maybe<IntFieldUpdateOperationsInput>;
  logo?: Maybe<StringFieldUpdateOperationsInput>;
  medical_approvals?: Maybe<IntFieldUpdateOperationsInput>;
  merge_bookings_tabs?: Maybe<BoolFieldUpdateOperationsInput>;
  new_reports?: Maybe<IntFieldUpdateOperationsInput>;
  phone?: Maybe<StringFieldUpdateOperationsInput>;
  phone_prefix?: Maybe<IntFieldUpdateOperationsInput>;
  post_code?: Maybe<StringFieldUpdateOperationsInput>;
  preferences_email?: Maybe<IntFieldUpdateOperationsInput>;
  preferences_newsletters?: Maybe<IntFieldUpdateOperationsInput>;
  preferences_post?: Maybe<IntFieldUpdateOperationsInput>;
  preferences_sms?: Maybe<IntFieldUpdateOperationsInput>;
  private_treatment_notes?: Maybe<IntFieldUpdateOperationsInput>;
  rota_version?: Maybe<StringFieldUpdateOperationsInput>;
  secure_medical_forms?: Maybe<IntFieldUpdateOperationsInput>;
  sensitive_data_question?: Maybe<IntFieldUpdateOperationsInput>;
  show_report_logo?: Maybe<BoolFieldUpdateOperationsInput>;
  slug?: Maybe<NullableStringFieldUpdateOperationsInput>;
  sms_active?: Maybe<IntFieldUpdateOperationsInput>;
  stock_manager?: Maybe<StringFieldUpdateOperationsInput>;
  street?: Maybe<StringFieldUpdateOperationsInput>;
  subscription?: Maybe<StringFieldUpdateOperationsInput>;
  tax_name?: Maybe<Enumcompany_Details_Tax_NameFieldUpdateOperationsInput>;
  twitter_page?: Maybe<StringFieldUpdateOperationsInput>;
  use_google_auth?: Maybe<BoolFieldUpdateOperationsInput>;
  vat?: Maybe<StringFieldUpdateOperationsInput>;
  website?: Maybe<StringFieldUpdateOperationsInput>;
  week_start_day?: Maybe<StringFieldUpdateOperationsInput>;
  youtube_page?: Maybe<StringFieldUpdateOperationsInput>;
};

export type CompanyDetailsUpdateManyWithWhereWithoutTimezoneInput = {
  data: CompanyDetailsUncheckedUpdateManyWithoutCompanyDetailsInput;
  where: CompanyDetailsScalarWhereInput;
};

export type CompanyDetailsUpdateManyWithoutTimezoneInput = {
  connect?: Maybe<Array<Maybe<CompanyDetailsWhereUniqueInput>>>;
  connectOrCreate?: Maybe<Array<Maybe<CompanyDetailsCreateOrConnectWithoutTimezoneInput>>>;
  create?: Maybe<Array<Maybe<CompanyDetailsCreateWithoutTimezoneInput>>>;
  delete?: Maybe<Array<Maybe<CompanyDetailsWhereUniqueInput>>>;
  deleteMany?: Maybe<Array<Maybe<CompanyDetailsScalarWhereInput>>>;
  disconnect?: Maybe<Array<Maybe<CompanyDetailsWhereUniqueInput>>>;
  set?: Maybe<Array<Maybe<CompanyDetailsWhereUniqueInput>>>;
  update?: Maybe<Array<Maybe<CompanyDetailsUpdateWithWhereUniqueWithoutTimezoneInput>>>;
  updateMany?: Maybe<Array<Maybe<CompanyDetailsUpdateManyWithWhereWithoutTimezoneInput>>>;
  upsert?: Maybe<Array<Maybe<CompanyDetailsUpsertWithWhereUniqueWithoutTimezoneInput>>>;
};

export type CompanyDetailsUpdateOneWithoutCompanyInput = {
  connect?: Maybe<CompanyDetailsWhereUniqueInput>;
  connectOrCreate?: Maybe<CompanyDetailsCreateOrConnectWithoutCompanyInput>;
  create?: Maybe<CompanyDetailsUncheckedCreateWithoutCompanyInput>;
  delete?: Maybe<Scalars['Boolean']>;
  disconnect?: Maybe<Scalars['Boolean']>;
  update?: Maybe<CompanyDetailsUncheckedUpdateWithoutCompanyInput>;
  upsert?: Maybe<CompanyDetailsUpsertWithoutCompanyInput>;
};

export type CompanyDetailsUpdateWithWhereUniqueWithoutTimezoneInput = {
  data: CompanyDetailsUncheckedUpdateWithoutTimezoneInput;
  where: CompanyDetailsWhereUniqueInput;
};

export type CompanyDetailsUpsertWithWhereUniqueWithoutTimezoneInput = {
  create: CompanyDetailsUncheckedCreateWithoutTimezoneInput;
  update: CompanyDetailsUncheckedUpdateWithoutTimezoneInput;
  where: CompanyDetailsWhereUniqueInput;
};

export type CompanyDetailsUpsertWithoutCompanyInput = {
  create: CompanyDetailsUncheckedCreateWithoutCompanyInput;
  update: CompanyDetailsUncheckedUpdateWithoutCompanyInput;
};

export type CompanyDetailsWhereInput = {
  AND?: Maybe<Array<Maybe<CompanyDetailsWhereInput>>>;
  NOT?: Maybe<Array<Maybe<CompanyDetailsWhereInput>>>;
  OR?: Maybe<Array<Maybe<CompanyDetailsWhereInput>>>;
  accept_insurance?: Maybe<IntFilter>;
  admin?: Maybe<IntFilter>;
  append_client_pref?: Maybe<IntFilter>;
  auto_sms?: Maybe<IntFilter>;
  calendar_version?: Maybe<StringFilter>;
  capital_surname?: Maybe<BoolFilter>;
  city?: Maybe<StringFilter>;
  class_teacher_singular?: Maybe<StringFilter>;
  class_term_plural?: Maybe<StringFilter>;
  class_term_singular?: Maybe<StringFilter>;
  company?: Maybe<CompanyWhereInput>;
  company_id?: Maybe<IntFilter>;
  company_name?: Maybe<StringFilter>;
  company_notes?: Maybe<StringFilter>;
  completed_setup?: Maybe<BoolFilter>;
  contact_term_plural?: Maybe<StringFilter>;
  contact_term_singular?: Maybe<StringFilter>;
  converted_value?: Maybe<FloatFilter>;
  country?: Maybe<StringFilter>;
  county?: Maybe<StringFilter>;
  currency?: Maybe<StringFilter>;
  cycles_display?: Maybe<IntFilter>;
  date_format?: Maybe<StringFilter>;
  db_lock?: Maybe<IntFilter>;
  debrand_logo?: Maybe<IntFilter>;
  default_inv_template_id?: Maybe<IntFilter>;
  default_search?: Maybe<StringFilter>;
  demo_mode?: Maybe<IntFilter>;
  details_id?: Maybe<IntFilter>;
  diagnosis_codes_type?: Maybe<StringFilter>;
  disable_prescriptions?: Maybe<IntFilter>;
  employee_clock_track?: Maybe<BoolFilter>;
  employee_term_plural?: Maybe<StringFilter>;
  employee_term_singular?: Maybe<StringFilter>;
  employees?: Maybe<StringFilter>;
  enable_2fa?: Maybe<IntFilter>;
  enable_ad?: Maybe<IntFilter>;
  enable_ad_code?: Maybe<StringNullableFilter>;
  enable_ip_filter?: Maybe<IntNullableFilter>;
  enable_sens_data?: Maybe<IntFilter>;
  facebook_page?: Maybe<StringFilter>;
  fax?: Maybe<StringFilter>;
  flag_enabled?: Maybe<IntFilter>;
  footer_logo?: Maybe<StringFilter>;
  head_office?: Maybe<IntFilter>;
  header_logo?: Maybe<StringFilter>;
  healthcode_live?: Maybe<BoolNullableFilter>;
  industry_sector?: Maybe<StringFilter>;
  info_email?: Maybe<StringFilter>;
  is_surgical?: Maybe<IntFilter>;
  language?: Maybe<StringFilter>;
  legacy_consultations?: Maybe<BoolFilter>;
  linkedin_page?: Maybe<StringFilter>;
  lock_export?: Maybe<IntFilter>;
  lock_prescription?: Maybe<IntFilter>;
  logo?: Maybe<StringFilter>;
  medical_approvals?: Maybe<IntFilter>;
  merge_bookings_tabs?: Maybe<BoolFilter>;
  new_reports?: Maybe<IntFilter>;
  phone?: Maybe<StringFilter>;
  phone_prefix?: Maybe<IntFilter>;
  post_code?: Maybe<StringFilter>;
  preferences_email?: Maybe<IntFilter>;
  preferences_newsletters?: Maybe<IntFilter>;
  preferences_post?: Maybe<IntFilter>;
  preferences_sms?: Maybe<IntFilter>;
  private_treatment_notes?: Maybe<IntFilter>;
  rota_version?: Maybe<StringFilter>;
  secure_medical_forms?: Maybe<IntFilter>;
  sensitive_data_question?: Maybe<IntFilter>;
  show_report_logo?: Maybe<BoolFilter>;
  slug?: Maybe<StringNullableFilter>;
  sms_active?: Maybe<IntFilter>;
  stock_manager?: Maybe<StringFilter>;
  street?: Maybe<StringFilter>;
  subscription?: Maybe<StringFilter>;
  tax_name?: Maybe<Enumcompany_Details_Tax_NameFilter>;
  timezone?: Maybe<TimezoneWhereInput>;
  timezone_id?: Maybe<IntFilter>;
  twitter_page?: Maybe<StringFilter>;
  use_google_auth?: Maybe<BoolFilter>;
  vat?: Maybe<StringFilter>;
  website?: Maybe<StringFilter>;
  week_start_day?: Maybe<StringFilter>;
  youtube_page?: Maybe<StringFilter>;
};

export type CompanyDetailsWhereUniqueInput = {
  details_id?: Maybe<Scalars['Int']>;
  slug?: Maybe<Scalars['String']>;
};

export type CompanyOrderByInput = {
  admin?: Maybe<SortOrder>;
  creation_date?: Maybe<SortOrder>;
  cron_enabled?: Maybe<SortOrder>;
  digit8?: Maybe<SortOrder>;
  id?: Maybe<SortOrder>;
  image?: Maybe<SortOrder>;
  remote_connect?: Maybe<SortOrder>;
  remote_url?: Maybe<SortOrder>;
  slug?: Maybe<SortOrder>;
  user?: Maybe<SortOrder>;
};

export type CompanySubscription = {
  __typename?: 'CompanySubscription';
  account_live?: Maybe<Scalars['Int']>;
  active?: Maybe<Scalars['Int']>;
  activity_logs?: Maybe<Scalars['Int']>;
  advanced_marketing_addon?: Maybe<Scalars['Int']>;
  am_group?: Maybe<Scalars['String']>;
  am_start_date?: Maybe<Scalars['DateTime']>;
  bill_cycle?: Maybe<Scalars['DateTime']>;
  code?: Maybe<Scalars['String']>;
  commission_rate?: Maybe<Scalars['Float']>;
  company?: Maybe<Company>;
  company_id?: Maybe<Scalars['Int']>;
  complete_account?: Maybe<Scalars['Int']>;
  complete_notes?: Maybe<Scalars['String']>;
  demo_account?: Maybe<Scalars['Int']>;
  details_status?: Maybe<Scalars['Int']>;
  disable_sms?: Maybe<Scalars['Int']>;
  discount?: Maybe<Scalars['Float']>;
  enterprise_fee?: Maybe<Scalars['Float']>;
  enterprise_user_cost?: Maybe<Scalars['Float']>;
  exclude_reports?: Maybe<Scalars['Int']>;
  free_months?: Maybe<Scalars['Int']>;
  free_users?: Maybe<Scalars['Int']>;
  gc_amount?: Maybe<Scalars['Float']>;
  gc_customer_id?: Maybe<Scalars['String']>;
  gc_email?: Maybe<Scalars['String']>;
  gc_enterprise_plan_id?: Maybe<Scalars['String']>;
  gc_plan_id?: Maybe<Scalars['String']>;
  gc_support_plan_id?: Maybe<Scalars['String']>;
  hide_in_comps?: Maybe<Scalars['Boolean']>;
  is_referral?: Maybe<Scalars['Int']>;
  leave_alert?: Maybe<Scalars['Boolean']>;
  license_expiry?: Maybe<Scalars['DateTime']>;
  license_id?: Maybe<Scalars['Int']>;
  license_type?: Maybe<Scalars['Int']>;
  live_server?: Maybe<Scalars['String']>;
  low_credit_amount?: Maybe<Scalars['Int']>;
  low_sms_action?: Maybe<Scalars['Int']>;
  max_user_count?: Maybe<Scalars['Int']>;
  multiple_locations?: Maybe<Scalars['Int']>;
  onboarder_id?: Maybe<Scalars['Int']>;
  order_sheet?: Maybe<Scalars['Int']>;
  pabau_score?: Maybe<Scalars['Int']>;
  partner_id?: Maybe<Scalars['String']>;
  payment_bounces?: Maybe<Scalars['Int']>;
  payment_id?: Maybe<Scalars['String']>;
  phone_support?: Maybe<Scalars['Int']>;
  previous_system?: Maybe<Scalars['String']>;
  price_range?: Maybe<Scalars['String']>;
  renew_interval?: Maybe<Scalars['String']>;
  sandbox_server?: Maybe<Scalars['String']>;
  server_comp_id?: Maybe<Scalars['Int']>;
  setup_stage?: Maybe<Scalars['String']>;
  setup_status?: Maybe<Scalars['Int']>;
  slack_support?: Maybe<Scalars['Int']>;
  sms_rate?: Maybe<Scalars['Float']>;
  storage?: Maybe<Scalars['Float']>;
  stripe_customer_id?: Maybe<Scalars['String']>;
  stripe_fee?: Maybe<Scalars['Float']>;
  stripe_fee_type?: Maybe<Scalars['String']>;
  stripe_subscription_id?: Maybe<Scalars['String']>;
  sub_start_date?: Maybe<Scalars['DateTime']>;
  subscription_fee?: Maybe<Scalars['Float']>;
  subscription_name?: Maybe<Scalars['String']>;
  support_fee?: Maybe<Scalars['Float']>;
  support_plan?: Maybe<Scalars['String']>;
  suspend_sms?: Maybe<Scalars['Int']>;
  suspended_on?: Maybe<Scalars['String']>;
  suspension_reason?: Maybe<Scalars['String']>;
  trainer_id?: Maybe<Scalars['Int']>;
  training_date?: Maybe<Scalars['String']>;
  training_status?: Maybe<Scalars['Int']>;
  trial?: Maybe<Scalars['Boolean']>;
  uid?: Maybe<Scalars['Int']>;
  warning_level?: Maybe<Scalars['String']>;
  whatsapp_support?: Maybe<Scalars['Int']>;
};

export type CompanySubscriptionCreateInput = {
  account_live: Scalars['Int'];
  active: Scalars['Int'];
  activity_logs: Scalars['Int'];
  advanced_marketing_addon: Scalars['Int'];
  am_group: Scalars['String'];
  am_start_date?: Maybe<Scalars['DateTime']>;
  bill_cycle: Scalars['DateTime'];
  code: Scalars['String'];
  commission_rate: Scalars['Float'];
  company: CompanyCreateNestedOneWithoutSubscriptionInput;
  complete_account: Scalars['Int'];
  complete_notes: Scalars['String'];
  demo_account: Scalars['Int'];
  details_status: Scalars['Int'];
  disable_sms: Scalars['Int'];
  discount: Scalars['Float'];
  enterprise_fee: Scalars['Float'];
  enterprise_user_cost?: Maybe<Scalars['Float']>;
  exclude_reports: Scalars['Int'];
  free_months?: Maybe<Scalars['Int']>;
  free_users: Scalars['Int'];
  gc_amount: Scalars['Float'];
  gc_customer_id: Scalars['String'];
  gc_email: Scalars['String'];
  gc_enterprise_plan_id: Scalars['String'];
  gc_plan_id: Scalars['String'];
  gc_support_plan_id: Scalars['String'];
  hide_in_comps?: Maybe<Scalars['Boolean']>;
  is_referral?: Maybe<Scalars['Int']>;
  leave_alert?: Maybe<Scalars['Boolean']>;
  license_expiry: Scalars['DateTime'];
  license_type: Scalars['Int'];
  live_server?: Maybe<Scalars['String']>;
  low_credit_amount?: Maybe<Scalars['Int']>;
  low_sms_action?: Maybe<Scalars['Int']>;
  max_user_count: Scalars['Int'];
  multiple_locations: Scalars['Int'];
  onboarder_id?: Maybe<Scalars['Int']>;
  order_sheet: Scalars['Int'];
  pabau_score: Scalars['Int'];
  partner_id: Scalars['String'];
  payment_bounces: Scalars['Int'];
  payment_id: Scalars['String'];
  phone_support?: Maybe<Scalars['Int']>;
  previous_system: Scalars['String'];
  price_range?: Maybe<Scalars['String']>;
  renew_interval?: Maybe<Scalars['String']>;
  sandbox_server: Scalars['String'];
  server_comp_id: Scalars['Int'];
  setup_stage: Scalars['String'];
  setup_status: Scalars['Int'];
  slack_support?: Maybe<Scalars['Int']>;
  sms_rate?: Maybe<Scalars['Float']>;
  storage?: Maybe<Scalars['Float']>;
  stripe_customer_id: Scalars['String'];
  stripe_fee?: Maybe<Scalars['Float']>;
  stripe_fee_type?: Maybe<Scalars['String']>;
  stripe_subscription_id: Scalars['String'];
  sub_start_date: Scalars['DateTime'];
  subscription_fee: Scalars['Float'];
  subscription_name: Scalars['String'];
  support_fee: Scalars['Float'];
  support_plan: Scalars['String'];
  suspend_sms: Scalars['Int'];
  suspended_on: Scalars['String'];
  suspension_reason: Scalars['String'];
  trainer_id?: Maybe<Scalars['Int']>;
  training_date: Scalars['String'];
  training_status: Scalars['Int'];
  trial?: Maybe<Scalars['Boolean']>;
  uid: Scalars['Int'];
  warning_level: Scalars['String'];
  whatsapp_support?: Maybe<Scalars['Int']>;
};

export type CompanySubscriptionCreateNestedOneWithoutCompanyInput = {
  connect?: Maybe<CompanySubscriptionWhereUniqueInput>;
  connectOrCreate?: Maybe<CompanySubscriptionCreateOrConnectWithoutCompanyInput>;
  create?: Maybe<CompanySubscriptionUncheckedCreateWithoutCompanyInput>;
};

export type CompanySubscriptionCreateOrConnectWithoutCompanyInput = {
  create: CompanySubscriptionUncheckedCreateWithoutCompanyInput;
  where: CompanySubscriptionWhereUniqueInput;
};

export type CompanySubscriptionOrderByInput = {
  account_live?: Maybe<SortOrder>;
  active?: Maybe<SortOrder>;
  activity_logs?: Maybe<SortOrder>;
  advanced_marketing_addon?: Maybe<SortOrder>;
  am_group?: Maybe<SortOrder>;
  am_start_date?: Maybe<SortOrder>;
  bill_cycle?: Maybe<SortOrder>;
  code?: Maybe<SortOrder>;
  commission_rate?: Maybe<SortOrder>;
  company_id?: Maybe<SortOrder>;
  complete_account?: Maybe<SortOrder>;
  complete_notes?: Maybe<SortOrder>;
  demo_account?: Maybe<SortOrder>;
  details_status?: Maybe<SortOrder>;
  disable_sms?: Maybe<SortOrder>;
  discount?: Maybe<SortOrder>;
  enterprise_fee?: Maybe<SortOrder>;
  enterprise_user_cost?: Maybe<SortOrder>;
  exclude_reports?: Maybe<SortOrder>;
  free_months?: Maybe<SortOrder>;
  free_users?: Maybe<SortOrder>;
  gc_amount?: Maybe<SortOrder>;
  gc_customer_id?: Maybe<SortOrder>;
  gc_email?: Maybe<SortOrder>;
  gc_enterprise_plan_id?: Maybe<SortOrder>;
  gc_plan_id?: Maybe<SortOrder>;
  gc_support_plan_id?: Maybe<SortOrder>;
  hide_in_comps?: Maybe<SortOrder>;
  is_referral?: Maybe<SortOrder>;
  leave_alert?: Maybe<SortOrder>;
  license_expiry?: Maybe<SortOrder>;
  license_id?: Maybe<SortOrder>;
  license_type?: Maybe<SortOrder>;
  live_server?: Maybe<SortOrder>;
  low_credit_amount?: Maybe<SortOrder>;
  low_sms_action?: Maybe<SortOrder>;
  max_user_count?: Maybe<SortOrder>;
  multiple_locations?: Maybe<SortOrder>;
  onboarder_id?: Maybe<SortOrder>;
  order_sheet?: Maybe<SortOrder>;
  pabau_score?: Maybe<SortOrder>;
  partner_id?: Maybe<SortOrder>;
  payment_bounces?: Maybe<SortOrder>;
  payment_id?: Maybe<SortOrder>;
  phone_support?: Maybe<SortOrder>;
  previous_system?: Maybe<SortOrder>;
  price_range?: Maybe<SortOrder>;
  renew_interval?: Maybe<SortOrder>;
  sandbox_server?: Maybe<SortOrder>;
  server_comp_id?: Maybe<SortOrder>;
  setup_stage?: Maybe<SortOrder>;
  setup_status?: Maybe<SortOrder>;
  slack_support?: Maybe<SortOrder>;
  sms_rate?: Maybe<SortOrder>;
  storage?: Maybe<SortOrder>;
  stripe_customer_id?: Maybe<SortOrder>;
  stripe_fee?: Maybe<SortOrder>;
  stripe_fee_type?: Maybe<SortOrder>;
  stripe_subscription_id?: Maybe<SortOrder>;
  sub_start_date?: Maybe<SortOrder>;
  subscription_fee?: Maybe<SortOrder>;
  subscription_name?: Maybe<SortOrder>;
  support_fee?: Maybe<SortOrder>;
  support_plan?: Maybe<SortOrder>;
  suspend_sms?: Maybe<SortOrder>;
  suspended_on?: Maybe<SortOrder>;
  suspension_reason?: Maybe<SortOrder>;
  trainer_id?: Maybe<SortOrder>;
  training_date?: Maybe<SortOrder>;
  training_status?: Maybe<SortOrder>;
  trial?: Maybe<SortOrder>;
  uid?: Maybe<SortOrder>;
  warning_level?: Maybe<SortOrder>;
  whatsapp_support?: Maybe<SortOrder>;
};

export type CompanySubscriptionUncheckedCreateNestedOneWithoutCompanyInput = {
  connect?: Maybe<CompanySubscriptionWhereUniqueInput>;
  connectOrCreate?: Maybe<CompanySubscriptionCreateOrConnectWithoutCompanyInput>;
  create?: Maybe<CompanySubscriptionUncheckedCreateWithoutCompanyInput>;
};

export type CompanySubscriptionUncheckedCreateWithoutCompanyInput = {
  account_live: Scalars['Int'];
  active: Scalars['Int'];
  activity_logs: Scalars['Int'];
  advanced_marketing_addon: Scalars['Int'];
  am_group: Scalars['String'];
  am_start_date?: Maybe<Scalars['DateTime']>;
  bill_cycle: Scalars['DateTime'];
  code: Scalars['String'];
  commission_rate: Scalars['Float'];
  complete_account: Scalars['Int'];
  complete_notes: Scalars['String'];
  demo_account: Scalars['Int'];
  details_status: Scalars['Int'];
  disable_sms: Scalars['Int'];
  discount: Scalars['Float'];
  enterprise_fee: Scalars['Float'];
  enterprise_user_cost?: Maybe<Scalars['Float']>;
  exclude_reports: Scalars['Int'];
  free_months?: Maybe<Scalars['Int']>;
  free_users: Scalars['Int'];
  gc_amount: Scalars['Float'];
  gc_customer_id: Scalars['String'];
  gc_email: Scalars['String'];
  gc_enterprise_plan_id: Scalars['String'];
  gc_plan_id: Scalars['String'];
  gc_support_plan_id: Scalars['String'];
  hide_in_comps?: Maybe<Scalars['Boolean']>;
  is_referral?: Maybe<Scalars['Int']>;
  leave_alert?: Maybe<Scalars['Boolean']>;
  license_expiry: Scalars['DateTime'];
  license_id?: Maybe<Scalars['Int']>;
  license_type: Scalars['Int'];
  live_server?: Maybe<Scalars['String']>;
  low_credit_amount?: Maybe<Scalars['Int']>;
  low_sms_action?: Maybe<Scalars['Int']>;
  max_user_count: Scalars['Int'];
  multiple_locations: Scalars['Int'];
  onboarder_id?: Maybe<Scalars['Int']>;
  order_sheet: Scalars['Int'];
  pabau_score: Scalars['Int'];
  partner_id: Scalars['String'];
  payment_bounces: Scalars['Int'];
  payment_id: Scalars['String'];
  phone_support?: Maybe<Scalars['Int']>;
  previous_system: Scalars['String'];
  price_range?: Maybe<Scalars['String']>;
  renew_interval?: Maybe<Scalars['String']>;
  sandbox_server: Scalars['String'];
  server_comp_id: Scalars['Int'];
  setup_stage: Scalars['String'];
  setup_status: Scalars['Int'];
  slack_support?: Maybe<Scalars['Int']>;
  sms_rate?: Maybe<Scalars['Float']>;
  storage?: Maybe<Scalars['Float']>;
  stripe_customer_id: Scalars['String'];
  stripe_fee?: Maybe<Scalars['Float']>;
  stripe_fee_type?: Maybe<Scalars['String']>;
  stripe_subscription_id: Scalars['String'];
  sub_start_date: Scalars['DateTime'];
  subscription_fee: Scalars['Float'];
  subscription_name: Scalars['String'];
  support_fee: Scalars['Float'];
  support_plan: Scalars['String'];
  suspend_sms: Scalars['Int'];
  suspended_on: Scalars['String'];
  suspension_reason: Scalars['String'];
  trainer_id?: Maybe<Scalars['Int']>;
  training_date: Scalars['String'];
  training_status: Scalars['Int'];
  trial?: Maybe<Scalars['Boolean']>;
  uid: Scalars['Int'];
  warning_level: Scalars['String'];
  whatsapp_support?: Maybe<Scalars['Int']>;
};

export type CompanySubscriptionUncheckedUpdateOneWithoutCompanyInput = {
  connect?: Maybe<CompanySubscriptionWhereUniqueInput>;
  connectOrCreate?: Maybe<CompanySubscriptionCreateOrConnectWithoutCompanyInput>;
  create?: Maybe<CompanySubscriptionUncheckedCreateWithoutCompanyInput>;
  delete?: Maybe<Scalars['Boolean']>;
  disconnect?: Maybe<Scalars['Boolean']>;
  update?: Maybe<CompanySubscriptionUncheckedUpdateWithoutCompanyInput>;
  upsert?: Maybe<CompanySubscriptionUpsertWithoutCompanyInput>;
};

export type CompanySubscriptionUncheckedUpdateWithoutCompanyInput = {
  account_live?: Maybe<IntFieldUpdateOperationsInput>;
  active?: Maybe<IntFieldUpdateOperationsInput>;
  activity_logs?: Maybe<IntFieldUpdateOperationsInput>;
  advanced_marketing_addon?: Maybe<IntFieldUpdateOperationsInput>;
  am_group?: Maybe<StringFieldUpdateOperationsInput>;
  am_start_date?: Maybe<NullableDateTimeFieldUpdateOperationsInput>;
  bill_cycle?: Maybe<DateTimeFieldUpdateOperationsInput>;
  code?: Maybe<StringFieldUpdateOperationsInput>;
  commission_rate?: Maybe<FloatFieldUpdateOperationsInput>;
  complete_account?: Maybe<IntFieldUpdateOperationsInput>;
  complete_notes?: Maybe<StringFieldUpdateOperationsInput>;
  demo_account?: Maybe<IntFieldUpdateOperationsInput>;
  details_status?: Maybe<IntFieldUpdateOperationsInput>;
  disable_sms?: Maybe<IntFieldUpdateOperationsInput>;
  discount?: Maybe<FloatFieldUpdateOperationsInput>;
  enterprise_fee?: Maybe<FloatFieldUpdateOperationsInput>;
  enterprise_user_cost?: Maybe<FloatFieldUpdateOperationsInput>;
  exclude_reports?: Maybe<IntFieldUpdateOperationsInput>;
  free_months?: Maybe<NullableIntFieldUpdateOperationsInput>;
  free_users?: Maybe<IntFieldUpdateOperationsInput>;
  gc_amount?: Maybe<FloatFieldUpdateOperationsInput>;
  gc_customer_id?: Maybe<StringFieldUpdateOperationsInput>;
  gc_email?: Maybe<StringFieldUpdateOperationsInput>;
  gc_enterprise_plan_id?: Maybe<StringFieldUpdateOperationsInput>;
  gc_plan_id?: Maybe<StringFieldUpdateOperationsInput>;
  gc_support_plan_id?: Maybe<StringFieldUpdateOperationsInput>;
  hide_in_comps?: Maybe<NullableBoolFieldUpdateOperationsInput>;
  is_referral?: Maybe<NullableIntFieldUpdateOperationsInput>;
  leave_alert?: Maybe<BoolFieldUpdateOperationsInput>;
  license_expiry?: Maybe<DateTimeFieldUpdateOperationsInput>;
  license_id?: Maybe<IntFieldUpdateOperationsInput>;
  license_type?: Maybe<IntFieldUpdateOperationsInput>;
  live_server?: Maybe<StringFieldUpdateOperationsInput>;
  low_credit_amount?: Maybe<IntFieldUpdateOperationsInput>;
  low_sms_action?: Maybe<IntFieldUpdateOperationsInput>;
  max_user_count?: Maybe<IntFieldUpdateOperationsInput>;
  multiple_locations?: Maybe<IntFieldUpdateOperationsInput>;
  onboarder_id?: Maybe<NullableIntFieldUpdateOperationsInput>;
  order_sheet?: Maybe<IntFieldUpdateOperationsInput>;
  pabau_score?: Maybe<IntFieldUpdateOperationsInput>;
  partner_id?: Maybe<StringFieldUpdateOperationsInput>;
  payment_bounces?: Maybe<IntFieldUpdateOperationsInput>;
  payment_id?: Maybe<StringFieldUpdateOperationsInput>;
  phone_support?: Maybe<IntFieldUpdateOperationsInput>;
  previous_system?: Maybe<StringFieldUpdateOperationsInput>;
  price_range?: Maybe<StringFieldUpdateOperationsInput>;
  renew_interval?: Maybe<StringFieldUpdateOperationsInput>;
  sandbox_server?: Maybe<StringFieldUpdateOperationsInput>;
  server_comp_id?: Maybe<IntFieldUpdateOperationsInput>;
  setup_stage?: Maybe<StringFieldUpdateOperationsInput>;
  setup_status?: Maybe<IntFieldUpdateOperationsInput>;
  slack_support?: Maybe<IntFieldUpdateOperationsInput>;
  sms_rate?: Maybe<FloatFieldUpdateOperationsInput>;
  storage?: Maybe<FloatFieldUpdateOperationsInput>;
  stripe_customer_id?: Maybe<StringFieldUpdateOperationsInput>;
  stripe_fee?: Maybe<FloatFieldUpdateOperationsInput>;
  stripe_fee_type?: Maybe<StringFieldUpdateOperationsInput>;
  stripe_subscription_id?: Maybe<StringFieldUpdateOperationsInput>;
  sub_start_date?: Maybe<DateTimeFieldUpdateOperationsInput>;
  subscription_fee?: Maybe<FloatFieldUpdateOperationsInput>;
  subscription_name?: Maybe<StringFieldUpdateOperationsInput>;
  support_fee?: Maybe<FloatFieldUpdateOperationsInput>;
  support_plan?: Maybe<StringFieldUpdateOperationsInput>;
  suspend_sms?: Maybe<IntFieldUpdateOperationsInput>;
  suspended_on?: Maybe<StringFieldUpdateOperationsInput>;
  suspension_reason?: Maybe<StringFieldUpdateOperationsInput>;
  trainer_id?: Maybe<NullableIntFieldUpdateOperationsInput>;
  training_date?: Maybe<StringFieldUpdateOperationsInput>;
  training_status?: Maybe<IntFieldUpdateOperationsInput>;
  trial?: Maybe<BoolFieldUpdateOperationsInput>;
  uid?: Maybe<IntFieldUpdateOperationsInput>;
  warning_level?: Maybe<StringFieldUpdateOperationsInput>;
  whatsapp_support?: Maybe<IntFieldUpdateOperationsInput>;
};

export type CompanySubscriptionUpdateInput = {
  account_live?: Maybe<IntFieldUpdateOperationsInput>;
  active?: Maybe<IntFieldUpdateOperationsInput>;
  activity_logs?: Maybe<IntFieldUpdateOperationsInput>;
  advanced_marketing_addon?: Maybe<IntFieldUpdateOperationsInput>;
  am_group?: Maybe<StringFieldUpdateOperationsInput>;
  am_start_date?: Maybe<NullableDateTimeFieldUpdateOperationsInput>;
  bill_cycle?: Maybe<DateTimeFieldUpdateOperationsInput>;
  code?: Maybe<StringFieldUpdateOperationsInput>;
  commission_rate?: Maybe<FloatFieldUpdateOperationsInput>;
  company?: Maybe<CompanyUpdateOneRequiredWithoutSubscriptionInput>;
  complete_account?: Maybe<IntFieldUpdateOperationsInput>;
  complete_notes?: Maybe<StringFieldUpdateOperationsInput>;
  demo_account?: Maybe<IntFieldUpdateOperationsInput>;
  details_status?: Maybe<IntFieldUpdateOperationsInput>;
  disable_sms?: Maybe<IntFieldUpdateOperationsInput>;
  discount?: Maybe<FloatFieldUpdateOperationsInput>;
  enterprise_fee?: Maybe<FloatFieldUpdateOperationsInput>;
  enterprise_user_cost?: Maybe<FloatFieldUpdateOperationsInput>;
  exclude_reports?: Maybe<IntFieldUpdateOperationsInput>;
  free_months?: Maybe<NullableIntFieldUpdateOperationsInput>;
  free_users?: Maybe<IntFieldUpdateOperationsInput>;
  gc_amount?: Maybe<FloatFieldUpdateOperationsInput>;
  gc_customer_id?: Maybe<StringFieldUpdateOperationsInput>;
  gc_email?: Maybe<StringFieldUpdateOperationsInput>;
  gc_enterprise_plan_id?: Maybe<StringFieldUpdateOperationsInput>;
  gc_plan_id?: Maybe<StringFieldUpdateOperationsInput>;
  gc_support_plan_id?: Maybe<StringFieldUpdateOperationsInput>;
  hide_in_comps?: Maybe<NullableBoolFieldUpdateOperationsInput>;
  is_referral?: Maybe<NullableIntFieldUpdateOperationsInput>;
  leave_alert?: Maybe<BoolFieldUpdateOperationsInput>;
  license_expiry?: Maybe<DateTimeFieldUpdateOperationsInput>;
  license_type?: Maybe<IntFieldUpdateOperationsInput>;
  live_server?: Maybe<StringFieldUpdateOperationsInput>;
  low_credit_amount?: Maybe<IntFieldUpdateOperationsInput>;
  low_sms_action?: Maybe<IntFieldUpdateOperationsInput>;
  max_user_count?: Maybe<IntFieldUpdateOperationsInput>;
  multiple_locations?: Maybe<IntFieldUpdateOperationsInput>;
  onboarder_id?: Maybe<NullableIntFieldUpdateOperationsInput>;
  order_sheet?: Maybe<IntFieldUpdateOperationsInput>;
  pabau_score?: Maybe<IntFieldUpdateOperationsInput>;
  partner_id?: Maybe<StringFieldUpdateOperationsInput>;
  payment_bounces?: Maybe<IntFieldUpdateOperationsInput>;
  payment_id?: Maybe<StringFieldUpdateOperationsInput>;
  phone_support?: Maybe<IntFieldUpdateOperationsInput>;
  previous_system?: Maybe<StringFieldUpdateOperationsInput>;
  price_range?: Maybe<StringFieldUpdateOperationsInput>;
  renew_interval?: Maybe<StringFieldUpdateOperationsInput>;
  sandbox_server?: Maybe<StringFieldUpdateOperationsInput>;
  server_comp_id?: Maybe<IntFieldUpdateOperationsInput>;
  setup_stage?: Maybe<StringFieldUpdateOperationsInput>;
  setup_status?: Maybe<IntFieldUpdateOperationsInput>;
  slack_support?: Maybe<IntFieldUpdateOperationsInput>;
  sms_rate?: Maybe<FloatFieldUpdateOperationsInput>;
  storage?: Maybe<FloatFieldUpdateOperationsInput>;
  stripe_customer_id?: Maybe<StringFieldUpdateOperationsInput>;
  stripe_fee?: Maybe<FloatFieldUpdateOperationsInput>;
  stripe_fee_type?: Maybe<StringFieldUpdateOperationsInput>;
  stripe_subscription_id?: Maybe<StringFieldUpdateOperationsInput>;
  sub_start_date?: Maybe<DateTimeFieldUpdateOperationsInput>;
  subscription_fee?: Maybe<FloatFieldUpdateOperationsInput>;
  subscription_name?: Maybe<StringFieldUpdateOperationsInput>;
  support_fee?: Maybe<FloatFieldUpdateOperationsInput>;
  support_plan?: Maybe<StringFieldUpdateOperationsInput>;
  suspend_sms?: Maybe<IntFieldUpdateOperationsInput>;
  suspended_on?: Maybe<StringFieldUpdateOperationsInput>;
  suspension_reason?: Maybe<StringFieldUpdateOperationsInput>;
  trainer_id?: Maybe<NullableIntFieldUpdateOperationsInput>;
  training_date?: Maybe<StringFieldUpdateOperationsInput>;
  training_status?: Maybe<IntFieldUpdateOperationsInput>;
  trial?: Maybe<BoolFieldUpdateOperationsInput>;
  uid?: Maybe<IntFieldUpdateOperationsInput>;
  warning_level?: Maybe<StringFieldUpdateOperationsInput>;
  whatsapp_support?: Maybe<IntFieldUpdateOperationsInput>;
};

export type CompanySubscriptionUpdateManyMutationInput = {
  account_live?: Maybe<IntFieldUpdateOperationsInput>;
  active?: Maybe<IntFieldUpdateOperationsInput>;
  activity_logs?: Maybe<IntFieldUpdateOperationsInput>;
  advanced_marketing_addon?: Maybe<IntFieldUpdateOperationsInput>;
  am_group?: Maybe<StringFieldUpdateOperationsInput>;
  am_start_date?: Maybe<NullableDateTimeFieldUpdateOperationsInput>;
  bill_cycle?: Maybe<DateTimeFieldUpdateOperationsInput>;
  code?: Maybe<StringFieldUpdateOperationsInput>;
  commission_rate?: Maybe<FloatFieldUpdateOperationsInput>;
  complete_account?: Maybe<IntFieldUpdateOperationsInput>;
  complete_notes?: Maybe<StringFieldUpdateOperationsInput>;
  demo_account?: Maybe<IntFieldUpdateOperationsInput>;
  details_status?: Maybe<IntFieldUpdateOperationsInput>;
  disable_sms?: Maybe<IntFieldUpdateOperationsInput>;
  discount?: Maybe<FloatFieldUpdateOperationsInput>;
  enterprise_fee?: Maybe<FloatFieldUpdateOperationsInput>;
  enterprise_user_cost?: Maybe<FloatFieldUpdateOperationsInput>;
  exclude_reports?: Maybe<IntFieldUpdateOperationsInput>;
  free_months?: Maybe<NullableIntFieldUpdateOperationsInput>;
  free_users?: Maybe<IntFieldUpdateOperationsInput>;
  gc_amount?: Maybe<FloatFieldUpdateOperationsInput>;
  gc_customer_id?: Maybe<StringFieldUpdateOperationsInput>;
  gc_email?: Maybe<StringFieldUpdateOperationsInput>;
  gc_enterprise_plan_id?: Maybe<StringFieldUpdateOperationsInput>;
  gc_plan_id?: Maybe<StringFieldUpdateOperationsInput>;
  gc_support_plan_id?: Maybe<StringFieldUpdateOperationsInput>;
  hide_in_comps?: Maybe<NullableBoolFieldUpdateOperationsInput>;
  is_referral?: Maybe<NullableIntFieldUpdateOperationsInput>;
  leave_alert?: Maybe<BoolFieldUpdateOperationsInput>;
  license_expiry?: Maybe<DateTimeFieldUpdateOperationsInput>;
  license_type?: Maybe<IntFieldUpdateOperationsInput>;
  live_server?: Maybe<StringFieldUpdateOperationsInput>;
  low_credit_amount?: Maybe<IntFieldUpdateOperationsInput>;
  low_sms_action?: Maybe<IntFieldUpdateOperationsInput>;
  max_user_count?: Maybe<IntFieldUpdateOperationsInput>;
  multiple_locations?: Maybe<IntFieldUpdateOperationsInput>;
  onboarder_id?: Maybe<NullableIntFieldUpdateOperationsInput>;
  order_sheet?: Maybe<IntFieldUpdateOperationsInput>;
  pabau_score?: Maybe<IntFieldUpdateOperationsInput>;
  partner_id?: Maybe<StringFieldUpdateOperationsInput>;
  payment_bounces?: Maybe<IntFieldUpdateOperationsInput>;
  payment_id?: Maybe<StringFieldUpdateOperationsInput>;
  phone_support?: Maybe<IntFieldUpdateOperationsInput>;
  previous_system?: Maybe<StringFieldUpdateOperationsInput>;
  price_range?: Maybe<StringFieldUpdateOperationsInput>;
  renew_interval?: Maybe<StringFieldUpdateOperationsInput>;
  sandbox_server?: Maybe<StringFieldUpdateOperationsInput>;
  server_comp_id?: Maybe<IntFieldUpdateOperationsInput>;
  setup_stage?: Maybe<StringFieldUpdateOperationsInput>;
  setup_status?: Maybe<IntFieldUpdateOperationsInput>;
  slack_support?: Maybe<IntFieldUpdateOperationsInput>;
  sms_rate?: Maybe<FloatFieldUpdateOperationsInput>;
  storage?: Maybe<FloatFieldUpdateOperationsInput>;
  stripe_customer_id?: Maybe<StringFieldUpdateOperationsInput>;
  stripe_fee?: Maybe<FloatFieldUpdateOperationsInput>;
  stripe_fee_type?: Maybe<StringFieldUpdateOperationsInput>;
  stripe_subscription_id?: Maybe<StringFieldUpdateOperationsInput>;
  sub_start_date?: Maybe<DateTimeFieldUpdateOperationsInput>;
  subscription_fee?: Maybe<FloatFieldUpdateOperationsInput>;
  subscription_name?: Maybe<StringFieldUpdateOperationsInput>;
  support_fee?: Maybe<FloatFieldUpdateOperationsInput>;
  support_plan?: Maybe<StringFieldUpdateOperationsInput>;
  suspend_sms?: Maybe<IntFieldUpdateOperationsInput>;
  suspended_on?: Maybe<StringFieldUpdateOperationsInput>;
  suspension_reason?: Maybe<StringFieldUpdateOperationsInput>;
  trainer_id?: Maybe<NullableIntFieldUpdateOperationsInput>;
  training_date?: Maybe<StringFieldUpdateOperationsInput>;
  training_status?: Maybe<IntFieldUpdateOperationsInput>;
  trial?: Maybe<BoolFieldUpdateOperationsInput>;
  uid?: Maybe<IntFieldUpdateOperationsInput>;
  warning_level?: Maybe<StringFieldUpdateOperationsInput>;
  whatsapp_support?: Maybe<IntFieldUpdateOperationsInput>;
};

export type CompanySubscriptionUpdateOneWithoutCompanyInput = {
  connect?: Maybe<CompanySubscriptionWhereUniqueInput>;
  connectOrCreate?: Maybe<CompanySubscriptionCreateOrConnectWithoutCompanyInput>;
  create?: Maybe<CompanySubscriptionUncheckedCreateWithoutCompanyInput>;
  delete?: Maybe<Scalars['Boolean']>;
  disconnect?: Maybe<Scalars['Boolean']>;
  update?: Maybe<CompanySubscriptionUncheckedUpdateWithoutCompanyInput>;
  upsert?: Maybe<CompanySubscriptionUpsertWithoutCompanyInput>;
};

export type CompanySubscriptionUpsertWithoutCompanyInput = {
  create: CompanySubscriptionUncheckedCreateWithoutCompanyInput;
  update: CompanySubscriptionUncheckedUpdateWithoutCompanyInput;
};

export type CompanySubscriptionWhereInput = {
  AND?: Maybe<Array<Maybe<CompanySubscriptionWhereInput>>>;
  NOT?: Maybe<Array<Maybe<CompanySubscriptionWhereInput>>>;
  OR?: Maybe<Array<Maybe<CompanySubscriptionWhereInput>>>;
  account_live?: Maybe<IntFilter>;
  active?: Maybe<IntFilter>;
  activity_logs?: Maybe<IntFilter>;
  advanced_marketing_addon?: Maybe<IntFilter>;
  am_group?: Maybe<StringFilter>;
  am_start_date?: Maybe<DateTimeNullableFilter>;
  bill_cycle?: Maybe<DateTimeFilter>;
  code?: Maybe<StringFilter>;
  commission_rate?: Maybe<FloatFilter>;
  company?: Maybe<CompanyWhereInput>;
  company_id?: Maybe<IntFilter>;
  complete_account?: Maybe<IntFilter>;
  complete_notes?: Maybe<StringFilter>;
  demo_account?: Maybe<IntFilter>;
  details_status?: Maybe<IntFilter>;
  disable_sms?: Maybe<IntFilter>;
  discount?: Maybe<FloatFilter>;
  enterprise_fee?: Maybe<FloatFilter>;
  enterprise_user_cost?: Maybe<FloatFilter>;
  exclude_reports?: Maybe<IntFilter>;
  free_months?: Maybe<IntNullableFilter>;
  free_users?: Maybe<IntFilter>;
  gc_amount?: Maybe<FloatFilter>;
  gc_customer_id?: Maybe<StringFilter>;
  gc_email?: Maybe<StringFilter>;
  gc_enterprise_plan_id?: Maybe<StringFilter>;
  gc_plan_id?: Maybe<StringFilter>;
  gc_support_plan_id?: Maybe<StringFilter>;
  hide_in_comps?: Maybe<BoolNullableFilter>;
  is_referral?: Maybe<IntNullableFilter>;
  leave_alert?: Maybe<BoolFilter>;
  license_expiry?: Maybe<DateTimeFilter>;
  license_id?: Maybe<IntFilter>;
  license_type?: Maybe<IntFilter>;
  live_server?: Maybe<StringFilter>;
  low_credit_amount?: Maybe<IntFilter>;
  low_sms_action?: Maybe<IntFilter>;
  max_user_count?: Maybe<IntFilter>;
  multiple_locations?: Maybe<IntFilter>;
  onboarder_id?: Maybe<IntNullableFilter>;
  order_sheet?: Maybe<IntFilter>;
  pabau_score?: Maybe<IntFilter>;
  partner_id?: Maybe<StringFilter>;
  payment_bounces?: Maybe<IntFilter>;
  payment_id?: Maybe<StringFilter>;
  phone_support?: Maybe<IntFilter>;
  previous_system?: Maybe<StringFilter>;
  price_range?: Maybe<StringFilter>;
  renew_interval?: Maybe<StringFilter>;
  sandbox_server?: Maybe<StringFilter>;
  server_comp_id?: Maybe<IntFilter>;
  setup_stage?: Maybe<StringFilter>;
  setup_status?: Maybe<IntFilter>;
  slack_support?: Maybe<IntFilter>;
  sms_rate?: Maybe<FloatFilter>;
  storage?: Maybe<FloatFilter>;
  stripe_customer_id?: Maybe<StringFilter>;
  stripe_fee?: Maybe<FloatFilter>;
  stripe_fee_type?: Maybe<StringFilter>;
  stripe_subscription_id?: Maybe<StringFilter>;
  sub_start_date?: Maybe<DateTimeFilter>;
  subscription_fee?: Maybe<FloatFilter>;
  subscription_name?: Maybe<StringFilter>;
  support_fee?: Maybe<FloatFilter>;
  support_plan?: Maybe<StringFilter>;
  suspend_sms?: Maybe<IntFilter>;
  suspended_on?: Maybe<StringFilter>;
  suspension_reason?: Maybe<StringFilter>;
  trainer_id?: Maybe<IntNullableFilter>;
  training_date?: Maybe<StringFilter>;
  training_status?: Maybe<IntFilter>;
  trial?: Maybe<BoolFilter>;
  uid?: Maybe<IntFilter>;
  warning_level?: Maybe<StringFilter>;
  whatsapp_support?: Maybe<IntFilter>;
};

export type CompanySubscriptionWhereUniqueInput = {
  license_id?: Maybe<Scalars['Int']>;
};

export type CompanyUncheckedCreateWithoutAcceptEmailTokenInput = {
  AccountBalance?: Maybe<AccountBalanceUncheckedCreateNestedManyWithoutCompanyInput>;
  BookingStatus?: Maybe<BookingStatusUncheckedCreateNestedManyWithoutCompanyInput>;
  Candidate?: Maybe<CandidateUncheckedCreateNestedManyWithoutCompanyInput>;
  CmCampaign?: Maybe<CmCampaignUncheckedCreateNestedManyWithoutCompanyInput>;
  CmCase?: Maybe<CmCaseUncheckedCreateNestedManyWithoutCompanyInput>;
  CmCaseReply?: Maybe<CmCaseReplyUncheckedCreateNestedManyWithoutCompanyInput>;
  MarketingSource?: Maybe<MarketingSourceUncheckedCreateNestedManyWithoutCompanyInput>;
  ThirdPartyAccess?: Maybe<ThirdPartyAccessUncheckedCreateNestedManyWithoutCompanyInput>;
  TwoFactorHistory?: Maybe<TwoFactorHistoryUncheckedCreateNestedManyWithoutCompanyInput>;
  User?: Maybe<UserUncheckedCreateNestedManyWithoutCompanyInput>;
  admin: Scalars['Int'];
  creation_date: Scalars['DateTime'];
  cron_enabled?: Maybe<Scalars['Boolean']>;
  details?: Maybe<CompanyDetailsUncheckedCreateNestedOneWithoutCompanyInput>;
  digit8: Scalars['Int'];
  id?: Maybe<Scalars['Int']>;
  image: Scalars['String'];
  remote_connect?: Maybe<Scalars['String']>;
  remote_url?: Maybe<Scalars['String']>;
  slug?: Maybe<Scalars['String']>;
  subscription?: Maybe<CompanySubscriptionUncheckedCreateNestedOneWithoutCompanyInput>;
  user: Scalars['String'];
};

export type CompanyUncheckedCreateWithoutAccountBalanceInput = {
  AcceptEmailToken?: Maybe<AcceptEmailTokenUncheckedCreateNestedManyWithoutCompanyInput>;
  BookingStatus?: Maybe<BookingStatusUncheckedCreateNestedManyWithoutCompanyInput>;
  Candidate?: Maybe<CandidateUncheckedCreateNestedManyWithoutCompanyInput>;
  CmCampaign?: Maybe<CmCampaignUncheckedCreateNestedManyWithoutCompanyInput>;
  CmCase?: Maybe<CmCaseUncheckedCreateNestedManyWithoutCompanyInput>;
  CmCaseReply?: Maybe<CmCaseReplyUncheckedCreateNestedManyWithoutCompanyInput>;
  MarketingSource?: Maybe<MarketingSourceUncheckedCreateNestedManyWithoutCompanyInput>;
  ThirdPartyAccess?: Maybe<ThirdPartyAccessUncheckedCreateNestedManyWithoutCompanyInput>;
  TwoFactorHistory?: Maybe<TwoFactorHistoryUncheckedCreateNestedManyWithoutCompanyInput>;
  User?: Maybe<UserUncheckedCreateNestedManyWithoutCompanyInput>;
  admin: Scalars['Int'];
  creation_date: Scalars['DateTime'];
  cron_enabled?: Maybe<Scalars['Boolean']>;
  details?: Maybe<CompanyDetailsUncheckedCreateNestedOneWithoutCompanyInput>;
  digit8: Scalars['Int'];
  id?: Maybe<Scalars['Int']>;
  image: Scalars['String'];
  remote_connect?: Maybe<Scalars['String']>;
  remote_url?: Maybe<Scalars['String']>;
  slug?: Maybe<Scalars['String']>;
  subscription?: Maybe<CompanySubscriptionUncheckedCreateNestedOneWithoutCompanyInput>;
  user: Scalars['String'];
};

export type CompanyUncheckedCreateWithoutBookingStatusInput = {
  AcceptEmailToken?: Maybe<AcceptEmailTokenUncheckedCreateNestedManyWithoutCompanyInput>;
  AccountBalance?: Maybe<AccountBalanceUncheckedCreateNestedManyWithoutCompanyInput>;
  Candidate?: Maybe<CandidateUncheckedCreateNestedManyWithoutCompanyInput>;
  CmCampaign?: Maybe<CmCampaignUncheckedCreateNestedManyWithoutCompanyInput>;
  CmCase?: Maybe<CmCaseUncheckedCreateNestedManyWithoutCompanyInput>;
  CmCaseReply?: Maybe<CmCaseReplyUncheckedCreateNestedManyWithoutCompanyInput>;
  MarketingSource?: Maybe<MarketingSourceUncheckedCreateNestedManyWithoutCompanyInput>;
  ThirdPartyAccess?: Maybe<ThirdPartyAccessUncheckedCreateNestedManyWithoutCompanyInput>;
  TwoFactorHistory?: Maybe<TwoFactorHistoryUncheckedCreateNestedManyWithoutCompanyInput>;
  User?: Maybe<UserUncheckedCreateNestedManyWithoutCompanyInput>;
  admin: Scalars['Int'];
  creation_date: Scalars['DateTime'];
  cron_enabled?: Maybe<Scalars['Boolean']>;
  details?: Maybe<CompanyDetailsUncheckedCreateNestedOneWithoutCompanyInput>;
  digit8: Scalars['Int'];
  id?: Maybe<Scalars['Int']>;
  image: Scalars['String'];
  remote_connect?: Maybe<Scalars['String']>;
  remote_url?: Maybe<Scalars['String']>;
  slug?: Maybe<Scalars['String']>;
  subscription?: Maybe<CompanySubscriptionUncheckedCreateNestedOneWithoutCompanyInput>;
  user: Scalars['String'];
};

export type CompanyUncheckedCreateWithoutCandidateInput = {
  AcceptEmailToken?: Maybe<AcceptEmailTokenUncheckedCreateNestedManyWithoutCompanyInput>;
  AccountBalance?: Maybe<AccountBalanceUncheckedCreateNestedManyWithoutCompanyInput>;
  BookingStatus?: Maybe<BookingStatusUncheckedCreateNestedManyWithoutCompanyInput>;
  CmCampaign?: Maybe<CmCampaignUncheckedCreateNestedManyWithoutCompanyInput>;
  CmCase?: Maybe<CmCaseUncheckedCreateNestedManyWithoutCompanyInput>;
  CmCaseReply?: Maybe<CmCaseReplyUncheckedCreateNestedManyWithoutCompanyInput>;
  MarketingSource?: Maybe<MarketingSourceUncheckedCreateNestedManyWithoutCompanyInput>;
  ThirdPartyAccess?: Maybe<ThirdPartyAccessUncheckedCreateNestedManyWithoutCompanyInput>;
  TwoFactorHistory?: Maybe<TwoFactorHistoryUncheckedCreateNestedManyWithoutCompanyInput>;
  User?: Maybe<UserUncheckedCreateNestedManyWithoutCompanyInput>;
  admin: Scalars['Int'];
  creation_date: Scalars['DateTime'];
  cron_enabled?: Maybe<Scalars['Boolean']>;
  details?: Maybe<CompanyDetailsUncheckedCreateNestedOneWithoutCompanyInput>;
  digit8: Scalars['Int'];
  id?: Maybe<Scalars['Int']>;
  image: Scalars['String'];
  remote_connect?: Maybe<Scalars['String']>;
  remote_url?: Maybe<Scalars['String']>;
  slug?: Maybe<Scalars['String']>;
  subscription?: Maybe<CompanySubscriptionUncheckedCreateNestedOneWithoutCompanyInput>;
  user: Scalars['String'];
};

export type CompanyUncheckedCreateWithoutCmCampaignInput = {
  AcceptEmailToken?: Maybe<AcceptEmailTokenUncheckedCreateNestedManyWithoutCompanyInput>;
  AccountBalance?: Maybe<AccountBalanceUncheckedCreateNestedManyWithoutCompanyInput>;
  BookingStatus?: Maybe<BookingStatusUncheckedCreateNestedManyWithoutCompanyInput>;
  Candidate?: Maybe<CandidateUncheckedCreateNestedManyWithoutCompanyInput>;
  CmCase?: Maybe<CmCaseUncheckedCreateNestedManyWithoutCompanyInput>;
  CmCaseReply?: Maybe<CmCaseReplyUncheckedCreateNestedManyWithoutCompanyInput>;
  MarketingSource?: Maybe<MarketingSourceUncheckedCreateNestedManyWithoutCompanyInput>;
  ThirdPartyAccess?: Maybe<ThirdPartyAccessUncheckedCreateNestedManyWithoutCompanyInput>;
  TwoFactorHistory?: Maybe<TwoFactorHistoryUncheckedCreateNestedManyWithoutCompanyInput>;
  User?: Maybe<UserUncheckedCreateNestedManyWithoutCompanyInput>;
  admin: Scalars['Int'];
  creation_date: Scalars['DateTime'];
  cron_enabled?: Maybe<Scalars['Boolean']>;
  details?: Maybe<CompanyDetailsUncheckedCreateNestedOneWithoutCompanyInput>;
  digit8: Scalars['Int'];
  id?: Maybe<Scalars['Int']>;
  image: Scalars['String'];
  remote_connect?: Maybe<Scalars['String']>;
  remote_url?: Maybe<Scalars['String']>;
  slug?: Maybe<Scalars['String']>;
  subscription?: Maybe<CompanySubscriptionUncheckedCreateNestedOneWithoutCompanyInput>;
  user: Scalars['String'];
};

export type CompanyUncheckedCreateWithoutCmCaseInput = {
  AcceptEmailToken?: Maybe<AcceptEmailTokenUncheckedCreateNestedManyWithoutCompanyInput>;
  AccountBalance?: Maybe<AccountBalanceUncheckedCreateNestedManyWithoutCompanyInput>;
  BookingStatus?: Maybe<BookingStatusUncheckedCreateNestedManyWithoutCompanyInput>;
  Candidate?: Maybe<CandidateUncheckedCreateNestedManyWithoutCompanyInput>;
  CmCampaign?: Maybe<CmCampaignUncheckedCreateNestedManyWithoutCompanyInput>;
  CmCaseReply?: Maybe<CmCaseReplyUncheckedCreateNestedManyWithoutCompanyInput>;
  MarketingSource?: Maybe<MarketingSourceUncheckedCreateNestedManyWithoutCompanyInput>;
  ThirdPartyAccess?: Maybe<ThirdPartyAccessUncheckedCreateNestedManyWithoutCompanyInput>;
  TwoFactorHistory?: Maybe<TwoFactorHistoryUncheckedCreateNestedManyWithoutCompanyInput>;
  User?: Maybe<UserUncheckedCreateNestedManyWithoutCompanyInput>;
  admin: Scalars['Int'];
  creation_date: Scalars['DateTime'];
  cron_enabled?: Maybe<Scalars['Boolean']>;
  details?: Maybe<CompanyDetailsUncheckedCreateNestedOneWithoutCompanyInput>;
  digit8: Scalars['Int'];
  id?: Maybe<Scalars['Int']>;
  image: Scalars['String'];
  remote_connect?: Maybe<Scalars['String']>;
  remote_url?: Maybe<Scalars['String']>;
  slug?: Maybe<Scalars['String']>;
  subscription?: Maybe<CompanySubscriptionUncheckedCreateNestedOneWithoutCompanyInput>;
  user: Scalars['String'];
};

export type CompanyUncheckedCreateWithoutCmCaseReplyInput = {
  AcceptEmailToken?: Maybe<AcceptEmailTokenUncheckedCreateNestedManyWithoutCompanyInput>;
  AccountBalance?: Maybe<AccountBalanceUncheckedCreateNestedManyWithoutCompanyInput>;
  BookingStatus?: Maybe<BookingStatusUncheckedCreateNestedManyWithoutCompanyInput>;
  Candidate?: Maybe<CandidateUncheckedCreateNestedManyWithoutCompanyInput>;
  CmCampaign?: Maybe<CmCampaignUncheckedCreateNestedManyWithoutCompanyInput>;
  CmCase?: Maybe<CmCaseUncheckedCreateNestedManyWithoutCompanyInput>;
  MarketingSource?: Maybe<MarketingSourceUncheckedCreateNestedManyWithoutCompanyInput>;
  ThirdPartyAccess?: Maybe<ThirdPartyAccessUncheckedCreateNestedManyWithoutCompanyInput>;
  TwoFactorHistory?: Maybe<TwoFactorHistoryUncheckedCreateNestedManyWithoutCompanyInput>;
  User?: Maybe<UserUncheckedCreateNestedManyWithoutCompanyInput>;
  admin: Scalars['Int'];
  creation_date: Scalars['DateTime'];
  cron_enabled?: Maybe<Scalars['Boolean']>;
  details?: Maybe<CompanyDetailsUncheckedCreateNestedOneWithoutCompanyInput>;
  digit8: Scalars['Int'];
  id?: Maybe<Scalars['Int']>;
  image: Scalars['String'];
  remote_connect?: Maybe<Scalars['String']>;
  remote_url?: Maybe<Scalars['String']>;
  slug?: Maybe<Scalars['String']>;
  subscription?: Maybe<CompanySubscriptionUncheckedCreateNestedOneWithoutCompanyInput>;
  user: Scalars['String'];
};

export type CompanyUncheckedCreateWithoutDetailsInput = {
  AcceptEmailToken?: Maybe<AcceptEmailTokenUncheckedCreateNestedManyWithoutCompanyInput>;
  AccountBalance?: Maybe<AccountBalanceUncheckedCreateNestedManyWithoutCompanyInput>;
  BookingStatus?: Maybe<BookingStatusUncheckedCreateNestedManyWithoutCompanyInput>;
  Candidate?: Maybe<CandidateUncheckedCreateNestedManyWithoutCompanyInput>;
  CmCampaign?: Maybe<CmCampaignUncheckedCreateNestedManyWithoutCompanyInput>;
  CmCase?: Maybe<CmCaseUncheckedCreateNestedManyWithoutCompanyInput>;
  CmCaseReply?: Maybe<CmCaseReplyUncheckedCreateNestedManyWithoutCompanyInput>;
  MarketingSource?: Maybe<MarketingSourceUncheckedCreateNestedManyWithoutCompanyInput>;
  ThirdPartyAccess?: Maybe<ThirdPartyAccessUncheckedCreateNestedManyWithoutCompanyInput>;
  TwoFactorHistory?: Maybe<TwoFactorHistoryUncheckedCreateNestedManyWithoutCompanyInput>;
  User?: Maybe<UserUncheckedCreateNestedManyWithoutCompanyInput>;
  admin: Scalars['Int'];
  creation_date: Scalars['DateTime'];
  cron_enabled?: Maybe<Scalars['Boolean']>;
  digit8: Scalars['Int'];
  id?: Maybe<Scalars['Int']>;
  image: Scalars['String'];
  remote_connect?: Maybe<Scalars['String']>;
  remote_url?: Maybe<Scalars['String']>;
  slug?: Maybe<Scalars['String']>;
  subscription?: Maybe<CompanySubscriptionUncheckedCreateNestedOneWithoutCompanyInput>;
  user: Scalars['String'];
};

export type CompanyUncheckedCreateWithoutMarketingSourceInput = {
  AcceptEmailToken?: Maybe<AcceptEmailTokenUncheckedCreateNestedManyWithoutCompanyInput>;
  AccountBalance?: Maybe<AccountBalanceUncheckedCreateNestedManyWithoutCompanyInput>;
  BookingStatus?: Maybe<BookingStatusUncheckedCreateNestedManyWithoutCompanyInput>;
  Candidate?: Maybe<CandidateUncheckedCreateNestedManyWithoutCompanyInput>;
  CmCampaign?: Maybe<CmCampaignUncheckedCreateNestedManyWithoutCompanyInput>;
  CmCase?: Maybe<CmCaseUncheckedCreateNestedManyWithoutCompanyInput>;
  CmCaseReply?: Maybe<CmCaseReplyUncheckedCreateNestedManyWithoutCompanyInput>;
  ThirdPartyAccess?: Maybe<ThirdPartyAccessUncheckedCreateNestedManyWithoutCompanyInput>;
  TwoFactorHistory?: Maybe<TwoFactorHistoryUncheckedCreateNestedManyWithoutCompanyInput>;
  User?: Maybe<UserUncheckedCreateNestedManyWithoutCompanyInput>;
  admin: Scalars['Int'];
  creation_date: Scalars['DateTime'];
  cron_enabled?: Maybe<Scalars['Boolean']>;
  details?: Maybe<CompanyDetailsUncheckedCreateNestedOneWithoutCompanyInput>;
  digit8: Scalars['Int'];
  id?: Maybe<Scalars['Int']>;
  image: Scalars['String'];
  remote_connect?: Maybe<Scalars['String']>;
  remote_url?: Maybe<Scalars['String']>;
  slug?: Maybe<Scalars['String']>;
  subscription?: Maybe<CompanySubscriptionUncheckedCreateNestedOneWithoutCompanyInput>;
  user: Scalars['String'];
};

export type CompanyUncheckedCreateWithoutSubscriptionInput = {
  AcceptEmailToken?: Maybe<AcceptEmailTokenUncheckedCreateNestedManyWithoutCompanyInput>;
  AccountBalance?: Maybe<AccountBalanceUncheckedCreateNestedManyWithoutCompanyInput>;
  BookingStatus?: Maybe<BookingStatusUncheckedCreateNestedManyWithoutCompanyInput>;
  Candidate?: Maybe<CandidateUncheckedCreateNestedManyWithoutCompanyInput>;
  CmCampaign?: Maybe<CmCampaignUncheckedCreateNestedManyWithoutCompanyInput>;
  CmCase?: Maybe<CmCaseUncheckedCreateNestedManyWithoutCompanyInput>;
  CmCaseReply?: Maybe<CmCaseReplyUncheckedCreateNestedManyWithoutCompanyInput>;
  MarketingSource?: Maybe<MarketingSourceUncheckedCreateNestedManyWithoutCompanyInput>;
  ThirdPartyAccess?: Maybe<ThirdPartyAccessUncheckedCreateNestedManyWithoutCompanyInput>;
  TwoFactorHistory?: Maybe<TwoFactorHistoryUncheckedCreateNestedManyWithoutCompanyInput>;
  User?: Maybe<UserUncheckedCreateNestedManyWithoutCompanyInput>;
  admin: Scalars['Int'];
  creation_date: Scalars['DateTime'];
  cron_enabled?: Maybe<Scalars['Boolean']>;
  details?: Maybe<CompanyDetailsUncheckedCreateNestedOneWithoutCompanyInput>;
  digit8: Scalars['Int'];
  id?: Maybe<Scalars['Int']>;
  image: Scalars['String'];
  remote_connect?: Maybe<Scalars['String']>;
  remote_url?: Maybe<Scalars['String']>;
  slug?: Maybe<Scalars['String']>;
  user: Scalars['String'];
};

export type CompanyUncheckedCreateWithoutThirdPartyAccessInput = {
  AcceptEmailToken?: Maybe<AcceptEmailTokenUncheckedCreateNestedManyWithoutCompanyInput>;
  AccountBalance?: Maybe<AccountBalanceUncheckedCreateNestedManyWithoutCompanyInput>;
  BookingStatus?: Maybe<BookingStatusUncheckedCreateNestedManyWithoutCompanyInput>;
  Candidate?: Maybe<CandidateUncheckedCreateNestedManyWithoutCompanyInput>;
  CmCampaign?: Maybe<CmCampaignUncheckedCreateNestedManyWithoutCompanyInput>;
  CmCase?: Maybe<CmCaseUncheckedCreateNestedManyWithoutCompanyInput>;
  CmCaseReply?: Maybe<CmCaseReplyUncheckedCreateNestedManyWithoutCompanyInput>;
  MarketingSource?: Maybe<MarketingSourceUncheckedCreateNestedManyWithoutCompanyInput>;
  TwoFactorHistory?: Maybe<TwoFactorHistoryUncheckedCreateNestedManyWithoutCompanyInput>;
  User?: Maybe<UserUncheckedCreateNestedManyWithoutCompanyInput>;
  admin: Scalars['Int'];
  creation_date: Scalars['DateTime'];
  cron_enabled?: Maybe<Scalars['Boolean']>;
  details?: Maybe<CompanyDetailsUncheckedCreateNestedOneWithoutCompanyInput>;
  digit8: Scalars['Int'];
  id?: Maybe<Scalars['Int']>;
  image: Scalars['String'];
  remote_connect?: Maybe<Scalars['String']>;
  remote_url?: Maybe<Scalars['String']>;
  slug?: Maybe<Scalars['String']>;
  subscription?: Maybe<CompanySubscriptionUncheckedCreateNestedOneWithoutCompanyInput>;
  user: Scalars['String'];
};

export type CompanyUncheckedCreateWithoutTwoFactorHistoryInput = {
  AcceptEmailToken?: Maybe<AcceptEmailTokenUncheckedCreateNestedManyWithoutCompanyInput>;
  AccountBalance?: Maybe<AccountBalanceUncheckedCreateNestedManyWithoutCompanyInput>;
  BookingStatus?: Maybe<BookingStatusUncheckedCreateNestedManyWithoutCompanyInput>;
  Candidate?: Maybe<CandidateUncheckedCreateNestedManyWithoutCompanyInput>;
  CmCampaign?: Maybe<CmCampaignUncheckedCreateNestedManyWithoutCompanyInput>;
  CmCase?: Maybe<CmCaseUncheckedCreateNestedManyWithoutCompanyInput>;
  CmCaseReply?: Maybe<CmCaseReplyUncheckedCreateNestedManyWithoutCompanyInput>;
  MarketingSource?: Maybe<MarketingSourceUncheckedCreateNestedManyWithoutCompanyInput>;
  ThirdPartyAccess?: Maybe<ThirdPartyAccessUncheckedCreateNestedManyWithoutCompanyInput>;
  User?: Maybe<UserUncheckedCreateNestedManyWithoutCompanyInput>;
  admin: Scalars['Int'];
  creation_date: Scalars['DateTime'];
  cron_enabled?: Maybe<Scalars['Boolean']>;
  details?: Maybe<CompanyDetailsUncheckedCreateNestedOneWithoutCompanyInput>;
  digit8: Scalars['Int'];
  id?: Maybe<Scalars['Int']>;
  image: Scalars['String'];
  remote_connect?: Maybe<Scalars['String']>;
  remote_url?: Maybe<Scalars['String']>;
  slug?: Maybe<Scalars['String']>;
  subscription?: Maybe<CompanySubscriptionUncheckedCreateNestedOneWithoutCompanyInput>;
  user: Scalars['String'];
};

export type CompanyUncheckedCreateWithoutUserInput = {
  AcceptEmailToken?: Maybe<AcceptEmailTokenUncheckedCreateNestedManyWithoutCompanyInput>;
  AccountBalance?: Maybe<AccountBalanceUncheckedCreateNestedManyWithoutCompanyInput>;
  BookingStatus?: Maybe<BookingStatusUncheckedCreateNestedManyWithoutCompanyInput>;
  Candidate?: Maybe<CandidateUncheckedCreateNestedManyWithoutCompanyInput>;
  CmCampaign?: Maybe<CmCampaignUncheckedCreateNestedManyWithoutCompanyInput>;
  CmCase?: Maybe<CmCaseUncheckedCreateNestedManyWithoutCompanyInput>;
  CmCaseReply?: Maybe<CmCaseReplyUncheckedCreateNestedManyWithoutCompanyInput>;
  MarketingSource?: Maybe<MarketingSourceUncheckedCreateNestedManyWithoutCompanyInput>;
  ThirdPartyAccess?: Maybe<ThirdPartyAccessUncheckedCreateNestedManyWithoutCompanyInput>;
  TwoFactorHistory?: Maybe<TwoFactorHistoryUncheckedCreateNestedManyWithoutCompanyInput>;
  admin: Scalars['Int'];
  creation_date: Scalars['DateTime'];
  cron_enabled?: Maybe<Scalars['Boolean']>;
  details?: Maybe<CompanyDetailsUncheckedCreateNestedOneWithoutCompanyInput>;
  digit8: Scalars['Int'];
  id?: Maybe<Scalars['Int']>;
  image: Scalars['String'];
  remote_connect?: Maybe<Scalars['String']>;
  remote_url?: Maybe<Scalars['String']>;
  slug?: Maybe<Scalars['String']>;
  subscription?: Maybe<CompanySubscriptionUncheckedCreateNestedOneWithoutCompanyInput>;
  user: Scalars['String'];
};

export type CompanyUncheckedUpdateWithoutAcceptEmailTokenInput = {
  AccountBalance?: Maybe<AccountBalanceUncheckedUpdateManyWithoutCompanyInput>;
  BookingStatus?: Maybe<BookingStatusUncheckedUpdateManyWithoutCompanyInput>;
  Candidate?: Maybe<CandidateUncheckedUpdateManyWithoutCompanyInput>;
  CmCampaign?: Maybe<CmCampaignUncheckedUpdateManyWithoutCompanyInput>;
  CmCase?: Maybe<CmCaseUncheckedUpdateManyWithoutCompanyInput>;
  CmCaseReply?: Maybe<CmCaseReplyUncheckedUpdateManyWithoutCompanyInput>;
  MarketingSource?: Maybe<MarketingSourceUncheckedUpdateManyWithoutCompanyInput>;
  ThirdPartyAccess?: Maybe<ThirdPartyAccessUncheckedUpdateManyWithoutCompanyInput>;
  TwoFactorHistory?: Maybe<TwoFactorHistoryUncheckedUpdateManyWithoutCompanyInput>;
  User?: Maybe<UserUncheckedUpdateManyWithoutCompanyInput>;
  admin?: Maybe<IntFieldUpdateOperationsInput>;
  creation_date?: Maybe<DateTimeFieldUpdateOperationsInput>;
  cron_enabled?: Maybe<NullableBoolFieldUpdateOperationsInput>;
  details?: Maybe<CompanyDetailsUncheckedUpdateOneWithoutCompanyInput>;
  digit8?: Maybe<IntFieldUpdateOperationsInput>;
  id?: Maybe<IntFieldUpdateOperationsInput>;
  image?: Maybe<StringFieldUpdateOperationsInput>;
  remote_connect?: Maybe<NullableStringFieldUpdateOperationsInput>;
  remote_url?: Maybe<NullableStringFieldUpdateOperationsInput>;
  slug?: Maybe<NullableStringFieldUpdateOperationsInput>;
  subscription?: Maybe<CompanySubscriptionUncheckedUpdateOneWithoutCompanyInput>;
  user?: Maybe<StringFieldUpdateOperationsInput>;
};

export type CompanyUncheckedUpdateWithoutAccountBalanceInput = {
  AcceptEmailToken?: Maybe<AcceptEmailTokenUncheckedUpdateManyWithoutCompanyInput>;
  BookingStatus?: Maybe<BookingStatusUncheckedUpdateManyWithoutCompanyInput>;
  Candidate?: Maybe<CandidateUncheckedUpdateManyWithoutCompanyInput>;
  CmCampaign?: Maybe<CmCampaignUncheckedUpdateManyWithoutCompanyInput>;
  CmCase?: Maybe<CmCaseUncheckedUpdateManyWithoutCompanyInput>;
  CmCaseReply?: Maybe<CmCaseReplyUncheckedUpdateManyWithoutCompanyInput>;
  MarketingSource?: Maybe<MarketingSourceUncheckedUpdateManyWithoutCompanyInput>;
  ThirdPartyAccess?: Maybe<ThirdPartyAccessUncheckedUpdateManyWithoutCompanyInput>;
  TwoFactorHistory?: Maybe<TwoFactorHistoryUncheckedUpdateManyWithoutCompanyInput>;
  User?: Maybe<UserUncheckedUpdateManyWithoutCompanyInput>;
  admin?: Maybe<IntFieldUpdateOperationsInput>;
  creation_date?: Maybe<DateTimeFieldUpdateOperationsInput>;
  cron_enabled?: Maybe<NullableBoolFieldUpdateOperationsInput>;
  details?: Maybe<CompanyDetailsUncheckedUpdateOneWithoutCompanyInput>;
  digit8?: Maybe<IntFieldUpdateOperationsInput>;
  id?: Maybe<IntFieldUpdateOperationsInput>;
  image?: Maybe<StringFieldUpdateOperationsInput>;
  remote_connect?: Maybe<NullableStringFieldUpdateOperationsInput>;
  remote_url?: Maybe<NullableStringFieldUpdateOperationsInput>;
  slug?: Maybe<NullableStringFieldUpdateOperationsInput>;
  subscription?: Maybe<CompanySubscriptionUncheckedUpdateOneWithoutCompanyInput>;
  user?: Maybe<StringFieldUpdateOperationsInput>;
};

export type CompanyUncheckedUpdateWithoutBookingStatusInput = {
  AcceptEmailToken?: Maybe<AcceptEmailTokenUncheckedUpdateManyWithoutCompanyInput>;
  AccountBalance?: Maybe<AccountBalanceUncheckedUpdateManyWithoutCompanyInput>;
  Candidate?: Maybe<CandidateUncheckedUpdateManyWithoutCompanyInput>;
  CmCampaign?: Maybe<CmCampaignUncheckedUpdateManyWithoutCompanyInput>;
  CmCase?: Maybe<CmCaseUncheckedUpdateManyWithoutCompanyInput>;
  CmCaseReply?: Maybe<CmCaseReplyUncheckedUpdateManyWithoutCompanyInput>;
  MarketingSource?: Maybe<MarketingSourceUncheckedUpdateManyWithoutCompanyInput>;
  ThirdPartyAccess?: Maybe<ThirdPartyAccessUncheckedUpdateManyWithoutCompanyInput>;
  TwoFactorHistory?: Maybe<TwoFactorHistoryUncheckedUpdateManyWithoutCompanyInput>;
  User?: Maybe<UserUncheckedUpdateManyWithoutCompanyInput>;
  admin?: Maybe<IntFieldUpdateOperationsInput>;
  creation_date?: Maybe<DateTimeFieldUpdateOperationsInput>;
  cron_enabled?: Maybe<NullableBoolFieldUpdateOperationsInput>;
  details?: Maybe<CompanyDetailsUncheckedUpdateOneWithoutCompanyInput>;
  digit8?: Maybe<IntFieldUpdateOperationsInput>;
  id?: Maybe<IntFieldUpdateOperationsInput>;
  image?: Maybe<StringFieldUpdateOperationsInput>;
  remote_connect?: Maybe<NullableStringFieldUpdateOperationsInput>;
  remote_url?: Maybe<NullableStringFieldUpdateOperationsInput>;
  slug?: Maybe<NullableStringFieldUpdateOperationsInput>;
  subscription?: Maybe<CompanySubscriptionUncheckedUpdateOneWithoutCompanyInput>;
  user?: Maybe<StringFieldUpdateOperationsInput>;
};

export type CompanyUncheckedUpdateWithoutCandidateInput = {
  AcceptEmailToken?: Maybe<AcceptEmailTokenUncheckedUpdateManyWithoutCompanyInput>;
  AccountBalance?: Maybe<AccountBalanceUncheckedUpdateManyWithoutCompanyInput>;
  BookingStatus?: Maybe<BookingStatusUncheckedUpdateManyWithoutCompanyInput>;
  CmCampaign?: Maybe<CmCampaignUncheckedUpdateManyWithoutCompanyInput>;
  CmCase?: Maybe<CmCaseUncheckedUpdateManyWithoutCompanyInput>;
  CmCaseReply?: Maybe<CmCaseReplyUncheckedUpdateManyWithoutCompanyInput>;
  MarketingSource?: Maybe<MarketingSourceUncheckedUpdateManyWithoutCompanyInput>;
  ThirdPartyAccess?: Maybe<ThirdPartyAccessUncheckedUpdateManyWithoutCompanyInput>;
  TwoFactorHistory?: Maybe<TwoFactorHistoryUncheckedUpdateManyWithoutCompanyInput>;
  User?: Maybe<UserUncheckedUpdateManyWithoutCompanyInput>;
  admin?: Maybe<IntFieldUpdateOperationsInput>;
  creation_date?: Maybe<DateTimeFieldUpdateOperationsInput>;
  cron_enabled?: Maybe<NullableBoolFieldUpdateOperationsInput>;
  details?: Maybe<CompanyDetailsUncheckedUpdateOneWithoutCompanyInput>;
  digit8?: Maybe<IntFieldUpdateOperationsInput>;
  id?: Maybe<IntFieldUpdateOperationsInput>;
  image?: Maybe<StringFieldUpdateOperationsInput>;
  remote_connect?: Maybe<NullableStringFieldUpdateOperationsInput>;
  remote_url?: Maybe<NullableStringFieldUpdateOperationsInput>;
  slug?: Maybe<NullableStringFieldUpdateOperationsInput>;
  subscription?: Maybe<CompanySubscriptionUncheckedUpdateOneWithoutCompanyInput>;
  user?: Maybe<StringFieldUpdateOperationsInput>;
};

export type CompanyUncheckedUpdateWithoutCmCampaignInput = {
  AcceptEmailToken?: Maybe<AcceptEmailTokenUncheckedUpdateManyWithoutCompanyInput>;
  AccountBalance?: Maybe<AccountBalanceUncheckedUpdateManyWithoutCompanyInput>;
  BookingStatus?: Maybe<BookingStatusUncheckedUpdateManyWithoutCompanyInput>;
  Candidate?: Maybe<CandidateUncheckedUpdateManyWithoutCompanyInput>;
  CmCase?: Maybe<CmCaseUncheckedUpdateManyWithoutCompanyInput>;
  CmCaseReply?: Maybe<CmCaseReplyUncheckedUpdateManyWithoutCompanyInput>;
  MarketingSource?: Maybe<MarketingSourceUncheckedUpdateManyWithoutCompanyInput>;
  ThirdPartyAccess?: Maybe<ThirdPartyAccessUncheckedUpdateManyWithoutCompanyInput>;
  TwoFactorHistory?: Maybe<TwoFactorHistoryUncheckedUpdateManyWithoutCompanyInput>;
  User?: Maybe<UserUncheckedUpdateManyWithoutCompanyInput>;
  admin?: Maybe<IntFieldUpdateOperationsInput>;
  creation_date?: Maybe<DateTimeFieldUpdateOperationsInput>;
  cron_enabled?: Maybe<NullableBoolFieldUpdateOperationsInput>;
  details?: Maybe<CompanyDetailsUncheckedUpdateOneWithoutCompanyInput>;
  digit8?: Maybe<IntFieldUpdateOperationsInput>;
  id?: Maybe<IntFieldUpdateOperationsInput>;
  image?: Maybe<StringFieldUpdateOperationsInput>;
  remote_connect?: Maybe<NullableStringFieldUpdateOperationsInput>;
  remote_url?: Maybe<NullableStringFieldUpdateOperationsInput>;
  slug?: Maybe<NullableStringFieldUpdateOperationsInput>;
  subscription?: Maybe<CompanySubscriptionUncheckedUpdateOneWithoutCompanyInput>;
  user?: Maybe<StringFieldUpdateOperationsInput>;
};

export type CompanyUncheckedUpdateWithoutCmCaseInput = {
  AcceptEmailToken?: Maybe<AcceptEmailTokenUncheckedUpdateManyWithoutCompanyInput>;
  AccountBalance?: Maybe<AccountBalanceUncheckedUpdateManyWithoutCompanyInput>;
  BookingStatus?: Maybe<BookingStatusUncheckedUpdateManyWithoutCompanyInput>;
  Candidate?: Maybe<CandidateUncheckedUpdateManyWithoutCompanyInput>;
  CmCampaign?: Maybe<CmCampaignUncheckedUpdateManyWithoutCompanyInput>;
  CmCaseReply?: Maybe<CmCaseReplyUncheckedUpdateManyWithoutCompanyInput>;
  MarketingSource?: Maybe<MarketingSourceUncheckedUpdateManyWithoutCompanyInput>;
  ThirdPartyAccess?: Maybe<ThirdPartyAccessUncheckedUpdateManyWithoutCompanyInput>;
  TwoFactorHistory?: Maybe<TwoFactorHistoryUncheckedUpdateManyWithoutCompanyInput>;
  User?: Maybe<UserUncheckedUpdateManyWithoutCompanyInput>;
  admin?: Maybe<IntFieldUpdateOperationsInput>;
  creation_date?: Maybe<DateTimeFieldUpdateOperationsInput>;
  cron_enabled?: Maybe<NullableBoolFieldUpdateOperationsInput>;
  details?: Maybe<CompanyDetailsUncheckedUpdateOneWithoutCompanyInput>;
  digit8?: Maybe<IntFieldUpdateOperationsInput>;
  id?: Maybe<IntFieldUpdateOperationsInput>;
  image?: Maybe<StringFieldUpdateOperationsInput>;
  remote_connect?: Maybe<NullableStringFieldUpdateOperationsInput>;
  remote_url?: Maybe<NullableStringFieldUpdateOperationsInput>;
  slug?: Maybe<NullableStringFieldUpdateOperationsInput>;
  subscription?: Maybe<CompanySubscriptionUncheckedUpdateOneWithoutCompanyInput>;
  user?: Maybe<StringFieldUpdateOperationsInput>;
};

export type CompanyUncheckedUpdateWithoutCmCaseReplyInput = {
  AcceptEmailToken?: Maybe<AcceptEmailTokenUncheckedUpdateManyWithoutCompanyInput>;
  AccountBalance?: Maybe<AccountBalanceUncheckedUpdateManyWithoutCompanyInput>;
  BookingStatus?: Maybe<BookingStatusUncheckedUpdateManyWithoutCompanyInput>;
  Candidate?: Maybe<CandidateUncheckedUpdateManyWithoutCompanyInput>;
  CmCampaign?: Maybe<CmCampaignUncheckedUpdateManyWithoutCompanyInput>;
  CmCase?: Maybe<CmCaseUncheckedUpdateManyWithoutCompanyInput>;
  MarketingSource?: Maybe<MarketingSourceUncheckedUpdateManyWithoutCompanyInput>;
  ThirdPartyAccess?: Maybe<ThirdPartyAccessUncheckedUpdateManyWithoutCompanyInput>;
  TwoFactorHistory?: Maybe<TwoFactorHistoryUncheckedUpdateManyWithoutCompanyInput>;
  User?: Maybe<UserUncheckedUpdateManyWithoutCompanyInput>;
  admin?: Maybe<IntFieldUpdateOperationsInput>;
  creation_date?: Maybe<DateTimeFieldUpdateOperationsInput>;
  cron_enabled?: Maybe<NullableBoolFieldUpdateOperationsInput>;
  details?: Maybe<CompanyDetailsUncheckedUpdateOneWithoutCompanyInput>;
  digit8?: Maybe<IntFieldUpdateOperationsInput>;
  id?: Maybe<IntFieldUpdateOperationsInput>;
  image?: Maybe<StringFieldUpdateOperationsInput>;
  remote_connect?: Maybe<NullableStringFieldUpdateOperationsInput>;
  remote_url?: Maybe<NullableStringFieldUpdateOperationsInput>;
  slug?: Maybe<NullableStringFieldUpdateOperationsInput>;
  subscription?: Maybe<CompanySubscriptionUncheckedUpdateOneWithoutCompanyInput>;
  user?: Maybe<StringFieldUpdateOperationsInput>;
};

export type CompanyUncheckedUpdateWithoutDetailsInput = {
  AcceptEmailToken?: Maybe<AcceptEmailTokenUncheckedUpdateManyWithoutCompanyInput>;
  AccountBalance?: Maybe<AccountBalanceUncheckedUpdateManyWithoutCompanyInput>;
  BookingStatus?: Maybe<BookingStatusUncheckedUpdateManyWithoutCompanyInput>;
  Candidate?: Maybe<CandidateUncheckedUpdateManyWithoutCompanyInput>;
  CmCampaign?: Maybe<CmCampaignUncheckedUpdateManyWithoutCompanyInput>;
  CmCase?: Maybe<CmCaseUncheckedUpdateManyWithoutCompanyInput>;
  CmCaseReply?: Maybe<CmCaseReplyUncheckedUpdateManyWithoutCompanyInput>;
  MarketingSource?: Maybe<MarketingSourceUncheckedUpdateManyWithoutCompanyInput>;
  ThirdPartyAccess?: Maybe<ThirdPartyAccessUncheckedUpdateManyWithoutCompanyInput>;
  TwoFactorHistory?: Maybe<TwoFactorHistoryUncheckedUpdateManyWithoutCompanyInput>;
  User?: Maybe<UserUncheckedUpdateManyWithoutCompanyInput>;
  admin?: Maybe<IntFieldUpdateOperationsInput>;
  creation_date?: Maybe<DateTimeFieldUpdateOperationsInput>;
  cron_enabled?: Maybe<NullableBoolFieldUpdateOperationsInput>;
  digit8?: Maybe<IntFieldUpdateOperationsInput>;
  id?: Maybe<IntFieldUpdateOperationsInput>;
  image?: Maybe<StringFieldUpdateOperationsInput>;
  remote_connect?: Maybe<NullableStringFieldUpdateOperationsInput>;
  remote_url?: Maybe<NullableStringFieldUpdateOperationsInput>;
  slug?: Maybe<NullableStringFieldUpdateOperationsInput>;
  subscription?: Maybe<CompanySubscriptionUncheckedUpdateOneWithoutCompanyInput>;
  user?: Maybe<StringFieldUpdateOperationsInput>;
};

export type CompanyUncheckedUpdateWithoutMarketingSourceInput = {
  AcceptEmailToken?: Maybe<AcceptEmailTokenUncheckedUpdateManyWithoutCompanyInput>;
  AccountBalance?: Maybe<AccountBalanceUncheckedUpdateManyWithoutCompanyInput>;
  BookingStatus?: Maybe<BookingStatusUncheckedUpdateManyWithoutCompanyInput>;
  Candidate?: Maybe<CandidateUncheckedUpdateManyWithoutCompanyInput>;
  CmCampaign?: Maybe<CmCampaignUncheckedUpdateManyWithoutCompanyInput>;
  CmCase?: Maybe<CmCaseUncheckedUpdateManyWithoutCompanyInput>;
  CmCaseReply?: Maybe<CmCaseReplyUncheckedUpdateManyWithoutCompanyInput>;
  ThirdPartyAccess?: Maybe<ThirdPartyAccessUncheckedUpdateManyWithoutCompanyInput>;
  TwoFactorHistory?: Maybe<TwoFactorHistoryUncheckedUpdateManyWithoutCompanyInput>;
  User?: Maybe<UserUncheckedUpdateManyWithoutCompanyInput>;
  admin?: Maybe<IntFieldUpdateOperationsInput>;
  creation_date?: Maybe<DateTimeFieldUpdateOperationsInput>;
  cron_enabled?: Maybe<NullableBoolFieldUpdateOperationsInput>;
  details?: Maybe<CompanyDetailsUncheckedUpdateOneWithoutCompanyInput>;
  digit8?: Maybe<IntFieldUpdateOperationsInput>;
  id?: Maybe<IntFieldUpdateOperationsInput>;
  image?: Maybe<StringFieldUpdateOperationsInput>;
  remote_connect?: Maybe<NullableStringFieldUpdateOperationsInput>;
  remote_url?: Maybe<NullableStringFieldUpdateOperationsInput>;
  slug?: Maybe<NullableStringFieldUpdateOperationsInput>;
  subscription?: Maybe<CompanySubscriptionUncheckedUpdateOneWithoutCompanyInput>;
  user?: Maybe<StringFieldUpdateOperationsInput>;
};

export type CompanyUncheckedUpdateWithoutSubscriptionInput = {
  AcceptEmailToken?: Maybe<AcceptEmailTokenUncheckedUpdateManyWithoutCompanyInput>;
  AccountBalance?: Maybe<AccountBalanceUncheckedUpdateManyWithoutCompanyInput>;
  BookingStatus?: Maybe<BookingStatusUncheckedUpdateManyWithoutCompanyInput>;
  Candidate?: Maybe<CandidateUncheckedUpdateManyWithoutCompanyInput>;
  CmCampaign?: Maybe<CmCampaignUncheckedUpdateManyWithoutCompanyInput>;
  CmCase?: Maybe<CmCaseUncheckedUpdateManyWithoutCompanyInput>;
  CmCaseReply?: Maybe<CmCaseReplyUncheckedUpdateManyWithoutCompanyInput>;
  MarketingSource?: Maybe<MarketingSourceUncheckedUpdateManyWithoutCompanyInput>;
  ThirdPartyAccess?: Maybe<ThirdPartyAccessUncheckedUpdateManyWithoutCompanyInput>;
  TwoFactorHistory?: Maybe<TwoFactorHistoryUncheckedUpdateManyWithoutCompanyInput>;
  User?: Maybe<UserUncheckedUpdateManyWithoutCompanyInput>;
  admin?: Maybe<IntFieldUpdateOperationsInput>;
  creation_date?: Maybe<DateTimeFieldUpdateOperationsInput>;
  cron_enabled?: Maybe<NullableBoolFieldUpdateOperationsInput>;
  details?: Maybe<CompanyDetailsUncheckedUpdateOneWithoutCompanyInput>;
  digit8?: Maybe<IntFieldUpdateOperationsInput>;
  id?: Maybe<IntFieldUpdateOperationsInput>;
  image?: Maybe<StringFieldUpdateOperationsInput>;
  remote_connect?: Maybe<NullableStringFieldUpdateOperationsInput>;
  remote_url?: Maybe<NullableStringFieldUpdateOperationsInput>;
  slug?: Maybe<NullableStringFieldUpdateOperationsInput>;
  user?: Maybe<StringFieldUpdateOperationsInput>;
};

export type CompanyUncheckedUpdateWithoutThirdPartyAccessInput = {
  AcceptEmailToken?: Maybe<AcceptEmailTokenUncheckedUpdateManyWithoutCompanyInput>;
  AccountBalance?: Maybe<AccountBalanceUncheckedUpdateManyWithoutCompanyInput>;
  BookingStatus?: Maybe<BookingStatusUncheckedUpdateManyWithoutCompanyInput>;
  Candidate?: Maybe<CandidateUncheckedUpdateManyWithoutCompanyInput>;
  CmCampaign?: Maybe<CmCampaignUncheckedUpdateManyWithoutCompanyInput>;
  CmCase?: Maybe<CmCaseUncheckedUpdateManyWithoutCompanyInput>;
  CmCaseReply?: Maybe<CmCaseReplyUncheckedUpdateManyWithoutCompanyInput>;
  MarketingSource?: Maybe<MarketingSourceUncheckedUpdateManyWithoutCompanyInput>;
  TwoFactorHistory?: Maybe<TwoFactorHistoryUncheckedUpdateManyWithoutCompanyInput>;
  User?: Maybe<UserUncheckedUpdateManyWithoutCompanyInput>;
  admin?: Maybe<IntFieldUpdateOperationsInput>;
  creation_date?: Maybe<DateTimeFieldUpdateOperationsInput>;
  cron_enabled?: Maybe<NullableBoolFieldUpdateOperationsInput>;
  details?: Maybe<CompanyDetailsUncheckedUpdateOneWithoutCompanyInput>;
  digit8?: Maybe<IntFieldUpdateOperationsInput>;
  id?: Maybe<IntFieldUpdateOperationsInput>;
  image?: Maybe<StringFieldUpdateOperationsInput>;
  remote_connect?: Maybe<NullableStringFieldUpdateOperationsInput>;
  remote_url?: Maybe<NullableStringFieldUpdateOperationsInput>;
  slug?: Maybe<NullableStringFieldUpdateOperationsInput>;
  subscription?: Maybe<CompanySubscriptionUncheckedUpdateOneWithoutCompanyInput>;
  user?: Maybe<StringFieldUpdateOperationsInput>;
};

export type CompanyUncheckedUpdateWithoutTwoFactorHistoryInput = {
  AcceptEmailToken?: Maybe<AcceptEmailTokenUncheckedUpdateManyWithoutCompanyInput>;
  AccountBalance?: Maybe<AccountBalanceUncheckedUpdateManyWithoutCompanyInput>;
  BookingStatus?: Maybe<BookingStatusUncheckedUpdateManyWithoutCompanyInput>;
  Candidate?: Maybe<CandidateUncheckedUpdateManyWithoutCompanyInput>;
  CmCampaign?: Maybe<CmCampaignUncheckedUpdateManyWithoutCompanyInput>;
  CmCase?: Maybe<CmCaseUncheckedUpdateManyWithoutCompanyInput>;
  CmCaseReply?: Maybe<CmCaseReplyUncheckedUpdateManyWithoutCompanyInput>;
  MarketingSource?: Maybe<MarketingSourceUncheckedUpdateManyWithoutCompanyInput>;
  ThirdPartyAccess?: Maybe<ThirdPartyAccessUncheckedUpdateManyWithoutCompanyInput>;
  User?: Maybe<UserUncheckedUpdateManyWithoutCompanyInput>;
  admin?: Maybe<IntFieldUpdateOperationsInput>;
  creation_date?: Maybe<DateTimeFieldUpdateOperationsInput>;
  cron_enabled?: Maybe<NullableBoolFieldUpdateOperationsInput>;
  details?: Maybe<CompanyDetailsUncheckedUpdateOneWithoutCompanyInput>;
  digit8?: Maybe<IntFieldUpdateOperationsInput>;
  id?: Maybe<IntFieldUpdateOperationsInput>;
  image?: Maybe<StringFieldUpdateOperationsInput>;
  remote_connect?: Maybe<NullableStringFieldUpdateOperationsInput>;
  remote_url?: Maybe<NullableStringFieldUpdateOperationsInput>;
  slug?: Maybe<NullableStringFieldUpdateOperationsInput>;
  subscription?: Maybe<CompanySubscriptionUncheckedUpdateOneWithoutCompanyInput>;
  user?: Maybe<StringFieldUpdateOperationsInput>;
};

export type CompanyUncheckedUpdateWithoutUserInput = {
  AcceptEmailToken?: Maybe<AcceptEmailTokenUncheckedUpdateManyWithoutCompanyInput>;
  AccountBalance?: Maybe<AccountBalanceUncheckedUpdateManyWithoutCompanyInput>;
  BookingStatus?: Maybe<BookingStatusUncheckedUpdateManyWithoutCompanyInput>;
  Candidate?: Maybe<CandidateUncheckedUpdateManyWithoutCompanyInput>;
  CmCampaign?: Maybe<CmCampaignUncheckedUpdateManyWithoutCompanyInput>;
  CmCase?: Maybe<CmCaseUncheckedUpdateManyWithoutCompanyInput>;
  CmCaseReply?: Maybe<CmCaseReplyUncheckedUpdateManyWithoutCompanyInput>;
  MarketingSource?: Maybe<MarketingSourceUncheckedUpdateManyWithoutCompanyInput>;
  ThirdPartyAccess?: Maybe<ThirdPartyAccessUncheckedUpdateManyWithoutCompanyInput>;
  TwoFactorHistory?: Maybe<TwoFactorHistoryUncheckedUpdateManyWithoutCompanyInput>;
  admin?: Maybe<IntFieldUpdateOperationsInput>;
  creation_date?: Maybe<DateTimeFieldUpdateOperationsInput>;
  cron_enabled?: Maybe<NullableBoolFieldUpdateOperationsInput>;
  details?: Maybe<CompanyDetailsUncheckedUpdateOneWithoutCompanyInput>;
  digit8?: Maybe<IntFieldUpdateOperationsInput>;
  id?: Maybe<IntFieldUpdateOperationsInput>;
  image?: Maybe<StringFieldUpdateOperationsInput>;
  remote_connect?: Maybe<NullableStringFieldUpdateOperationsInput>;
  remote_url?: Maybe<NullableStringFieldUpdateOperationsInput>;
  slug?: Maybe<NullableStringFieldUpdateOperationsInput>;
  subscription?: Maybe<CompanySubscriptionUncheckedUpdateOneWithoutCompanyInput>;
  user?: Maybe<StringFieldUpdateOperationsInput>;
};

export type CompanyUpdateInput = {
  AcceptEmailToken?: Maybe<AcceptEmailTokenUpdateManyWithoutCompanyInput>;
  AccountBalance?: Maybe<AccountBalanceUpdateManyWithoutCompanyInput>;
  BookingStatus?: Maybe<BookingStatusUpdateManyWithoutCompanyInput>;
  Candidate?: Maybe<CandidateUpdateManyWithoutCompanyInput>;
  CmCampaign?: Maybe<CmCampaignUpdateManyWithoutCompanyInput>;
  CmCase?: Maybe<CmCaseUpdateManyWithoutCompanyInput>;
  CmCaseReply?: Maybe<CmCaseReplyUpdateManyWithoutCompanyInput>;
  MarketingSource?: Maybe<MarketingSourceUpdateManyWithoutCompanyInput>;
  ThirdPartyAccess?: Maybe<ThirdPartyAccessUpdateManyWithoutCompanyInput>;
  TwoFactorHistory?: Maybe<TwoFactorHistoryUpdateManyWithoutCompanyInput>;
  User?: Maybe<UserUpdateManyWithoutCompanyInput>;
  admin?: Maybe<IntFieldUpdateOperationsInput>;
  creation_date?: Maybe<DateTimeFieldUpdateOperationsInput>;
  cron_enabled?: Maybe<NullableBoolFieldUpdateOperationsInput>;
  details?: Maybe<CompanyDetailsUpdateOneWithoutCompanyInput>;
  digit8?: Maybe<IntFieldUpdateOperationsInput>;
  image?: Maybe<StringFieldUpdateOperationsInput>;
  remote_connect?: Maybe<NullableStringFieldUpdateOperationsInput>;
  remote_url?: Maybe<NullableStringFieldUpdateOperationsInput>;
  slug?: Maybe<NullableStringFieldUpdateOperationsInput>;
  subscription?: Maybe<CompanySubscriptionUpdateOneWithoutCompanyInput>;
  user?: Maybe<StringFieldUpdateOperationsInput>;
};

export type CompanyUpdateManyMutationInput = {
  admin?: Maybe<IntFieldUpdateOperationsInput>;
  creation_date?: Maybe<DateTimeFieldUpdateOperationsInput>;
  cron_enabled?: Maybe<NullableBoolFieldUpdateOperationsInput>;
  digit8?: Maybe<IntFieldUpdateOperationsInput>;
  image?: Maybe<StringFieldUpdateOperationsInput>;
  remote_connect?: Maybe<NullableStringFieldUpdateOperationsInput>;
  remote_url?: Maybe<NullableStringFieldUpdateOperationsInput>;
  slug?: Maybe<NullableStringFieldUpdateOperationsInput>;
  user?: Maybe<StringFieldUpdateOperationsInput>;
};

export type CompanyUpdateOneRequiredWithoutAcceptEmailTokenInput = {
  connect?: Maybe<CompanyWhereUniqueInput>;
  connectOrCreate?: Maybe<CompanyCreateOrConnectWithoutAcceptEmailTokenInput>;
  create?: Maybe<CompanyUncheckedCreateWithoutAcceptEmailTokenInput>;
  update?: Maybe<CompanyUncheckedUpdateWithoutAcceptEmailTokenInput>;
  upsert?: Maybe<CompanyUpsertWithoutAcceptEmailTokenInput>;
};

export type CompanyUpdateOneRequiredWithoutAccountBalanceInput = {
  connect?: Maybe<CompanyWhereUniqueInput>;
  connectOrCreate?: Maybe<CompanyCreateOrConnectWithoutAccountBalanceInput>;
  create?: Maybe<CompanyUncheckedCreateWithoutAccountBalanceInput>;
  update?: Maybe<CompanyUncheckedUpdateWithoutAccountBalanceInput>;
  upsert?: Maybe<CompanyUpsertWithoutAccountBalanceInput>;
};

export type CompanyUpdateOneRequiredWithoutBookingStatusInput = {
  connect?: Maybe<CompanyWhereUniqueInput>;
  connectOrCreate?: Maybe<CompanyCreateOrConnectWithoutBookingStatusInput>;
  create?: Maybe<CompanyUncheckedCreateWithoutBookingStatusInput>;
  update?: Maybe<CompanyUncheckedUpdateWithoutBookingStatusInput>;
  upsert?: Maybe<CompanyUpsertWithoutBookingStatusInput>;
};

export type CompanyUpdateOneRequiredWithoutCmCampaignInput = {
  connect?: Maybe<CompanyWhereUniqueInput>;
  connectOrCreate?: Maybe<CompanyCreateOrConnectWithoutCmCampaignInput>;
  create?: Maybe<CompanyUncheckedCreateWithoutCmCampaignInput>;
  update?: Maybe<CompanyUncheckedUpdateWithoutCmCampaignInput>;
  upsert?: Maybe<CompanyUpsertWithoutCmCampaignInput>;
};

export type CompanyUpdateOneRequiredWithoutCmCaseInput = {
  connect?: Maybe<CompanyWhereUniqueInput>;
  connectOrCreate?: Maybe<CompanyCreateOrConnectWithoutCmCaseInput>;
  create?: Maybe<CompanyUncheckedCreateWithoutCmCaseInput>;
  update?: Maybe<CompanyUncheckedUpdateWithoutCmCaseInput>;
  upsert?: Maybe<CompanyUpsertWithoutCmCaseInput>;
};

export type CompanyUpdateOneRequiredWithoutCmCaseReplyInput = {
  connect?: Maybe<CompanyWhereUniqueInput>;
  connectOrCreate?: Maybe<CompanyCreateOrConnectWithoutCmCaseReplyInput>;
  create?: Maybe<CompanyUncheckedCreateWithoutCmCaseReplyInput>;
  update?: Maybe<CompanyUncheckedUpdateWithoutCmCaseReplyInput>;
  upsert?: Maybe<CompanyUpsertWithoutCmCaseReplyInput>;
};

export type CompanyUpdateOneRequiredWithoutDetailsInput = {
  connect?: Maybe<CompanyWhereUniqueInput>;
  connectOrCreate?: Maybe<CompanyCreateOrConnectWithoutDetailsInput>;
  create?: Maybe<CompanyUncheckedCreateWithoutDetailsInput>;
  update?: Maybe<CompanyUncheckedUpdateWithoutDetailsInput>;
  upsert?: Maybe<CompanyUpsertWithoutDetailsInput>;
};

export type CompanyUpdateOneRequiredWithoutMarketingSourceInput = {
  connect?: Maybe<CompanyWhereUniqueInput>;
  connectOrCreate?: Maybe<CompanyCreateOrConnectWithoutMarketingSourceInput>;
  create?: Maybe<CompanyUncheckedCreateWithoutMarketingSourceInput>;
  update?: Maybe<CompanyUncheckedUpdateWithoutMarketingSourceInput>;
  upsert?: Maybe<CompanyUpsertWithoutMarketingSourceInput>;
};

export type CompanyUpdateOneRequiredWithoutSubscriptionInput = {
  connect?: Maybe<CompanyWhereUniqueInput>;
  connectOrCreate?: Maybe<CompanyCreateOrConnectWithoutSubscriptionInput>;
  create?: Maybe<CompanyUncheckedCreateWithoutSubscriptionInput>;
  update?: Maybe<CompanyUncheckedUpdateWithoutSubscriptionInput>;
  upsert?: Maybe<CompanyUpsertWithoutSubscriptionInput>;
};

export type CompanyUpdateOneRequiredWithoutThirdPartyAccessInput = {
  connect?: Maybe<CompanyWhereUniqueInput>;
  connectOrCreate?: Maybe<CompanyCreateOrConnectWithoutThirdPartyAccessInput>;
  create?: Maybe<CompanyUncheckedCreateWithoutThirdPartyAccessInput>;
  update?: Maybe<CompanyUncheckedUpdateWithoutThirdPartyAccessInput>;
  upsert?: Maybe<CompanyUpsertWithoutThirdPartyAccessInput>;
};

export type CompanyUpdateOneRequiredWithoutTwoFactorHistoryInput = {
  connect?: Maybe<CompanyWhereUniqueInput>;
  connectOrCreate?: Maybe<CompanyCreateOrConnectWithoutTwoFactorHistoryInput>;
  create?: Maybe<CompanyUncheckedCreateWithoutTwoFactorHistoryInput>;
  update?: Maybe<CompanyUncheckedUpdateWithoutTwoFactorHistoryInput>;
  upsert?: Maybe<CompanyUpsertWithoutTwoFactorHistoryInput>;
};

export type CompanyUpdateOneWithoutCandidateInput = {
  connect?: Maybe<CompanyWhereUniqueInput>;
  connectOrCreate?: Maybe<CompanyCreateOrConnectWithoutCandidateInput>;
  create?: Maybe<CompanyUncheckedCreateWithoutCandidateInput>;
  delete?: Maybe<Scalars['Boolean']>;
  disconnect?: Maybe<Scalars['Boolean']>;
  update?: Maybe<CompanyUncheckedUpdateWithoutCandidateInput>;
  upsert?: Maybe<CompanyUpsertWithoutCandidateInput>;
};

export type CompanyUpdateOneWithoutUserInput = {
  connect?: Maybe<CompanyWhereUniqueInput>;
  connectOrCreate?: Maybe<CompanyCreateOrConnectWithoutUserInput>;
  create?: Maybe<CompanyUncheckedCreateWithoutUserInput>;
  delete?: Maybe<Scalars['Boolean']>;
  disconnect?: Maybe<Scalars['Boolean']>;
  update?: Maybe<CompanyUncheckedUpdateWithoutUserInput>;
  upsert?: Maybe<CompanyUpsertWithoutUserInput>;
};

export type CompanyUpsertWithoutAcceptEmailTokenInput = {
  create: CompanyUncheckedCreateWithoutAcceptEmailTokenInput;
  update: CompanyUncheckedUpdateWithoutAcceptEmailTokenInput;
};

export type CompanyUpsertWithoutAccountBalanceInput = {
  create: CompanyUncheckedCreateWithoutAccountBalanceInput;
  update: CompanyUncheckedUpdateWithoutAccountBalanceInput;
};

export type CompanyUpsertWithoutBookingStatusInput = {
  create: CompanyUncheckedCreateWithoutBookingStatusInput;
  update: CompanyUncheckedUpdateWithoutBookingStatusInput;
};

export type CompanyUpsertWithoutCandidateInput = {
  create: CompanyUncheckedCreateWithoutCandidateInput;
  update: CompanyUncheckedUpdateWithoutCandidateInput;
};

export type CompanyUpsertWithoutCmCampaignInput = {
  create: CompanyUncheckedCreateWithoutCmCampaignInput;
  update: CompanyUncheckedUpdateWithoutCmCampaignInput;
};

export type CompanyUpsertWithoutCmCaseInput = {
  create: CompanyUncheckedCreateWithoutCmCaseInput;
  update: CompanyUncheckedUpdateWithoutCmCaseInput;
};

export type CompanyUpsertWithoutCmCaseReplyInput = {
  create: CompanyUncheckedCreateWithoutCmCaseReplyInput;
  update: CompanyUncheckedUpdateWithoutCmCaseReplyInput;
};

export type CompanyUpsertWithoutDetailsInput = {
  create: CompanyUncheckedCreateWithoutDetailsInput;
  update: CompanyUncheckedUpdateWithoutDetailsInput;
};

export type CompanyUpsertWithoutMarketingSourceInput = {
  create: CompanyUncheckedCreateWithoutMarketingSourceInput;
  update: CompanyUncheckedUpdateWithoutMarketingSourceInput;
};

export type CompanyUpsertWithoutSubscriptionInput = {
  create: CompanyUncheckedCreateWithoutSubscriptionInput;
  update: CompanyUncheckedUpdateWithoutSubscriptionInput;
};

export type CompanyUpsertWithoutThirdPartyAccessInput = {
  create: CompanyUncheckedCreateWithoutThirdPartyAccessInput;
  update: CompanyUncheckedUpdateWithoutThirdPartyAccessInput;
};

export type CompanyUpsertWithoutTwoFactorHistoryInput = {
  create: CompanyUncheckedCreateWithoutTwoFactorHistoryInput;
  update: CompanyUncheckedUpdateWithoutTwoFactorHistoryInput;
};

export type CompanyUpsertWithoutUserInput = {
  create: CompanyUncheckedCreateWithoutUserInput;
  update: CompanyUncheckedUpdateWithoutUserInput;
};

export type CompanyWhereInput = {
  AND?: Maybe<Array<Maybe<CompanyWhereInput>>>;
  AcceptEmailToken?: Maybe<AcceptEmailTokenListRelationFilter>;
  AccountBalance?: Maybe<AccountBalanceListRelationFilter>;
  BookingStatus?: Maybe<BookingStatusListRelationFilter>;
  Candidate?: Maybe<CandidateListRelationFilter>;
  CmCampaign?: Maybe<CmCampaignListRelationFilter>;
  CmCase?: Maybe<CmCaseListRelationFilter>;
  CmCaseReply?: Maybe<CmCaseReplyListRelationFilter>;
  MarketingSource?: Maybe<MarketingSourceListRelationFilter>;
  NOT?: Maybe<Array<Maybe<CompanyWhereInput>>>;
  OR?: Maybe<Array<Maybe<CompanyWhereInput>>>;
  ThirdPartyAccess?: Maybe<ThirdPartyAccessListRelationFilter>;
  TwoFactorHistory?: Maybe<TwoFactorHistoryListRelationFilter>;
  User?: Maybe<UserListRelationFilter>;
  admin?: Maybe<IntFilter>;
  creation_date?: Maybe<DateTimeFilter>;
  cron_enabled?: Maybe<BoolNullableFilter>;
  details?: Maybe<CompanyDetailsWhereInput>;
  digit8?: Maybe<IntFilter>;
  id?: Maybe<IntFilter>;
  image?: Maybe<StringFilter>;
  remote_connect?: Maybe<StringNullableFilter>;
  remote_url?: Maybe<StringNullableFilter>;
  slug?: Maybe<StringNullableFilter>;
  subscription?: Maybe<CompanySubscriptionWhereInput>;
  user?: Maybe<StringFilter>;
};

export type CompanyWhereUniqueInput = {
  id?: Maybe<Scalars['Int']>;
  slug?: Maybe<Scalars['String']>;
};


export type DateTimeFieldUpdateOperationsInput = {
  set?: Maybe<Scalars['DateTime']>;
};

export type DateTimeFilter = {
  equals?: Maybe<Scalars['DateTime']>;
  gt?: Maybe<Scalars['DateTime']>;
  gte?: Maybe<Scalars['DateTime']>;
  in?: Maybe<Array<Maybe<Scalars['DateTime']>>>;
  lt?: Maybe<Scalars['DateTime']>;
  lte?: Maybe<Scalars['DateTime']>;
  not?: Maybe<NestedDateTimeFilter>;
  notIn?: Maybe<Array<Maybe<Scalars['DateTime']>>>;
};

export type DateTimeNullableFilter = {
  equals?: Maybe<Scalars['DateTime']>;
  gt?: Maybe<Scalars['DateTime']>;
  gte?: Maybe<Scalars['DateTime']>;
  in?: Maybe<Array<Maybe<Scalars['DateTime']>>>;
  lt?: Maybe<Scalars['DateTime']>;
  lte?: Maybe<Scalars['DateTime']>;
  not?: Maybe<NestedDateTimeNullableFilter>;
  notIn?: Maybe<Array<Maybe<Scalars['DateTime']>>>;
};

/** columns and relationships of "Discounts" */
export type Discounts = {
  __typename?: 'Discounts';
  amount: Scalars['String'];
  code?: Maybe<Scalars['String']>;
  created_at: Scalars['timestamptz'];
  date?: Maybe<Scalars['Boolean']>;
  discount_rate: Scalars['String'];
  employees?: Maybe<Scalars['json']>;
  id: Scalars['uuid'];
  is_active: Scalars['Boolean'];
  locations?: Maybe<Scalars['json']>;
  name: Scalars['String'];
  order: Scalars['Int'];
  services?: Maybe<Scalars['json']>;
  show_on_reciept: Scalars['String'];
  type: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};


/** columns and relationships of "Discounts" */
export type DiscountsEmployeesArgs = {
  path?: Maybe<Scalars['String']>;
};


/** columns and relationships of "Discounts" */
export type DiscountsLocationsArgs = {
  path?: Maybe<Scalars['String']>;
};


/** columns and relationships of "Discounts" */
export type DiscountsServicesArgs = {
  path?: Maybe<Scalars['String']>;
};

/** aggregated selection of "Discounts" */
export type Discounts_Aggregate = {
  __typename?: 'Discounts_aggregate';
  aggregate?: Maybe<Discounts_Aggregate_Fields>;
  nodes: Array<Discounts>;
};

/** aggregate fields of "Discounts" */
export type Discounts_Aggregate_Fields = {
  __typename?: 'Discounts_aggregate_fields';
  avg?: Maybe<Discounts_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Discounts_Max_Fields>;
  min?: Maybe<Discounts_Min_Fields>;
  stddev?: Maybe<Discounts_Stddev_Fields>;
  stddev_pop?: Maybe<Discounts_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Discounts_Stddev_Samp_Fields>;
  sum?: Maybe<Discounts_Sum_Fields>;
  var_pop?: Maybe<Discounts_Var_Pop_Fields>;
  var_samp?: Maybe<Discounts_Var_Samp_Fields>;
  variance?: Maybe<Discounts_Variance_Fields>;
};


/** aggregate fields of "Discounts" */
export type Discounts_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Discounts_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Discounts_Avg_Fields = {
  __typename?: 'Discounts_avg_fields';
  order?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "Discounts". All fields are combined with a logical 'AND'. */
export type Discounts_Bool_Exp = {
  _and?: Maybe<Array<Discounts_Bool_Exp>>;
  _not?: Maybe<Discounts_Bool_Exp>;
  _or?: Maybe<Array<Discounts_Bool_Exp>>;
  amount?: Maybe<String_Comparison_Exp>;
  code?: Maybe<String_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  date?: Maybe<Boolean_Comparison_Exp>;
  discount_rate?: Maybe<String_Comparison_Exp>;
  employees?: Maybe<Json_Comparison_Exp>;
  id?: Maybe<Uuid_Comparison_Exp>;
  is_active?: Maybe<Boolean_Comparison_Exp>;
  locations?: Maybe<Json_Comparison_Exp>;
  name?: Maybe<String_Comparison_Exp>;
  order?: Maybe<Int_Comparison_Exp>;
  services?: Maybe<Json_Comparison_Exp>;
  show_on_reciept?: Maybe<String_Comparison_Exp>;
  type?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "Discounts" */
export enum Discounts_Constraint {
  /** unique or primary key constraint */
  DiscountsPkey = 'Discounts_pkey'
}

/** input type for incrementing numeric columns in table "Discounts" */
export type Discounts_Inc_Input = {
  order?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "Discounts" */
export type Discounts_Insert_Input = {
  amount?: Maybe<Scalars['String']>;
  code?: Maybe<Scalars['String']>;
  date?: Maybe<Scalars['Boolean']>;
  discount_rate?: Maybe<Scalars['String']>;
  employees?: Maybe<Scalars['json']>;
  is_active?: Maybe<Scalars['Boolean']>;
  locations?: Maybe<Scalars['json']>;
  name?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
  services?: Maybe<Scalars['json']>;
  show_on_reciept?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Discounts_Max_Fields = {
  __typename?: 'Discounts_max_fields';
  amount?: Maybe<Scalars['String']>;
  code?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  discount_rate?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
  show_on_reciept?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type Discounts_Min_Fields = {
  __typename?: 'Discounts_min_fields';
  amount?: Maybe<Scalars['String']>;
  code?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  discount_rate?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
  show_on_reciept?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "Discounts" */
export type Discounts_Mutation_Response = {
  __typename?: 'Discounts_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Discounts>;
};

/** on conflict condition type for table "Discounts" */
export type Discounts_On_Conflict = {
  constraint: Discounts_Constraint;
  update_columns: Array<Discounts_Update_Column>;
  where?: Maybe<Discounts_Bool_Exp>;
};

/** Ordering options when selecting data from "Discounts". */
export type Discounts_Order_By = {
  amount?: Maybe<Order_By>;
  code?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  date?: Maybe<Order_By>;
  discount_rate?: Maybe<Order_By>;
  employees?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  is_active?: Maybe<Order_By>;
  locations?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  order?: Maybe<Order_By>;
  services?: Maybe<Order_By>;
  show_on_reciept?: Maybe<Order_By>;
  type?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: Discounts */
export type Discounts_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "Discounts" */
export enum Discounts_Select_Column {
  /** column name */
  Amount = 'amount',
  /** column name */
  Code = 'code',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Date = 'date',
  /** column name */
  DiscountRate = 'discount_rate',
  /** column name */
  Employees = 'employees',
  /** column name */
  Id = 'id',
  /** column name */
  IsActive = 'is_active',
  /** column name */
  Locations = 'locations',
  /** column name */
  Name = 'name',
  /** column name */
  Order = 'order',
  /** column name */
  Services = 'services',
  /** column name */
  ShowOnReciept = 'show_on_reciept',
  /** column name */
  Type = 'type',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "Discounts" */
export type Discounts_Set_Input = {
  amount?: Maybe<Scalars['String']>;
  code?: Maybe<Scalars['String']>;
  date?: Maybe<Scalars['Boolean']>;
  discount_rate?: Maybe<Scalars['String']>;
  employees?: Maybe<Scalars['json']>;
  is_active?: Maybe<Scalars['Boolean']>;
  locations?: Maybe<Scalars['json']>;
  name?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
  services?: Maybe<Scalars['json']>;
  show_on_reciept?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type Discounts_Stddev_Fields = {
  __typename?: 'Discounts_stddev_fields';
  order?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Discounts_Stddev_Pop_Fields = {
  __typename?: 'Discounts_stddev_pop_fields';
  order?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Discounts_Stddev_Samp_Fields = {
  __typename?: 'Discounts_stddev_samp_fields';
  order?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Discounts_Sum_Fields = {
  __typename?: 'Discounts_sum_fields';
  order?: Maybe<Scalars['Int']>;
};

/** update columns of table "Discounts" */
export enum Discounts_Update_Column {
  /** column name */
  Amount = 'amount',
  /** column name */
  Code = 'code',
  /** column name */
  Date = 'date',
  /** column name */
  DiscountRate = 'discount_rate',
  /** column name */
  Employees = 'employees',
  /** column name */
  IsActive = 'is_active',
  /** column name */
  Locations = 'locations',
  /** column name */
  Name = 'name',
  /** column name */
  Order = 'order',
  /** column name */
  Services = 'services',
  /** column name */
  ShowOnReciept = 'show_on_reciept',
  /** column name */
  Type = 'type'
}

/** aggregate var_pop on columns */
export type Discounts_Var_Pop_Fields = {
  __typename?: 'Discounts_var_pop_fields';
  order?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Discounts_Var_Samp_Fields = {
  __typename?: 'Discounts_var_samp_fields';
  order?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Discounts_Variance_Fields = {
  __typename?: 'Discounts_variance_fields';
  order?: Maybe<Scalars['Float']>;
};

export type Enumbooking_Master_Cancel_StatusFieldUpdateOperationsInput = {
  set?: Maybe<Booking_Master_Cancel_Status>;
};

export type Enumbooking_Master_Cancel_StatusFilter = {
  equals?: Maybe<Booking_Master_Cancel_Status>;
  in?: Maybe<Array<Maybe<Booking_Master_Cancel_Status>>>;
  not?: Maybe<NestedEnumbooking_Master_Cancel_StatusFilter>;
  notIn?: Maybe<Array<Maybe<Booking_Master_Cancel_Status>>>;
};

export type Enumbooking_Master_Payment_StatusFieldUpdateOperationsInput = {
  set?: Maybe<Booking_Master_Payment_Status>;
};

export type Enumbooking_Master_Payment_StatusFilter = {
  equals?: Maybe<Booking_Master_Payment_Status>;
  in?: Maybe<Array<Maybe<Booking_Master_Payment_Status>>>;
  not?: Maybe<NestedEnumbooking_Master_Payment_StatusFilter>;
  notIn?: Maybe<Array<Maybe<Booking_Master_Payment_Status>>>;
};

export type Enumbooking_Statuses_IndicatorNullableFilter = {
  equals?: Maybe<Booking_Statuses_Indicator>;
  in?: Maybe<Array<Maybe<Booking_Statuses_Indicator>>>;
  not?: Maybe<NestedEnumbooking_Statuses_IndicatorNullableFilter>;
  notIn?: Maybe<Array<Maybe<Booking_Statuses_Indicator>>>;
};

export type Enumbookitpro_General_Integration_MethodNullableFilter = {
  equals?: Maybe<Bookitpro_General_Integration_Method>;
  in?: Maybe<Array<Maybe<Bookitpro_General_Integration_Method>>>;
  not?: Maybe<NestedEnumbookitpro_General_Integration_MethodNullableFilter>;
  notIn?: Maybe<Array<Maybe<Bookitpro_General_Integration_Method>>>;
};

export type Enumclass_Master_Class_PayNullableFilter = {
  equals?: Maybe<Class_Master_Class_Pay>;
  in?: Maybe<Array<Maybe<Class_Master_Class_Pay>>>;
  not?: Maybe<NestedEnumclass_Master_Class_PayNullableFilter>;
  notIn?: Maybe<Array<Maybe<Class_Master_Class_Pay>>>;
};

export type Enumcm_Account_Notes_StatusFieldUpdateOperationsInput = {
  set?: Maybe<Cm_Account_Notes_Status>;
};

export type Enumcm_Account_Notes_StatusFilter = {
  equals?: Maybe<Cm_Account_Notes_Status>;
  in?: Maybe<Array<Maybe<Cm_Account_Notes_Status>>>;
  not?: Maybe<NestedEnumcm_Account_Notes_StatusFilter>;
  notIn?: Maybe<Array<Maybe<Cm_Account_Notes_Status>>>;
};

export type Enumcm_Booking_Notes_StatusFieldUpdateOperationsInput = {
  set?: Maybe<Cm_Booking_Notes_Status>;
};

export type Enumcm_Booking_Notes_StatusFilter = {
  equals?: Maybe<Cm_Booking_Notes_Status>;
  in?: Maybe<Array<Maybe<Cm_Booking_Notes_Status>>>;
  not?: Maybe<NestedEnumcm_Booking_Notes_StatusFilter>;
  notIn?: Maybe<Array<Maybe<Cm_Booking_Notes_Status>>>;
};

export type Enumcm_Case_Notes_StatusFieldUpdateOperationsInput = {
  set?: Maybe<Cm_Case_Notes_Status>;
};

export type Enumcm_Case_Notes_StatusFilter = {
  equals?: Maybe<Cm_Case_Notes_Status>;
  in?: Maybe<Array<Maybe<Cm_Case_Notes_Status>>>;
  not?: Maybe<NestedEnumcm_Case_Notes_StatusFilter>;
  notIn?: Maybe<Array<Maybe<Cm_Case_Notes_Status>>>;
};

export type Enumcm_Compaign_Notes_StatusFieldUpdateOperationsInput = {
  set?: Maybe<Cm_Compaign_Notes_Status>;
};

export type Enumcm_Compaign_Notes_StatusFilter = {
  equals?: Maybe<Cm_Compaign_Notes_Status>;
  in?: Maybe<Array<Maybe<Cm_Compaign_Notes_Status>>>;
  not?: Maybe<NestedEnumcm_Compaign_Notes_StatusFilter>;
  notIn?: Maybe<Array<Maybe<Cm_Compaign_Notes_Status>>>;
};

export type Enumcm_Contacts_AddToQuickBooksFieldUpdateOperationsInput = {
  set?: Maybe<Cm_Contacts_AddToQuickBooks>;
};

export type Enumcm_Contacts_AddToQuickBooksFilter = {
  equals?: Maybe<Cm_Contacts_AddToQuickBooks>;
  in?: Maybe<Array<Maybe<Cm_Contacts_AddToQuickBooks>>>;
  not?: Maybe<NestedEnumcm_Contacts_AddToQuickBooksFilter>;
  notIn?: Maybe<Array<Maybe<Cm_Contacts_AddToQuickBooks>>>;
};

export type Enumcm_Contacts_EmailOptOutFieldUpdateOperationsInput = {
  set?: Maybe<Cm_Contacts_EmailOptOut>;
};

export type Enumcm_Contacts_EmailOptOutFilter = {
  equals?: Maybe<Cm_Contacts_EmailOptOut>;
  in?: Maybe<Array<Maybe<Cm_Contacts_EmailOptOut>>>;
  not?: Maybe<NestedEnumcm_Contacts_EmailOptOutFilter>;
  notIn?: Maybe<Array<Maybe<Cm_Contacts_EmailOptOut>>>;
};

export type Enumcm_Contacts_StatusFieldUpdateOperationsInput = {
  set?: Maybe<Cm_Contacts_Status>;
};

export type Enumcm_Contacts_StatusFilter = {
  equals?: Maybe<Cm_Contacts_Status>;
  in?: Maybe<Array<Maybe<Cm_Contacts_Status>>>;
  not?: Maybe<NestedEnumcm_Contacts_StatusFilter>;
  notIn?: Maybe<Array<Maybe<Cm_Contacts_Status>>>;
};

export type Enumcompany_Details_Tax_NameFieldUpdateOperationsInput = {
  set?: Maybe<Company_Details_Tax_Name>;
};

export type Enumcompany_Details_Tax_NameFilter = {
  equals?: Maybe<Company_Details_Tax_Name>;
  in?: Maybe<Array<Maybe<Company_Details_Tax_Name>>>;
  not?: Maybe<NestedEnumcompany_Details_Tax_NameFilter>;
  notIn?: Maybe<Array<Maybe<Company_Details_Tax_Name>>>;
};

export type Enumgl_Codes_DescriptionFieldUpdateOperationsInput = {
  set?: Maybe<Gl_Codes_Description>;
};

export type Enumgl_Codes_DescriptionFilter = {
  equals?: Maybe<Gl_Codes_Description>;
  in?: Maybe<Array<Maybe<Gl_Codes_Description>>>;
  not?: Maybe<NestedEnumgl_Codes_DescriptionFilter>;
  notIn?: Maybe<Array<Maybe<Gl_Codes_Description>>>;
};

export type FloatFieldUpdateOperationsInput = {
  decrement?: Maybe<Scalars['Float']>;
  divide?: Maybe<Scalars['Float']>;
  increment?: Maybe<Scalars['Float']>;
  multiply?: Maybe<Scalars['Float']>;
  set?: Maybe<Scalars['Float']>;
};

export type FloatFilter = {
  equals?: Maybe<Scalars['Float']>;
  gt?: Maybe<Scalars['Float']>;
  gte?: Maybe<Scalars['Float']>;
  in?: Maybe<Array<Maybe<Scalars['Float']>>>;
  lt?: Maybe<Scalars['Float']>;
  lte?: Maybe<Scalars['Float']>;
  not?: Maybe<NestedFloatFilter>;
  notIn?: Maybe<Array<Maybe<Scalars['Float']>>>;
};

export type FloatNullableFilter = {
  equals?: Maybe<Scalars['Float']>;
  gt?: Maybe<Scalars['Float']>;
  gte?: Maybe<Scalars['Float']>;
  in?: Maybe<Array<Maybe<Scalars['Float']>>>;
  lt?: Maybe<Scalars['Float']>;
  lte?: Maybe<Scalars['Float']>;
  not?: Maybe<NestedFloatNullableFilter>;
  notIn?: Maybe<Array<Maybe<Scalars['Float']>>>;
};

/** Boolean expression to compare columns of type "Float". All fields are combined with logical 'AND'. */
export type Float_Comparison_Exp = {
  _eq?: Maybe<Scalars['Float']>;
  _gt?: Maybe<Scalars['Float']>;
  _gte?: Maybe<Scalars['Float']>;
  _in?: Maybe<Array<Scalars['Float']>>;
  _is_null?: Maybe<Scalars['Boolean']>;
  _lt?: Maybe<Scalars['Float']>;
  _lte?: Maybe<Scalars['Float']>;
  _neq?: Maybe<Scalars['Float']>;
  _nin?: Maybe<Array<Scalars['Float']>>;
};

export type GlCode = {
  __typename?: 'GlCode';
  InvPaymentType?: Maybe<InvPaymentType>;
  code?: Maybe<Scalars['String']>;
  company_id?: Maybe<Scalars['Int']>;
  description?: Maybe<Gl_Codes_Description>;
  id?: Maybe<Scalars['Int']>;
  related_to?: Maybe<Scalars['Int']>;
};

export type GlCodeCreateInput = {
  InvPaymentType?: Maybe<InvPaymentTypeCreateNestedOneWithoutGlCodeInput>;
  code: Scalars['String'];
  company_id: Scalars['Int'];
  description: Gl_Codes_Description;
};

export type GlCodeCreateNestedOneWithoutInvPaymentTypeInput = {
  connect?: Maybe<GlCodeWhereUniqueInput>;
  connectOrCreate?: Maybe<GlCodeCreateOrConnectWithoutInvPaymentTypeInput>;
  create?: Maybe<GlCodeUncheckedCreateWithoutInvPaymentTypeInput>;
};

export type GlCodeCreateOrConnectWithoutInvPaymentTypeInput = {
  create: GlCodeUncheckedCreateWithoutInvPaymentTypeInput;
  where: GlCodeWhereUniqueInput;
};

export type GlCodeOrderByInput = {
  code?: Maybe<SortOrder>;
  company_id?: Maybe<SortOrder>;
  description?: Maybe<SortOrder>;
  id?: Maybe<SortOrder>;
  related_to?: Maybe<SortOrder>;
};

export type GlCodeUncheckedCreateWithoutInvPaymentTypeInput = {
  code: Scalars['String'];
  company_id: Scalars['Int'];
  description: Gl_Codes_Description;
  id?: Maybe<Scalars['Int']>;
};

export type GlCodeUncheckedUpdateWithoutInvPaymentTypeInput = {
  code?: Maybe<StringFieldUpdateOperationsInput>;
  company_id?: Maybe<IntFieldUpdateOperationsInput>;
  description?: Maybe<Enumgl_Codes_DescriptionFieldUpdateOperationsInput>;
  id?: Maybe<IntFieldUpdateOperationsInput>;
};

export type GlCodeUpdateInput = {
  InvPaymentType?: Maybe<InvPaymentTypeUpdateOneWithoutGlCodeInput>;
  code?: Maybe<StringFieldUpdateOperationsInput>;
  company_id?: Maybe<IntFieldUpdateOperationsInput>;
  description?: Maybe<Enumgl_Codes_DescriptionFieldUpdateOperationsInput>;
};

export type GlCodeUpdateManyMutationInput = {
  code?: Maybe<StringFieldUpdateOperationsInput>;
  company_id?: Maybe<IntFieldUpdateOperationsInput>;
  description?: Maybe<Enumgl_Codes_DescriptionFieldUpdateOperationsInput>;
};

export type GlCodeUpdateOneWithoutInvPaymentTypeInput = {
  connect?: Maybe<GlCodeWhereUniqueInput>;
  connectOrCreate?: Maybe<GlCodeCreateOrConnectWithoutInvPaymentTypeInput>;
  create?: Maybe<GlCodeUncheckedCreateWithoutInvPaymentTypeInput>;
  delete?: Maybe<Scalars['Boolean']>;
  disconnect?: Maybe<Scalars['Boolean']>;
  update?: Maybe<GlCodeUncheckedUpdateWithoutInvPaymentTypeInput>;
  upsert?: Maybe<GlCodeUpsertWithoutInvPaymentTypeInput>;
};

export type GlCodeUpsertWithoutInvPaymentTypeInput = {
  create: GlCodeUncheckedCreateWithoutInvPaymentTypeInput;
  update: GlCodeUncheckedUpdateWithoutInvPaymentTypeInput;
};

export type GlCodeWhereInput = {
  AND?: Maybe<Array<Maybe<GlCodeWhereInput>>>;
  InvPaymentType?: Maybe<InvPaymentTypeWhereInput>;
  NOT?: Maybe<Array<Maybe<GlCodeWhereInput>>>;
  OR?: Maybe<Array<Maybe<GlCodeWhereInput>>>;
  code?: Maybe<StringFilter>;
  company_id?: Maybe<IntFilter>;
  description?: Maybe<Enumgl_Codes_DescriptionFilter>;
  id?: Maybe<IntFilter>;
  related_to?: Maybe<IntNullableFilter>;
};

export type GlCodeWhereUniqueInput = {
  id?: Maybe<Scalars['Int']>;
};

export type IntFieldUpdateOperationsInput = {
  decrement?: Maybe<Scalars['Int']>;
  divide?: Maybe<Scalars['Int']>;
  increment?: Maybe<Scalars['Int']>;
  multiply?: Maybe<Scalars['Int']>;
  set?: Maybe<Scalars['Int']>;
};

export type IntFilter = {
  equals?: Maybe<Scalars['Int']>;
  gt?: Maybe<Scalars['Int']>;
  gte?: Maybe<Scalars['Int']>;
  in?: Maybe<Array<Maybe<Scalars['Int']>>>;
  lt?: Maybe<Scalars['Int']>;
  lte?: Maybe<Scalars['Int']>;
  not?: Maybe<NestedIntFilter>;
  notIn?: Maybe<Array<Maybe<Scalars['Int']>>>;
};

export type IntNullableFilter = {
  equals?: Maybe<Scalars['Int']>;
  gt?: Maybe<Scalars['Int']>;
  gte?: Maybe<Scalars['Int']>;
  in?: Maybe<Array<Maybe<Scalars['Int']>>>;
  lt?: Maybe<Scalars['Int']>;
  lte?: Maybe<Scalars['Int']>;
  not?: Maybe<NestedIntNullableFilter>;
  notIn?: Maybe<Array<Maybe<Scalars['Int']>>>;
};

/** Boolean expression to compare columns of type "Int". All fields are combined with logical 'AND'. */
export type Int_Comparison_Exp = {
  _eq?: Maybe<Scalars['Int']>;
  _gt?: Maybe<Scalars['Int']>;
  _gte?: Maybe<Scalars['Int']>;
  _in?: Maybe<Array<Scalars['Int']>>;
  _is_null?: Maybe<Scalars['Boolean']>;
  _lt?: Maybe<Scalars['Int']>;
  _lte?: Maybe<Scalars['Int']>;
  _neq?: Maybe<Scalars['Int']>;
  _nin?: Maybe<Array<Scalars['Int']>>;
};

export type InvPaymentType = {
  __typename?: 'InvPaymentType';
  GlCode?: Maybe<GlCode>;
  company_id?: Maybe<Scalars['Int']>;
  created_date?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  epos_display?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  is_active?: Maybe<Scalars['Int']>;
  is_money?: Maybe<Scalars['Int']>;
  modified_date?: Maybe<Scalars['DateTime']>;
  name?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  uid?: Maybe<Scalars['Int']>;
};

export type InvPaymentTypeCreateInput = {
  GlCode?: Maybe<GlCodeCreateNestedOneWithoutInvPaymentTypeInput>;
  company_id: Scalars['Int'];
  created_date?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  epos_display?: Maybe<Scalars['Int']>;
  is_active: Scalars['Int'];
  is_money: Scalars['Int'];
  modified_date?: Maybe<Scalars['DateTime']>;
  name?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  uid?: Maybe<Scalars['Int']>;
};

export type InvPaymentTypeCreateNestedOneWithoutGlCodeInput = {
  connect?: Maybe<InvPaymentTypeWhereUniqueInput>;
  connectOrCreate?: Maybe<InvPaymentTypeCreateOrConnectWithoutGlCodeInput>;
  create?: Maybe<InvPaymentTypeUncheckedCreateWithoutGlCodeInput>;
};

export type InvPaymentTypeCreateOrConnectWithoutGlCodeInput = {
  create: InvPaymentTypeUncheckedCreateWithoutGlCodeInput;
  where: InvPaymentTypeWhereUniqueInput;
};

export type InvPaymentTypeOrderByInput = {
  company_id?: Maybe<SortOrder>;
  created_date?: Maybe<SortOrder>;
  description?: Maybe<SortOrder>;
  epos_display?: Maybe<SortOrder>;
  id?: Maybe<SortOrder>;
  is_active?: Maybe<SortOrder>;
  is_money?: Maybe<SortOrder>;
  modified_date?: Maybe<SortOrder>;
  name?: Maybe<SortOrder>;
  type?: Maybe<SortOrder>;
  uid?: Maybe<SortOrder>;
};

export type InvPaymentTypeUncheckedCreateWithoutGlCodeInput = {
  company_id: Scalars['Int'];
  created_date?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  epos_display?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  is_active: Scalars['Int'];
  is_money: Scalars['Int'];
  modified_date?: Maybe<Scalars['DateTime']>;
  name?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  uid?: Maybe<Scalars['Int']>;
};

export type InvPaymentTypeUncheckedUpdateWithoutGlCodeInput = {
  company_id?: Maybe<IntFieldUpdateOperationsInput>;
  created_date?: Maybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: Maybe<NullableStringFieldUpdateOperationsInput>;
  epos_display?: Maybe<NullableIntFieldUpdateOperationsInput>;
  id?: Maybe<IntFieldUpdateOperationsInput>;
  is_active?: Maybe<IntFieldUpdateOperationsInput>;
  is_money?: Maybe<IntFieldUpdateOperationsInput>;
  modified_date?: Maybe<NullableDateTimeFieldUpdateOperationsInput>;
  name?: Maybe<NullableStringFieldUpdateOperationsInput>;
  type?: Maybe<StringFieldUpdateOperationsInput>;
  uid?: Maybe<NullableIntFieldUpdateOperationsInput>;
};

export type InvPaymentTypeUpdateInput = {
  GlCode?: Maybe<GlCodeUpdateOneWithoutInvPaymentTypeInput>;
  company_id?: Maybe<IntFieldUpdateOperationsInput>;
  created_date?: Maybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: Maybe<NullableStringFieldUpdateOperationsInput>;
  epos_display?: Maybe<NullableIntFieldUpdateOperationsInput>;
  is_active?: Maybe<IntFieldUpdateOperationsInput>;
  is_money?: Maybe<IntFieldUpdateOperationsInput>;
  modified_date?: Maybe<NullableDateTimeFieldUpdateOperationsInput>;
  name?: Maybe<NullableStringFieldUpdateOperationsInput>;
  type?: Maybe<StringFieldUpdateOperationsInput>;
  uid?: Maybe<NullableIntFieldUpdateOperationsInput>;
};

export type InvPaymentTypeUpdateManyMutationInput = {
  company_id?: Maybe<IntFieldUpdateOperationsInput>;
  created_date?: Maybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: Maybe<NullableStringFieldUpdateOperationsInput>;
  epos_display?: Maybe<NullableIntFieldUpdateOperationsInput>;
  is_active?: Maybe<IntFieldUpdateOperationsInput>;
  is_money?: Maybe<IntFieldUpdateOperationsInput>;
  modified_date?: Maybe<NullableDateTimeFieldUpdateOperationsInput>;
  name?: Maybe<NullableStringFieldUpdateOperationsInput>;
  type?: Maybe<StringFieldUpdateOperationsInput>;
  uid?: Maybe<NullableIntFieldUpdateOperationsInput>;
};

export type InvPaymentTypeUpdateOneWithoutGlCodeInput = {
  connect?: Maybe<InvPaymentTypeWhereUniqueInput>;
  connectOrCreate?: Maybe<InvPaymentTypeCreateOrConnectWithoutGlCodeInput>;
  create?: Maybe<InvPaymentTypeUncheckedCreateWithoutGlCodeInput>;
  delete?: Maybe<Scalars['Boolean']>;
  disconnect?: Maybe<Scalars['Boolean']>;
  update?: Maybe<InvPaymentTypeUncheckedUpdateWithoutGlCodeInput>;
  upsert?: Maybe<InvPaymentTypeUpsertWithoutGlCodeInput>;
};

export type InvPaymentTypeUpsertWithoutGlCodeInput = {
  create: InvPaymentTypeUncheckedCreateWithoutGlCodeInput;
  update: InvPaymentTypeUncheckedUpdateWithoutGlCodeInput;
};

export type InvPaymentTypeWhereInput = {
  AND?: Maybe<Array<Maybe<InvPaymentTypeWhereInput>>>;
  GlCode?: Maybe<GlCodeWhereInput>;
  NOT?: Maybe<Array<Maybe<InvPaymentTypeWhereInput>>>;
  OR?: Maybe<Array<Maybe<InvPaymentTypeWhereInput>>>;
  company_id?: Maybe<IntFilter>;
  created_date?: Maybe<DateTimeNullableFilter>;
  description?: Maybe<StringNullableFilter>;
  epos_display?: Maybe<IntNullableFilter>;
  id?: Maybe<IntFilter>;
  is_active?: Maybe<IntFilter>;
  is_money?: Maybe<IntFilter>;
  modified_date?: Maybe<DateTimeNullableFilter>;
  name?: Maybe<StringNullableFilter>;
  type?: Maybe<StringFilter>;
  uid?: Maybe<IntNullableFilter>;
};

export type InvPaymentTypeWhereUniqueInput = {
  id?: Maybe<Scalars['Int']>;
};

/** columns and relationships of "LMS_slugs" */
export type Lms_Slugs = {
  __typename?: 'LMS_slugs';
  article_urls?: Maybe<Scalars['jsonb']>;
  blogs?: Maybe<Scalars['jsonb']>;
  created_date: Scalars['timestamptz'];
  id: Scalars['uuid'];
  slug: Scalars['String'];
  videos?: Maybe<Scalars['jsonb']>;
  webinar?: Maybe<Scalars['String']>;
};


/** columns and relationships of "LMS_slugs" */
export type Lms_SlugsArticle_UrlsArgs = {
  path?: Maybe<Scalars['String']>;
};


/** columns and relationships of "LMS_slugs" */
export type Lms_SlugsBlogsArgs = {
  path?: Maybe<Scalars['String']>;
};


/** columns and relationships of "LMS_slugs" */
export type Lms_SlugsVideosArgs = {
  path?: Maybe<Scalars['String']>;
};

/** aggregated selection of "LMS_slugs" */
export type Lms_Slugs_Aggregate = {
  __typename?: 'LMS_slugs_aggregate';
  aggregate?: Maybe<Lms_Slugs_Aggregate_Fields>;
  nodes: Array<Lms_Slugs>;
};

/** aggregate fields of "LMS_slugs" */
export type Lms_Slugs_Aggregate_Fields = {
  __typename?: 'LMS_slugs_aggregate_fields';
  count: Scalars['Int'];
  max?: Maybe<Lms_Slugs_Max_Fields>;
  min?: Maybe<Lms_Slugs_Min_Fields>;
};


/** aggregate fields of "LMS_slugs" */
export type Lms_Slugs_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Lms_Slugs_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Lms_Slugs_Append_Input = {
  article_urls?: Maybe<Scalars['jsonb']>;
  blogs?: Maybe<Scalars['jsonb']>;
  videos?: Maybe<Scalars['jsonb']>;
};

/** Boolean expression to filter rows from the table "LMS_slugs". All fields are combined with a logical 'AND'. */
export type Lms_Slugs_Bool_Exp = {
  _and?: Maybe<Array<Lms_Slugs_Bool_Exp>>;
  _not?: Maybe<Lms_Slugs_Bool_Exp>;
  _or?: Maybe<Array<Lms_Slugs_Bool_Exp>>;
  article_urls?: Maybe<Jsonb_Comparison_Exp>;
  blogs?: Maybe<Jsonb_Comparison_Exp>;
  created_date?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Uuid_Comparison_Exp>;
  slug?: Maybe<String_Comparison_Exp>;
  videos?: Maybe<Jsonb_Comparison_Exp>;
  webinar?: Maybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "LMS_slugs" */
export enum Lms_Slugs_Constraint {
  /** unique or primary key constraint */
  LmsSlugsPkey = 'LMS_slugs_pkey'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Lms_Slugs_Delete_At_Path_Input = {
  article_urls?: Maybe<Array<Scalars['String']>>;
  blogs?: Maybe<Array<Scalars['String']>>;
  videos?: Maybe<Array<Scalars['String']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Lms_Slugs_Delete_Elem_Input = {
  article_urls?: Maybe<Scalars['Int']>;
  blogs?: Maybe<Scalars['Int']>;
  videos?: Maybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Lms_Slugs_Delete_Key_Input = {
  article_urls?: Maybe<Scalars['String']>;
  blogs?: Maybe<Scalars['String']>;
  videos?: Maybe<Scalars['String']>;
};

/** input type for inserting data into table "LMS_slugs" */
export type Lms_Slugs_Insert_Input = {
  article_urls?: Maybe<Scalars['jsonb']>;
  blogs?: Maybe<Scalars['jsonb']>;
  created_date?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  slug?: Maybe<Scalars['String']>;
  videos?: Maybe<Scalars['jsonb']>;
  webinar?: Maybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Lms_Slugs_Max_Fields = {
  __typename?: 'LMS_slugs_max_fields';
  created_date?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  slug?: Maybe<Scalars['String']>;
  webinar?: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type Lms_Slugs_Min_Fields = {
  __typename?: 'LMS_slugs_min_fields';
  created_date?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  slug?: Maybe<Scalars['String']>;
  webinar?: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "LMS_slugs" */
export type Lms_Slugs_Mutation_Response = {
  __typename?: 'LMS_slugs_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Lms_Slugs>;
};

/** on conflict condition type for table "LMS_slugs" */
export type Lms_Slugs_On_Conflict = {
  constraint: Lms_Slugs_Constraint;
  update_columns: Array<Lms_Slugs_Update_Column>;
  where?: Maybe<Lms_Slugs_Bool_Exp>;
};

/** Ordering options when selecting data from "LMS_slugs". */
export type Lms_Slugs_Order_By = {
  article_urls?: Maybe<Order_By>;
  blogs?: Maybe<Order_By>;
  created_date?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  slug?: Maybe<Order_By>;
  videos?: Maybe<Order_By>;
  webinar?: Maybe<Order_By>;
};

/** primary key columns input for table: LMS_slugs */
export type Lms_Slugs_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Lms_Slugs_Prepend_Input = {
  article_urls?: Maybe<Scalars['jsonb']>;
  blogs?: Maybe<Scalars['jsonb']>;
  videos?: Maybe<Scalars['jsonb']>;
};

/** select columns of table "LMS_slugs" */
export enum Lms_Slugs_Select_Column {
  /** column name */
  ArticleUrls = 'article_urls',
  /** column name */
  Blogs = 'blogs',
  /** column name */
  CreatedDate = 'created_date',
  /** column name */
  Id = 'id',
  /** column name */
  Slug = 'slug',
  /** column name */
  Videos = 'videos',
  /** column name */
  Webinar = 'webinar'
}

/** input type for updating data in table "LMS_slugs" */
export type Lms_Slugs_Set_Input = {
  article_urls?: Maybe<Scalars['jsonb']>;
  blogs?: Maybe<Scalars['jsonb']>;
  created_date?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  slug?: Maybe<Scalars['String']>;
  videos?: Maybe<Scalars['jsonb']>;
  webinar?: Maybe<Scalars['String']>;
};

/** update columns of table "LMS_slugs" */
export enum Lms_Slugs_Update_Column {
  /** column name */
  ArticleUrls = 'article_urls',
  /** column name */
  Blogs = 'blogs',
  /** column name */
  CreatedDate = 'created_date',
  /** column name */
  Id = 'id',
  /** column name */
  Slug = 'slug',
  /** column name */
  Videos = 'videos',
  /** column name */
  Webinar = 'webinar'
}

/** columns and relationships of "Labs" */
export type Labs = {
  __typename?: 'Labs';
  city?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at: Scalars['timestamptz'];
  email: Scalars['String'];
  id: Scalars['uuid'];
  integration?: Maybe<Scalars['Boolean']>;
  is_active: Scalars['Boolean'];
  /** lab name goes here */
  name: Scalars['String'];
  order: Scalars['Int'];
  phone: Scalars['String'];
  postal_code?: Maybe<Scalars['numeric']>;
  provider_number: Scalars['numeric'];
  street?: Maybe<Scalars['String']>;
  street2?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "Labs" */
export type Labs_Aggregate = {
  __typename?: 'Labs_aggregate';
  aggregate?: Maybe<Labs_Aggregate_Fields>;
  nodes: Array<Labs>;
};

/** aggregate fields of "Labs" */
export type Labs_Aggregate_Fields = {
  __typename?: 'Labs_aggregate_fields';
  avg?: Maybe<Labs_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Labs_Max_Fields>;
  min?: Maybe<Labs_Min_Fields>;
  stddev?: Maybe<Labs_Stddev_Fields>;
  stddev_pop?: Maybe<Labs_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Labs_Stddev_Samp_Fields>;
  sum?: Maybe<Labs_Sum_Fields>;
  var_pop?: Maybe<Labs_Var_Pop_Fields>;
  var_samp?: Maybe<Labs_Var_Samp_Fields>;
  variance?: Maybe<Labs_Variance_Fields>;
};


/** aggregate fields of "Labs" */
export type Labs_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Labs_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Labs_Avg_Fields = {
  __typename?: 'Labs_avg_fields';
  order?: Maybe<Scalars['Float']>;
  postal_code?: Maybe<Scalars['Float']>;
  provider_number?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "Labs". All fields are combined with a logical 'AND'. */
export type Labs_Bool_Exp = {
  _and?: Maybe<Array<Labs_Bool_Exp>>;
  _not?: Maybe<Labs_Bool_Exp>;
  _or?: Maybe<Array<Labs_Bool_Exp>>;
  city?: Maybe<String_Comparison_Exp>;
  country?: Maybe<String_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  email?: Maybe<String_Comparison_Exp>;
  id?: Maybe<Uuid_Comparison_Exp>;
  integration?: Maybe<Boolean_Comparison_Exp>;
  is_active?: Maybe<Boolean_Comparison_Exp>;
  name?: Maybe<String_Comparison_Exp>;
  order?: Maybe<Int_Comparison_Exp>;
  phone?: Maybe<String_Comparison_Exp>;
  postal_code?: Maybe<Numeric_Comparison_Exp>;
  provider_number?: Maybe<Numeric_Comparison_Exp>;
  street?: Maybe<String_Comparison_Exp>;
  street2?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "Labs" */
export enum Labs_Constraint {
  /** unique or primary key constraint */
  LabsEmailKey = 'Labs_email_key',
  /** unique or primary key constraint */
  LabsPkey = 'Labs_pkey'
}

/** input type for incrementing numeric columns in table "Labs" */
export type Labs_Inc_Input = {
  order?: Maybe<Scalars['Int']>;
  postal_code?: Maybe<Scalars['numeric']>;
  provider_number?: Maybe<Scalars['numeric']>;
};

/** input type for inserting data into table "Labs" */
export type Labs_Insert_Input = {
  city?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  email?: Maybe<Scalars['String']>;
  integration?: Maybe<Scalars['Boolean']>;
  is_active?: Maybe<Scalars['Boolean']>;
  /** lab name goes here */
  name?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
  phone?: Maybe<Scalars['String']>;
  postal_code?: Maybe<Scalars['numeric']>;
  provider_number?: Maybe<Scalars['numeric']>;
  street?: Maybe<Scalars['String']>;
  street2?: Maybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Labs_Max_Fields = {
  __typename?: 'Labs_max_fields';
  city?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  email?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  /** lab name goes here */
  name?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
  phone?: Maybe<Scalars['String']>;
  postal_code?: Maybe<Scalars['numeric']>;
  provider_number?: Maybe<Scalars['numeric']>;
  street?: Maybe<Scalars['String']>;
  street2?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type Labs_Min_Fields = {
  __typename?: 'Labs_min_fields';
  city?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  email?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  /** lab name goes here */
  name?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
  phone?: Maybe<Scalars['String']>;
  postal_code?: Maybe<Scalars['numeric']>;
  provider_number?: Maybe<Scalars['numeric']>;
  street?: Maybe<Scalars['String']>;
  street2?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "Labs" */
export type Labs_Mutation_Response = {
  __typename?: 'Labs_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Labs>;
};

/** on conflict condition type for table "Labs" */
export type Labs_On_Conflict = {
  constraint: Labs_Constraint;
  update_columns: Array<Labs_Update_Column>;
  where?: Maybe<Labs_Bool_Exp>;
};

/** Ordering options when selecting data from "Labs". */
export type Labs_Order_By = {
  city?: Maybe<Order_By>;
  country?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  email?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  integration?: Maybe<Order_By>;
  is_active?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  order?: Maybe<Order_By>;
  phone?: Maybe<Order_By>;
  postal_code?: Maybe<Order_By>;
  provider_number?: Maybe<Order_By>;
  street?: Maybe<Order_By>;
  street2?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: Labs */
export type Labs_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "Labs" */
export enum Labs_Select_Column {
  /** column name */
  City = 'city',
  /** column name */
  Country = 'country',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Email = 'email',
  /** column name */
  Id = 'id',
  /** column name */
  Integration = 'integration',
  /** column name */
  IsActive = 'is_active',
  /** column name */
  Name = 'name',
  /** column name */
  Order = 'order',
  /** column name */
  Phone = 'phone',
  /** column name */
  PostalCode = 'postal_code',
  /** column name */
  ProviderNumber = 'provider_number',
  /** column name */
  Street = 'street',
  /** column name */
  Street2 = 'street2',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "Labs" */
export type Labs_Set_Input = {
  city?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  email?: Maybe<Scalars['String']>;
  integration?: Maybe<Scalars['Boolean']>;
  is_active?: Maybe<Scalars['Boolean']>;
  /** lab name goes here */
  name?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
  phone?: Maybe<Scalars['String']>;
  postal_code?: Maybe<Scalars['numeric']>;
  provider_number?: Maybe<Scalars['numeric']>;
  street?: Maybe<Scalars['String']>;
  street2?: Maybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type Labs_Stddev_Fields = {
  __typename?: 'Labs_stddev_fields';
  order?: Maybe<Scalars['Float']>;
  postal_code?: Maybe<Scalars['Float']>;
  provider_number?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Labs_Stddev_Pop_Fields = {
  __typename?: 'Labs_stddev_pop_fields';
  order?: Maybe<Scalars['Float']>;
  postal_code?: Maybe<Scalars['Float']>;
  provider_number?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Labs_Stddev_Samp_Fields = {
  __typename?: 'Labs_stddev_samp_fields';
  order?: Maybe<Scalars['Float']>;
  postal_code?: Maybe<Scalars['Float']>;
  provider_number?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Labs_Sum_Fields = {
  __typename?: 'Labs_sum_fields';
  order?: Maybe<Scalars['Int']>;
  postal_code?: Maybe<Scalars['numeric']>;
  provider_number?: Maybe<Scalars['numeric']>;
};

/** update columns of table "Labs" */
export enum Labs_Update_Column {
  /** column name */
  City = 'city',
  /** column name */
  Country = 'country',
  /** column name */
  Email = 'email',
  /** column name */
  Integration = 'integration',
  /** column name */
  IsActive = 'is_active',
  /** column name */
  Name = 'name',
  /** column name */
  Order = 'order',
  /** column name */
  Phone = 'phone',
  /** column name */
  PostalCode = 'postal_code',
  /** column name */
  ProviderNumber = 'provider_number',
  /** column name */
  Street = 'street',
  /** column name */
  Street2 = 'street2'
}

/** aggregate var_pop on columns */
export type Labs_Var_Pop_Fields = {
  __typename?: 'Labs_var_pop_fields';
  order?: Maybe<Scalars['Float']>;
  postal_code?: Maybe<Scalars['Float']>;
  provider_number?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Labs_Var_Samp_Fields = {
  __typename?: 'Labs_var_samp_fields';
  order?: Maybe<Scalars['Float']>;
  postal_code?: Maybe<Scalars['Float']>;
  provider_number?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Labs_Variance_Fields = {
  __typename?: 'Labs_variance_fields';
  order?: Maybe<Scalars['Float']>;
  postal_code?: Maybe<Scalars['Float']>;
  provider_number?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "Lists_campaign" */
export type Lists_Campaign = {
  __typename?: 'Lists_campaign';
  created_at: Scalars['timestamptz'];
  id: Scalars['uuid'];
  members: Scalars['Int'];
  name: Scalars['String'];
  order: Scalars['Int'];
  type: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};

/** Boolean expression to filter rows from the table "Lists_campaign". All fields are combined with a logical 'AND'. */
export type Lists_Campaign_Bool_Exp = {
  _and?: Maybe<Array<Lists_Campaign_Bool_Exp>>;
  _not?: Maybe<Lists_Campaign_Bool_Exp>;
  _or?: Maybe<Array<Lists_Campaign_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Uuid_Comparison_Exp>;
  members?: Maybe<Int_Comparison_Exp>;
  name?: Maybe<String_Comparison_Exp>;
  order?: Maybe<Int_Comparison_Exp>;
  type?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "Lists_campaign" */
export enum Lists_Campaign_Constraint {
  /** unique or primary key constraint */
  ListsCampaignPkey = 'Lists_campaign_pkey'
}

/** input type for incrementing numeric columns in table "Lists_campaign" */
export type Lists_Campaign_Inc_Input = {
  members?: Maybe<Scalars['Int']>;
  order?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "Lists_campaign" */
export type Lists_Campaign_Insert_Input = {
  members?: Maybe<Scalars['Int']>;
  name?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
  type?: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "Lists_campaign" */
export type Lists_Campaign_Mutation_Response = {
  __typename?: 'Lists_campaign_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Lists_Campaign>;
};

/** on conflict condition type for table "Lists_campaign" */
export type Lists_Campaign_On_Conflict = {
  constraint: Lists_Campaign_Constraint;
  update_columns: Array<Lists_Campaign_Update_Column>;
  where?: Maybe<Lists_Campaign_Bool_Exp>;
};

/** Ordering options when selecting data from "Lists_campaign". */
export type Lists_Campaign_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  members?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  order?: Maybe<Order_By>;
  type?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: Lists_campaign */
export type Lists_Campaign_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "Lists_campaign" */
export enum Lists_Campaign_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Members = 'members',
  /** column name */
  Name = 'name',
  /** column name */
  Order = 'order',
  /** column name */
  Type = 'type',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "Lists_campaign" */
export type Lists_Campaign_Set_Input = {
  members?: Maybe<Scalars['Int']>;
  name?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
  type?: Maybe<Scalars['String']>;
};

/** update columns of table "Lists_campaign" */
export enum Lists_Campaign_Update_Column {
  /** column name */
  Members = 'members',
  /** column name */
  Name = 'name',
  /** column name */
  Order = 'order',
  /** column name */
  Type = 'type'
}

export type MarketingSource = {
  __typename?: 'MarketingSource';
  company?: Maybe<Company>;
  company_id?: Maybe<Scalars['Int']>;
  custom_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  imported?: Maybe<Scalars['Int']>;
  name?: Maybe<Scalars['String']>;
  public?: Maybe<Scalars['Boolean']>;
};

export type MarketingSourceCreateInput = {
  company: CompanyCreateNestedOneWithoutMarketingSourceInput;
  custom_id: Scalars['Int'];
  imported: Scalars['Int'];
  name: Scalars['String'];
  public: Scalars['Boolean'];
};

export type MarketingSourceCreateNestedManyWithoutCompanyInput = {
  connect?: Maybe<Array<Maybe<MarketingSourceWhereUniqueInput>>>;
  connectOrCreate?: Maybe<Array<Maybe<MarketingSourceCreateOrConnectWithoutCompanyInput>>>;
  create?: Maybe<Array<Maybe<MarketingSourceCreateWithoutCompanyInput>>>;
};

export type MarketingSourceCreateOrConnectWithoutCompanyInput = {
  create: MarketingSourceUncheckedCreateWithoutCompanyInput;
  where: MarketingSourceWhereUniqueInput;
};

export type MarketingSourceCreateWithoutCompanyInput = {
  custom_id: Scalars['Int'];
  imported: Scalars['Int'];
  name: Scalars['String'];
  public: Scalars['Boolean'];
};

export type MarketingSourceListRelationFilter = {
  every?: Maybe<MarketingSourceWhereInput>;
  none?: Maybe<MarketingSourceWhereInput>;
  some?: Maybe<MarketingSourceWhereInput>;
};

export type MarketingSourceOrderByInput = {
  company_id?: Maybe<SortOrder>;
  custom_id?: Maybe<SortOrder>;
  id?: Maybe<SortOrder>;
  imported?: Maybe<SortOrder>;
  name?: Maybe<SortOrder>;
  public?: Maybe<SortOrder>;
};

export type MarketingSourceScalarWhereInput = {
  AND?: Maybe<Array<Maybe<MarketingSourceScalarWhereInput>>>;
  NOT?: Maybe<Array<Maybe<MarketingSourceScalarWhereInput>>>;
  OR?: Maybe<Array<Maybe<MarketingSourceScalarWhereInput>>>;
  company_id?: Maybe<IntFilter>;
  custom_id?: Maybe<IntFilter>;
  id?: Maybe<IntFilter>;
  imported?: Maybe<IntFilter>;
  name?: Maybe<StringFilter>;
  public?: Maybe<BoolFilter>;
};

export type MarketingSourceUncheckedCreateNestedManyWithoutCompanyInput = {
  connect?: Maybe<Array<Maybe<MarketingSourceWhereUniqueInput>>>;
  connectOrCreate?: Maybe<Array<Maybe<MarketingSourceCreateOrConnectWithoutCompanyInput>>>;
  create?: Maybe<Array<Maybe<MarketingSourceCreateWithoutCompanyInput>>>;
};

export type MarketingSourceUncheckedCreateWithoutCompanyInput = {
  custom_id: Scalars['Int'];
  id?: Maybe<Scalars['Int']>;
  imported: Scalars['Int'];
  name: Scalars['String'];
  public: Scalars['Boolean'];
};

export type MarketingSourceUncheckedUpdateManyWithoutCompanyInput = {
  connect?: Maybe<Array<Maybe<MarketingSourceWhereUniqueInput>>>;
  connectOrCreate?: Maybe<Array<Maybe<MarketingSourceCreateOrConnectWithoutCompanyInput>>>;
  create?: Maybe<Array<Maybe<MarketingSourceCreateWithoutCompanyInput>>>;
  delete?: Maybe<Array<Maybe<MarketingSourceWhereUniqueInput>>>;
  deleteMany?: Maybe<Array<Maybe<MarketingSourceScalarWhereInput>>>;
  disconnect?: Maybe<Array<Maybe<MarketingSourceWhereUniqueInput>>>;
  set?: Maybe<Array<Maybe<MarketingSourceWhereUniqueInput>>>;
  update?: Maybe<Array<Maybe<MarketingSourceUpdateWithWhereUniqueWithoutCompanyInput>>>;
  updateMany?: Maybe<Array<Maybe<MarketingSourceUpdateManyWithWhereWithoutCompanyInput>>>;
  upsert?: Maybe<Array<Maybe<MarketingSourceUpsertWithWhereUniqueWithoutCompanyInput>>>;
};

export type MarketingSourceUncheckedUpdateManyWithoutMarketingSourceInput = {
  custom_id?: Maybe<IntFieldUpdateOperationsInput>;
  id?: Maybe<IntFieldUpdateOperationsInput>;
  imported?: Maybe<IntFieldUpdateOperationsInput>;
  name?: Maybe<StringFieldUpdateOperationsInput>;
  public?: Maybe<BoolFieldUpdateOperationsInput>;
};

export type MarketingSourceUncheckedUpdateWithoutCompanyInput = {
  custom_id?: Maybe<IntFieldUpdateOperationsInput>;
  id?: Maybe<IntFieldUpdateOperationsInput>;
  imported?: Maybe<IntFieldUpdateOperationsInput>;
  name?: Maybe<StringFieldUpdateOperationsInput>;
  public?: Maybe<BoolFieldUpdateOperationsInput>;
};

export type MarketingSourceUpdateInput = {
  company?: Maybe<CompanyUpdateOneRequiredWithoutMarketingSourceInput>;
  custom_id?: Maybe<IntFieldUpdateOperationsInput>;
  imported?: Maybe<IntFieldUpdateOperationsInput>;
  name?: Maybe<StringFieldUpdateOperationsInput>;
  public?: Maybe<BoolFieldUpdateOperationsInput>;
};

export type MarketingSourceUpdateManyMutationInput = {
  custom_id?: Maybe<IntFieldUpdateOperationsInput>;
  imported?: Maybe<IntFieldUpdateOperationsInput>;
  name?: Maybe<StringFieldUpdateOperationsInput>;
  public?: Maybe<BoolFieldUpdateOperationsInput>;
};

export type MarketingSourceUpdateManyWithWhereWithoutCompanyInput = {
  data: MarketingSourceUncheckedUpdateManyWithoutMarketingSourceInput;
  where: MarketingSourceScalarWhereInput;
};

export type MarketingSourceUpdateManyWithoutCompanyInput = {
  connect?: Maybe<Array<Maybe<MarketingSourceWhereUniqueInput>>>;
  connectOrCreate?: Maybe<Array<Maybe<MarketingSourceCreateOrConnectWithoutCompanyInput>>>;
  create?: Maybe<Array<Maybe<MarketingSourceCreateWithoutCompanyInput>>>;
  delete?: Maybe<Array<Maybe<MarketingSourceWhereUniqueInput>>>;
  deleteMany?: Maybe<Array<Maybe<MarketingSourceScalarWhereInput>>>;
  disconnect?: Maybe<Array<Maybe<MarketingSourceWhereUniqueInput>>>;
  set?: Maybe<Array<Maybe<MarketingSourceWhereUniqueInput>>>;
  update?: Maybe<Array<Maybe<MarketingSourceUpdateWithWhereUniqueWithoutCompanyInput>>>;
  updateMany?: Maybe<Array<Maybe<MarketingSourceUpdateManyWithWhereWithoutCompanyInput>>>;
  upsert?: Maybe<Array<Maybe<MarketingSourceUpsertWithWhereUniqueWithoutCompanyInput>>>;
};

export type MarketingSourceUpdateWithWhereUniqueWithoutCompanyInput = {
  data: MarketingSourceUncheckedUpdateWithoutCompanyInput;
  where: MarketingSourceWhereUniqueInput;
};

export type MarketingSourceUpsertWithWhereUniqueWithoutCompanyInput = {
  create: MarketingSourceUncheckedCreateWithoutCompanyInput;
  update: MarketingSourceUncheckedUpdateWithoutCompanyInput;
  where: MarketingSourceWhereUniqueInput;
};

export type MarketingSourceWhereInput = {
  AND?: Maybe<Array<Maybe<MarketingSourceWhereInput>>>;
  NOT?: Maybe<Array<Maybe<MarketingSourceWhereInput>>>;
  OR?: Maybe<Array<Maybe<MarketingSourceWhereInput>>>;
  company?: Maybe<CompanyWhereInput>;
  company_id?: Maybe<IntFilter>;
  custom_id?: Maybe<IntFilter>;
  id?: Maybe<IntFilter>;
  imported?: Maybe<IntFilter>;
  name?: Maybe<StringFilter>;
  public?: Maybe<BoolFilter>;
};

export type MarketingSourceWhereUniqueInput = {
  id?: Maybe<Scalars['Int']>;
};

export type MediaLlibraryAttachment = {
  __typename?: 'MediaLlibraryAttachment';
  communication_id?: Maybe<Scalars['Int']>;
  company_id?: Maybe<Scalars['Int']>;
  contact_attachment_id?: Maybe<Scalars['Int']>;
  contact_id?: Maybe<Scalars['Int']>;
  creation_date?: Maybe<Scalars['DateTime']>;
  file_url?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  medical_form_contact_id?: Maybe<Scalars['Int']>;
  sales_id?: Maybe<Scalars['Int']>;
  statement_id?: Maybe<Scalars['Int']>;
};

export type MediaLlibraryAttachmentCreateInput = {
  communication_id?: Maybe<Scalars['Int']>;
  company_id: Scalars['Int'];
  contact_attachment_id?: Maybe<Scalars['Int']>;
  contact_id: Scalars['Int'];
  creation_date: Scalars['DateTime'];
  file_url: Scalars['String'];
  medical_form_contact_id?: Maybe<Scalars['Int']>;
  sales_id?: Maybe<Scalars['Int']>;
  statement_id?: Maybe<Scalars['Int']>;
};

export type MediaLlibraryAttachmentOrderByInput = {
  communication_id?: Maybe<SortOrder>;
  company_id?: Maybe<SortOrder>;
  contact_attachment_id?: Maybe<SortOrder>;
  contact_id?: Maybe<SortOrder>;
  creation_date?: Maybe<SortOrder>;
  file_url?: Maybe<SortOrder>;
  id?: Maybe<SortOrder>;
  medical_form_contact_id?: Maybe<SortOrder>;
  sales_id?: Maybe<SortOrder>;
  statement_id?: Maybe<SortOrder>;
};

export type MediaLlibraryAttachmentUpdateInput = {
  communication_id?: Maybe<IntFieldUpdateOperationsInput>;
  company_id?: Maybe<IntFieldUpdateOperationsInput>;
  contact_attachment_id?: Maybe<IntFieldUpdateOperationsInput>;
  contact_id?: Maybe<IntFieldUpdateOperationsInput>;
  creation_date?: Maybe<DateTimeFieldUpdateOperationsInput>;
  file_url?: Maybe<StringFieldUpdateOperationsInput>;
  medical_form_contact_id?: Maybe<IntFieldUpdateOperationsInput>;
  sales_id?: Maybe<IntFieldUpdateOperationsInput>;
  statement_id?: Maybe<IntFieldUpdateOperationsInput>;
};

export type MediaLlibraryAttachmentUpdateManyMutationInput = {
  communication_id?: Maybe<IntFieldUpdateOperationsInput>;
  company_id?: Maybe<IntFieldUpdateOperationsInput>;
  contact_attachment_id?: Maybe<IntFieldUpdateOperationsInput>;
  contact_id?: Maybe<IntFieldUpdateOperationsInput>;
  creation_date?: Maybe<DateTimeFieldUpdateOperationsInput>;
  file_url?: Maybe<StringFieldUpdateOperationsInput>;
  medical_form_contact_id?: Maybe<IntFieldUpdateOperationsInput>;
  sales_id?: Maybe<IntFieldUpdateOperationsInput>;
  statement_id?: Maybe<IntFieldUpdateOperationsInput>;
};

export type MediaLlibraryAttachmentWhereInput = {
  AND?: Maybe<Array<Maybe<MediaLlibraryAttachmentWhereInput>>>;
  NOT?: Maybe<Array<Maybe<MediaLlibraryAttachmentWhereInput>>>;
  OR?: Maybe<Array<Maybe<MediaLlibraryAttachmentWhereInput>>>;
  communication_id?: Maybe<IntFilter>;
  company_id?: Maybe<IntFilter>;
  contact_attachment_id?: Maybe<IntFilter>;
  contact_id?: Maybe<IntFilter>;
  creation_date?: Maybe<DateTimeFilter>;
  file_url?: Maybe<StringFilter>;
  id?: Maybe<IntFilter>;
  medical_form_contact_id?: Maybe<IntFilter>;
  sales_id?: Maybe<IntFilter>;
  statement_id?: Maybe<IntFilter>;
};

export type MediaLlibraryAttachmentWhereUniqueInput = {
  id?: Maybe<Scalars['Int']>;
};

export type NestedBoolFilter = {
  equals?: Maybe<Scalars['Boolean']>;
  not?: Maybe<NestedBoolFilter>;
};

export type NestedBoolNullableFilter = {
  equals?: Maybe<Scalars['Boolean']>;
  not?: Maybe<NestedBoolNullableFilter>;
};

export type NestedDateTimeFilter = {
  equals?: Maybe<Scalars['DateTime']>;
  gt?: Maybe<Scalars['DateTime']>;
  gte?: Maybe<Scalars['DateTime']>;
  in?: Maybe<Array<Maybe<Scalars['DateTime']>>>;
  lt?: Maybe<Scalars['DateTime']>;
  lte?: Maybe<Scalars['DateTime']>;
  not?: Maybe<NestedDateTimeFilter>;
  notIn?: Maybe<Array<Maybe<Scalars['DateTime']>>>;
};

export type NestedDateTimeNullableFilter = {
  equals?: Maybe<Scalars['DateTime']>;
  gt?: Maybe<Scalars['DateTime']>;
  gte?: Maybe<Scalars['DateTime']>;
  in?: Maybe<Array<Maybe<Scalars['DateTime']>>>;
  lt?: Maybe<Scalars['DateTime']>;
  lte?: Maybe<Scalars['DateTime']>;
  not?: Maybe<NestedDateTimeNullableFilter>;
  notIn?: Maybe<Array<Maybe<Scalars['DateTime']>>>;
};

export type NestedEnumbooking_Master_Cancel_StatusFilter = {
  equals?: Maybe<Booking_Master_Cancel_Status>;
  in?: Maybe<Array<Maybe<Booking_Master_Cancel_Status>>>;
  not?: Maybe<NestedEnumbooking_Master_Cancel_StatusFilter>;
  notIn?: Maybe<Array<Maybe<Booking_Master_Cancel_Status>>>;
};

export type NestedEnumbooking_Master_Payment_StatusFilter = {
  equals?: Maybe<Booking_Master_Payment_Status>;
  in?: Maybe<Array<Maybe<Booking_Master_Payment_Status>>>;
  not?: Maybe<NestedEnumbooking_Master_Payment_StatusFilter>;
  notIn?: Maybe<Array<Maybe<Booking_Master_Payment_Status>>>;
};

export type NestedEnumbooking_Statuses_IndicatorNullableFilter = {
  equals?: Maybe<Booking_Statuses_Indicator>;
  in?: Maybe<Array<Maybe<Booking_Statuses_Indicator>>>;
  not?: Maybe<NestedEnumbooking_Statuses_IndicatorNullableFilter>;
  notIn?: Maybe<Array<Maybe<Booking_Statuses_Indicator>>>;
};

export type NestedEnumbookitpro_General_Integration_MethodNullableFilter = {
  equals?: Maybe<Bookitpro_General_Integration_Method>;
  in?: Maybe<Array<Maybe<Bookitpro_General_Integration_Method>>>;
  not?: Maybe<NestedEnumbookitpro_General_Integration_MethodNullableFilter>;
  notIn?: Maybe<Array<Maybe<Bookitpro_General_Integration_Method>>>;
};

export type NestedEnumclass_Master_Class_PayNullableFilter = {
  equals?: Maybe<Class_Master_Class_Pay>;
  in?: Maybe<Array<Maybe<Class_Master_Class_Pay>>>;
  not?: Maybe<NestedEnumclass_Master_Class_PayNullableFilter>;
  notIn?: Maybe<Array<Maybe<Class_Master_Class_Pay>>>;
};

export type NestedEnumcm_Account_Notes_StatusFilter = {
  equals?: Maybe<Cm_Account_Notes_Status>;
  in?: Maybe<Array<Maybe<Cm_Account_Notes_Status>>>;
  not?: Maybe<NestedEnumcm_Account_Notes_StatusFilter>;
  notIn?: Maybe<Array<Maybe<Cm_Account_Notes_Status>>>;
};

export type NestedEnumcm_Booking_Notes_StatusFilter = {
  equals?: Maybe<Cm_Booking_Notes_Status>;
  in?: Maybe<Array<Maybe<Cm_Booking_Notes_Status>>>;
  not?: Maybe<NestedEnumcm_Booking_Notes_StatusFilter>;
  notIn?: Maybe<Array<Maybe<Cm_Booking_Notes_Status>>>;
};

export type NestedEnumcm_Case_Notes_StatusFilter = {
  equals?: Maybe<Cm_Case_Notes_Status>;
  in?: Maybe<Array<Maybe<Cm_Case_Notes_Status>>>;
  not?: Maybe<NestedEnumcm_Case_Notes_StatusFilter>;
  notIn?: Maybe<Array<Maybe<Cm_Case_Notes_Status>>>;
};

export type NestedEnumcm_Compaign_Notes_StatusFilter = {
  equals?: Maybe<Cm_Compaign_Notes_Status>;
  in?: Maybe<Array<Maybe<Cm_Compaign_Notes_Status>>>;
  not?: Maybe<NestedEnumcm_Compaign_Notes_StatusFilter>;
  notIn?: Maybe<Array<Maybe<Cm_Compaign_Notes_Status>>>;
};

export type NestedEnumcm_Contacts_AddToQuickBooksFilter = {
  equals?: Maybe<Cm_Contacts_AddToQuickBooks>;
  in?: Maybe<Array<Maybe<Cm_Contacts_AddToQuickBooks>>>;
  not?: Maybe<NestedEnumcm_Contacts_AddToQuickBooksFilter>;
  notIn?: Maybe<Array<Maybe<Cm_Contacts_AddToQuickBooks>>>;
};

export type NestedEnumcm_Contacts_EmailOptOutFilter = {
  equals?: Maybe<Cm_Contacts_EmailOptOut>;
  in?: Maybe<Array<Maybe<Cm_Contacts_EmailOptOut>>>;
  not?: Maybe<NestedEnumcm_Contacts_EmailOptOutFilter>;
  notIn?: Maybe<Array<Maybe<Cm_Contacts_EmailOptOut>>>;
};

export type NestedEnumcm_Contacts_StatusFilter = {
  equals?: Maybe<Cm_Contacts_Status>;
  in?: Maybe<Array<Maybe<Cm_Contacts_Status>>>;
  not?: Maybe<NestedEnumcm_Contacts_StatusFilter>;
  notIn?: Maybe<Array<Maybe<Cm_Contacts_Status>>>;
};

export type NestedEnumcompany_Details_Tax_NameFilter = {
  equals?: Maybe<Company_Details_Tax_Name>;
  in?: Maybe<Array<Maybe<Company_Details_Tax_Name>>>;
  not?: Maybe<NestedEnumcompany_Details_Tax_NameFilter>;
  notIn?: Maybe<Array<Maybe<Company_Details_Tax_Name>>>;
};

export type NestedEnumgl_Codes_DescriptionFilter = {
  equals?: Maybe<Gl_Codes_Description>;
  in?: Maybe<Array<Maybe<Gl_Codes_Description>>>;
  not?: Maybe<NestedEnumgl_Codes_DescriptionFilter>;
  notIn?: Maybe<Array<Maybe<Gl_Codes_Description>>>;
};

export type NestedFloatFilter = {
  equals?: Maybe<Scalars['Float']>;
  gt?: Maybe<Scalars['Float']>;
  gte?: Maybe<Scalars['Float']>;
  in?: Maybe<Array<Maybe<Scalars['Float']>>>;
  lt?: Maybe<Scalars['Float']>;
  lte?: Maybe<Scalars['Float']>;
  not?: Maybe<NestedFloatFilter>;
  notIn?: Maybe<Array<Maybe<Scalars['Float']>>>;
};

export type NestedFloatNullableFilter = {
  equals?: Maybe<Scalars['Float']>;
  gt?: Maybe<Scalars['Float']>;
  gte?: Maybe<Scalars['Float']>;
  in?: Maybe<Array<Maybe<Scalars['Float']>>>;
  lt?: Maybe<Scalars['Float']>;
  lte?: Maybe<Scalars['Float']>;
  not?: Maybe<NestedFloatNullableFilter>;
  notIn?: Maybe<Array<Maybe<Scalars['Float']>>>;
};

export type NestedIntFilter = {
  equals?: Maybe<Scalars['Int']>;
  gt?: Maybe<Scalars['Int']>;
  gte?: Maybe<Scalars['Int']>;
  in?: Maybe<Array<Maybe<Scalars['Int']>>>;
  lt?: Maybe<Scalars['Int']>;
  lte?: Maybe<Scalars['Int']>;
  not?: Maybe<NestedIntFilter>;
  notIn?: Maybe<Array<Maybe<Scalars['Int']>>>;
};

export type NestedIntNullableFilter = {
  equals?: Maybe<Scalars['Int']>;
  gt?: Maybe<Scalars['Int']>;
  gte?: Maybe<Scalars['Int']>;
  in?: Maybe<Array<Maybe<Scalars['Int']>>>;
  lt?: Maybe<Scalars['Int']>;
  lte?: Maybe<Scalars['Int']>;
  not?: Maybe<NestedIntNullableFilter>;
  notIn?: Maybe<Array<Maybe<Scalars['Int']>>>;
};

export type NestedStringFilter = {
  contains?: Maybe<Scalars['String']>;
  endsWith?: Maybe<Scalars['String']>;
  equals?: Maybe<Scalars['String']>;
  gt?: Maybe<Scalars['String']>;
  gte?: Maybe<Scalars['String']>;
  in?: Maybe<Array<Maybe<Scalars['String']>>>;
  lt?: Maybe<Scalars['String']>;
  lte?: Maybe<Scalars['String']>;
  not?: Maybe<NestedStringFilter>;
  notIn?: Maybe<Array<Maybe<Scalars['String']>>>;
  startsWith?: Maybe<Scalars['String']>;
};

export type NestedStringNullableFilter = {
  contains?: Maybe<Scalars['String']>;
  endsWith?: Maybe<Scalars['String']>;
  equals?: Maybe<Scalars['String']>;
  gt?: Maybe<Scalars['String']>;
  gte?: Maybe<Scalars['String']>;
  in?: Maybe<Array<Maybe<Scalars['String']>>>;
  lt?: Maybe<Scalars['String']>;
  lte?: Maybe<Scalars['String']>;
  not?: Maybe<NestedStringNullableFilter>;
  notIn?: Maybe<Array<Maybe<Scalars['String']>>>;
  startsWith?: Maybe<Scalars['String']>;
};

/** columns and relationships of "Newsletter_campaign" */
export type Newsletter_Campaign = {
  __typename?: 'Newsletter_campaign';
  clicked: Scalars['Int'];
  created_at: Scalars['timestamptz'];
  id: Scalars['uuid'];
  last_modified: Scalars['date'];
  name: Scalars['String'];
  opened: Scalars['Int'];
  order: Scalars['Int'];
  revenue: Scalars['Int'];
  sent_date: Scalars['date'];
  sent_to: Scalars['Int'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "Newsletter_campaign" */
export type Newsletter_Campaign_Aggregate = {
  __typename?: 'Newsletter_campaign_aggregate';
  aggregate?: Maybe<Newsletter_Campaign_Aggregate_Fields>;
  nodes: Array<Newsletter_Campaign>;
};

/** aggregate fields of "Newsletter_campaign" */
export type Newsletter_Campaign_Aggregate_Fields = {
  __typename?: 'Newsletter_campaign_aggregate_fields';
  avg?: Maybe<Newsletter_Campaign_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Newsletter_Campaign_Max_Fields>;
  min?: Maybe<Newsletter_Campaign_Min_Fields>;
  stddev?: Maybe<Newsletter_Campaign_Stddev_Fields>;
  stddev_pop?: Maybe<Newsletter_Campaign_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Newsletter_Campaign_Stddev_Samp_Fields>;
  sum?: Maybe<Newsletter_Campaign_Sum_Fields>;
  var_pop?: Maybe<Newsletter_Campaign_Var_Pop_Fields>;
  var_samp?: Maybe<Newsletter_Campaign_Var_Samp_Fields>;
  variance?: Maybe<Newsletter_Campaign_Variance_Fields>;
};


/** aggregate fields of "Newsletter_campaign" */
export type Newsletter_Campaign_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Newsletter_Campaign_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Newsletter_Campaign_Avg_Fields = {
  __typename?: 'Newsletter_campaign_avg_fields';
  clicked?: Maybe<Scalars['Float']>;
  opened?: Maybe<Scalars['Float']>;
  order?: Maybe<Scalars['Float']>;
  revenue?: Maybe<Scalars['Float']>;
  sent_to?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "Newsletter_campaign". All fields are combined with a logical 'AND'. */
export type Newsletter_Campaign_Bool_Exp = {
  _and?: Maybe<Array<Newsletter_Campaign_Bool_Exp>>;
  _not?: Maybe<Newsletter_Campaign_Bool_Exp>;
  _or?: Maybe<Array<Newsletter_Campaign_Bool_Exp>>;
  clicked?: Maybe<Int_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Uuid_Comparison_Exp>;
  last_modified?: Maybe<Date_Comparison_Exp>;
  name?: Maybe<String_Comparison_Exp>;
  opened?: Maybe<Int_Comparison_Exp>;
  order?: Maybe<Int_Comparison_Exp>;
  revenue?: Maybe<Int_Comparison_Exp>;
  sent_date?: Maybe<Date_Comparison_Exp>;
  sent_to?: Maybe<Int_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "Newsletter_campaign" */
export enum Newsletter_Campaign_Constraint {
  /** unique or primary key constraint */
  NewsletterCampaignPkey = 'Newsletter_campaign_pkey'
}

/** input type for incrementing numeric columns in table "Newsletter_campaign" */
export type Newsletter_Campaign_Inc_Input = {
  clicked?: Maybe<Scalars['Int']>;
  opened?: Maybe<Scalars['Int']>;
  order?: Maybe<Scalars['Int']>;
  revenue?: Maybe<Scalars['Int']>;
  sent_to?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "Newsletter_campaign" */
export type Newsletter_Campaign_Insert_Input = {
  clicked?: Maybe<Scalars['Int']>;
  last_modified?: Maybe<Scalars['date']>;
  name?: Maybe<Scalars['String']>;
  opened?: Maybe<Scalars['Int']>;
  order?: Maybe<Scalars['Int']>;
  revenue?: Maybe<Scalars['Int']>;
  sent_date?: Maybe<Scalars['date']>;
  sent_to?: Maybe<Scalars['Int']>;
};

/** aggregate max on columns */
export type Newsletter_Campaign_Max_Fields = {
  __typename?: 'Newsletter_campaign_max_fields';
  clicked?: Maybe<Scalars['Int']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  last_modified?: Maybe<Scalars['date']>;
  name?: Maybe<Scalars['String']>;
  opened?: Maybe<Scalars['Int']>;
  order?: Maybe<Scalars['Int']>;
  revenue?: Maybe<Scalars['Int']>;
  sent_date?: Maybe<Scalars['date']>;
  sent_to?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type Newsletter_Campaign_Min_Fields = {
  __typename?: 'Newsletter_campaign_min_fields';
  clicked?: Maybe<Scalars['Int']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  last_modified?: Maybe<Scalars['date']>;
  name?: Maybe<Scalars['String']>;
  opened?: Maybe<Scalars['Int']>;
  order?: Maybe<Scalars['Int']>;
  revenue?: Maybe<Scalars['Int']>;
  sent_date?: Maybe<Scalars['date']>;
  sent_to?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "Newsletter_campaign" */
export type Newsletter_Campaign_Mutation_Response = {
  __typename?: 'Newsletter_campaign_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Newsletter_Campaign>;
};

/** on conflict condition type for table "Newsletter_campaign" */
export type Newsletter_Campaign_On_Conflict = {
  constraint: Newsletter_Campaign_Constraint;
  update_columns: Array<Newsletter_Campaign_Update_Column>;
  where?: Maybe<Newsletter_Campaign_Bool_Exp>;
};

/** Ordering options when selecting data from "Newsletter_campaign". */
export type Newsletter_Campaign_Order_By = {
  clicked?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  last_modified?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  opened?: Maybe<Order_By>;
  order?: Maybe<Order_By>;
  revenue?: Maybe<Order_By>;
  sent_date?: Maybe<Order_By>;
  sent_to?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: Newsletter_campaign */
export type Newsletter_Campaign_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "Newsletter_campaign" */
export enum Newsletter_Campaign_Select_Column {
  /** column name */
  Clicked = 'clicked',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  LastModified = 'last_modified',
  /** column name */
  Name = 'name',
  /** column name */
  Opened = 'opened',
  /** column name */
  Order = 'order',
  /** column name */
  Revenue = 'revenue',
  /** column name */
  SentDate = 'sent_date',
  /** column name */
  SentTo = 'sent_to',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "Newsletter_campaign" */
export type Newsletter_Campaign_Set_Input = {
  clicked?: Maybe<Scalars['Int']>;
  last_modified?: Maybe<Scalars['date']>;
  name?: Maybe<Scalars['String']>;
  opened?: Maybe<Scalars['Int']>;
  order?: Maybe<Scalars['Int']>;
  revenue?: Maybe<Scalars['Int']>;
  sent_date?: Maybe<Scalars['date']>;
  sent_to?: Maybe<Scalars['Int']>;
};

/** aggregate stddev on columns */
export type Newsletter_Campaign_Stddev_Fields = {
  __typename?: 'Newsletter_campaign_stddev_fields';
  clicked?: Maybe<Scalars['Float']>;
  opened?: Maybe<Scalars['Float']>;
  order?: Maybe<Scalars['Float']>;
  revenue?: Maybe<Scalars['Float']>;
  sent_to?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Newsletter_Campaign_Stddev_Pop_Fields = {
  __typename?: 'Newsletter_campaign_stddev_pop_fields';
  clicked?: Maybe<Scalars['Float']>;
  opened?: Maybe<Scalars['Float']>;
  order?: Maybe<Scalars['Float']>;
  revenue?: Maybe<Scalars['Float']>;
  sent_to?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Newsletter_Campaign_Stddev_Samp_Fields = {
  __typename?: 'Newsletter_campaign_stddev_samp_fields';
  clicked?: Maybe<Scalars['Float']>;
  opened?: Maybe<Scalars['Float']>;
  order?: Maybe<Scalars['Float']>;
  revenue?: Maybe<Scalars['Float']>;
  sent_to?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Newsletter_Campaign_Sum_Fields = {
  __typename?: 'Newsletter_campaign_sum_fields';
  clicked?: Maybe<Scalars['Int']>;
  opened?: Maybe<Scalars['Int']>;
  order?: Maybe<Scalars['Int']>;
  revenue?: Maybe<Scalars['Int']>;
  sent_to?: Maybe<Scalars['Int']>;
};

/** update columns of table "Newsletter_campaign" */
export enum Newsletter_Campaign_Update_Column {
  /** column name */
  Clicked = 'clicked',
  /** column name */
  LastModified = 'last_modified',
  /** column name */
  Name = 'name',
  /** column name */
  Opened = 'opened',
  /** column name */
  Order = 'order',
  /** column name */
  Revenue = 'revenue',
  /** column name */
  SentDate = 'sent_date',
  /** column name */
  SentTo = 'sent_to'
}

/** aggregate var_pop on columns */
export type Newsletter_Campaign_Var_Pop_Fields = {
  __typename?: 'Newsletter_campaign_var_pop_fields';
  clicked?: Maybe<Scalars['Float']>;
  opened?: Maybe<Scalars['Float']>;
  order?: Maybe<Scalars['Float']>;
  revenue?: Maybe<Scalars['Float']>;
  sent_to?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Newsletter_Campaign_Var_Samp_Fields = {
  __typename?: 'Newsletter_campaign_var_samp_fields';
  clicked?: Maybe<Scalars['Float']>;
  opened?: Maybe<Scalars['Float']>;
  order?: Maybe<Scalars['Float']>;
  revenue?: Maybe<Scalars['Float']>;
  sent_to?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Newsletter_Campaign_Variance_Fields = {
  __typename?: 'Newsletter_campaign_variance_fields';
  clicked?: Maybe<Scalars['Float']>;
  opened?: Maybe<Scalars['Float']>;
  order?: Maybe<Scalars['Float']>;
  revenue?: Maybe<Scalars['Float']>;
  sent_to?: Maybe<Scalars['Float']>;
};

export type NullableBoolFieldUpdateOperationsInput = {
  set?: Maybe<Scalars['Boolean']>;
};

export type NullableDateTimeFieldUpdateOperationsInput = {
  set?: Maybe<Scalars['DateTime']>;
};

export type NullableEnumbooking_Statuses_IndicatorFieldUpdateOperationsInput = {
  set?: Maybe<Booking_Statuses_Indicator>;
};

export type NullableEnumbookitpro_General_Integration_MethodFieldUpdateOperationsInput = {
  set?: Maybe<Bookitpro_General_Integration_Method>;
};

export type NullableEnumclass_Master_Class_PayFieldUpdateOperationsInput = {
  set?: Maybe<Class_Master_Class_Pay>;
};

export type NullableFloatFieldUpdateOperationsInput = {
  decrement?: Maybe<Scalars['Float']>;
  divide?: Maybe<Scalars['Float']>;
  increment?: Maybe<Scalars['Float']>;
  multiply?: Maybe<Scalars['Float']>;
  set?: Maybe<Scalars['Float']>;
};

export type NullableIntFieldUpdateOperationsInput = {
  decrement?: Maybe<Scalars['Int']>;
  divide?: Maybe<Scalars['Int']>;
  increment?: Maybe<Scalars['Int']>;
  multiply?: Maybe<Scalars['Int']>;
  set?: Maybe<Scalars['Int']>;
};

export type NullableStringFieldUpdateOperationsInput = {
  set?: Maybe<Scalars['String']>;
};

/** columns and relationships of "SMS_campaign" */
export type Sms_Campaign = {
  __typename?: 'SMS_campaign';
  created_at: Scalars['timestamptz'];
  id: Scalars['uuid'];
  last_modified: Scalars['date'];
  name: Scalars['String'];
  order: Scalars['Int'];
  sent_date: Scalars['date'];
  sent_to: Scalars['Int'];
  updated_at: Scalars['timestamptz'];
};

/** Boolean expression to filter rows from the table "SMS_campaign". All fields are combined with a logical 'AND'. */
export type Sms_Campaign_Bool_Exp = {
  _and?: Maybe<Array<Sms_Campaign_Bool_Exp>>;
  _not?: Maybe<Sms_Campaign_Bool_Exp>;
  _or?: Maybe<Array<Sms_Campaign_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Uuid_Comparison_Exp>;
  last_modified?: Maybe<Date_Comparison_Exp>;
  name?: Maybe<String_Comparison_Exp>;
  order?: Maybe<Int_Comparison_Exp>;
  sent_date?: Maybe<Date_Comparison_Exp>;
  sent_to?: Maybe<Int_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "SMS_campaign" */
export enum Sms_Campaign_Constraint {
  /** unique or primary key constraint */
  SmsCampaignPkey = 'SMS_campaign_pkey'
}

/** input type for incrementing numeric columns in table "SMS_campaign" */
export type Sms_Campaign_Inc_Input = {
  order?: Maybe<Scalars['Int']>;
  sent_to?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "SMS_campaign" */
export type Sms_Campaign_Insert_Input = {
  last_modified?: Maybe<Scalars['date']>;
  name?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
  sent_date?: Maybe<Scalars['date']>;
  sent_to?: Maybe<Scalars['Int']>;
};

/** response of any mutation on the table "SMS_campaign" */
export type Sms_Campaign_Mutation_Response = {
  __typename?: 'SMS_campaign_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Sms_Campaign>;
};

/** on conflict condition type for table "SMS_campaign" */
export type Sms_Campaign_On_Conflict = {
  constraint: Sms_Campaign_Constraint;
  update_columns: Array<Sms_Campaign_Update_Column>;
  where?: Maybe<Sms_Campaign_Bool_Exp>;
};

/** Ordering options when selecting data from "SMS_campaign". */
export type Sms_Campaign_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  last_modified?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  order?: Maybe<Order_By>;
  sent_date?: Maybe<Order_By>;
  sent_to?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: SMS_campaign */
export type Sms_Campaign_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "SMS_campaign" */
export enum Sms_Campaign_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  LastModified = 'last_modified',
  /** column name */
  Name = 'name',
  /** column name */
  Order = 'order',
  /** column name */
  SentDate = 'sent_date',
  /** column name */
  SentTo = 'sent_to',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "SMS_campaign" */
export type Sms_Campaign_Set_Input = {
  last_modified?: Maybe<Scalars['date']>;
  name?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
  sent_date?: Maybe<Scalars['date']>;
  sent_to?: Maybe<Scalars['Int']>;
};

/** update columns of table "SMS_campaign" */
export enum Sms_Campaign_Update_Column {
  /** column name */
  LastModified = 'last_modified',
  /** column name */
  Name = 'name',
  /** column name */
  Order = 'order',
  /** column name */
  SentDate = 'sent_date',
  /** column name */
  SentTo = 'sent_to'
}

export type SecondAtAnswer = {
  __typename?: 'SecondAtAnswer';
  id?: Maybe<Scalars['Int']>;
  name?: Maybe<Scalars['String']>;
  question_id?: Maybe<Scalars['Int']>;
};

export type SecondAtAnswerCreateInput = {
  name: Scalars['String'];
  question_id: Scalars['Int'];
};

export type SecondAtAnswerOrderByInput = {
  id?: Maybe<SortOrder>;
  name?: Maybe<SortOrder>;
  question_id?: Maybe<SortOrder>;
};

export type SecondAtAnswerUpdateInput = {
  name?: Maybe<StringFieldUpdateOperationsInput>;
  question_id?: Maybe<IntFieldUpdateOperationsInput>;
};

export type SecondAtAnswerUpdateManyMutationInput = {
  name?: Maybe<StringFieldUpdateOperationsInput>;
  question_id?: Maybe<IntFieldUpdateOperationsInput>;
};

export type SecondAtAnswerWhereInput = {
  AND?: Maybe<Array<Maybe<SecondAtAnswerWhereInput>>>;
  NOT?: Maybe<Array<Maybe<SecondAtAnswerWhereInput>>>;
  OR?: Maybe<Array<Maybe<SecondAtAnswerWhereInput>>>;
  id?: Maybe<IntFilter>;
  name?: Maybe<StringFilter>;
  question_id?: Maybe<IntFilter>;
};

export type SecondAtAnswerWhereUniqueInput = {
  id?: Maybe<Scalars['Int']>;
};

export type SecondAtQuestion = {
  __typename?: 'SecondAtQuestion';
  company_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  name?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
};

export type SecondAtQuestionCreateInput = {
  company_id: Scalars['Int'];
  name: Scalars['String'];
  type: Scalars['String'];
};

export type SecondAtQuestionOrderByInput = {
  company_id?: Maybe<SortOrder>;
  id?: Maybe<SortOrder>;
  name?: Maybe<SortOrder>;
  type?: Maybe<SortOrder>;
};

export type SecondAtQuestionUpdateInput = {
  company_id?: Maybe<IntFieldUpdateOperationsInput>;
  name?: Maybe<StringFieldUpdateOperationsInput>;
  type?: Maybe<StringFieldUpdateOperationsInput>;
};

export type SecondAtQuestionUpdateManyMutationInput = {
  company_id?: Maybe<IntFieldUpdateOperationsInput>;
  name?: Maybe<StringFieldUpdateOperationsInput>;
  type?: Maybe<StringFieldUpdateOperationsInput>;
};

export type SecondAtQuestionWhereInput = {
  AND?: Maybe<Array<Maybe<SecondAtQuestionWhereInput>>>;
  NOT?: Maybe<Array<Maybe<SecondAtQuestionWhereInput>>>;
  OR?: Maybe<Array<Maybe<SecondAtQuestionWhereInput>>>;
  company_id?: Maybe<IntFilter>;
  id?: Maybe<IntFilter>;
  name?: Maybe<StringFilter>;
  type?: Maybe<StringFilter>;
};

export type SecondAtQuestionWhereUniqueInput = {
  id?: Maybe<Scalars['Int']>;
};

export enum SortOrder {
  Asc = 'asc',
  Desc = 'desc'
}

export type StringFieldUpdateOperationsInput = {
  set?: Maybe<Scalars['String']>;
};

export type StringFilter = {
  contains?: Maybe<Scalars['String']>;
  endsWith?: Maybe<Scalars['String']>;
  equals?: Maybe<Scalars['String']>;
  gt?: Maybe<Scalars['String']>;
  gte?: Maybe<Scalars['String']>;
  in?: Maybe<Array<Maybe<Scalars['String']>>>;
  lt?: Maybe<Scalars['String']>;
  lte?: Maybe<Scalars['String']>;
  not?: Maybe<NestedStringFilter>;
  notIn?: Maybe<Array<Maybe<Scalars['String']>>>;
  startsWith?: Maybe<Scalars['String']>;
};

export type StringNullableFilter = {
  contains?: Maybe<Scalars['String']>;
  endsWith?: Maybe<Scalars['String']>;
  equals?: Maybe<Scalars['String']>;
  gt?: Maybe<Scalars['String']>;
  gte?: Maybe<Scalars['String']>;
  in?: Maybe<Array<Maybe<Scalars['String']>>>;
  lt?: Maybe<Scalars['String']>;
  lte?: Maybe<Scalars['String']>;
  not?: Maybe<NestedStringNullableFilter>;
  notIn?: Maybe<Array<Maybe<Scalars['String']>>>;
  startsWith?: Maybe<Scalars['String']>;
};

/** Boolean expression to compare columns of type "String". All fields are combined with logical 'AND'. */
export type String_Comparison_Exp = {
  _eq?: Maybe<Scalars['String']>;
  _gt?: Maybe<Scalars['String']>;
  _gte?: Maybe<Scalars['String']>;
  /** does the column match the given case-insensitive pattern */
  _ilike?: Maybe<Scalars['String']>;
  _in?: Maybe<Array<Scalars['String']>>;
  _is_null?: Maybe<Scalars['Boolean']>;
  /** does the column match the given pattern */
  _like?: Maybe<Scalars['String']>;
  _lt?: Maybe<Scalars['String']>;
  _lte?: Maybe<Scalars['String']>;
  _neq?: Maybe<Scalars['String']>;
  /** does the column NOT match the given case-insensitive pattern */
  _nilike?: Maybe<Scalars['String']>;
  _nin?: Maybe<Array<Scalars['String']>>;
  /** does the column NOT match the given pattern */
  _nlike?: Maybe<Scalars['String']>;
  /** does the column NOT match the given SQL regular expression */
  _nsimilar?: Maybe<Scalars['String']>;
  /** does the column match the given SQL regular expression */
  _similar?: Maybe<Scalars['String']>;
};

export type ThirdPartyAccess = {
  __typename?: 'ThirdPartyAccess';
  access_id?: Maybe<Scalars['Int']>;
  company?: Maybe<Company>;
  company_id?: Maybe<Scalars['Int']>;
  company_name?: Maybe<Scalars['String']>;
  email?: Maybe<Scalars['String']>;
  first_name?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  last_name?: Maybe<Scalars['String']>;
  logo?: Maybe<Scalars['String']>;
  occupier?: Maybe<Scalars['Int']>;
  passcode?: Maybe<Scalars['Int']>;
};

export type ThirdPartyAccessCreateInput = {
  access_id: Scalars['Int'];
  company: CompanyCreateNestedOneWithoutThirdPartyAccessInput;
  company_name: Scalars['String'];
  email: Scalars['String'];
  first_name: Scalars['String'];
  last_name: Scalars['String'];
  logo: Scalars['String'];
  occupier: Scalars['Int'];
  passcode: Scalars['Int'];
};

export type ThirdPartyAccessCreateNestedManyWithoutCompanyInput = {
  connect?: Maybe<Array<Maybe<ThirdPartyAccessWhereUniqueInput>>>;
  connectOrCreate?: Maybe<Array<Maybe<ThirdPartyAccessCreateOrConnectWithoutCompanyInput>>>;
  create?: Maybe<Array<Maybe<ThirdPartyAccessCreateWithoutCompanyInput>>>;
};

export type ThirdPartyAccessCreateOrConnectWithoutCompanyInput = {
  create: ThirdPartyAccessUncheckedCreateWithoutCompanyInput;
  where: ThirdPartyAccessWhereUniqueInput;
};

export type ThirdPartyAccessCreateWithoutCompanyInput = {
  access_id: Scalars['Int'];
  company_name: Scalars['String'];
  email: Scalars['String'];
  first_name: Scalars['String'];
  last_name: Scalars['String'];
  logo: Scalars['String'];
  occupier: Scalars['Int'];
  passcode: Scalars['Int'];
};

export type ThirdPartyAccessListRelationFilter = {
  every?: Maybe<ThirdPartyAccessWhereInput>;
  none?: Maybe<ThirdPartyAccessWhereInput>;
  some?: Maybe<ThirdPartyAccessWhereInput>;
};

export type ThirdPartyAccessOrderByInput = {
  access_id?: Maybe<SortOrder>;
  company_id?: Maybe<SortOrder>;
  company_name?: Maybe<SortOrder>;
  email?: Maybe<SortOrder>;
  first_name?: Maybe<SortOrder>;
  id?: Maybe<SortOrder>;
  last_name?: Maybe<SortOrder>;
  logo?: Maybe<SortOrder>;
  occupier?: Maybe<SortOrder>;
  passcode?: Maybe<SortOrder>;
};

export type ThirdPartyAccessScalarWhereInput = {
  AND?: Maybe<Array<Maybe<ThirdPartyAccessScalarWhereInput>>>;
  NOT?: Maybe<Array<Maybe<ThirdPartyAccessScalarWhereInput>>>;
  OR?: Maybe<Array<Maybe<ThirdPartyAccessScalarWhereInput>>>;
  access_id?: Maybe<IntFilter>;
  company_id?: Maybe<IntFilter>;
  company_name?: Maybe<StringFilter>;
  email?: Maybe<StringFilter>;
  first_name?: Maybe<StringFilter>;
  id?: Maybe<IntFilter>;
  last_name?: Maybe<StringFilter>;
  logo?: Maybe<StringFilter>;
  occupier?: Maybe<IntFilter>;
  passcode?: Maybe<IntFilter>;
};

export type ThirdPartyAccessUncheckedCreateNestedManyWithoutCompanyInput = {
  connect?: Maybe<Array<Maybe<ThirdPartyAccessWhereUniqueInput>>>;
  connectOrCreate?: Maybe<Array<Maybe<ThirdPartyAccessCreateOrConnectWithoutCompanyInput>>>;
  create?: Maybe<Array<Maybe<ThirdPartyAccessCreateWithoutCompanyInput>>>;
};

export type ThirdPartyAccessUncheckedCreateWithoutCompanyInput = {
  access_id: Scalars['Int'];
  company_name: Scalars['String'];
  email: Scalars['String'];
  first_name: Scalars['String'];
  id?: Maybe<Scalars['Int']>;
  last_name: Scalars['String'];
  logo: Scalars['String'];
  occupier: Scalars['Int'];
  passcode: Scalars['Int'];
};

export type ThirdPartyAccessUncheckedUpdateManyWithoutCompanyInput = {
  connect?: Maybe<Array<Maybe<ThirdPartyAccessWhereUniqueInput>>>;
  connectOrCreate?: Maybe<Array<Maybe<ThirdPartyAccessCreateOrConnectWithoutCompanyInput>>>;
  create?: Maybe<Array<Maybe<ThirdPartyAccessCreateWithoutCompanyInput>>>;
  delete?: Maybe<Array<Maybe<ThirdPartyAccessWhereUniqueInput>>>;
  deleteMany?: Maybe<Array<Maybe<ThirdPartyAccessScalarWhereInput>>>;
  disconnect?: Maybe<Array<Maybe<ThirdPartyAccessWhereUniqueInput>>>;
  set?: Maybe<Array<Maybe<ThirdPartyAccessWhereUniqueInput>>>;
  update?: Maybe<Array<Maybe<ThirdPartyAccessUpdateWithWhereUniqueWithoutCompanyInput>>>;
  updateMany?: Maybe<Array<Maybe<ThirdPartyAccessUpdateManyWithWhereWithoutCompanyInput>>>;
  upsert?: Maybe<Array<Maybe<ThirdPartyAccessUpsertWithWhereUniqueWithoutCompanyInput>>>;
};

export type ThirdPartyAccessUncheckedUpdateManyWithoutThirdPartyAccessInput = {
  access_id?: Maybe<IntFieldUpdateOperationsInput>;
  company_name?: Maybe<StringFieldUpdateOperationsInput>;
  email?: Maybe<StringFieldUpdateOperationsInput>;
  first_name?: Maybe<StringFieldUpdateOperationsInput>;
  id?: Maybe<IntFieldUpdateOperationsInput>;
  last_name?: Maybe<StringFieldUpdateOperationsInput>;
  logo?: Maybe<StringFieldUpdateOperationsInput>;
  occupier?: Maybe<IntFieldUpdateOperationsInput>;
  passcode?: Maybe<IntFieldUpdateOperationsInput>;
};

export type ThirdPartyAccessUncheckedUpdateWithoutCompanyInput = {
  access_id?: Maybe<IntFieldUpdateOperationsInput>;
  company_name?: Maybe<StringFieldUpdateOperationsInput>;
  email?: Maybe<StringFieldUpdateOperationsInput>;
  first_name?: Maybe<StringFieldUpdateOperationsInput>;
  id?: Maybe<IntFieldUpdateOperationsInput>;
  last_name?: Maybe<StringFieldUpdateOperationsInput>;
  logo?: Maybe<StringFieldUpdateOperationsInput>;
  occupier?: Maybe<IntFieldUpdateOperationsInput>;
  passcode?: Maybe<IntFieldUpdateOperationsInput>;
};

export type ThirdPartyAccessUpdateInput = {
  access_id?: Maybe<IntFieldUpdateOperationsInput>;
  company?: Maybe<CompanyUpdateOneRequiredWithoutThirdPartyAccessInput>;
  company_name?: Maybe<StringFieldUpdateOperationsInput>;
  email?: Maybe<StringFieldUpdateOperationsInput>;
  first_name?: Maybe<StringFieldUpdateOperationsInput>;
  last_name?: Maybe<StringFieldUpdateOperationsInput>;
  logo?: Maybe<StringFieldUpdateOperationsInput>;
  occupier?: Maybe<IntFieldUpdateOperationsInput>;
  passcode?: Maybe<IntFieldUpdateOperationsInput>;
};

export type ThirdPartyAccessUpdateManyMutationInput = {
  access_id?: Maybe<IntFieldUpdateOperationsInput>;
  company_name?: Maybe<StringFieldUpdateOperationsInput>;
  email?: Maybe<StringFieldUpdateOperationsInput>;
  first_name?: Maybe<StringFieldUpdateOperationsInput>;
  last_name?: Maybe<StringFieldUpdateOperationsInput>;
  logo?: Maybe<StringFieldUpdateOperationsInput>;
  occupier?: Maybe<IntFieldUpdateOperationsInput>;
  passcode?: Maybe<IntFieldUpdateOperationsInput>;
};

export type ThirdPartyAccessUpdateManyWithWhereWithoutCompanyInput = {
  data: ThirdPartyAccessUncheckedUpdateManyWithoutThirdPartyAccessInput;
  where: ThirdPartyAccessScalarWhereInput;
};

export type ThirdPartyAccessUpdateManyWithoutCompanyInput = {
  connect?: Maybe<Array<Maybe<ThirdPartyAccessWhereUniqueInput>>>;
  connectOrCreate?: Maybe<Array<Maybe<ThirdPartyAccessCreateOrConnectWithoutCompanyInput>>>;
  create?: Maybe<Array<Maybe<ThirdPartyAccessCreateWithoutCompanyInput>>>;
  delete?: Maybe<Array<Maybe<ThirdPartyAccessWhereUniqueInput>>>;
  deleteMany?: Maybe<Array<Maybe<ThirdPartyAccessScalarWhereInput>>>;
  disconnect?: Maybe<Array<Maybe<ThirdPartyAccessWhereUniqueInput>>>;
  set?: Maybe<Array<Maybe<ThirdPartyAccessWhereUniqueInput>>>;
  update?: Maybe<Array<Maybe<ThirdPartyAccessUpdateWithWhereUniqueWithoutCompanyInput>>>;
  updateMany?: Maybe<Array<Maybe<ThirdPartyAccessUpdateManyWithWhereWithoutCompanyInput>>>;
  upsert?: Maybe<Array<Maybe<ThirdPartyAccessUpsertWithWhereUniqueWithoutCompanyInput>>>;
};

export type ThirdPartyAccessUpdateWithWhereUniqueWithoutCompanyInput = {
  data: ThirdPartyAccessUncheckedUpdateWithoutCompanyInput;
  where: ThirdPartyAccessWhereUniqueInput;
};

export type ThirdPartyAccessUpsertWithWhereUniqueWithoutCompanyInput = {
  create: ThirdPartyAccessUncheckedCreateWithoutCompanyInput;
  update: ThirdPartyAccessUncheckedUpdateWithoutCompanyInput;
  where: ThirdPartyAccessWhereUniqueInput;
};

export type ThirdPartyAccessWhereInput = {
  AND?: Maybe<Array<Maybe<ThirdPartyAccessWhereInput>>>;
  NOT?: Maybe<Array<Maybe<ThirdPartyAccessWhereInput>>>;
  OR?: Maybe<Array<Maybe<ThirdPartyAccessWhereInput>>>;
  access_id?: Maybe<IntFilter>;
  company?: Maybe<CompanyWhereInput>;
  company_id?: Maybe<IntFilter>;
  company_name?: Maybe<StringFilter>;
  email?: Maybe<StringFilter>;
  first_name?: Maybe<StringFilter>;
  id?: Maybe<IntFilter>;
  last_name?: Maybe<StringFilter>;
  logo?: Maybe<StringFilter>;
  occupier?: Maybe<IntFilter>;
  passcode?: Maybe<IntFilter>;
};

export type ThirdPartyAccessWhereUniqueInput = {
  id?: Maybe<Scalars['Int']>;
};

export type Timezone = {
  __typename?: 'Timezone';
  CompanyDetails: Array<Maybe<CompanyDetails>>;
  db_format?: Maybe<Scalars['String']>;
  label?: Maybe<Scalars['String']>;
  offset_seconds?: Maybe<Scalars['Int']>;
  php_format?: Maybe<Scalars['String']>;
  supported?: Maybe<Scalars['Boolean']>;
  timezone_id?: Maybe<Scalars['Int']>;
};


export type TimezoneCompanyDetailsArgs = {
  cursor?: Maybe<CompanyDetailsWhereUniqueInput>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
};

export type TimezoneCreateInput = {
  CompanyDetails?: Maybe<CompanyDetailsCreateNestedManyWithoutTimezoneInput>;
  db_format: Scalars['String'];
  label: Scalars['String'];
  offset_seconds: Scalars['Int'];
  php_format: Scalars['String'];
  supported: Scalars['Boolean'];
};

export type TimezoneCreateNestedOneWithoutCompanyDetailsInput = {
  connect?: Maybe<TimezoneWhereUniqueInput>;
  connectOrCreate?: Maybe<TimezoneCreateOrConnectWithoutCompanyDetailsInput>;
  create?: Maybe<TimezoneUncheckedCreateWithoutCompanyDetailsInput>;
};

export type TimezoneCreateOrConnectWithoutCompanyDetailsInput = {
  create: TimezoneUncheckedCreateWithoutCompanyDetailsInput;
  where: TimezoneWhereUniqueInput;
};

export type TimezoneOrderByInput = {
  db_format?: Maybe<SortOrder>;
  label?: Maybe<SortOrder>;
  offset_seconds?: Maybe<SortOrder>;
  php_format?: Maybe<SortOrder>;
  supported?: Maybe<SortOrder>;
  timezone_id?: Maybe<SortOrder>;
};

export type TimezoneUncheckedCreateWithoutCompanyDetailsInput = {
  db_format: Scalars['String'];
  label: Scalars['String'];
  offset_seconds: Scalars['Int'];
  php_format: Scalars['String'];
  supported: Scalars['Boolean'];
  timezone_id?: Maybe<Scalars['Int']>;
};

export type TimezoneUncheckedUpdateWithoutCompanyDetailsInput = {
  db_format?: Maybe<StringFieldUpdateOperationsInput>;
  label?: Maybe<StringFieldUpdateOperationsInput>;
  offset_seconds?: Maybe<IntFieldUpdateOperationsInput>;
  php_format?: Maybe<StringFieldUpdateOperationsInput>;
  supported?: Maybe<BoolFieldUpdateOperationsInput>;
  timezone_id?: Maybe<IntFieldUpdateOperationsInput>;
};

export type TimezoneUpdateInput = {
  CompanyDetails?: Maybe<CompanyDetailsUpdateManyWithoutTimezoneInput>;
  db_format?: Maybe<StringFieldUpdateOperationsInput>;
  label?: Maybe<StringFieldUpdateOperationsInput>;
  offset_seconds?: Maybe<IntFieldUpdateOperationsInput>;
  php_format?: Maybe<StringFieldUpdateOperationsInput>;
  supported?: Maybe<BoolFieldUpdateOperationsInput>;
};

export type TimezoneUpdateManyMutationInput = {
  db_format?: Maybe<StringFieldUpdateOperationsInput>;
  label?: Maybe<StringFieldUpdateOperationsInput>;
  offset_seconds?: Maybe<IntFieldUpdateOperationsInput>;
  php_format?: Maybe<StringFieldUpdateOperationsInput>;
  supported?: Maybe<BoolFieldUpdateOperationsInput>;
};

export type TimezoneUpdateOneRequiredWithoutCompanyDetailsInput = {
  connect?: Maybe<TimezoneWhereUniqueInput>;
  connectOrCreate?: Maybe<TimezoneCreateOrConnectWithoutCompanyDetailsInput>;
  create?: Maybe<TimezoneUncheckedCreateWithoutCompanyDetailsInput>;
  update?: Maybe<TimezoneUncheckedUpdateWithoutCompanyDetailsInput>;
  upsert?: Maybe<TimezoneUpsertWithoutCompanyDetailsInput>;
};

export type TimezoneUpsertWithoutCompanyDetailsInput = {
  create: TimezoneUncheckedCreateWithoutCompanyDetailsInput;
  update: TimezoneUncheckedUpdateWithoutCompanyDetailsInput;
};

export type TimezoneWhereInput = {
  AND?: Maybe<Array<Maybe<TimezoneWhereInput>>>;
  CompanyDetails?: Maybe<CompanyDetailsListRelationFilter>;
  NOT?: Maybe<Array<Maybe<TimezoneWhereInput>>>;
  OR?: Maybe<Array<Maybe<TimezoneWhereInput>>>;
  db_format?: Maybe<StringFilter>;
  label?: Maybe<StringFilter>;
  offset_seconds?: Maybe<IntFilter>;
  php_format?: Maybe<StringFilter>;
  supported?: Maybe<BoolFilter>;
  timezone_id?: Maybe<IntFilter>;
};

export type TimezoneWhereUniqueInput = {
  timezone_id?: Maybe<Scalars['Int']>;
};

export type TwoFactorHistory = {
  __typename?: 'TwoFactorHistory';
  company?: Maybe<Company>;
  company_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  is_confirmed?: Maybe<Scalars['Int']>;
  passcode?: Maybe<Scalars['String']>;
  request_date?: Maybe<Scalars['DateTime']>;
  user_id?: Maybe<Scalars['Int']>;
};

export type TwoFactorHistoryCreateInput = {
  company: CompanyCreateNestedOneWithoutTwoFactorHistoryInput;
  is_confirmed: Scalars['Int'];
  passcode: Scalars['String'];
  request_date: Scalars['DateTime'];
  user_id: Scalars['Int'];
};

export type TwoFactorHistoryCreateNestedManyWithoutCompanyInput = {
  connect?: Maybe<Array<Maybe<TwoFactorHistoryWhereUniqueInput>>>;
  connectOrCreate?: Maybe<Array<Maybe<TwoFactorHistoryCreateOrConnectWithoutCompanyInput>>>;
  create?: Maybe<Array<Maybe<TwoFactorHistoryCreateWithoutCompanyInput>>>;
};

export type TwoFactorHistoryCreateOrConnectWithoutCompanyInput = {
  create: TwoFactorHistoryUncheckedCreateWithoutCompanyInput;
  where: TwoFactorHistoryWhereUniqueInput;
};

export type TwoFactorHistoryCreateWithoutCompanyInput = {
  is_confirmed: Scalars['Int'];
  passcode: Scalars['String'];
  request_date: Scalars['DateTime'];
  user_id: Scalars['Int'];
};

export type TwoFactorHistoryListRelationFilter = {
  every?: Maybe<TwoFactorHistoryWhereInput>;
  none?: Maybe<TwoFactorHistoryWhereInput>;
  some?: Maybe<TwoFactorHistoryWhereInput>;
};

export type TwoFactorHistoryOrderByInput = {
  company_id?: Maybe<SortOrder>;
  id?: Maybe<SortOrder>;
  is_confirmed?: Maybe<SortOrder>;
  passcode?: Maybe<SortOrder>;
  request_date?: Maybe<SortOrder>;
  user_id?: Maybe<SortOrder>;
};

export type TwoFactorHistoryScalarWhereInput = {
  AND?: Maybe<Array<Maybe<TwoFactorHistoryScalarWhereInput>>>;
  NOT?: Maybe<Array<Maybe<TwoFactorHistoryScalarWhereInput>>>;
  OR?: Maybe<Array<Maybe<TwoFactorHistoryScalarWhereInput>>>;
  company_id?: Maybe<IntFilter>;
  id?: Maybe<IntFilter>;
  is_confirmed?: Maybe<IntFilter>;
  passcode?: Maybe<StringFilter>;
  request_date?: Maybe<DateTimeFilter>;
  user_id?: Maybe<IntFilter>;
};

export type TwoFactorHistoryUncheckedCreateNestedManyWithoutCompanyInput = {
  connect?: Maybe<Array<Maybe<TwoFactorHistoryWhereUniqueInput>>>;
  connectOrCreate?: Maybe<Array<Maybe<TwoFactorHistoryCreateOrConnectWithoutCompanyInput>>>;
  create?: Maybe<Array<Maybe<TwoFactorHistoryCreateWithoutCompanyInput>>>;
};

export type TwoFactorHistoryUncheckedCreateWithoutCompanyInput = {
  id?: Maybe<Scalars['Int']>;
  is_confirmed: Scalars['Int'];
  passcode: Scalars['String'];
  request_date: Scalars['DateTime'];
  user_id: Scalars['Int'];
};

export type TwoFactorHistoryUncheckedUpdateManyWithoutCompanyInput = {
  connect?: Maybe<Array<Maybe<TwoFactorHistoryWhereUniqueInput>>>;
  connectOrCreate?: Maybe<Array<Maybe<TwoFactorHistoryCreateOrConnectWithoutCompanyInput>>>;
  create?: Maybe<Array<Maybe<TwoFactorHistoryCreateWithoutCompanyInput>>>;
  delete?: Maybe<Array<Maybe<TwoFactorHistoryWhereUniqueInput>>>;
  deleteMany?: Maybe<Array<Maybe<TwoFactorHistoryScalarWhereInput>>>;
  disconnect?: Maybe<Array<Maybe<TwoFactorHistoryWhereUniqueInput>>>;
  set?: Maybe<Array<Maybe<TwoFactorHistoryWhereUniqueInput>>>;
  update?: Maybe<Array<Maybe<TwoFactorHistoryUpdateWithWhereUniqueWithoutCompanyInput>>>;
  updateMany?: Maybe<Array<Maybe<TwoFactorHistoryUpdateManyWithWhereWithoutCompanyInput>>>;
  upsert?: Maybe<Array<Maybe<TwoFactorHistoryUpsertWithWhereUniqueWithoutCompanyInput>>>;
};

export type TwoFactorHistoryUncheckedUpdateManyWithoutTwoFactorHistoryInput = {
  id?: Maybe<IntFieldUpdateOperationsInput>;
  is_confirmed?: Maybe<IntFieldUpdateOperationsInput>;
  passcode?: Maybe<StringFieldUpdateOperationsInput>;
  request_date?: Maybe<DateTimeFieldUpdateOperationsInput>;
  user_id?: Maybe<IntFieldUpdateOperationsInput>;
};

export type TwoFactorHistoryUncheckedUpdateWithoutCompanyInput = {
  id?: Maybe<IntFieldUpdateOperationsInput>;
  is_confirmed?: Maybe<IntFieldUpdateOperationsInput>;
  passcode?: Maybe<StringFieldUpdateOperationsInput>;
  request_date?: Maybe<DateTimeFieldUpdateOperationsInput>;
  user_id?: Maybe<IntFieldUpdateOperationsInput>;
};

export type TwoFactorHistoryUpdateInput = {
  company?: Maybe<CompanyUpdateOneRequiredWithoutTwoFactorHistoryInput>;
  is_confirmed?: Maybe<IntFieldUpdateOperationsInput>;
  passcode?: Maybe<StringFieldUpdateOperationsInput>;
  request_date?: Maybe<DateTimeFieldUpdateOperationsInput>;
  user_id?: Maybe<IntFieldUpdateOperationsInput>;
};

export type TwoFactorHistoryUpdateManyMutationInput = {
  is_confirmed?: Maybe<IntFieldUpdateOperationsInput>;
  passcode?: Maybe<StringFieldUpdateOperationsInput>;
  request_date?: Maybe<DateTimeFieldUpdateOperationsInput>;
  user_id?: Maybe<IntFieldUpdateOperationsInput>;
};

export type TwoFactorHistoryUpdateManyWithWhereWithoutCompanyInput = {
  data: TwoFactorHistoryUncheckedUpdateManyWithoutTwoFactorHistoryInput;
  where: TwoFactorHistoryScalarWhereInput;
};

export type TwoFactorHistoryUpdateManyWithoutCompanyInput = {
  connect?: Maybe<Array<Maybe<TwoFactorHistoryWhereUniqueInput>>>;
  connectOrCreate?: Maybe<Array<Maybe<TwoFactorHistoryCreateOrConnectWithoutCompanyInput>>>;
  create?: Maybe<Array<Maybe<TwoFactorHistoryCreateWithoutCompanyInput>>>;
  delete?: Maybe<Array<Maybe<TwoFactorHistoryWhereUniqueInput>>>;
  deleteMany?: Maybe<Array<Maybe<TwoFactorHistoryScalarWhereInput>>>;
  disconnect?: Maybe<Array<Maybe<TwoFactorHistoryWhereUniqueInput>>>;
  set?: Maybe<Array<Maybe<TwoFactorHistoryWhereUniqueInput>>>;
  update?: Maybe<Array<Maybe<TwoFactorHistoryUpdateWithWhereUniqueWithoutCompanyInput>>>;
  updateMany?: Maybe<Array<Maybe<TwoFactorHistoryUpdateManyWithWhereWithoutCompanyInput>>>;
  upsert?: Maybe<Array<Maybe<TwoFactorHistoryUpsertWithWhereUniqueWithoutCompanyInput>>>;
};

export type TwoFactorHistoryUpdateWithWhereUniqueWithoutCompanyInput = {
  data: TwoFactorHistoryUncheckedUpdateWithoutCompanyInput;
  where: TwoFactorHistoryWhereUniqueInput;
};

export type TwoFactorHistoryUpsertWithWhereUniqueWithoutCompanyInput = {
  create: TwoFactorHistoryUncheckedCreateWithoutCompanyInput;
  update: TwoFactorHistoryUncheckedUpdateWithoutCompanyInput;
  where: TwoFactorHistoryWhereUniqueInput;
};

export type TwoFactorHistoryWhereInput = {
  AND?: Maybe<Array<Maybe<TwoFactorHistoryWhereInput>>>;
  NOT?: Maybe<Array<Maybe<TwoFactorHistoryWhereInput>>>;
  OR?: Maybe<Array<Maybe<TwoFactorHistoryWhereInput>>>;
  company?: Maybe<CompanyWhereInput>;
  company_id?: Maybe<IntFilter>;
  id?: Maybe<IntFilter>;
  is_confirmed?: Maybe<IntFilter>;
  passcode?: Maybe<StringFilter>;
  request_date?: Maybe<DateTimeFilter>;
  user_id?: Maybe<IntFilter>;
};

export type TwoFactorHistoryWhereUniqueInput = {
  id?: Maybe<Scalars['Int']>;
};

export type User = {
  __typename?: 'User';
  address?: Maybe<Scalars['String']>;
  admin?: Maybe<Scalars['Int']>;
  admin_leads?: Maybe<Scalars['Int']>;
  admin_tasks?: Maybe<Scalars['Int']>;
  all_reports?: Maybe<Scalars['Int']>;
  all_services?: Maybe<Scalars['Int']>;
  appear_on_rota?: Maybe<Scalars['Int']>;
  calendar_order?: Maybe<Scalars['Int']>;
  can_cancel_booking?: Maybe<Scalars['Int']>;
  can_delete_blockout?: Maybe<Scalars['Int']>;
  can_delete_communications?: Maybe<Scalars['Boolean']>;
  can_discount?: Maybe<Scalars['Int']>;
  can_discount_single?: Maybe<Scalars['Boolean']>;
  can_edit_booking_time?: Maybe<Scalars['Int']>;
  can_edit_communications?: Maybe<Scalars['Boolean']>;
  can_lab_requests?: Maybe<Scalars['Boolean']>;
  can_make_blockout?: Maybe<Scalars['Int']>;
  can_merge?: Maybe<Scalars['Boolean']>;
  can_move_blockout?: Maybe<Scalars['Int']>;
  can_patient_appoint?: Maybe<Scalars['Int']>;
  can_patient_communicatons?: Maybe<Scalars['Int']>;
  can_patient_consents?: Maybe<Scalars['Int']>;
  can_patient_docs?: Maybe<Scalars['Int']>;
  can_patient_fiancials?: Maybe<Scalars['Int']>;
  can_patient_giftvoucher?: Maybe<Scalars['Int']>;
  can_patient_loyalty?: Maybe<Scalars['Int']>;
  can_patient_medical_history?: Maybe<Scalars['Int']>;
  can_patient_memberships?: Maybe<Scalars['Int']>;
  can_patient_packages?: Maybe<Scalars['Int']>;
  can_patient_photos?: Maybe<Scalars['Int']>;
  can_patient_prescription?: Maybe<Scalars['Int']>;
  can_patient_recall?: Maybe<Scalars['Int']>;
  can_patient_treatments?: Maybe<Scalars['Int']>;
  can_refund?: Maybe<Scalars['Boolean']>;
  can_report?: Maybe<Scalars['Int']>;
  can_rota?: Maybe<Scalars['Int']>;
  can_see_personal?: Maybe<Scalars['Int']>;
  can_view_full_cal?: Maybe<Scalars['Boolean']>;
  can_void?: Maybe<Scalars['Int']>;
  clocked_in?: Maybe<Scalars['DateTime']>;
  clocked_out?: Maybe<Scalars['DateTime']>;
  company?: Maybe<Company>;
  company_id?: Maybe<Scalars['Int']>;
  created?: Maybe<Scalars['DateTime']>;
  custom_id?: Maybe<Scalars['String']>;
  default_contract_id?: Maybe<Scalars['Int']>;
  default_page?: Maybe<Scalars['String']>;
  delete_treatment?: Maybe<Scalars['Int']>;
  deleted?: Maybe<Scalars['Int']>;
  department?: Maybe<Scalars['String']>;
  detailed_view?: Maybe<Scalars['Int']>;
  disable_multiple_clinics?: Maybe<Scalars['Int']>;
  disable_tutorial?: Maybe<Scalars['Int']>;
  division?: Maybe<Scalars['String']>;
  email?: Maybe<Scalars['String']>;
  force_password?: Maybe<Scalars['Int']>;
  full_name?: Maybe<Scalars['String']>;
  google_auth_secret?: Maybe<Scalars['String']>;
  hash?: Maybe<Scalars['String']>;
  hide_calendar?: Maybe<Scalars['Int']>;
  hide_online_bookings?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  image?: Maybe<Scalars['String']>;
  imported?: Maybe<Scalars['Int']>;
  is_hcp?: Maybe<Scalars['Int']>;
  job_title?: Maybe<Scalars['String']>;
  language?: Maybe<Scalars['String']>;
  last_loaded_page?: Maybe<Scalars['String']>;
  last_login?: Maybe<Scalars['DateTime']>;
  last_password_reset?: Maybe<Scalars['Int']>;
  limited_user?: Maybe<Scalars['Int']>;
  locale?: Maybe<Scalars['String']>;
  location?: Maybe<Scalars['String']>;
  login_disabled?: Maybe<Scalars['Int']>;
  login_fail_count?: Maybe<Scalars['Int']>;
  main_contact?: Maybe<Scalars['Boolean']>;
  notify_on_booking?: Maybe<Scalars['Boolean']>;
  pass_code?: Maybe<Scalars['String']>;
  passcode?: Maybe<Scalars['String']>;
  password?: Maybe<Scalars['String']>;
  password_algor?: Maybe<Scalars['Int']>;
  performance_stats?: Maybe<Scalars['Int']>;
  permission_last_role?: Maybe<Scalars['String']>;
  phone_number?: Maybe<Scalars['String']>;
  position?: Maybe<Scalars['String']>;
  restored?: Maybe<Scalars['Int']>;
  salt?: Maybe<Scalars['String']>;
  signature?: Maybe<Scalars['String']>;
  staff_read_only?: Maybe<Scalars['Int']>;
  stock_read_only?: Maybe<Scalars['Int']>;
  super?: Maybe<Scalars['Int']>;
  temporary_password?: Maybe<Scalars['Boolean']>;
  timezone?: Maybe<Scalars['String']>;
  user_color?: Maybe<Scalars['String']>;
  user_security_questions_answer: Array<Maybe<UserSecurityQuestionsAnswer>>;
  username?: Maybe<Scalars['String']>;
};


export type UserUser_Security_Questions_AnswerArgs = {
  cursor?: Maybe<UserSecurityQuestionsAnswerWhereUniqueInput>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
};

export type UserCreateInput = {
  address: Scalars['String'];
  admin: Scalars['Int'];
  admin_leads: Scalars['Int'];
  admin_tasks: Scalars['Int'];
  all_reports?: Maybe<Scalars['Int']>;
  all_services?: Maybe<Scalars['Int']>;
  appear_on_rota?: Maybe<Scalars['Int']>;
  calendar_order: Scalars['Int'];
  can_cancel_booking?: Maybe<Scalars['Int']>;
  can_delete_blockout?: Maybe<Scalars['Int']>;
  can_delete_communications?: Maybe<Scalars['Boolean']>;
  can_discount?: Maybe<Scalars['Int']>;
  can_discount_single?: Maybe<Scalars['Boolean']>;
  can_edit_booking_time?: Maybe<Scalars['Int']>;
  can_edit_communications?: Maybe<Scalars['Boolean']>;
  can_lab_requests?: Maybe<Scalars['Boolean']>;
  can_make_blockout?: Maybe<Scalars['Int']>;
  can_merge?: Maybe<Scalars['Boolean']>;
  can_move_blockout?: Maybe<Scalars['Int']>;
  can_patient_appoint?: Maybe<Scalars['Int']>;
  can_patient_communicatons?: Maybe<Scalars['Int']>;
  can_patient_consents?: Maybe<Scalars['Int']>;
  can_patient_docs?: Maybe<Scalars['Int']>;
  can_patient_fiancials?: Maybe<Scalars['Int']>;
  can_patient_giftvoucher?: Maybe<Scalars['Int']>;
  can_patient_loyalty?: Maybe<Scalars['Int']>;
  can_patient_medical_history?: Maybe<Scalars['Int']>;
  can_patient_memberships?: Maybe<Scalars['Int']>;
  can_patient_packages?: Maybe<Scalars['Int']>;
  can_patient_photos?: Maybe<Scalars['Int']>;
  can_patient_prescription?: Maybe<Scalars['Int']>;
  can_patient_recall?: Maybe<Scalars['Int']>;
  can_patient_treatments?: Maybe<Scalars['Int']>;
  can_refund?: Maybe<Scalars['Boolean']>;
  can_report?: Maybe<Scalars['Int']>;
  can_rota?: Maybe<Scalars['Int']>;
  can_see_personal?: Maybe<Scalars['Int']>;
  can_view_full_cal?: Maybe<Scalars['Boolean']>;
  can_void?: Maybe<Scalars['Int']>;
  clocked_in?: Maybe<Scalars['DateTime']>;
  clocked_out?: Maybe<Scalars['DateTime']>;
  company?: Maybe<CompanyCreateNestedOneWithoutUserInput>;
  created?: Maybe<Scalars['DateTime']>;
  custom_id: Scalars['String'];
  default_contract_id: Scalars['Int'];
  default_page: Scalars['String'];
  delete_treatment?: Maybe<Scalars['Int']>;
  deleted: Scalars['Int'];
  department: Scalars['String'];
  detailed_view: Scalars['Int'];
  disable_multiple_clinics: Scalars['Int'];
  disable_tutorial: Scalars['Int'];
  division: Scalars['String'];
  email: Scalars['String'];
  force_password: Scalars['Int'];
  full_name: Scalars['String'];
  google_auth_secret?: Maybe<Scalars['String']>;
  hash: Scalars['String'];
  hide_calendar: Scalars['Int'];
  hide_online_bookings: Scalars['Int'];
  image: Scalars['String'];
  imported: Scalars['Int'];
  is_hcp?: Maybe<Scalars['Int']>;
  job_title: Scalars['String'];
  language: Scalars['String'];
  last_loaded_page: Scalars['String'];
  last_login?: Maybe<Scalars['DateTime']>;
  last_password_reset: Scalars['Int'];
  limited_user: Scalars['Int'];
  locale: Scalars['String'];
  location: Scalars['String'];
  login_disabled: Scalars['Int'];
  login_fail_count: Scalars['Int'];
  main_contact: Scalars['Boolean'];
  notify_on_booking: Scalars['Boolean'];
  pass_code: Scalars['String'];
  passcode: Scalars['String'];
  password?: Maybe<Scalars['String']>;
  password_algor?: Maybe<Scalars['Int']>;
  performance_stats: Scalars['Int'];
  permission_last_role?: Maybe<Scalars['String']>;
  phone_number: Scalars['String'];
  position: Scalars['String'];
  restored: Scalars['Int'];
  salt?: Maybe<Scalars['String']>;
  signature: Scalars['String'];
  staff_read_only: Scalars['Int'];
  stock_read_only: Scalars['Int'];
  super: Scalars['Int'];
  temporary_password: Scalars['Boolean'];
  timezone: Scalars['String'];
  user_color: Scalars['String'];
  user_security_questions_answer?: Maybe<UserSecurityQuestionsAnswerCreateNestedManyWithoutUsersInput>;
  username?: Maybe<Scalars['String']>;
};

export type UserCreateNestedManyWithoutCompanyInput = {
  connect?: Maybe<Array<Maybe<UserWhereUniqueInput>>>;
  connectOrCreate?: Maybe<Array<Maybe<UserCreateOrConnectWithoutCompanyInput>>>;
  create?: Maybe<Array<Maybe<UserCreateWithoutCompanyInput>>>;
};

export type UserCreateNestedOneWithoutUser_Security_Questions_AnswerInput = {
  connect?: Maybe<UserWhereUniqueInput>;
  connectOrCreate?: Maybe<UserCreateOrConnectWithoutUser_Security_Questions_AnswerInput>;
  create?: Maybe<UserUncheckedCreateWithoutUser_Security_Questions_AnswerInput>;
};

export type UserCreateOrConnectWithoutCompanyInput = {
  create: UserUncheckedCreateWithoutCompanyInput;
  where: UserWhereUniqueInput;
};

export type UserCreateOrConnectWithoutUser_Security_Questions_AnswerInput = {
  create: UserUncheckedCreateWithoutUser_Security_Questions_AnswerInput;
  where: UserWhereUniqueInput;
};

export type UserCreateWithoutCompanyInput = {
  address: Scalars['String'];
  admin: Scalars['Int'];
  admin_leads: Scalars['Int'];
  admin_tasks: Scalars['Int'];
  all_reports?: Maybe<Scalars['Int']>;
  all_services?: Maybe<Scalars['Int']>;
  appear_on_rota?: Maybe<Scalars['Int']>;
  calendar_order: Scalars['Int'];
  can_cancel_booking?: Maybe<Scalars['Int']>;
  can_delete_blockout?: Maybe<Scalars['Int']>;
  can_delete_communications?: Maybe<Scalars['Boolean']>;
  can_discount?: Maybe<Scalars['Int']>;
  can_discount_single?: Maybe<Scalars['Boolean']>;
  can_edit_booking_time?: Maybe<Scalars['Int']>;
  can_edit_communications?: Maybe<Scalars['Boolean']>;
  can_lab_requests?: Maybe<Scalars['Boolean']>;
  can_make_blockout?: Maybe<Scalars['Int']>;
  can_merge?: Maybe<Scalars['Boolean']>;
  can_move_blockout?: Maybe<Scalars['Int']>;
  can_patient_appoint?: Maybe<Scalars['Int']>;
  can_patient_communicatons?: Maybe<Scalars['Int']>;
  can_patient_consents?: Maybe<Scalars['Int']>;
  can_patient_docs?: Maybe<Scalars['Int']>;
  can_patient_fiancials?: Maybe<Scalars['Int']>;
  can_patient_giftvoucher?: Maybe<Scalars['Int']>;
  can_patient_loyalty?: Maybe<Scalars['Int']>;
  can_patient_medical_history?: Maybe<Scalars['Int']>;
  can_patient_memberships?: Maybe<Scalars['Int']>;
  can_patient_packages?: Maybe<Scalars['Int']>;
  can_patient_photos?: Maybe<Scalars['Int']>;
  can_patient_prescription?: Maybe<Scalars['Int']>;
  can_patient_recall?: Maybe<Scalars['Int']>;
  can_patient_treatments?: Maybe<Scalars['Int']>;
  can_refund?: Maybe<Scalars['Boolean']>;
  can_report?: Maybe<Scalars['Int']>;
  can_rota?: Maybe<Scalars['Int']>;
  can_see_personal?: Maybe<Scalars['Int']>;
  can_view_full_cal?: Maybe<Scalars['Boolean']>;
  can_void?: Maybe<Scalars['Int']>;
  clocked_in?: Maybe<Scalars['DateTime']>;
  clocked_out?: Maybe<Scalars['DateTime']>;
  created?: Maybe<Scalars['DateTime']>;
  custom_id: Scalars['String'];
  default_contract_id: Scalars['Int'];
  default_page: Scalars['String'];
  delete_treatment?: Maybe<Scalars['Int']>;
  deleted: Scalars['Int'];
  department: Scalars['String'];
  detailed_view: Scalars['Int'];
  disable_multiple_clinics: Scalars['Int'];
  disable_tutorial: Scalars['Int'];
  division: Scalars['String'];
  email: Scalars['String'];
  force_password: Scalars['Int'];
  full_name: Scalars['String'];
  google_auth_secret?: Maybe<Scalars['String']>;
  hash: Scalars['String'];
  hide_calendar: Scalars['Int'];
  hide_online_bookings: Scalars['Int'];
  image: Scalars['String'];
  imported: Scalars['Int'];
  is_hcp?: Maybe<Scalars['Int']>;
  job_title: Scalars['String'];
  language: Scalars['String'];
  last_loaded_page: Scalars['String'];
  last_login?: Maybe<Scalars['DateTime']>;
  last_password_reset: Scalars['Int'];
  limited_user: Scalars['Int'];
  locale: Scalars['String'];
  location: Scalars['String'];
  login_disabled: Scalars['Int'];
  login_fail_count: Scalars['Int'];
  main_contact: Scalars['Boolean'];
  notify_on_booking: Scalars['Boolean'];
  pass_code: Scalars['String'];
  passcode: Scalars['String'];
  password?: Maybe<Scalars['String']>;
  password_algor?: Maybe<Scalars['Int']>;
  performance_stats: Scalars['Int'];
  permission_last_role?: Maybe<Scalars['String']>;
  phone_number: Scalars['String'];
  position: Scalars['String'];
  restored: Scalars['Int'];
  salt?: Maybe<Scalars['String']>;
  signature: Scalars['String'];
  staff_read_only: Scalars['Int'];
  stock_read_only: Scalars['Int'];
  super: Scalars['Int'];
  temporary_password: Scalars['Boolean'];
  timezone: Scalars['String'];
  user_color: Scalars['String'];
  user_security_questions_answer?: Maybe<UserSecurityQuestionsAnswerCreateNestedManyWithoutUsersInput>;
  username?: Maybe<Scalars['String']>;
};

export type UserListRelationFilter = {
  every?: Maybe<UserWhereInput>;
  none?: Maybe<UserWhereInput>;
  some?: Maybe<UserWhereInput>;
};

export type UserOrderByInput = {
  address?: Maybe<SortOrder>;
  admin?: Maybe<SortOrder>;
  admin_leads?: Maybe<SortOrder>;
  admin_tasks?: Maybe<SortOrder>;
  all_reports?: Maybe<SortOrder>;
  all_services?: Maybe<SortOrder>;
  appear_on_rota?: Maybe<SortOrder>;
  calendar_order?: Maybe<SortOrder>;
  can_cancel_booking?: Maybe<SortOrder>;
  can_delete_blockout?: Maybe<SortOrder>;
  can_delete_communications?: Maybe<SortOrder>;
  can_discount?: Maybe<SortOrder>;
  can_discount_single?: Maybe<SortOrder>;
  can_edit_booking_time?: Maybe<SortOrder>;
  can_edit_communications?: Maybe<SortOrder>;
  can_lab_requests?: Maybe<SortOrder>;
  can_make_blockout?: Maybe<SortOrder>;
  can_merge?: Maybe<SortOrder>;
  can_move_blockout?: Maybe<SortOrder>;
  can_patient_appoint?: Maybe<SortOrder>;
  can_patient_communicatons?: Maybe<SortOrder>;
  can_patient_consents?: Maybe<SortOrder>;
  can_patient_docs?: Maybe<SortOrder>;
  can_patient_fiancials?: Maybe<SortOrder>;
  can_patient_giftvoucher?: Maybe<SortOrder>;
  can_patient_loyalty?: Maybe<SortOrder>;
  can_patient_medical_history?: Maybe<SortOrder>;
  can_patient_memberships?: Maybe<SortOrder>;
  can_patient_packages?: Maybe<SortOrder>;
  can_patient_photos?: Maybe<SortOrder>;
  can_patient_prescription?: Maybe<SortOrder>;
  can_patient_recall?: Maybe<SortOrder>;
  can_patient_treatments?: Maybe<SortOrder>;
  can_refund?: Maybe<SortOrder>;
  can_report?: Maybe<SortOrder>;
  can_rota?: Maybe<SortOrder>;
  can_see_personal?: Maybe<SortOrder>;
  can_view_full_cal?: Maybe<SortOrder>;
  can_void?: Maybe<SortOrder>;
  clocked_in?: Maybe<SortOrder>;
  clocked_out?: Maybe<SortOrder>;
  company_id?: Maybe<SortOrder>;
  created?: Maybe<SortOrder>;
  custom_id?: Maybe<SortOrder>;
  default_contract_id?: Maybe<SortOrder>;
  default_page?: Maybe<SortOrder>;
  delete_treatment?: Maybe<SortOrder>;
  deleted?: Maybe<SortOrder>;
  department?: Maybe<SortOrder>;
  detailed_view?: Maybe<SortOrder>;
  disable_multiple_clinics?: Maybe<SortOrder>;
  disable_tutorial?: Maybe<SortOrder>;
  division?: Maybe<SortOrder>;
  email?: Maybe<SortOrder>;
  force_password?: Maybe<SortOrder>;
  full_name?: Maybe<SortOrder>;
  google_auth_secret?: Maybe<SortOrder>;
  hash?: Maybe<SortOrder>;
  hide_calendar?: Maybe<SortOrder>;
  hide_online_bookings?: Maybe<SortOrder>;
  id?: Maybe<SortOrder>;
  image?: Maybe<SortOrder>;
  imported?: Maybe<SortOrder>;
  is_hcp?: Maybe<SortOrder>;
  job_title?: Maybe<SortOrder>;
  language?: Maybe<SortOrder>;
  last_loaded_page?: Maybe<SortOrder>;
  last_login?: Maybe<SortOrder>;
  last_password_reset?: Maybe<SortOrder>;
  limited_user?: Maybe<SortOrder>;
  locale?: Maybe<SortOrder>;
  location?: Maybe<SortOrder>;
  login_disabled?: Maybe<SortOrder>;
  login_fail_count?: Maybe<SortOrder>;
  main_contact?: Maybe<SortOrder>;
  notify_on_booking?: Maybe<SortOrder>;
  pass_code?: Maybe<SortOrder>;
  passcode?: Maybe<SortOrder>;
  password?: Maybe<SortOrder>;
  password_algor?: Maybe<SortOrder>;
  performance_stats?: Maybe<SortOrder>;
  permission_last_role?: Maybe<SortOrder>;
  phone_number?: Maybe<SortOrder>;
  position?: Maybe<SortOrder>;
  restored?: Maybe<SortOrder>;
  salt?: Maybe<SortOrder>;
  signature?: Maybe<SortOrder>;
  staff_read_only?: Maybe<SortOrder>;
  stock_read_only?: Maybe<SortOrder>;
  super?: Maybe<SortOrder>;
  temporary_password?: Maybe<SortOrder>;
  timezone?: Maybe<SortOrder>;
  user_color?: Maybe<SortOrder>;
  username?: Maybe<SortOrder>;
};

export type UserScalarWhereInput = {
  AND?: Maybe<Array<Maybe<UserScalarWhereInput>>>;
  NOT?: Maybe<Array<Maybe<UserScalarWhereInput>>>;
  OR?: Maybe<Array<Maybe<UserScalarWhereInput>>>;
  address?: Maybe<StringFilter>;
  admin?: Maybe<IntFilter>;
  admin_leads?: Maybe<IntFilter>;
  admin_tasks?: Maybe<IntFilter>;
  all_reports?: Maybe<IntFilter>;
  all_services?: Maybe<IntFilter>;
  appear_on_rota?: Maybe<IntFilter>;
  calendar_order?: Maybe<IntFilter>;
  can_cancel_booking?: Maybe<IntFilter>;
  can_delete_blockout?: Maybe<IntFilter>;
  can_delete_communications?: Maybe<BoolFilter>;
  can_discount?: Maybe<IntNullableFilter>;
  can_discount_single?: Maybe<BoolFilter>;
  can_edit_booking_time?: Maybe<IntFilter>;
  can_edit_communications?: Maybe<BoolFilter>;
  can_lab_requests?: Maybe<BoolFilter>;
  can_make_blockout?: Maybe<IntFilter>;
  can_merge?: Maybe<BoolFilter>;
  can_move_blockout?: Maybe<IntFilter>;
  can_patient_appoint?: Maybe<IntFilter>;
  can_patient_communicatons?: Maybe<IntFilter>;
  can_patient_consents?: Maybe<IntFilter>;
  can_patient_docs?: Maybe<IntFilter>;
  can_patient_fiancials?: Maybe<IntFilter>;
  can_patient_giftvoucher?: Maybe<IntFilter>;
  can_patient_loyalty?: Maybe<IntFilter>;
  can_patient_medical_history?: Maybe<IntFilter>;
  can_patient_memberships?: Maybe<IntFilter>;
  can_patient_packages?: Maybe<IntFilter>;
  can_patient_photos?: Maybe<IntFilter>;
  can_patient_prescription?: Maybe<IntFilter>;
  can_patient_recall?: Maybe<IntFilter>;
  can_patient_treatments?: Maybe<IntFilter>;
  can_refund?: Maybe<BoolFilter>;
  can_report?: Maybe<IntFilter>;
  can_rota?: Maybe<IntFilter>;
  can_see_personal?: Maybe<IntFilter>;
  can_view_full_cal?: Maybe<BoolFilter>;
  can_void?: Maybe<IntFilter>;
  clocked_in?: Maybe<DateTimeNullableFilter>;
  clocked_out?: Maybe<DateTimeNullableFilter>;
  company_id?: Maybe<IntNullableFilter>;
  created?: Maybe<DateTimeNullableFilter>;
  custom_id?: Maybe<StringFilter>;
  default_contract_id?: Maybe<IntFilter>;
  default_page?: Maybe<StringFilter>;
  delete_treatment?: Maybe<IntFilter>;
  deleted?: Maybe<IntFilter>;
  department?: Maybe<StringFilter>;
  detailed_view?: Maybe<IntFilter>;
  disable_multiple_clinics?: Maybe<IntFilter>;
  disable_tutorial?: Maybe<IntFilter>;
  division?: Maybe<StringFilter>;
  email?: Maybe<StringFilter>;
  force_password?: Maybe<IntFilter>;
  full_name?: Maybe<StringFilter>;
  google_auth_secret?: Maybe<StringNullableFilter>;
  hash?: Maybe<StringFilter>;
  hide_calendar?: Maybe<IntFilter>;
  hide_online_bookings?: Maybe<IntFilter>;
  id?: Maybe<IntFilter>;
  image?: Maybe<StringFilter>;
  imported?: Maybe<IntFilter>;
  is_hcp?: Maybe<IntFilter>;
  job_title?: Maybe<StringFilter>;
  language?: Maybe<StringFilter>;
  last_loaded_page?: Maybe<StringFilter>;
  last_login?: Maybe<DateTimeNullableFilter>;
  last_password_reset?: Maybe<IntFilter>;
  limited_user?: Maybe<IntFilter>;
  locale?: Maybe<StringFilter>;
  location?: Maybe<StringFilter>;
  login_disabled?: Maybe<IntFilter>;
  login_fail_count?: Maybe<IntFilter>;
  main_contact?: Maybe<BoolFilter>;
  notify_on_booking?: Maybe<BoolFilter>;
  pass_code?: Maybe<StringFilter>;
  passcode?: Maybe<StringFilter>;
  password?: Maybe<StringNullableFilter>;
  password_algor?: Maybe<IntNullableFilter>;
  performance_stats?: Maybe<IntFilter>;
  permission_last_role?: Maybe<StringFilter>;
  phone_number?: Maybe<StringFilter>;
  position?: Maybe<StringFilter>;
  restored?: Maybe<IntFilter>;
  salt?: Maybe<StringNullableFilter>;
  signature?: Maybe<StringFilter>;
  staff_read_only?: Maybe<IntFilter>;
  stock_read_only?: Maybe<IntFilter>;
  super?: Maybe<IntFilter>;
  temporary_password?: Maybe<BoolFilter>;
  timezone?: Maybe<StringFilter>;
  user_color?: Maybe<StringFilter>;
  username?: Maybe<StringNullableFilter>;
};

export type UserSecurityQuestionsAnswer = {
  __typename?: 'UserSecurityQuestionsAnswer';
  answer?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  question?: Maybe<Scalars['String']>;
  question_no?: Maybe<Scalars['Int']>;
  user_id?: Maybe<Scalars['Int']>;
  users?: Maybe<User>;
};

export type UserSecurityQuestionsAnswerCreateInput = {
  answer: Scalars['String'];
  question: Scalars['String'];
  question_no: Scalars['Int'];
  users: UserCreateNestedOneWithoutUser_Security_Questions_AnswerInput;
};

export type UserSecurityQuestionsAnswerCreateNestedManyWithoutUsersInput = {
  connect?: Maybe<Array<Maybe<UserSecurityQuestionsAnswerWhereUniqueInput>>>;
  connectOrCreate?: Maybe<Array<Maybe<UserSecurityQuestionsAnswerCreateOrConnectWithoutUsersInput>>>;
  create?: Maybe<Array<Maybe<UserSecurityQuestionsAnswerCreateWithoutUsersInput>>>;
};

export type UserSecurityQuestionsAnswerCreateOrConnectWithoutUsersInput = {
  create: UserSecurityQuestionsAnswerUncheckedCreateWithoutUsersInput;
  where: UserSecurityQuestionsAnswerWhereUniqueInput;
};

export type UserSecurityQuestionsAnswerCreateWithoutUsersInput = {
  answer: Scalars['String'];
  question: Scalars['String'];
  question_no: Scalars['Int'];
};

export type UserSecurityQuestionsAnswerListRelationFilter = {
  every?: Maybe<UserSecurityQuestionsAnswerWhereInput>;
  none?: Maybe<UserSecurityQuestionsAnswerWhereInput>;
  some?: Maybe<UserSecurityQuestionsAnswerWhereInput>;
};

export type UserSecurityQuestionsAnswerOrderByInput = {
  answer?: Maybe<SortOrder>;
  id?: Maybe<SortOrder>;
  question?: Maybe<SortOrder>;
  question_no?: Maybe<SortOrder>;
  user_id?: Maybe<SortOrder>;
};

export type UserSecurityQuestionsAnswerScalarWhereInput = {
  AND?: Maybe<Array<Maybe<UserSecurityQuestionsAnswerScalarWhereInput>>>;
  NOT?: Maybe<Array<Maybe<UserSecurityQuestionsAnswerScalarWhereInput>>>;
  OR?: Maybe<Array<Maybe<UserSecurityQuestionsAnswerScalarWhereInput>>>;
  answer?: Maybe<StringFilter>;
  id?: Maybe<IntFilter>;
  question?: Maybe<StringFilter>;
  question_no?: Maybe<IntFilter>;
  user_id?: Maybe<IntFilter>;
};

export type UserSecurityQuestionsAnswerUncheckedCreateNestedManyWithoutUsersInput = {
  connect?: Maybe<Array<Maybe<UserSecurityQuestionsAnswerWhereUniqueInput>>>;
  connectOrCreate?: Maybe<Array<Maybe<UserSecurityQuestionsAnswerCreateOrConnectWithoutUsersInput>>>;
  create?: Maybe<Array<Maybe<UserSecurityQuestionsAnswerCreateWithoutUsersInput>>>;
};

export type UserSecurityQuestionsAnswerUncheckedCreateWithoutUsersInput = {
  answer: Scalars['String'];
  id?: Maybe<Scalars['Int']>;
  question: Scalars['String'];
  question_no: Scalars['Int'];
};

export type UserSecurityQuestionsAnswerUncheckedUpdateManyWithoutUser_Security_Questions_AnswerInput = {
  answer?: Maybe<StringFieldUpdateOperationsInput>;
  id?: Maybe<IntFieldUpdateOperationsInput>;
  question?: Maybe<StringFieldUpdateOperationsInput>;
  question_no?: Maybe<IntFieldUpdateOperationsInput>;
};

export type UserSecurityQuestionsAnswerUncheckedUpdateManyWithoutUsersInput = {
  connect?: Maybe<Array<Maybe<UserSecurityQuestionsAnswerWhereUniqueInput>>>;
  connectOrCreate?: Maybe<Array<Maybe<UserSecurityQuestionsAnswerCreateOrConnectWithoutUsersInput>>>;
  create?: Maybe<Array<Maybe<UserSecurityQuestionsAnswerCreateWithoutUsersInput>>>;
  delete?: Maybe<Array<Maybe<UserSecurityQuestionsAnswerWhereUniqueInput>>>;
  deleteMany?: Maybe<Array<Maybe<UserSecurityQuestionsAnswerScalarWhereInput>>>;
  disconnect?: Maybe<Array<Maybe<UserSecurityQuestionsAnswerWhereUniqueInput>>>;
  set?: Maybe<Array<Maybe<UserSecurityQuestionsAnswerWhereUniqueInput>>>;
  update?: Maybe<Array<Maybe<UserSecurityQuestionsAnswerUpdateWithWhereUniqueWithoutUsersInput>>>;
  updateMany?: Maybe<Array<Maybe<UserSecurityQuestionsAnswerUpdateManyWithWhereWithoutUsersInput>>>;
  upsert?: Maybe<Array<Maybe<UserSecurityQuestionsAnswerUpsertWithWhereUniqueWithoutUsersInput>>>;
};

export type UserSecurityQuestionsAnswerUncheckedUpdateWithoutUsersInput = {
  answer?: Maybe<StringFieldUpdateOperationsInput>;
  id?: Maybe<IntFieldUpdateOperationsInput>;
  question?: Maybe<StringFieldUpdateOperationsInput>;
  question_no?: Maybe<IntFieldUpdateOperationsInput>;
};

export type UserSecurityQuestionsAnswerUpdateInput = {
  answer?: Maybe<StringFieldUpdateOperationsInput>;
  question?: Maybe<StringFieldUpdateOperationsInput>;
  question_no?: Maybe<IntFieldUpdateOperationsInput>;
  users?: Maybe<UserUpdateOneRequiredWithoutUser_Security_Questions_AnswerInput>;
};

export type UserSecurityQuestionsAnswerUpdateManyMutationInput = {
  answer?: Maybe<StringFieldUpdateOperationsInput>;
  question?: Maybe<StringFieldUpdateOperationsInput>;
  question_no?: Maybe<IntFieldUpdateOperationsInput>;
};

export type UserSecurityQuestionsAnswerUpdateManyWithWhereWithoutUsersInput = {
  data: UserSecurityQuestionsAnswerUncheckedUpdateManyWithoutUser_Security_Questions_AnswerInput;
  where: UserSecurityQuestionsAnswerScalarWhereInput;
};

export type UserSecurityQuestionsAnswerUpdateManyWithoutUsersInput = {
  connect?: Maybe<Array<Maybe<UserSecurityQuestionsAnswerWhereUniqueInput>>>;
  connectOrCreate?: Maybe<Array<Maybe<UserSecurityQuestionsAnswerCreateOrConnectWithoutUsersInput>>>;
  create?: Maybe<Array<Maybe<UserSecurityQuestionsAnswerCreateWithoutUsersInput>>>;
  delete?: Maybe<Array<Maybe<UserSecurityQuestionsAnswerWhereUniqueInput>>>;
  deleteMany?: Maybe<Array<Maybe<UserSecurityQuestionsAnswerScalarWhereInput>>>;
  disconnect?: Maybe<Array<Maybe<UserSecurityQuestionsAnswerWhereUniqueInput>>>;
  set?: Maybe<Array<Maybe<UserSecurityQuestionsAnswerWhereUniqueInput>>>;
  update?: Maybe<Array<Maybe<UserSecurityQuestionsAnswerUpdateWithWhereUniqueWithoutUsersInput>>>;
  updateMany?: Maybe<Array<Maybe<UserSecurityQuestionsAnswerUpdateManyWithWhereWithoutUsersInput>>>;
  upsert?: Maybe<Array<Maybe<UserSecurityQuestionsAnswerUpsertWithWhereUniqueWithoutUsersInput>>>;
};

export type UserSecurityQuestionsAnswerUpdateWithWhereUniqueWithoutUsersInput = {
  data: UserSecurityQuestionsAnswerUncheckedUpdateWithoutUsersInput;
  where: UserSecurityQuestionsAnswerWhereUniqueInput;
};

export type UserSecurityQuestionsAnswerUpsertWithWhereUniqueWithoutUsersInput = {
  create: UserSecurityQuestionsAnswerUncheckedCreateWithoutUsersInput;
  update: UserSecurityQuestionsAnswerUncheckedUpdateWithoutUsersInput;
  where: UserSecurityQuestionsAnswerWhereUniqueInput;
};

export type UserSecurityQuestionsAnswerWhereInput = {
  AND?: Maybe<Array<Maybe<UserSecurityQuestionsAnswerWhereInput>>>;
  NOT?: Maybe<Array<Maybe<UserSecurityQuestionsAnswerWhereInput>>>;
  OR?: Maybe<Array<Maybe<UserSecurityQuestionsAnswerWhereInput>>>;
  answer?: Maybe<StringFilter>;
  id?: Maybe<IntFilter>;
  question?: Maybe<StringFilter>;
  question_no?: Maybe<IntFilter>;
  user_id?: Maybe<IntFilter>;
  users?: Maybe<UserWhereInput>;
};

export type UserSecurityQuestionsAnswerWhereUniqueInput = {
  id?: Maybe<Scalars['Int']>;
};

export type UserUncheckedCreateNestedManyWithoutCompanyInput = {
  connect?: Maybe<Array<Maybe<UserWhereUniqueInput>>>;
  connectOrCreate?: Maybe<Array<Maybe<UserCreateOrConnectWithoutCompanyInput>>>;
  create?: Maybe<Array<Maybe<UserCreateWithoutCompanyInput>>>;
};

export type UserUncheckedCreateWithoutCompanyInput = {
  address: Scalars['String'];
  admin: Scalars['Int'];
  admin_leads: Scalars['Int'];
  admin_tasks: Scalars['Int'];
  all_reports?: Maybe<Scalars['Int']>;
  all_services?: Maybe<Scalars['Int']>;
  appear_on_rota?: Maybe<Scalars['Int']>;
  calendar_order: Scalars['Int'];
  can_cancel_booking?: Maybe<Scalars['Int']>;
  can_delete_blockout?: Maybe<Scalars['Int']>;
  can_delete_communications?: Maybe<Scalars['Boolean']>;
  can_discount?: Maybe<Scalars['Int']>;
  can_discount_single?: Maybe<Scalars['Boolean']>;
  can_edit_booking_time?: Maybe<Scalars['Int']>;
  can_edit_communications?: Maybe<Scalars['Boolean']>;
  can_lab_requests?: Maybe<Scalars['Boolean']>;
  can_make_blockout?: Maybe<Scalars['Int']>;
  can_merge?: Maybe<Scalars['Boolean']>;
  can_move_blockout?: Maybe<Scalars['Int']>;
  can_patient_appoint?: Maybe<Scalars['Int']>;
  can_patient_communicatons?: Maybe<Scalars['Int']>;
  can_patient_consents?: Maybe<Scalars['Int']>;
  can_patient_docs?: Maybe<Scalars['Int']>;
  can_patient_fiancials?: Maybe<Scalars['Int']>;
  can_patient_giftvoucher?: Maybe<Scalars['Int']>;
  can_patient_loyalty?: Maybe<Scalars['Int']>;
  can_patient_medical_history?: Maybe<Scalars['Int']>;
  can_patient_memberships?: Maybe<Scalars['Int']>;
  can_patient_packages?: Maybe<Scalars['Int']>;
  can_patient_photos?: Maybe<Scalars['Int']>;
  can_patient_prescription?: Maybe<Scalars['Int']>;
  can_patient_recall?: Maybe<Scalars['Int']>;
  can_patient_treatments?: Maybe<Scalars['Int']>;
  can_refund?: Maybe<Scalars['Boolean']>;
  can_report?: Maybe<Scalars['Int']>;
  can_rota?: Maybe<Scalars['Int']>;
  can_see_personal?: Maybe<Scalars['Int']>;
  can_view_full_cal?: Maybe<Scalars['Boolean']>;
  can_void?: Maybe<Scalars['Int']>;
  clocked_in?: Maybe<Scalars['DateTime']>;
  clocked_out?: Maybe<Scalars['DateTime']>;
  created?: Maybe<Scalars['DateTime']>;
  custom_id: Scalars['String'];
  default_contract_id: Scalars['Int'];
  default_page: Scalars['String'];
  delete_treatment?: Maybe<Scalars['Int']>;
  deleted: Scalars['Int'];
  department: Scalars['String'];
  detailed_view: Scalars['Int'];
  disable_multiple_clinics: Scalars['Int'];
  disable_tutorial: Scalars['Int'];
  division: Scalars['String'];
  email: Scalars['String'];
  force_password: Scalars['Int'];
  full_name: Scalars['String'];
  google_auth_secret?: Maybe<Scalars['String']>;
  hash: Scalars['String'];
  hide_calendar: Scalars['Int'];
  hide_online_bookings: Scalars['Int'];
  id?: Maybe<Scalars['Int']>;
  image: Scalars['String'];
  imported: Scalars['Int'];
  is_hcp?: Maybe<Scalars['Int']>;
  job_title: Scalars['String'];
  language: Scalars['String'];
  last_loaded_page: Scalars['String'];
  last_login?: Maybe<Scalars['DateTime']>;
  last_password_reset: Scalars['Int'];
  limited_user: Scalars['Int'];
  locale: Scalars['String'];
  location: Scalars['String'];
  login_disabled: Scalars['Int'];
  login_fail_count: Scalars['Int'];
  main_contact: Scalars['Boolean'];
  notify_on_booking: Scalars['Boolean'];
  pass_code: Scalars['String'];
  passcode: Scalars['String'];
  password?: Maybe<Scalars['String']>;
  password_algor?: Maybe<Scalars['Int']>;
  performance_stats: Scalars['Int'];
  permission_last_role?: Maybe<Scalars['String']>;
  phone_number: Scalars['String'];
  position: Scalars['String'];
  restored: Scalars['Int'];
  salt?: Maybe<Scalars['String']>;
  signature: Scalars['String'];
  staff_read_only: Scalars['Int'];
  stock_read_only: Scalars['Int'];
  super: Scalars['Int'];
  temporary_password: Scalars['Boolean'];
  timezone: Scalars['String'];
  user_color: Scalars['String'];
  user_security_questions_answer?: Maybe<UserSecurityQuestionsAnswerUncheckedCreateNestedManyWithoutUsersInput>;
  username?: Maybe<Scalars['String']>;
};

export type UserUncheckedCreateWithoutUser_Security_Questions_AnswerInput = {
  address: Scalars['String'];
  admin: Scalars['Int'];
  admin_leads: Scalars['Int'];
  admin_tasks: Scalars['Int'];
  all_reports?: Maybe<Scalars['Int']>;
  all_services?: Maybe<Scalars['Int']>;
  appear_on_rota?: Maybe<Scalars['Int']>;
  calendar_order: Scalars['Int'];
  can_cancel_booking?: Maybe<Scalars['Int']>;
  can_delete_blockout?: Maybe<Scalars['Int']>;
  can_delete_communications?: Maybe<Scalars['Boolean']>;
  can_discount?: Maybe<Scalars['Int']>;
  can_discount_single?: Maybe<Scalars['Boolean']>;
  can_edit_booking_time?: Maybe<Scalars['Int']>;
  can_edit_communications?: Maybe<Scalars['Boolean']>;
  can_lab_requests?: Maybe<Scalars['Boolean']>;
  can_make_blockout?: Maybe<Scalars['Int']>;
  can_merge?: Maybe<Scalars['Boolean']>;
  can_move_blockout?: Maybe<Scalars['Int']>;
  can_patient_appoint?: Maybe<Scalars['Int']>;
  can_patient_communicatons?: Maybe<Scalars['Int']>;
  can_patient_consents?: Maybe<Scalars['Int']>;
  can_patient_docs?: Maybe<Scalars['Int']>;
  can_patient_fiancials?: Maybe<Scalars['Int']>;
  can_patient_giftvoucher?: Maybe<Scalars['Int']>;
  can_patient_loyalty?: Maybe<Scalars['Int']>;
  can_patient_medical_history?: Maybe<Scalars['Int']>;
  can_patient_memberships?: Maybe<Scalars['Int']>;
  can_patient_packages?: Maybe<Scalars['Int']>;
  can_patient_photos?: Maybe<Scalars['Int']>;
  can_patient_prescription?: Maybe<Scalars['Int']>;
  can_patient_recall?: Maybe<Scalars['Int']>;
  can_patient_treatments?: Maybe<Scalars['Int']>;
  can_refund?: Maybe<Scalars['Boolean']>;
  can_report?: Maybe<Scalars['Int']>;
  can_rota?: Maybe<Scalars['Int']>;
  can_see_personal?: Maybe<Scalars['Int']>;
  can_view_full_cal?: Maybe<Scalars['Boolean']>;
  can_void?: Maybe<Scalars['Int']>;
  clocked_in?: Maybe<Scalars['DateTime']>;
  clocked_out?: Maybe<Scalars['DateTime']>;
  company_id?: Maybe<Scalars['Int']>;
  created?: Maybe<Scalars['DateTime']>;
  custom_id: Scalars['String'];
  default_contract_id: Scalars['Int'];
  default_page: Scalars['String'];
  delete_treatment?: Maybe<Scalars['Int']>;
  deleted: Scalars['Int'];
  department: Scalars['String'];
  detailed_view: Scalars['Int'];
  disable_multiple_clinics: Scalars['Int'];
  disable_tutorial: Scalars['Int'];
  division: Scalars['String'];
  email: Scalars['String'];
  force_password: Scalars['Int'];
  full_name: Scalars['String'];
  google_auth_secret?: Maybe<Scalars['String']>;
  hash: Scalars['String'];
  hide_calendar: Scalars['Int'];
  hide_online_bookings: Scalars['Int'];
  id?: Maybe<Scalars['Int']>;
  image: Scalars['String'];
  imported: Scalars['Int'];
  is_hcp?: Maybe<Scalars['Int']>;
  job_title: Scalars['String'];
  language: Scalars['String'];
  last_loaded_page: Scalars['String'];
  last_login?: Maybe<Scalars['DateTime']>;
  last_password_reset: Scalars['Int'];
  limited_user: Scalars['Int'];
  locale: Scalars['String'];
  location: Scalars['String'];
  login_disabled: Scalars['Int'];
  login_fail_count: Scalars['Int'];
  main_contact: Scalars['Boolean'];
  notify_on_booking: Scalars['Boolean'];
  pass_code: Scalars['String'];
  passcode: Scalars['String'];
  password?: Maybe<Scalars['String']>;
  password_algor?: Maybe<Scalars['Int']>;
  performance_stats: Scalars['Int'];
  permission_last_role?: Maybe<Scalars['String']>;
  phone_number: Scalars['String'];
  position: Scalars['String'];
  restored: Scalars['Int'];
  salt?: Maybe<Scalars['String']>;
  signature: Scalars['String'];
  staff_read_only: Scalars['Int'];
  stock_read_only: Scalars['Int'];
  super: Scalars['Int'];
  temporary_password: Scalars['Boolean'];
  timezone: Scalars['String'];
  user_color: Scalars['String'];
  username?: Maybe<Scalars['String']>;
};

export type UserUncheckedUpdateManyWithoutCompanyInput = {
  connect?: Maybe<Array<Maybe<UserWhereUniqueInput>>>;
  connectOrCreate?: Maybe<Array<Maybe<UserCreateOrConnectWithoutCompanyInput>>>;
  create?: Maybe<Array<Maybe<UserCreateWithoutCompanyInput>>>;
  delete?: Maybe<Array<Maybe<UserWhereUniqueInput>>>;
  deleteMany?: Maybe<Array<Maybe<UserScalarWhereInput>>>;
  disconnect?: Maybe<Array<Maybe<UserWhereUniqueInput>>>;
  set?: Maybe<Array<Maybe<UserWhereUniqueInput>>>;
  update?: Maybe<Array<Maybe<UserUpdateWithWhereUniqueWithoutCompanyInput>>>;
  updateMany?: Maybe<Array<Maybe<UserUpdateManyWithWhereWithoutCompanyInput>>>;
  upsert?: Maybe<Array<Maybe<UserUpsertWithWhereUniqueWithoutCompanyInput>>>;
};

export type UserUncheckedUpdateManyWithoutUserInput = {
  address?: Maybe<StringFieldUpdateOperationsInput>;
  admin?: Maybe<IntFieldUpdateOperationsInput>;
  admin_leads?: Maybe<IntFieldUpdateOperationsInput>;
  admin_tasks?: Maybe<IntFieldUpdateOperationsInput>;
  all_reports?: Maybe<IntFieldUpdateOperationsInput>;
  all_services?: Maybe<IntFieldUpdateOperationsInput>;
  appear_on_rota?: Maybe<IntFieldUpdateOperationsInput>;
  calendar_order?: Maybe<IntFieldUpdateOperationsInput>;
  can_cancel_booking?: Maybe<IntFieldUpdateOperationsInput>;
  can_delete_blockout?: Maybe<IntFieldUpdateOperationsInput>;
  can_delete_communications?: Maybe<BoolFieldUpdateOperationsInput>;
  can_discount?: Maybe<NullableIntFieldUpdateOperationsInput>;
  can_discount_single?: Maybe<BoolFieldUpdateOperationsInput>;
  can_edit_booking_time?: Maybe<IntFieldUpdateOperationsInput>;
  can_edit_communications?: Maybe<BoolFieldUpdateOperationsInput>;
  can_lab_requests?: Maybe<BoolFieldUpdateOperationsInput>;
  can_make_blockout?: Maybe<IntFieldUpdateOperationsInput>;
  can_merge?: Maybe<BoolFieldUpdateOperationsInput>;
  can_move_blockout?: Maybe<IntFieldUpdateOperationsInput>;
  can_patient_appoint?: Maybe<IntFieldUpdateOperationsInput>;
  can_patient_communicatons?: Maybe<IntFieldUpdateOperationsInput>;
  can_patient_consents?: Maybe<IntFieldUpdateOperationsInput>;
  can_patient_docs?: Maybe<IntFieldUpdateOperationsInput>;
  can_patient_fiancials?: Maybe<IntFieldUpdateOperationsInput>;
  can_patient_giftvoucher?: Maybe<IntFieldUpdateOperationsInput>;
  can_patient_loyalty?: Maybe<IntFieldUpdateOperationsInput>;
  can_patient_medical_history?: Maybe<IntFieldUpdateOperationsInput>;
  can_patient_memberships?: Maybe<IntFieldUpdateOperationsInput>;
  can_patient_packages?: Maybe<IntFieldUpdateOperationsInput>;
  can_patient_photos?: Maybe<IntFieldUpdateOperationsInput>;
  can_patient_prescription?: Maybe<IntFieldUpdateOperationsInput>;
  can_patient_recall?: Maybe<IntFieldUpdateOperationsInput>;
  can_patient_treatments?: Maybe<IntFieldUpdateOperationsInput>;
  can_refund?: Maybe<BoolFieldUpdateOperationsInput>;
  can_report?: Maybe<IntFieldUpdateOperationsInput>;
  can_rota?: Maybe<IntFieldUpdateOperationsInput>;
  can_see_personal?: Maybe<IntFieldUpdateOperationsInput>;
  can_view_full_cal?: Maybe<BoolFieldUpdateOperationsInput>;
  can_void?: Maybe<IntFieldUpdateOperationsInput>;
  clocked_in?: Maybe<NullableDateTimeFieldUpdateOperationsInput>;
  clocked_out?: Maybe<NullableDateTimeFieldUpdateOperationsInput>;
  created?: Maybe<NullableDateTimeFieldUpdateOperationsInput>;
  custom_id?: Maybe<StringFieldUpdateOperationsInput>;
  default_contract_id?: Maybe<IntFieldUpdateOperationsInput>;
  default_page?: Maybe<StringFieldUpdateOperationsInput>;
  delete_treatment?: Maybe<IntFieldUpdateOperationsInput>;
  deleted?: Maybe<IntFieldUpdateOperationsInput>;
  department?: Maybe<StringFieldUpdateOperationsInput>;
  detailed_view?: Maybe<IntFieldUpdateOperationsInput>;
  disable_multiple_clinics?: Maybe<IntFieldUpdateOperationsInput>;
  disable_tutorial?: Maybe<IntFieldUpdateOperationsInput>;
  division?: Maybe<StringFieldUpdateOperationsInput>;
  email?: Maybe<StringFieldUpdateOperationsInput>;
  force_password?: Maybe<IntFieldUpdateOperationsInput>;
  full_name?: Maybe<StringFieldUpdateOperationsInput>;
  google_auth_secret?: Maybe<NullableStringFieldUpdateOperationsInput>;
  hash?: Maybe<StringFieldUpdateOperationsInput>;
  hide_calendar?: Maybe<IntFieldUpdateOperationsInput>;
  hide_online_bookings?: Maybe<IntFieldUpdateOperationsInput>;
  id?: Maybe<IntFieldUpdateOperationsInput>;
  image?: Maybe<StringFieldUpdateOperationsInput>;
  imported?: Maybe<IntFieldUpdateOperationsInput>;
  is_hcp?: Maybe<IntFieldUpdateOperationsInput>;
  job_title?: Maybe<StringFieldUpdateOperationsInput>;
  language?: Maybe<StringFieldUpdateOperationsInput>;
  last_loaded_page?: Maybe<StringFieldUpdateOperationsInput>;
  last_login?: Maybe<NullableDateTimeFieldUpdateOperationsInput>;
  last_password_reset?: Maybe<IntFieldUpdateOperationsInput>;
  limited_user?: Maybe<IntFieldUpdateOperationsInput>;
  locale?: Maybe<StringFieldUpdateOperationsInput>;
  location?: Maybe<StringFieldUpdateOperationsInput>;
  login_disabled?: Maybe<IntFieldUpdateOperationsInput>;
  login_fail_count?: Maybe<IntFieldUpdateOperationsInput>;
  main_contact?: Maybe<BoolFieldUpdateOperationsInput>;
  notify_on_booking?: Maybe<BoolFieldUpdateOperationsInput>;
  pass_code?: Maybe<StringFieldUpdateOperationsInput>;
  passcode?: Maybe<StringFieldUpdateOperationsInput>;
  password?: Maybe<NullableStringFieldUpdateOperationsInput>;
  password_algor?: Maybe<NullableIntFieldUpdateOperationsInput>;
  performance_stats?: Maybe<IntFieldUpdateOperationsInput>;
  permission_last_role?: Maybe<StringFieldUpdateOperationsInput>;
  phone_number?: Maybe<StringFieldUpdateOperationsInput>;
  position?: Maybe<StringFieldUpdateOperationsInput>;
  restored?: Maybe<IntFieldUpdateOperationsInput>;
  salt?: Maybe<NullableStringFieldUpdateOperationsInput>;
  signature?: Maybe<StringFieldUpdateOperationsInput>;
  staff_read_only?: Maybe<IntFieldUpdateOperationsInput>;
  stock_read_only?: Maybe<IntFieldUpdateOperationsInput>;
  super?: Maybe<IntFieldUpdateOperationsInput>;
  temporary_password?: Maybe<BoolFieldUpdateOperationsInput>;
  timezone?: Maybe<StringFieldUpdateOperationsInput>;
  user_color?: Maybe<StringFieldUpdateOperationsInput>;
  username?: Maybe<NullableStringFieldUpdateOperationsInput>;
};

export type UserUncheckedUpdateWithoutCompanyInput = {
  address?: Maybe<StringFieldUpdateOperationsInput>;
  admin?: Maybe<IntFieldUpdateOperationsInput>;
  admin_leads?: Maybe<IntFieldUpdateOperationsInput>;
  admin_tasks?: Maybe<IntFieldUpdateOperationsInput>;
  all_reports?: Maybe<IntFieldUpdateOperationsInput>;
  all_services?: Maybe<IntFieldUpdateOperationsInput>;
  appear_on_rota?: Maybe<IntFieldUpdateOperationsInput>;
  calendar_order?: Maybe<IntFieldUpdateOperationsInput>;
  can_cancel_booking?: Maybe<IntFieldUpdateOperationsInput>;
  can_delete_blockout?: Maybe<IntFieldUpdateOperationsInput>;
  can_delete_communications?: Maybe<BoolFieldUpdateOperationsInput>;
  can_discount?: Maybe<NullableIntFieldUpdateOperationsInput>;
  can_discount_single?: Maybe<BoolFieldUpdateOperationsInput>;
  can_edit_booking_time?: Maybe<IntFieldUpdateOperationsInput>;
  can_edit_communications?: Maybe<BoolFieldUpdateOperationsInput>;
  can_lab_requests?: Maybe<BoolFieldUpdateOperationsInput>;
  can_make_blockout?: Maybe<IntFieldUpdateOperationsInput>;
  can_merge?: Maybe<BoolFieldUpdateOperationsInput>;
  can_move_blockout?: Maybe<IntFieldUpdateOperationsInput>;
  can_patient_appoint?: Maybe<IntFieldUpdateOperationsInput>;
  can_patient_communicatons?: Maybe<IntFieldUpdateOperationsInput>;
  can_patient_consents?: Maybe<IntFieldUpdateOperationsInput>;
  can_patient_docs?: Maybe<IntFieldUpdateOperationsInput>;
  can_patient_fiancials?: Maybe<IntFieldUpdateOperationsInput>;
  can_patient_giftvoucher?: Maybe<IntFieldUpdateOperationsInput>;
  can_patient_loyalty?: Maybe<IntFieldUpdateOperationsInput>;
  can_patient_medical_history?: Maybe<IntFieldUpdateOperationsInput>;
  can_patient_memberships?: Maybe<IntFieldUpdateOperationsInput>;
  can_patient_packages?: Maybe<IntFieldUpdateOperationsInput>;
  can_patient_photos?: Maybe<IntFieldUpdateOperationsInput>;
  can_patient_prescription?: Maybe<IntFieldUpdateOperationsInput>;
  can_patient_recall?: Maybe<IntFieldUpdateOperationsInput>;
  can_patient_treatments?: Maybe<IntFieldUpdateOperationsInput>;
  can_refund?: Maybe<BoolFieldUpdateOperationsInput>;
  can_report?: Maybe<IntFieldUpdateOperationsInput>;
  can_rota?: Maybe<IntFieldUpdateOperationsInput>;
  can_see_personal?: Maybe<IntFieldUpdateOperationsInput>;
  can_view_full_cal?: Maybe<BoolFieldUpdateOperationsInput>;
  can_void?: Maybe<IntFieldUpdateOperationsInput>;
  clocked_in?: Maybe<NullableDateTimeFieldUpdateOperationsInput>;
  clocked_out?: Maybe<NullableDateTimeFieldUpdateOperationsInput>;
  created?: Maybe<NullableDateTimeFieldUpdateOperationsInput>;
  custom_id?: Maybe<StringFieldUpdateOperationsInput>;
  default_contract_id?: Maybe<IntFieldUpdateOperationsInput>;
  default_page?: Maybe<StringFieldUpdateOperationsInput>;
  delete_treatment?: Maybe<IntFieldUpdateOperationsInput>;
  deleted?: Maybe<IntFieldUpdateOperationsInput>;
  department?: Maybe<StringFieldUpdateOperationsInput>;
  detailed_view?: Maybe<IntFieldUpdateOperationsInput>;
  disable_multiple_clinics?: Maybe<IntFieldUpdateOperationsInput>;
  disable_tutorial?: Maybe<IntFieldUpdateOperationsInput>;
  division?: Maybe<StringFieldUpdateOperationsInput>;
  email?: Maybe<StringFieldUpdateOperationsInput>;
  force_password?: Maybe<IntFieldUpdateOperationsInput>;
  full_name?: Maybe<StringFieldUpdateOperationsInput>;
  google_auth_secret?: Maybe<NullableStringFieldUpdateOperationsInput>;
  hash?: Maybe<StringFieldUpdateOperationsInput>;
  hide_calendar?: Maybe<IntFieldUpdateOperationsInput>;
  hide_online_bookings?: Maybe<IntFieldUpdateOperationsInput>;
  id?: Maybe<IntFieldUpdateOperationsInput>;
  image?: Maybe<StringFieldUpdateOperationsInput>;
  imported?: Maybe<IntFieldUpdateOperationsInput>;
  is_hcp?: Maybe<IntFieldUpdateOperationsInput>;
  job_title?: Maybe<StringFieldUpdateOperationsInput>;
  language?: Maybe<StringFieldUpdateOperationsInput>;
  last_loaded_page?: Maybe<StringFieldUpdateOperationsInput>;
  last_login?: Maybe<NullableDateTimeFieldUpdateOperationsInput>;
  last_password_reset?: Maybe<IntFieldUpdateOperationsInput>;
  limited_user?: Maybe<IntFieldUpdateOperationsInput>;
  locale?: Maybe<StringFieldUpdateOperationsInput>;
  location?: Maybe<StringFieldUpdateOperationsInput>;
  login_disabled?: Maybe<IntFieldUpdateOperationsInput>;
  login_fail_count?: Maybe<IntFieldUpdateOperationsInput>;
  main_contact?: Maybe<BoolFieldUpdateOperationsInput>;
  notify_on_booking?: Maybe<BoolFieldUpdateOperationsInput>;
  pass_code?: Maybe<StringFieldUpdateOperationsInput>;
  passcode?: Maybe<StringFieldUpdateOperationsInput>;
  password?: Maybe<NullableStringFieldUpdateOperationsInput>;
  password_algor?: Maybe<NullableIntFieldUpdateOperationsInput>;
  performance_stats?: Maybe<IntFieldUpdateOperationsInput>;
  permission_last_role?: Maybe<StringFieldUpdateOperationsInput>;
  phone_number?: Maybe<StringFieldUpdateOperationsInput>;
  position?: Maybe<StringFieldUpdateOperationsInput>;
  restored?: Maybe<IntFieldUpdateOperationsInput>;
  salt?: Maybe<NullableStringFieldUpdateOperationsInput>;
  signature?: Maybe<StringFieldUpdateOperationsInput>;
  staff_read_only?: Maybe<IntFieldUpdateOperationsInput>;
  stock_read_only?: Maybe<IntFieldUpdateOperationsInput>;
  super?: Maybe<IntFieldUpdateOperationsInput>;
  temporary_password?: Maybe<BoolFieldUpdateOperationsInput>;
  timezone?: Maybe<StringFieldUpdateOperationsInput>;
  user_color?: Maybe<StringFieldUpdateOperationsInput>;
  user_security_questions_answer?: Maybe<UserSecurityQuestionsAnswerUncheckedUpdateManyWithoutUsersInput>;
  username?: Maybe<NullableStringFieldUpdateOperationsInput>;
};

export type UserUncheckedUpdateWithoutUser_Security_Questions_AnswerInput = {
  address?: Maybe<StringFieldUpdateOperationsInput>;
  admin?: Maybe<IntFieldUpdateOperationsInput>;
  admin_leads?: Maybe<IntFieldUpdateOperationsInput>;
  admin_tasks?: Maybe<IntFieldUpdateOperationsInput>;
  all_reports?: Maybe<IntFieldUpdateOperationsInput>;
  all_services?: Maybe<IntFieldUpdateOperationsInput>;
  appear_on_rota?: Maybe<IntFieldUpdateOperationsInput>;
  calendar_order?: Maybe<IntFieldUpdateOperationsInput>;
  can_cancel_booking?: Maybe<IntFieldUpdateOperationsInput>;
  can_delete_blockout?: Maybe<IntFieldUpdateOperationsInput>;
  can_delete_communications?: Maybe<BoolFieldUpdateOperationsInput>;
  can_discount?: Maybe<NullableIntFieldUpdateOperationsInput>;
  can_discount_single?: Maybe<BoolFieldUpdateOperationsInput>;
  can_edit_booking_time?: Maybe<IntFieldUpdateOperationsInput>;
  can_edit_communications?: Maybe<BoolFieldUpdateOperationsInput>;
  can_lab_requests?: Maybe<BoolFieldUpdateOperationsInput>;
  can_make_blockout?: Maybe<IntFieldUpdateOperationsInput>;
  can_merge?: Maybe<BoolFieldUpdateOperationsInput>;
  can_move_blockout?: Maybe<IntFieldUpdateOperationsInput>;
  can_patient_appoint?: Maybe<IntFieldUpdateOperationsInput>;
  can_patient_communicatons?: Maybe<IntFieldUpdateOperationsInput>;
  can_patient_consents?: Maybe<IntFieldUpdateOperationsInput>;
  can_patient_docs?: Maybe<IntFieldUpdateOperationsInput>;
  can_patient_fiancials?: Maybe<IntFieldUpdateOperationsInput>;
  can_patient_giftvoucher?: Maybe<IntFieldUpdateOperationsInput>;
  can_patient_loyalty?: Maybe<IntFieldUpdateOperationsInput>;
  can_patient_medical_history?: Maybe<IntFieldUpdateOperationsInput>;
  can_patient_memberships?: Maybe<IntFieldUpdateOperationsInput>;
  can_patient_packages?: Maybe<IntFieldUpdateOperationsInput>;
  can_patient_photos?: Maybe<IntFieldUpdateOperationsInput>;
  can_patient_prescription?: Maybe<IntFieldUpdateOperationsInput>;
  can_patient_recall?: Maybe<IntFieldUpdateOperationsInput>;
  can_patient_treatments?: Maybe<IntFieldUpdateOperationsInput>;
  can_refund?: Maybe<BoolFieldUpdateOperationsInput>;
  can_report?: Maybe<IntFieldUpdateOperationsInput>;
  can_rota?: Maybe<IntFieldUpdateOperationsInput>;
  can_see_personal?: Maybe<IntFieldUpdateOperationsInput>;
  can_view_full_cal?: Maybe<BoolFieldUpdateOperationsInput>;
  can_void?: Maybe<IntFieldUpdateOperationsInput>;
  clocked_in?: Maybe<NullableDateTimeFieldUpdateOperationsInput>;
  clocked_out?: Maybe<NullableDateTimeFieldUpdateOperationsInput>;
  company_id?: Maybe<NullableIntFieldUpdateOperationsInput>;
  created?: Maybe<NullableDateTimeFieldUpdateOperationsInput>;
  custom_id?: Maybe<StringFieldUpdateOperationsInput>;
  default_contract_id?: Maybe<IntFieldUpdateOperationsInput>;
  default_page?: Maybe<StringFieldUpdateOperationsInput>;
  delete_treatment?: Maybe<IntFieldUpdateOperationsInput>;
  deleted?: Maybe<IntFieldUpdateOperationsInput>;
  department?: Maybe<StringFieldUpdateOperationsInput>;
  detailed_view?: Maybe<IntFieldUpdateOperationsInput>;
  disable_multiple_clinics?: Maybe<IntFieldUpdateOperationsInput>;
  disable_tutorial?: Maybe<IntFieldUpdateOperationsInput>;
  division?: Maybe<StringFieldUpdateOperationsInput>;
  email?: Maybe<StringFieldUpdateOperationsInput>;
  force_password?: Maybe<IntFieldUpdateOperationsInput>;
  full_name?: Maybe<StringFieldUpdateOperationsInput>;
  google_auth_secret?: Maybe<NullableStringFieldUpdateOperationsInput>;
  hash?: Maybe<StringFieldUpdateOperationsInput>;
  hide_calendar?: Maybe<IntFieldUpdateOperationsInput>;
  hide_online_bookings?: Maybe<IntFieldUpdateOperationsInput>;
  id?: Maybe<IntFieldUpdateOperationsInput>;
  image?: Maybe<StringFieldUpdateOperationsInput>;
  imported?: Maybe<IntFieldUpdateOperationsInput>;
  is_hcp?: Maybe<IntFieldUpdateOperationsInput>;
  job_title?: Maybe<StringFieldUpdateOperationsInput>;
  language?: Maybe<StringFieldUpdateOperationsInput>;
  last_loaded_page?: Maybe<StringFieldUpdateOperationsInput>;
  last_login?: Maybe<NullableDateTimeFieldUpdateOperationsInput>;
  last_password_reset?: Maybe<IntFieldUpdateOperationsInput>;
  limited_user?: Maybe<IntFieldUpdateOperationsInput>;
  locale?: Maybe<StringFieldUpdateOperationsInput>;
  location?: Maybe<StringFieldUpdateOperationsInput>;
  login_disabled?: Maybe<IntFieldUpdateOperationsInput>;
  login_fail_count?: Maybe<IntFieldUpdateOperationsInput>;
  main_contact?: Maybe<BoolFieldUpdateOperationsInput>;
  notify_on_booking?: Maybe<BoolFieldUpdateOperationsInput>;
  pass_code?: Maybe<StringFieldUpdateOperationsInput>;
  passcode?: Maybe<StringFieldUpdateOperationsInput>;
  password?: Maybe<NullableStringFieldUpdateOperationsInput>;
  password_algor?: Maybe<NullableIntFieldUpdateOperationsInput>;
  performance_stats?: Maybe<IntFieldUpdateOperationsInput>;
  permission_last_role?: Maybe<StringFieldUpdateOperationsInput>;
  phone_number?: Maybe<StringFieldUpdateOperationsInput>;
  position?: Maybe<StringFieldUpdateOperationsInput>;
  restored?: Maybe<IntFieldUpdateOperationsInput>;
  salt?: Maybe<NullableStringFieldUpdateOperationsInput>;
  signature?: Maybe<StringFieldUpdateOperationsInput>;
  staff_read_only?: Maybe<IntFieldUpdateOperationsInput>;
  stock_read_only?: Maybe<IntFieldUpdateOperationsInput>;
  super?: Maybe<IntFieldUpdateOperationsInput>;
  temporary_password?: Maybe<BoolFieldUpdateOperationsInput>;
  timezone?: Maybe<StringFieldUpdateOperationsInput>;
  user_color?: Maybe<StringFieldUpdateOperationsInput>;
  username?: Maybe<NullableStringFieldUpdateOperationsInput>;
};

export type UserUpdateInput = {
  address?: Maybe<StringFieldUpdateOperationsInput>;
  admin?: Maybe<IntFieldUpdateOperationsInput>;
  admin_leads?: Maybe<IntFieldUpdateOperationsInput>;
  admin_tasks?: Maybe<IntFieldUpdateOperationsInput>;
  all_reports?: Maybe<IntFieldUpdateOperationsInput>;
  all_services?: Maybe<IntFieldUpdateOperationsInput>;
  appear_on_rota?: Maybe<IntFieldUpdateOperationsInput>;
  calendar_order?: Maybe<IntFieldUpdateOperationsInput>;
  can_cancel_booking?: Maybe<IntFieldUpdateOperationsInput>;
  can_delete_blockout?: Maybe<IntFieldUpdateOperationsInput>;
  can_delete_communications?: Maybe<BoolFieldUpdateOperationsInput>;
  can_discount?: Maybe<NullableIntFieldUpdateOperationsInput>;
  can_discount_single?: Maybe<BoolFieldUpdateOperationsInput>;
  can_edit_booking_time?: Maybe<IntFieldUpdateOperationsInput>;
  can_edit_communications?: Maybe<BoolFieldUpdateOperationsInput>;
  can_lab_requests?: Maybe<BoolFieldUpdateOperationsInput>;
  can_make_blockout?: Maybe<IntFieldUpdateOperationsInput>;
  can_merge?: Maybe<BoolFieldUpdateOperationsInput>;
  can_move_blockout?: Maybe<IntFieldUpdateOperationsInput>;
  can_patient_appoint?: Maybe<IntFieldUpdateOperationsInput>;
  can_patient_communicatons?: Maybe<IntFieldUpdateOperationsInput>;
  can_patient_consents?: Maybe<IntFieldUpdateOperationsInput>;
  can_patient_docs?: Maybe<IntFieldUpdateOperationsInput>;
  can_patient_fiancials?: Maybe<IntFieldUpdateOperationsInput>;
  can_patient_giftvoucher?: Maybe<IntFieldUpdateOperationsInput>;
  can_patient_loyalty?: Maybe<IntFieldUpdateOperationsInput>;
  can_patient_medical_history?: Maybe<IntFieldUpdateOperationsInput>;
  can_patient_memberships?: Maybe<IntFieldUpdateOperationsInput>;
  can_patient_packages?: Maybe<IntFieldUpdateOperationsInput>;
  can_patient_photos?: Maybe<IntFieldUpdateOperationsInput>;
  can_patient_prescription?: Maybe<IntFieldUpdateOperationsInput>;
  can_patient_recall?: Maybe<IntFieldUpdateOperationsInput>;
  can_patient_treatments?: Maybe<IntFieldUpdateOperationsInput>;
  can_refund?: Maybe<BoolFieldUpdateOperationsInput>;
  can_report?: Maybe<IntFieldUpdateOperationsInput>;
  can_rota?: Maybe<IntFieldUpdateOperationsInput>;
  can_see_personal?: Maybe<IntFieldUpdateOperationsInput>;
  can_view_full_cal?: Maybe<BoolFieldUpdateOperationsInput>;
  can_void?: Maybe<IntFieldUpdateOperationsInput>;
  clocked_in?: Maybe<NullableDateTimeFieldUpdateOperationsInput>;
  clocked_out?: Maybe<NullableDateTimeFieldUpdateOperationsInput>;
  company?: Maybe<CompanyUpdateOneWithoutUserInput>;
  created?: Maybe<NullableDateTimeFieldUpdateOperationsInput>;
  custom_id?: Maybe<StringFieldUpdateOperationsInput>;
  default_contract_id?: Maybe<IntFieldUpdateOperationsInput>;
  default_page?: Maybe<StringFieldUpdateOperationsInput>;
  delete_treatment?: Maybe<IntFieldUpdateOperationsInput>;
  deleted?: Maybe<IntFieldUpdateOperationsInput>;
  department?: Maybe<StringFieldUpdateOperationsInput>;
  detailed_view?: Maybe<IntFieldUpdateOperationsInput>;
  disable_multiple_clinics?: Maybe<IntFieldUpdateOperationsInput>;
  disable_tutorial?: Maybe<IntFieldUpdateOperationsInput>;
  division?: Maybe<StringFieldUpdateOperationsInput>;
  email?: Maybe<StringFieldUpdateOperationsInput>;
  force_password?: Maybe<IntFieldUpdateOperationsInput>;
  full_name?: Maybe<StringFieldUpdateOperationsInput>;
  google_auth_secret?: Maybe<NullableStringFieldUpdateOperationsInput>;
  hash?: Maybe<StringFieldUpdateOperationsInput>;
  hide_calendar?: Maybe<IntFieldUpdateOperationsInput>;
  hide_online_bookings?: Maybe<IntFieldUpdateOperationsInput>;
  image?: Maybe<StringFieldUpdateOperationsInput>;
  imported?: Maybe<IntFieldUpdateOperationsInput>;
  is_hcp?: Maybe<IntFieldUpdateOperationsInput>;
  job_title?: Maybe<StringFieldUpdateOperationsInput>;
  language?: Maybe<StringFieldUpdateOperationsInput>;
  last_loaded_page?: Maybe<StringFieldUpdateOperationsInput>;
  last_login?: Maybe<NullableDateTimeFieldUpdateOperationsInput>;
  last_password_reset?: Maybe<IntFieldUpdateOperationsInput>;
  limited_user?: Maybe<IntFieldUpdateOperationsInput>;
  locale?: Maybe<StringFieldUpdateOperationsInput>;
  location?: Maybe<StringFieldUpdateOperationsInput>;
  login_disabled?: Maybe<IntFieldUpdateOperationsInput>;
  login_fail_count?: Maybe<IntFieldUpdateOperationsInput>;
  main_contact?: Maybe<BoolFieldUpdateOperationsInput>;
  notify_on_booking?: Maybe<BoolFieldUpdateOperationsInput>;
  pass_code?: Maybe<StringFieldUpdateOperationsInput>;
  passcode?: Maybe<StringFieldUpdateOperationsInput>;
  password?: Maybe<NullableStringFieldUpdateOperationsInput>;
  password_algor?: Maybe<NullableIntFieldUpdateOperationsInput>;
  performance_stats?: Maybe<IntFieldUpdateOperationsInput>;
  permission_last_role?: Maybe<StringFieldUpdateOperationsInput>;
  phone_number?: Maybe<StringFieldUpdateOperationsInput>;
  position?: Maybe<StringFieldUpdateOperationsInput>;
  restored?: Maybe<IntFieldUpdateOperationsInput>;
  salt?: Maybe<NullableStringFieldUpdateOperationsInput>;
  signature?: Maybe<StringFieldUpdateOperationsInput>;
  staff_read_only?: Maybe<IntFieldUpdateOperationsInput>;
  stock_read_only?: Maybe<IntFieldUpdateOperationsInput>;
  super?: Maybe<IntFieldUpdateOperationsInput>;
  temporary_password?: Maybe<BoolFieldUpdateOperationsInput>;
  timezone?: Maybe<StringFieldUpdateOperationsInput>;
  user_color?: Maybe<StringFieldUpdateOperationsInput>;
  user_security_questions_answer?: Maybe<UserSecurityQuestionsAnswerUpdateManyWithoutUsersInput>;
  username?: Maybe<NullableStringFieldUpdateOperationsInput>;
};

export type UserUpdateManyMutationInput = {
  address?: Maybe<StringFieldUpdateOperationsInput>;
  admin?: Maybe<IntFieldUpdateOperationsInput>;
  admin_leads?: Maybe<IntFieldUpdateOperationsInput>;
  admin_tasks?: Maybe<IntFieldUpdateOperationsInput>;
  all_reports?: Maybe<IntFieldUpdateOperationsInput>;
  all_services?: Maybe<IntFieldUpdateOperationsInput>;
  appear_on_rota?: Maybe<IntFieldUpdateOperationsInput>;
  calendar_order?: Maybe<IntFieldUpdateOperationsInput>;
  can_cancel_booking?: Maybe<IntFieldUpdateOperationsInput>;
  can_delete_blockout?: Maybe<IntFieldUpdateOperationsInput>;
  can_delete_communications?: Maybe<BoolFieldUpdateOperationsInput>;
  can_discount?: Maybe<NullableIntFieldUpdateOperationsInput>;
  can_discount_single?: Maybe<BoolFieldUpdateOperationsInput>;
  can_edit_booking_time?: Maybe<IntFieldUpdateOperationsInput>;
  can_edit_communications?: Maybe<BoolFieldUpdateOperationsInput>;
  can_lab_requests?: Maybe<BoolFieldUpdateOperationsInput>;
  can_make_blockout?: Maybe<IntFieldUpdateOperationsInput>;
  can_merge?: Maybe<BoolFieldUpdateOperationsInput>;
  can_move_blockout?: Maybe<IntFieldUpdateOperationsInput>;
  can_patient_appoint?: Maybe<IntFieldUpdateOperationsInput>;
  can_patient_communicatons?: Maybe<IntFieldUpdateOperationsInput>;
  can_patient_consents?: Maybe<IntFieldUpdateOperationsInput>;
  can_patient_docs?: Maybe<IntFieldUpdateOperationsInput>;
  can_patient_fiancials?: Maybe<IntFieldUpdateOperationsInput>;
  can_patient_giftvoucher?: Maybe<IntFieldUpdateOperationsInput>;
  can_patient_loyalty?: Maybe<IntFieldUpdateOperationsInput>;
  can_patient_medical_history?: Maybe<IntFieldUpdateOperationsInput>;
  can_patient_memberships?: Maybe<IntFieldUpdateOperationsInput>;
  can_patient_packages?: Maybe<IntFieldUpdateOperationsInput>;
  can_patient_photos?: Maybe<IntFieldUpdateOperationsInput>;
  can_patient_prescription?: Maybe<IntFieldUpdateOperationsInput>;
  can_patient_recall?: Maybe<IntFieldUpdateOperationsInput>;
  can_patient_treatments?: Maybe<IntFieldUpdateOperationsInput>;
  can_refund?: Maybe<BoolFieldUpdateOperationsInput>;
  can_report?: Maybe<IntFieldUpdateOperationsInput>;
  can_rota?: Maybe<IntFieldUpdateOperationsInput>;
  can_see_personal?: Maybe<IntFieldUpdateOperationsInput>;
  can_view_full_cal?: Maybe<BoolFieldUpdateOperationsInput>;
  can_void?: Maybe<IntFieldUpdateOperationsInput>;
  clocked_in?: Maybe<NullableDateTimeFieldUpdateOperationsInput>;
  clocked_out?: Maybe<NullableDateTimeFieldUpdateOperationsInput>;
  created?: Maybe<NullableDateTimeFieldUpdateOperationsInput>;
  custom_id?: Maybe<StringFieldUpdateOperationsInput>;
  default_contract_id?: Maybe<IntFieldUpdateOperationsInput>;
  default_page?: Maybe<StringFieldUpdateOperationsInput>;
  delete_treatment?: Maybe<IntFieldUpdateOperationsInput>;
  deleted?: Maybe<IntFieldUpdateOperationsInput>;
  department?: Maybe<StringFieldUpdateOperationsInput>;
  detailed_view?: Maybe<IntFieldUpdateOperationsInput>;
  disable_multiple_clinics?: Maybe<IntFieldUpdateOperationsInput>;
  disable_tutorial?: Maybe<IntFieldUpdateOperationsInput>;
  division?: Maybe<StringFieldUpdateOperationsInput>;
  email?: Maybe<StringFieldUpdateOperationsInput>;
  force_password?: Maybe<IntFieldUpdateOperationsInput>;
  full_name?: Maybe<StringFieldUpdateOperationsInput>;
  google_auth_secret?: Maybe<NullableStringFieldUpdateOperationsInput>;
  hash?: Maybe<StringFieldUpdateOperationsInput>;
  hide_calendar?: Maybe<IntFieldUpdateOperationsInput>;
  hide_online_bookings?: Maybe<IntFieldUpdateOperationsInput>;
  image?: Maybe<StringFieldUpdateOperationsInput>;
  imported?: Maybe<IntFieldUpdateOperationsInput>;
  is_hcp?: Maybe<IntFieldUpdateOperationsInput>;
  job_title?: Maybe<StringFieldUpdateOperationsInput>;
  language?: Maybe<StringFieldUpdateOperationsInput>;
  last_loaded_page?: Maybe<StringFieldUpdateOperationsInput>;
  last_login?: Maybe<NullableDateTimeFieldUpdateOperationsInput>;
  last_password_reset?: Maybe<IntFieldUpdateOperationsInput>;
  limited_user?: Maybe<IntFieldUpdateOperationsInput>;
  locale?: Maybe<StringFieldUpdateOperationsInput>;
  location?: Maybe<StringFieldUpdateOperationsInput>;
  login_disabled?: Maybe<IntFieldUpdateOperationsInput>;
  login_fail_count?: Maybe<IntFieldUpdateOperationsInput>;
  main_contact?: Maybe<BoolFieldUpdateOperationsInput>;
  notify_on_booking?: Maybe<BoolFieldUpdateOperationsInput>;
  pass_code?: Maybe<StringFieldUpdateOperationsInput>;
  passcode?: Maybe<StringFieldUpdateOperationsInput>;
  password?: Maybe<NullableStringFieldUpdateOperationsInput>;
  password_algor?: Maybe<NullableIntFieldUpdateOperationsInput>;
  performance_stats?: Maybe<IntFieldUpdateOperationsInput>;
  permission_last_role?: Maybe<StringFieldUpdateOperationsInput>;
  phone_number?: Maybe<StringFieldUpdateOperationsInput>;
  position?: Maybe<StringFieldUpdateOperationsInput>;
  restored?: Maybe<IntFieldUpdateOperationsInput>;
  salt?: Maybe<NullableStringFieldUpdateOperationsInput>;
  signature?: Maybe<StringFieldUpdateOperationsInput>;
  staff_read_only?: Maybe<IntFieldUpdateOperationsInput>;
  stock_read_only?: Maybe<IntFieldUpdateOperationsInput>;
  super?: Maybe<IntFieldUpdateOperationsInput>;
  temporary_password?: Maybe<BoolFieldUpdateOperationsInput>;
  timezone?: Maybe<StringFieldUpdateOperationsInput>;
  user_color?: Maybe<StringFieldUpdateOperationsInput>;
  username?: Maybe<NullableStringFieldUpdateOperationsInput>;
};

export type UserUpdateManyWithWhereWithoutCompanyInput = {
  data: UserUncheckedUpdateManyWithoutUserInput;
  where: UserScalarWhereInput;
};

export type UserUpdateManyWithoutCompanyInput = {
  connect?: Maybe<Array<Maybe<UserWhereUniqueInput>>>;
  connectOrCreate?: Maybe<Array<Maybe<UserCreateOrConnectWithoutCompanyInput>>>;
  create?: Maybe<Array<Maybe<UserCreateWithoutCompanyInput>>>;
  delete?: Maybe<Array<Maybe<UserWhereUniqueInput>>>;
  deleteMany?: Maybe<Array<Maybe<UserScalarWhereInput>>>;
  disconnect?: Maybe<Array<Maybe<UserWhereUniqueInput>>>;
  set?: Maybe<Array<Maybe<UserWhereUniqueInput>>>;
  update?: Maybe<Array<Maybe<UserUpdateWithWhereUniqueWithoutCompanyInput>>>;
  updateMany?: Maybe<Array<Maybe<UserUpdateManyWithWhereWithoutCompanyInput>>>;
  upsert?: Maybe<Array<Maybe<UserUpsertWithWhereUniqueWithoutCompanyInput>>>;
};

export type UserUpdateOneRequiredWithoutUser_Security_Questions_AnswerInput = {
  connect?: Maybe<UserWhereUniqueInput>;
  connectOrCreate?: Maybe<UserCreateOrConnectWithoutUser_Security_Questions_AnswerInput>;
  create?: Maybe<UserUncheckedCreateWithoutUser_Security_Questions_AnswerInput>;
  update?: Maybe<UserUncheckedUpdateWithoutUser_Security_Questions_AnswerInput>;
  upsert?: Maybe<UserUpsertWithoutUser_Security_Questions_AnswerInput>;
};

export type UserUpdateWithWhereUniqueWithoutCompanyInput = {
  data: UserUncheckedUpdateWithoutCompanyInput;
  where: UserWhereUniqueInput;
};

export type UserUpsertWithWhereUniqueWithoutCompanyInput = {
  create: UserUncheckedCreateWithoutCompanyInput;
  update: UserUncheckedUpdateWithoutCompanyInput;
  where: UserWhereUniqueInput;
};

export type UserUpsertWithoutUser_Security_Questions_AnswerInput = {
  create: UserUncheckedCreateWithoutUser_Security_Questions_AnswerInput;
  update: UserUncheckedUpdateWithoutUser_Security_Questions_AnswerInput;
};

export type UserWhereInput = {
  AND?: Maybe<Array<Maybe<UserWhereInput>>>;
  NOT?: Maybe<Array<Maybe<UserWhereInput>>>;
  OR?: Maybe<Array<Maybe<UserWhereInput>>>;
  address?: Maybe<StringFilter>;
  admin?: Maybe<IntFilter>;
  admin_leads?: Maybe<IntFilter>;
  admin_tasks?: Maybe<IntFilter>;
  all_reports?: Maybe<IntFilter>;
  all_services?: Maybe<IntFilter>;
  appear_on_rota?: Maybe<IntFilter>;
  calendar_order?: Maybe<IntFilter>;
  can_cancel_booking?: Maybe<IntFilter>;
  can_delete_blockout?: Maybe<IntFilter>;
  can_delete_communications?: Maybe<BoolFilter>;
  can_discount?: Maybe<IntNullableFilter>;
  can_discount_single?: Maybe<BoolFilter>;
  can_edit_booking_time?: Maybe<IntFilter>;
  can_edit_communications?: Maybe<BoolFilter>;
  can_lab_requests?: Maybe<BoolFilter>;
  can_make_blockout?: Maybe<IntFilter>;
  can_merge?: Maybe<BoolFilter>;
  can_move_blockout?: Maybe<IntFilter>;
  can_patient_appoint?: Maybe<IntFilter>;
  can_patient_communicatons?: Maybe<IntFilter>;
  can_patient_consents?: Maybe<IntFilter>;
  can_patient_docs?: Maybe<IntFilter>;
  can_patient_fiancials?: Maybe<IntFilter>;
  can_patient_giftvoucher?: Maybe<IntFilter>;
  can_patient_loyalty?: Maybe<IntFilter>;
  can_patient_medical_history?: Maybe<IntFilter>;
  can_patient_memberships?: Maybe<IntFilter>;
  can_patient_packages?: Maybe<IntFilter>;
  can_patient_photos?: Maybe<IntFilter>;
  can_patient_prescription?: Maybe<IntFilter>;
  can_patient_recall?: Maybe<IntFilter>;
  can_patient_treatments?: Maybe<IntFilter>;
  can_refund?: Maybe<BoolFilter>;
  can_report?: Maybe<IntFilter>;
  can_rota?: Maybe<IntFilter>;
  can_see_personal?: Maybe<IntFilter>;
  can_view_full_cal?: Maybe<BoolFilter>;
  can_void?: Maybe<IntFilter>;
  clocked_in?: Maybe<DateTimeNullableFilter>;
  clocked_out?: Maybe<DateTimeNullableFilter>;
  company?: Maybe<CompanyWhereInput>;
  company_id?: Maybe<IntNullableFilter>;
  created?: Maybe<DateTimeNullableFilter>;
  custom_id?: Maybe<StringFilter>;
  default_contract_id?: Maybe<IntFilter>;
  default_page?: Maybe<StringFilter>;
  delete_treatment?: Maybe<IntFilter>;
  deleted?: Maybe<IntFilter>;
  department?: Maybe<StringFilter>;
  detailed_view?: Maybe<IntFilter>;
  disable_multiple_clinics?: Maybe<IntFilter>;
  disable_tutorial?: Maybe<IntFilter>;
  division?: Maybe<StringFilter>;
  email?: Maybe<StringFilter>;
  force_password?: Maybe<IntFilter>;
  full_name?: Maybe<StringFilter>;
  google_auth_secret?: Maybe<StringNullableFilter>;
  hash?: Maybe<StringFilter>;
  hide_calendar?: Maybe<IntFilter>;
  hide_online_bookings?: Maybe<IntFilter>;
  id?: Maybe<IntFilter>;
  image?: Maybe<StringFilter>;
  imported?: Maybe<IntFilter>;
  is_hcp?: Maybe<IntFilter>;
  job_title?: Maybe<StringFilter>;
  language?: Maybe<StringFilter>;
  last_loaded_page?: Maybe<StringFilter>;
  last_login?: Maybe<DateTimeNullableFilter>;
  last_password_reset?: Maybe<IntFilter>;
  limited_user?: Maybe<IntFilter>;
  locale?: Maybe<StringFilter>;
  location?: Maybe<StringFilter>;
  login_disabled?: Maybe<IntFilter>;
  login_fail_count?: Maybe<IntFilter>;
  main_contact?: Maybe<BoolFilter>;
  notify_on_booking?: Maybe<BoolFilter>;
  pass_code?: Maybe<StringFilter>;
  passcode?: Maybe<StringFilter>;
  password?: Maybe<StringNullableFilter>;
  password_algor?: Maybe<IntNullableFilter>;
  performance_stats?: Maybe<IntFilter>;
  permission_last_role?: Maybe<StringFilter>;
  phone_number?: Maybe<StringFilter>;
  position?: Maybe<StringFilter>;
  restored?: Maybe<IntFilter>;
  salt?: Maybe<StringNullableFilter>;
  signature?: Maybe<StringFilter>;
  staff_read_only?: Maybe<IntFilter>;
  stock_read_only?: Maybe<IntFilter>;
  super?: Maybe<IntFilter>;
  temporary_password?: Maybe<BoolFilter>;
  timezone?: Maybe<StringFilter>;
  user_color?: Maybe<StringFilter>;
  user_security_questions_answer?: Maybe<UserSecurityQuestionsAnswerListRelationFilter>;
  username?: Maybe<StringNullableFilter>;
};

export type UserWhereUniqueInput = {
  id?: Maybe<Scalars['Int']>;
};

/** columns and relationships of "appointment_status" */
export type Appointment_Status = {
  __typename?: 'appointment_status';
  appointment_type?: Maybe<Scalars['String']>;
  color?: Maybe<Scalars['String']>;
  created_at: Scalars['timestamptz'];
  icon: Scalars['String'];
  id: Scalars['uuid'];
  is_active: Scalars['Boolean'];
  name: Scalars['String'];
  order: Scalars['Int'];
  track_time: Scalars['Boolean'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "appointment_status" */
export type Appointment_Status_Aggregate = {
  __typename?: 'appointment_status_aggregate';
  aggregate?: Maybe<Appointment_Status_Aggregate_Fields>;
  nodes: Array<Appointment_Status>;
};

/** aggregate fields of "appointment_status" */
export type Appointment_Status_Aggregate_Fields = {
  __typename?: 'appointment_status_aggregate_fields';
  avg?: Maybe<Appointment_Status_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Appointment_Status_Max_Fields>;
  min?: Maybe<Appointment_Status_Min_Fields>;
  stddev?: Maybe<Appointment_Status_Stddev_Fields>;
  stddev_pop?: Maybe<Appointment_Status_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Appointment_Status_Stddev_Samp_Fields>;
  sum?: Maybe<Appointment_Status_Sum_Fields>;
  var_pop?: Maybe<Appointment_Status_Var_Pop_Fields>;
  var_samp?: Maybe<Appointment_Status_Var_Samp_Fields>;
  variance?: Maybe<Appointment_Status_Variance_Fields>;
};


/** aggregate fields of "appointment_status" */
export type Appointment_Status_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Appointment_Status_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Appointment_Status_Avg_Fields = {
  __typename?: 'appointment_status_avg_fields';
  order?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "appointment_status". All fields are combined with a logical 'AND'. */
export type Appointment_Status_Bool_Exp = {
  _and?: Maybe<Array<Appointment_Status_Bool_Exp>>;
  _not?: Maybe<Appointment_Status_Bool_Exp>;
  _or?: Maybe<Array<Appointment_Status_Bool_Exp>>;
  appointment_type?: Maybe<String_Comparison_Exp>;
  color?: Maybe<String_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  icon?: Maybe<String_Comparison_Exp>;
  id?: Maybe<Uuid_Comparison_Exp>;
  is_active?: Maybe<Boolean_Comparison_Exp>;
  name?: Maybe<String_Comparison_Exp>;
  order?: Maybe<Int_Comparison_Exp>;
  track_time?: Maybe<Boolean_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "appointment_status" */
export enum Appointment_Status_Constraint {
  /** unique or primary key constraint */
  AppointmentStatusPkey = 'appointment_status_pkey'
}

/** input type for incrementing numeric columns in table "appointment_status" */
export type Appointment_Status_Inc_Input = {
  order?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "appointment_status" */
export type Appointment_Status_Insert_Input = {
  appointment_type?: Maybe<Scalars['String']>;
  color?: Maybe<Scalars['String']>;
  icon?: Maybe<Scalars['String']>;
  is_active?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
  track_time?: Maybe<Scalars['Boolean']>;
};

/** aggregate max on columns */
export type Appointment_Status_Max_Fields = {
  __typename?: 'appointment_status_max_fields';
  appointment_type?: Maybe<Scalars['String']>;
  color?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  icon?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type Appointment_Status_Min_Fields = {
  __typename?: 'appointment_status_min_fields';
  appointment_type?: Maybe<Scalars['String']>;
  color?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  icon?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "appointment_status" */
export type Appointment_Status_Mutation_Response = {
  __typename?: 'appointment_status_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Appointment_Status>;
};

/** on conflict condition type for table "appointment_status" */
export type Appointment_Status_On_Conflict = {
  constraint: Appointment_Status_Constraint;
  update_columns: Array<Appointment_Status_Update_Column>;
  where?: Maybe<Appointment_Status_Bool_Exp>;
};

/** Ordering options when selecting data from "appointment_status". */
export type Appointment_Status_Order_By = {
  appointment_type?: Maybe<Order_By>;
  color?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  icon?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  is_active?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  order?: Maybe<Order_By>;
  track_time?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: appointment_status */
export type Appointment_Status_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "appointment_status" */
export enum Appointment_Status_Select_Column {
  /** column name */
  AppointmentType = 'appointment_type',
  /** column name */
  Color = 'color',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Icon = 'icon',
  /** column name */
  Id = 'id',
  /** column name */
  IsActive = 'is_active',
  /** column name */
  Name = 'name',
  /** column name */
  Order = 'order',
  /** column name */
  TrackTime = 'track_time',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "appointment_status" */
export type Appointment_Status_Set_Input = {
  appointment_type?: Maybe<Scalars['String']>;
  color?: Maybe<Scalars['String']>;
  icon?: Maybe<Scalars['String']>;
  is_active?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
  track_time?: Maybe<Scalars['Boolean']>;
};

/** aggregate stddev on columns */
export type Appointment_Status_Stddev_Fields = {
  __typename?: 'appointment_status_stddev_fields';
  order?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Appointment_Status_Stddev_Pop_Fields = {
  __typename?: 'appointment_status_stddev_pop_fields';
  order?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Appointment_Status_Stddev_Samp_Fields = {
  __typename?: 'appointment_status_stddev_samp_fields';
  order?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Appointment_Status_Sum_Fields = {
  __typename?: 'appointment_status_sum_fields';
  order?: Maybe<Scalars['Int']>;
};

/** update columns of table "appointment_status" */
export enum Appointment_Status_Update_Column {
  /** column name */
  AppointmentType = 'appointment_type',
  /** column name */
  Color = 'color',
  /** column name */
  Icon = 'icon',
  /** column name */
  IsActive = 'is_active',
  /** column name */
  Name = 'name',
  /** column name */
  Order = 'order',
  /** column name */
  TrackTime = 'track_time'
}

/** aggregate var_pop on columns */
export type Appointment_Status_Var_Pop_Fields = {
  __typename?: 'appointment_status_var_pop_fields';
  order?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Appointment_Status_Var_Samp_Fields = {
  __typename?: 'appointment_status_var_samp_fields';
  order?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Appointment_Status_Variance_Fields = {
  __typename?: 'appointment_status_variance_fields';
  order?: Maybe<Scalars['Float']>;
};


/** Boolean expression to compare columns of type "bigint". All fields are combined with logical 'AND'. */
export type Bigint_Comparison_Exp = {
  _eq?: Maybe<Scalars['bigint']>;
  _gt?: Maybe<Scalars['bigint']>;
  _gte?: Maybe<Scalars['bigint']>;
  _in?: Maybe<Array<Scalars['bigint']>>;
  _is_null?: Maybe<Scalars['Boolean']>;
  _lt?: Maybe<Scalars['bigint']>;
  _lte?: Maybe<Scalars['bigint']>;
  _neq?: Maybe<Scalars['bigint']>;
  _nin?: Maybe<Array<Scalars['bigint']>>;
};

/** columns and relationships of "block_out_options" */
export type Block_Out_Options = {
  __typename?: 'block_out_options';
  backgroundColor?: Maybe<Scalars['String']>;
  created_at: Scalars['timestamptz'];
  defaultTime: Scalars['Int'];
  id: Scalars['uuid'];
  is_active: Scalars['Boolean'];
  name: Scalars['String'];
  paidBlockOut?: Maybe<Scalars['Boolean']>;
  type: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "block_out_options" */
export type Block_Out_Options_Aggregate = {
  __typename?: 'block_out_options_aggregate';
  aggregate?: Maybe<Block_Out_Options_Aggregate_Fields>;
  nodes: Array<Block_Out_Options>;
};

/** aggregate fields of "block_out_options" */
export type Block_Out_Options_Aggregate_Fields = {
  __typename?: 'block_out_options_aggregate_fields';
  avg?: Maybe<Block_Out_Options_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Block_Out_Options_Max_Fields>;
  min?: Maybe<Block_Out_Options_Min_Fields>;
  stddev?: Maybe<Block_Out_Options_Stddev_Fields>;
  stddev_pop?: Maybe<Block_Out_Options_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Block_Out_Options_Stddev_Samp_Fields>;
  sum?: Maybe<Block_Out_Options_Sum_Fields>;
  var_pop?: Maybe<Block_Out_Options_Var_Pop_Fields>;
  var_samp?: Maybe<Block_Out_Options_Var_Samp_Fields>;
  variance?: Maybe<Block_Out_Options_Variance_Fields>;
};


/** aggregate fields of "block_out_options" */
export type Block_Out_Options_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Block_Out_Options_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Block_Out_Options_Avg_Fields = {
  __typename?: 'block_out_options_avg_fields';
  defaultTime?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "block_out_options". All fields are combined with a logical 'AND'. */
export type Block_Out_Options_Bool_Exp = {
  _and?: Maybe<Array<Block_Out_Options_Bool_Exp>>;
  _not?: Maybe<Block_Out_Options_Bool_Exp>;
  _or?: Maybe<Array<Block_Out_Options_Bool_Exp>>;
  backgroundColor?: Maybe<String_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  defaultTime?: Maybe<Int_Comparison_Exp>;
  id?: Maybe<Uuid_Comparison_Exp>;
  is_active?: Maybe<Boolean_Comparison_Exp>;
  name?: Maybe<String_Comparison_Exp>;
  paidBlockOut?: Maybe<Boolean_Comparison_Exp>;
  type?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "block_out_options" */
export enum Block_Out_Options_Constraint {
  /** unique or primary key constraint */
  BlockOutOptionsPkey = 'block_out_options_pkey'
}

/** input type for incrementing numeric columns in table "block_out_options" */
export type Block_Out_Options_Inc_Input = {
  defaultTime?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "block_out_options" */
export type Block_Out_Options_Insert_Input = {
  backgroundColor?: Maybe<Scalars['String']>;
  defaultTime?: Maybe<Scalars['Int']>;
  is_active?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  paidBlockOut?: Maybe<Scalars['Boolean']>;
  type?: Maybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Block_Out_Options_Max_Fields = {
  __typename?: 'block_out_options_max_fields';
  backgroundColor?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  defaultTime?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type Block_Out_Options_Min_Fields = {
  __typename?: 'block_out_options_min_fields';
  backgroundColor?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  defaultTime?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "block_out_options" */
export type Block_Out_Options_Mutation_Response = {
  __typename?: 'block_out_options_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Block_Out_Options>;
};

/** on conflict condition type for table "block_out_options" */
export type Block_Out_Options_On_Conflict = {
  constraint: Block_Out_Options_Constraint;
  update_columns: Array<Block_Out_Options_Update_Column>;
  where?: Maybe<Block_Out_Options_Bool_Exp>;
};

/** Ordering options when selecting data from "block_out_options". */
export type Block_Out_Options_Order_By = {
  backgroundColor?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  defaultTime?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  is_active?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  paidBlockOut?: Maybe<Order_By>;
  type?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: block_out_options */
export type Block_Out_Options_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "block_out_options" */
export enum Block_Out_Options_Select_Column {
  /** column name */
  BackgroundColor = 'backgroundColor',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DefaultTime = 'defaultTime',
  /** column name */
  Id = 'id',
  /** column name */
  IsActive = 'is_active',
  /** column name */
  Name = 'name',
  /** column name */
  PaidBlockOut = 'paidBlockOut',
  /** column name */
  Type = 'type',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "block_out_options" */
export type Block_Out_Options_Set_Input = {
  backgroundColor?: Maybe<Scalars['String']>;
  defaultTime?: Maybe<Scalars['Int']>;
  is_active?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  paidBlockOut?: Maybe<Scalars['Boolean']>;
  type?: Maybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type Block_Out_Options_Stddev_Fields = {
  __typename?: 'block_out_options_stddev_fields';
  defaultTime?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Block_Out_Options_Stddev_Pop_Fields = {
  __typename?: 'block_out_options_stddev_pop_fields';
  defaultTime?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Block_Out_Options_Stddev_Samp_Fields = {
  __typename?: 'block_out_options_stddev_samp_fields';
  defaultTime?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Block_Out_Options_Sum_Fields = {
  __typename?: 'block_out_options_sum_fields';
  defaultTime?: Maybe<Scalars['Int']>;
};

/** update columns of table "block_out_options" */
export enum Block_Out_Options_Update_Column {
  /** column name */
  BackgroundColor = 'backgroundColor',
  /** column name */
  DefaultTime = 'defaultTime',
  /** column name */
  IsActive = 'is_active',
  /** column name */
  Name = 'name',
  /** column name */
  PaidBlockOut = 'paidBlockOut',
  /** column name */
  Type = 'type'
}

/** aggregate var_pop on columns */
export type Block_Out_Options_Var_Pop_Fields = {
  __typename?: 'block_out_options_var_pop_fields';
  defaultTime?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Block_Out_Options_Var_Samp_Fields = {
  __typename?: 'block_out_options_var_samp_fields';
  defaultTime?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Block_Out_Options_Variance_Fields = {
  __typename?: 'block_out_options_variance_fields';
  defaultTime?: Maybe<Scalars['Float']>;
};

export enum Booking_Master_Cancel_Status {
  IsFalse = 'is_false',
  IsTrue = 'is_true'
}

export enum Booking_Master_Payment_Status {
  IsFalse = 'is_false',
  IsTrue = 'is_true'
}

export enum Booking_Statuses_Indicator {
  EmptyEnumValue = 'EMPTY_ENUM_VALUE',
  Icon = 'ICON',
  Line = 'LINE'
}

export enum Bookitpro_General_Integration_Method {
  Cardsave = 'cardsave',
  Sagepay = 'sagepay',
  Stripe = 'stripe'
}

/** columns and relationships of "business_details" */
export type Business_Details = {
  __typename?: 'business_details';
  booking_multiple_attendees_plural: Scalars['String'];
  booking_multiple_attendees_singular: Scalars['String'];
  business_location: Scalars['String'];
  business_type: Scalars['String'];
  businses_name: Scalars['String'];
  client_email: Scalars['String'];
  client_phone: Scalars['String'];
  client_postal: Scalars['String'];
  client_sms: Scalars['String'];
  company_email: Scalars['String'];
  currency: Scalars['String'];
  date_format: Scalars['String'];
  default_language_clients: Scalars['String'];
  default_language_staff: Scalars['String'];
  disable_prescriptions: Scalars['Boolean'];
  employee_plural: Scalars['String'];
  employee_singular: Scalars['String'];
  history_data: Scalars['Boolean'];
  id: Scalars['Int'];
  leads_email: Scalars['String'];
  leads_phone: Scalars['String'];
  leads_postal: Scalars['String'];
  leads_sms: Scalars['String'];
  medical_approvals: Scalars['Boolean'];
  people_attend_appointment_plural: Scalars['String'];
  people_attend_appointment_singular: Scalars['String'];
  perform_surgical: Scalars['Boolean'];
  phone?: Maybe<Scalars['String']>;
  secure_medical_forms: Scalars['Boolean'];
  teacher_plural: Scalars['String'];
  teacher_singular: Scalars['String'];
  time_zone: Scalars['String'];
  treatment_cycles: Scalars['String'];
  vat: Scalars['String'];
  website: Scalars['String'];
  week_start: Scalars['String'];
};

/** Boolean expression to filter rows from the table "business_details". All fields are combined with a logical 'AND'. */
export type Business_Details_Bool_Exp = {
  _and?: Maybe<Array<Business_Details_Bool_Exp>>;
  _not?: Maybe<Business_Details_Bool_Exp>;
  _or?: Maybe<Array<Business_Details_Bool_Exp>>;
  booking_multiple_attendees_plural?: Maybe<String_Comparison_Exp>;
  booking_multiple_attendees_singular?: Maybe<String_Comparison_Exp>;
  business_location?: Maybe<String_Comparison_Exp>;
  business_type?: Maybe<String_Comparison_Exp>;
  businses_name?: Maybe<String_Comparison_Exp>;
  client_email?: Maybe<String_Comparison_Exp>;
  client_phone?: Maybe<String_Comparison_Exp>;
  client_postal?: Maybe<String_Comparison_Exp>;
  client_sms?: Maybe<String_Comparison_Exp>;
  company_email?: Maybe<String_Comparison_Exp>;
  currency?: Maybe<String_Comparison_Exp>;
  date_format?: Maybe<String_Comparison_Exp>;
  default_language_clients?: Maybe<String_Comparison_Exp>;
  default_language_staff?: Maybe<String_Comparison_Exp>;
  disable_prescriptions?: Maybe<Boolean_Comparison_Exp>;
  employee_plural?: Maybe<String_Comparison_Exp>;
  employee_singular?: Maybe<String_Comparison_Exp>;
  history_data?: Maybe<Boolean_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  leads_email?: Maybe<String_Comparison_Exp>;
  leads_phone?: Maybe<String_Comparison_Exp>;
  leads_postal?: Maybe<String_Comparison_Exp>;
  leads_sms?: Maybe<String_Comparison_Exp>;
  medical_approvals?: Maybe<Boolean_Comparison_Exp>;
  people_attend_appointment_plural?: Maybe<String_Comparison_Exp>;
  people_attend_appointment_singular?: Maybe<String_Comparison_Exp>;
  perform_surgical?: Maybe<Boolean_Comparison_Exp>;
  phone?: Maybe<String_Comparison_Exp>;
  secure_medical_forms?: Maybe<Boolean_Comparison_Exp>;
  teacher_plural?: Maybe<String_Comparison_Exp>;
  teacher_singular?: Maybe<String_Comparison_Exp>;
  time_zone?: Maybe<String_Comparison_Exp>;
  treatment_cycles?: Maybe<String_Comparison_Exp>;
  vat?: Maybe<String_Comparison_Exp>;
  website?: Maybe<String_Comparison_Exp>;
  week_start?: Maybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "business_details" */
export enum Business_Details_Constraint {
  /** unique or primary key constraint */
  BusinessDetailsPkey = 'business_details_pkey'
}

/** input type for incrementing numeric columns in table "business_details" */
export type Business_Details_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "business_details" */
export type Business_Details_Insert_Input = {
  booking_multiple_attendees_plural?: Maybe<Scalars['String']>;
  booking_multiple_attendees_singular?: Maybe<Scalars['String']>;
  business_location?: Maybe<Scalars['String']>;
  business_type?: Maybe<Scalars['String']>;
  businses_name?: Maybe<Scalars['String']>;
  client_email?: Maybe<Scalars['String']>;
  client_phone?: Maybe<Scalars['String']>;
  client_postal?: Maybe<Scalars['String']>;
  client_sms?: Maybe<Scalars['String']>;
  company_email?: Maybe<Scalars['String']>;
  currency?: Maybe<Scalars['String']>;
  date_format?: Maybe<Scalars['String']>;
  default_language_clients?: Maybe<Scalars['String']>;
  default_language_staff?: Maybe<Scalars['String']>;
  disable_prescriptions?: Maybe<Scalars['Boolean']>;
  employee_plural?: Maybe<Scalars['String']>;
  employee_singular?: Maybe<Scalars['String']>;
  history_data?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['Int']>;
  leads_email?: Maybe<Scalars['String']>;
  leads_phone?: Maybe<Scalars['String']>;
  leads_postal?: Maybe<Scalars['String']>;
  leads_sms?: Maybe<Scalars['String']>;
  medical_approvals?: Maybe<Scalars['Boolean']>;
  people_attend_appointment_plural?: Maybe<Scalars['String']>;
  people_attend_appointment_singular?: Maybe<Scalars['String']>;
  perform_surgical?: Maybe<Scalars['Boolean']>;
  phone?: Maybe<Scalars['String']>;
  secure_medical_forms?: Maybe<Scalars['Boolean']>;
  teacher_plural?: Maybe<Scalars['String']>;
  teacher_singular?: Maybe<Scalars['String']>;
  time_zone?: Maybe<Scalars['String']>;
  treatment_cycles?: Maybe<Scalars['String']>;
  vat?: Maybe<Scalars['String']>;
  website?: Maybe<Scalars['String']>;
  week_start?: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "business_details" */
export type Business_Details_Mutation_Response = {
  __typename?: 'business_details_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Business_Details>;
};

/** on conflict condition type for table "business_details" */
export type Business_Details_On_Conflict = {
  constraint: Business_Details_Constraint;
  update_columns: Array<Business_Details_Update_Column>;
  where?: Maybe<Business_Details_Bool_Exp>;
};

/** Ordering options when selecting data from "business_details". */
export type Business_Details_Order_By = {
  booking_multiple_attendees_plural?: Maybe<Order_By>;
  booking_multiple_attendees_singular?: Maybe<Order_By>;
  business_location?: Maybe<Order_By>;
  business_type?: Maybe<Order_By>;
  businses_name?: Maybe<Order_By>;
  client_email?: Maybe<Order_By>;
  client_phone?: Maybe<Order_By>;
  client_postal?: Maybe<Order_By>;
  client_sms?: Maybe<Order_By>;
  company_email?: Maybe<Order_By>;
  currency?: Maybe<Order_By>;
  date_format?: Maybe<Order_By>;
  default_language_clients?: Maybe<Order_By>;
  default_language_staff?: Maybe<Order_By>;
  disable_prescriptions?: Maybe<Order_By>;
  employee_plural?: Maybe<Order_By>;
  employee_singular?: Maybe<Order_By>;
  history_data?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  leads_email?: Maybe<Order_By>;
  leads_phone?: Maybe<Order_By>;
  leads_postal?: Maybe<Order_By>;
  leads_sms?: Maybe<Order_By>;
  medical_approvals?: Maybe<Order_By>;
  people_attend_appointment_plural?: Maybe<Order_By>;
  people_attend_appointment_singular?: Maybe<Order_By>;
  perform_surgical?: Maybe<Order_By>;
  phone?: Maybe<Order_By>;
  secure_medical_forms?: Maybe<Order_By>;
  teacher_plural?: Maybe<Order_By>;
  teacher_singular?: Maybe<Order_By>;
  time_zone?: Maybe<Order_By>;
  treatment_cycles?: Maybe<Order_By>;
  vat?: Maybe<Order_By>;
  website?: Maybe<Order_By>;
  week_start?: Maybe<Order_By>;
};

/** primary key columns input for table: business_details */
export type Business_Details_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "business_details" */
export enum Business_Details_Select_Column {
  /** column name */
  BookingMultipleAttendeesPlural = 'booking_multiple_attendees_plural',
  /** column name */
  BookingMultipleAttendeesSingular = 'booking_multiple_attendees_singular',
  /** column name */
  BusinessLocation = 'business_location',
  /** column name */
  BusinessType = 'business_type',
  /** column name */
  BusinsesName = 'businses_name',
  /** column name */
  ClientEmail = 'client_email',
  /** column name */
  ClientPhone = 'client_phone',
  /** column name */
  ClientPostal = 'client_postal',
  /** column name */
  ClientSms = 'client_sms',
  /** column name */
  CompanyEmail = 'company_email',
  /** column name */
  Currency = 'currency',
  /** column name */
  DateFormat = 'date_format',
  /** column name */
  DefaultLanguageClients = 'default_language_clients',
  /** column name */
  DefaultLanguageStaff = 'default_language_staff',
  /** column name */
  DisablePrescriptions = 'disable_prescriptions',
  /** column name */
  EmployeePlural = 'employee_plural',
  /** column name */
  EmployeeSingular = 'employee_singular',
  /** column name */
  HistoryData = 'history_data',
  /** column name */
  Id = 'id',
  /** column name */
  LeadsEmail = 'leads_email',
  /** column name */
  LeadsPhone = 'leads_phone',
  /** column name */
  LeadsPostal = 'leads_postal',
  /** column name */
  LeadsSms = 'leads_sms',
  /** column name */
  MedicalApprovals = 'medical_approvals',
  /** column name */
  PeopleAttendAppointmentPlural = 'people_attend_appointment_plural',
  /** column name */
  PeopleAttendAppointmentSingular = 'people_attend_appointment_singular',
  /** column name */
  PerformSurgical = 'perform_surgical',
  /** column name */
  Phone = 'phone',
  /** column name */
  SecureMedicalForms = 'secure_medical_forms',
  /** column name */
  TeacherPlural = 'teacher_plural',
  /** column name */
  TeacherSingular = 'teacher_singular',
  /** column name */
  TimeZone = 'time_zone',
  /** column name */
  TreatmentCycles = 'treatment_cycles',
  /** column name */
  Vat = 'vat',
  /** column name */
  Website = 'website',
  /** column name */
  WeekStart = 'week_start'
}

/** input type for updating data in table "business_details" */
export type Business_Details_Set_Input = {
  booking_multiple_attendees_plural?: Maybe<Scalars['String']>;
  booking_multiple_attendees_singular?: Maybe<Scalars['String']>;
  business_location?: Maybe<Scalars['String']>;
  business_type?: Maybe<Scalars['String']>;
  businses_name?: Maybe<Scalars['String']>;
  client_email?: Maybe<Scalars['String']>;
  client_phone?: Maybe<Scalars['String']>;
  client_postal?: Maybe<Scalars['String']>;
  client_sms?: Maybe<Scalars['String']>;
  company_email?: Maybe<Scalars['String']>;
  currency?: Maybe<Scalars['String']>;
  date_format?: Maybe<Scalars['String']>;
  default_language_clients?: Maybe<Scalars['String']>;
  default_language_staff?: Maybe<Scalars['String']>;
  disable_prescriptions?: Maybe<Scalars['Boolean']>;
  employee_plural?: Maybe<Scalars['String']>;
  employee_singular?: Maybe<Scalars['String']>;
  history_data?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['Int']>;
  leads_email?: Maybe<Scalars['String']>;
  leads_phone?: Maybe<Scalars['String']>;
  leads_postal?: Maybe<Scalars['String']>;
  leads_sms?: Maybe<Scalars['String']>;
  medical_approvals?: Maybe<Scalars['Boolean']>;
  people_attend_appointment_plural?: Maybe<Scalars['String']>;
  people_attend_appointment_singular?: Maybe<Scalars['String']>;
  perform_surgical?: Maybe<Scalars['Boolean']>;
  phone?: Maybe<Scalars['String']>;
  secure_medical_forms?: Maybe<Scalars['Boolean']>;
  teacher_plural?: Maybe<Scalars['String']>;
  teacher_singular?: Maybe<Scalars['String']>;
  time_zone?: Maybe<Scalars['String']>;
  treatment_cycles?: Maybe<Scalars['String']>;
  vat?: Maybe<Scalars['String']>;
  website?: Maybe<Scalars['String']>;
  week_start?: Maybe<Scalars['String']>;
};

/** update columns of table "business_details" */
export enum Business_Details_Update_Column {
  /** column name */
  BookingMultipleAttendeesPlural = 'booking_multiple_attendees_plural',
  /** column name */
  BookingMultipleAttendeesSingular = 'booking_multiple_attendees_singular',
  /** column name */
  BusinessLocation = 'business_location',
  /** column name */
  BusinessType = 'business_type',
  /** column name */
  BusinsesName = 'businses_name',
  /** column name */
  ClientEmail = 'client_email',
  /** column name */
  ClientPhone = 'client_phone',
  /** column name */
  ClientPostal = 'client_postal',
  /** column name */
  ClientSms = 'client_sms',
  /** column name */
  CompanyEmail = 'company_email',
  /** column name */
  Currency = 'currency',
  /** column name */
  DateFormat = 'date_format',
  /** column name */
  DefaultLanguageClients = 'default_language_clients',
  /** column name */
  DefaultLanguageStaff = 'default_language_staff',
  /** column name */
  DisablePrescriptions = 'disable_prescriptions',
  /** column name */
  EmployeePlural = 'employee_plural',
  /** column name */
  EmployeeSingular = 'employee_singular',
  /** column name */
  HistoryData = 'history_data',
  /** column name */
  Id = 'id',
  /** column name */
  LeadsEmail = 'leads_email',
  /** column name */
  LeadsPhone = 'leads_phone',
  /** column name */
  LeadsPostal = 'leads_postal',
  /** column name */
  LeadsSms = 'leads_sms',
  /** column name */
  MedicalApprovals = 'medical_approvals',
  /** column name */
  PeopleAttendAppointmentPlural = 'people_attend_appointment_plural',
  /** column name */
  PeopleAttendAppointmentSingular = 'people_attend_appointment_singular',
  /** column name */
  PerformSurgical = 'perform_surgical',
  /** column name */
  Phone = 'phone',
  /** column name */
  SecureMedicalForms = 'secure_medical_forms',
  /** column name */
  TeacherPlural = 'teacher_plural',
  /** column name */
  TeacherSingular = 'teacher_singular',
  /** column name */
  TimeZone = 'time_zone',
  /** column name */
  TreatmentCycles = 'treatment_cycles',
  /** column name */
  Vat = 'vat',
  /** column name */
  Website = 'website',
  /** column name */
  WeekStart = 'week_start'
}

/** columns and relationships of "calendar_settings" */
export type Calendar_Settings = {
  __typename?: 'calendar_settings';
  advanced_calendar_lockout: Scalars['Boolean'];
  allow_appointments_to_overlap: Scalars['Boolean'];
  allow_service_without_contract_price: Scalars['Boolean'];
  appointment_reminder: Scalars['Boolean'];
  auto_complete: Scalars['Boolean'];
  auto_lock: Scalars['Int'];
  created_at: Scalars['timestamptz'];
  disable_booking_from_package: Scalars['Boolean'];
  disable_filtering_by_service: Scalars['Boolean'];
  email_confirmation: Scalars['Boolean'];
  enable_initials: Scalars['Boolean'];
  end_time: Scalars['time'];
  font_size?: Maybe<Scalars['String']>;
  group_user_columns_by_location: Scalars['Boolean'];
  hide_appointment_times: Scalars['Boolean'];
  hide_client_name_on_appointment_arrival_notification: Scalars['Boolean'];
  hide_show_accounts: Scalars['Boolean'];
  hide_surnames: Scalars['Boolean'];
  id: Scalars['uuid'];
  ordering_the_employees_by_location: Scalars['Boolean'];
  raise_invoice_when_appointment_is_completed: Scalars['Boolean'];
  request_feedback: Scalars['Boolean'];
  revert_to_original_room_view: Scalars['Boolean'];
  sms_confirmation: Scalars['Boolean'];
  start_time: Scalars['time'];
  time_slot_size: Scalars['Int'];
  updated_at: Scalars['timestamptz'];
};

/** Boolean expression to filter rows from the table "calendar_settings". All fields are combined with a logical 'AND'. */
export type Calendar_Settings_Bool_Exp = {
  _and?: Maybe<Array<Calendar_Settings_Bool_Exp>>;
  _not?: Maybe<Calendar_Settings_Bool_Exp>;
  _or?: Maybe<Array<Calendar_Settings_Bool_Exp>>;
  advanced_calendar_lockout?: Maybe<Boolean_Comparison_Exp>;
  allow_appointments_to_overlap?: Maybe<Boolean_Comparison_Exp>;
  allow_service_without_contract_price?: Maybe<Boolean_Comparison_Exp>;
  appointment_reminder?: Maybe<Boolean_Comparison_Exp>;
  auto_complete?: Maybe<Boolean_Comparison_Exp>;
  auto_lock?: Maybe<Int_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  disable_booking_from_package?: Maybe<Boolean_Comparison_Exp>;
  disable_filtering_by_service?: Maybe<Boolean_Comparison_Exp>;
  email_confirmation?: Maybe<Boolean_Comparison_Exp>;
  enable_initials?: Maybe<Boolean_Comparison_Exp>;
  end_time?: Maybe<Time_Comparison_Exp>;
  font_size?: Maybe<String_Comparison_Exp>;
  group_user_columns_by_location?: Maybe<Boolean_Comparison_Exp>;
  hide_appointment_times?: Maybe<Boolean_Comparison_Exp>;
  hide_client_name_on_appointment_arrival_notification?: Maybe<Boolean_Comparison_Exp>;
  hide_show_accounts?: Maybe<Boolean_Comparison_Exp>;
  hide_surnames?: Maybe<Boolean_Comparison_Exp>;
  id?: Maybe<Uuid_Comparison_Exp>;
  ordering_the_employees_by_location?: Maybe<Boolean_Comparison_Exp>;
  raise_invoice_when_appointment_is_completed?: Maybe<Boolean_Comparison_Exp>;
  request_feedback?: Maybe<Boolean_Comparison_Exp>;
  revert_to_original_room_view?: Maybe<Boolean_Comparison_Exp>;
  sms_confirmation?: Maybe<Boolean_Comparison_Exp>;
  start_time?: Maybe<Time_Comparison_Exp>;
  time_slot_size?: Maybe<Int_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "calendar_settings" */
export enum Calendar_Settings_Constraint {
  /** unique or primary key constraint */
  CalendarSettingsPkey = 'calendar_settings_pkey'
}

/** input type for incrementing numeric columns in table "calendar_settings" */
export type Calendar_Settings_Inc_Input = {
  auto_lock?: Maybe<Scalars['Int']>;
  time_slot_size?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "calendar_settings" */
export type Calendar_Settings_Insert_Input = {
  advanced_calendar_lockout?: Maybe<Scalars['Boolean']>;
  allow_appointments_to_overlap?: Maybe<Scalars['Boolean']>;
  allow_service_without_contract_price?: Maybe<Scalars['Boolean']>;
  appointment_reminder?: Maybe<Scalars['Boolean']>;
  auto_complete?: Maybe<Scalars['Boolean']>;
  auto_lock?: Maybe<Scalars['Int']>;
  disable_booking_from_package?: Maybe<Scalars['Boolean']>;
  disable_filtering_by_service?: Maybe<Scalars['Boolean']>;
  email_confirmation?: Maybe<Scalars['Boolean']>;
  enable_initials?: Maybe<Scalars['Boolean']>;
  end_time?: Maybe<Scalars['time']>;
  font_size?: Maybe<Scalars['String']>;
  group_user_columns_by_location?: Maybe<Scalars['Boolean']>;
  hide_appointment_times?: Maybe<Scalars['Boolean']>;
  hide_client_name_on_appointment_arrival_notification?: Maybe<Scalars['Boolean']>;
  hide_show_accounts?: Maybe<Scalars['Boolean']>;
  hide_surnames?: Maybe<Scalars['Boolean']>;
  ordering_the_employees_by_location?: Maybe<Scalars['Boolean']>;
  raise_invoice_when_appointment_is_completed?: Maybe<Scalars['Boolean']>;
  request_feedback?: Maybe<Scalars['Boolean']>;
  revert_to_original_room_view?: Maybe<Scalars['Boolean']>;
  sms_confirmation?: Maybe<Scalars['Boolean']>;
  start_time?: Maybe<Scalars['time']>;
  time_slot_size?: Maybe<Scalars['Int']>;
};

/** response of any mutation on the table "calendar_settings" */
export type Calendar_Settings_Mutation_Response = {
  __typename?: 'calendar_settings_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Calendar_Settings>;
};

/** on conflict condition type for table "calendar_settings" */
export type Calendar_Settings_On_Conflict = {
  constraint: Calendar_Settings_Constraint;
  update_columns: Array<Calendar_Settings_Update_Column>;
  where?: Maybe<Calendar_Settings_Bool_Exp>;
};

/** Ordering options when selecting data from "calendar_settings". */
export type Calendar_Settings_Order_By = {
  advanced_calendar_lockout?: Maybe<Order_By>;
  allow_appointments_to_overlap?: Maybe<Order_By>;
  allow_service_without_contract_price?: Maybe<Order_By>;
  appointment_reminder?: Maybe<Order_By>;
  auto_complete?: Maybe<Order_By>;
  auto_lock?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  disable_booking_from_package?: Maybe<Order_By>;
  disable_filtering_by_service?: Maybe<Order_By>;
  email_confirmation?: Maybe<Order_By>;
  enable_initials?: Maybe<Order_By>;
  end_time?: Maybe<Order_By>;
  font_size?: Maybe<Order_By>;
  group_user_columns_by_location?: Maybe<Order_By>;
  hide_appointment_times?: Maybe<Order_By>;
  hide_client_name_on_appointment_arrival_notification?: Maybe<Order_By>;
  hide_show_accounts?: Maybe<Order_By>;
  hide_surnames?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  ordering_the_employees_by_location?: Maybe<Order_By>;
  raise_invoice_when_appointment_is_completed?: Maybe<Order_By>;
  request_feedback?: Maybe<Order_By>;
  revert_to_original_room_view?: Maybe<Order_By>;
  sms_confirmation?: Maybe<Order_By>;
  start_time?: Maybe<Order_By>;
  time_slot_size?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: calendar_settings */
export type Calendar_Settings_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "calendar_settings" */
export enum Calendar_Settings_Select_Column {
  /** column name */
  AdvancedCalendarLockout = 'advanced_calendar_lockout',
  /** column name */
  AllowAppointmentsToOverlap = 'allow_appointments_to_overlap',
  /** column name */
  AllowServiceWithoutContractPrice = 'allow_service_without_contract_price',
  /** column name */
  AppointmentReminder = 'appointment_reminder',
  /** column name */
  AutoComplete = 'auto_complete',
  /** column name */
  AutoLock = 'auto_lock',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DisableBookingFromPackage = 'disable_booking_from_package',
  /** column name */
  DisableFilteringByService = 'disable_filtering_by_service',
  /** column name */
  EmailConfirmation = 'email_confirmation',
  /** column name */
  EnableInitials = 'enable_initials',
  /** column name */
  EndTime = 'end_time',
  /** column name */
  FontSize = 'font_size',
  /** column name */
  GroupUserColumnsByLocation = 'group_user_columns_by_location',
  /** column name */
  HideAppointmentTimes = 'hide_appointment_times',
  /** column name */
  HideClientNameOnAppointmentArrivalNotification = 'hide_client_name_on_appointment_arrival_notification',
  /** column name */
  HideShowAccounts = 'hide_show_accounts',
  /** column name */
  HideSurnames = 'hide_surnames',
  /** column name */
  Id = 'id',
  /** column name */
  OrderingTheEmployeesByLocation = 'ordering_the_employees_by_location',
  /** column name */
  RaiseInvoiceWhenAppointmentIsCompleted = 'raise_invoice_when_appointment_is_completed',
  /** column name */
  RequestFeedback = 'request_feedback',
  /** column name */
  RevertToOriginalRoomView = 'revert_to_original_room_view',
  /** column name */
  SmsConfirmation = 'sms_confirmation',
  /** column name */
  StartTime = 'start_time',
  /** column name */
  TimeSlotSize = 'time_slot_size',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "calendar_settings" */
export type Calendar_Settings_Set_Input = {
  advanced_calendar_lockout?: Maybe<Scalars['Boolean']>;
  allow_appointments_to_overlap?: Maybe<Scalars['Boolean']>;
  allow_service_without_contract_price?: Maybe<Scalars['Boolean']>;
  appointment_reminder?: Maybe<Scalars['Boolean']>;
  auto_complete?: Maybe<Scalars['Boolean']>;
  auto_lock?: Maybe<Scalars['Int']>;
  disable_booking_from_package?: Maybe<Scalars['Boolean']>;
  disable_filtering_by_service?: Maybe<Scalars['Boolean']>;
  email_confirmation?: Maybe<Scalars['Boolean']>;
  enable_initials?: Maybe<Scalars['Boolean']>;
  end_time?: Maybe<Scalars['time']>;
  font_size?: Maybe<Scalars['String']>;
  group_user_columns_by_location?: Maybe<Scalars['Boolean']>;
  hide_appointment_times?: Maybe<Scalars['Boolean']>;
  hide_client_name_on_appointment_arrival_notification?: Maybe<Scalars['Boolean']>;
  hide_show_accounts?: Maybe<Scalars['Boolean']>;
  hide_surnames?: Maybe<Scalars['Boolean']>;
  ordering_the_employees_by_location?: Maybe<Scalars['Boolean']>;
  raise_invoice_when_appointment_is_completed?: Maybe<Scalars['Boolean']>;
  request_feedback?: Maybe<Scalars['Boolean']>;
  revert_to_original_room_view?: Maybe<Scalars['Boolean']>;
  sms_confirmation?: Maybe<Scalars['Boolean']>;
  start_time?: Maybe<Scalars['time']>;
  time_slot_size?: Maybe<Scalars['Int']>;
};

/** update columns of table "calendar_settings" */
export enum Calendar_Settings_Update_Column {
  /** column name */
  AdvancedCalendarLockout = 'advanced_calendar_lockout',
  /** column name */
  AllowAppointmentsToOverlap = 'allow_appointments_to_overlap',
  /** column name */
  AllowServiceWithoutContractPrice = 'allow_service_without_contract_price',
  /** column name */
  AppointmentReminder = 'appointment_reminder',
  /** column name */
  AutoComplete = 'auto_complete',
  /** column name */
  AutoLock = 'auto_lock',
  /** column name */
  DisableBookingFromPackage = 'disable_booking_from_package',
  /** column name */
  DisableFilteringByService = 'disable_filtering_by_service',
  /** column name */
  EmailConfirmation = 'email_confirmation',
  /** column name */
  EnableInitials = 'enable_initials',
  /** column name */
  EndTime = 'end_time',
  /** column name */
  FontSize = 'font_size',
  /** column name */
  GroupUserColumnsByLocation = 'group_user_columns_by_location',
  /** column name */
  HideAppointmentTimes = 'hide_appointment_times',
  /** column name */
  HideClientNameOnAppointmentArrivalNotification = 'hide_client_name_on_appointment_arrival_notification',
  /** column name */
  HideShowAccounts = 'hide_show_accounts',
  /** column name */
  HideSurnames = 'hide_surnames',
  /** column name */
  OrderingTheEmployeesByLocation = 'ordering_the_employees_by_location',
  /** column name */
  RaiseInvoiceWhenAppointmentIsCompleted = 'raise_invoice_when_appointment_is_completed',
  /** column name */
  RequestFeedback = 'request_feedback',
  /** column name */
  RevertToOriginalRoomView = 'revert_to_original_room_view',
  /** column name */
  SmsConfirmation = 'sms_confirmation',
  /** column name */
  StartTime = 'start_time',
  /** column name */
  TimeSlotSize = 'time_slot_size'
}

/** columns and relationships of "cancellation_reasons" */
export type Cancellation_Reasons = {
  __typename?: 'cancellation_reasons';
  cancellation_policy: Scalars['String'];
  created_at: Scalars['timestamptz'];
  id: Scalars['uuid'];
  is_active: Scalars['Boolean'];
  name: Scalars['String'];
  order: Scalars['Int'];
  type: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "cancellation_reasons" */
export type Cancellation_Reasons_Aggregate = {
  __typename?: 'cancellation_reasons_aggregate';
  aggregate?: Maybe<Cancellation_Reasons_Aggregate_Fields>;
  nodes: Array<Cancellation_Reasons>;
};

/** aggregate fields of "cancellation_reasons" */
export type Cancellation_Reasons_Aggregate_Fields = {
  __typename?: 'cancellation_reasons_aggregate_fields';
  avg?: Maybe<Cancellation_Reasons_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Cancellation_Reasons_Max_Fields>;
  min?: Maybe<Cancellation_Reasons_Min_Fields>;
  stddev?: Maybe<Cancellation_Reasons_Stddev_Fields>;
  stddev_pop?: Maybe<Cancellation_Reasons_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Cancellation_Reasons_Stddev_Samp_Fields>;
  sum?: Maybe<Cancellation_Reasons_Sum_Fields>;
  var_pop?: Maybe<Cancellation_Reasons_Var_Pop_Fields>;
  var_samp?: Maybe<Cancellation_Reasons_Var_Samp_Fields>;
  variance?: Maybe<Cancellation_Reasons_Variance_Fields>;
};


/** aggregate fields of "cancellation_reasons" */
export type Cancellation_Reasons_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Cancellation_Reasons_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Cancellation_Reasons_Avg_Fields = {
  __typename?: 'cancellation_reasons_avg_fields';
  order?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "cancellation_reasons". All fields are combined with a logical 'AND'. */
export type Cancellation_Reasons_Bool_Exp = {
  _and?: Maybe<Array<Cancellation_Reasons_Bool_Exp>>;
  _not?: Maybe<Cancellation_Reasons_Bool_Exp>;
  _or?: Maybe<Array<Cancellation_Reasons_Bool_Exp>>;
  cancellation_policy?: Maybe<String_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Uuid_Comparison_Exp>;
  is_active?: Maybe<Boolean_Comparison_Exp>;
  name?: Maybe<String_Comparison_Exp>;
  order?: Maybe<Int_Comparison_Exp>;
  type?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "cancellation_reasons" */
export enum Cancellation_Reasons_Constraint {
  /** unique or primary key constraint */
  CancellationReasonsPkey = 'cancellation_reasons_pkey'
}

/** input type for incrementing numeric columns in table "cancellation_reasons" */
export type Cancellation_Reasons_Inc_Input = {
  order?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "cancellation_reasons" */
export type Cancellation_Reasons_Insert_Input = {
  cancellation_policy?: Maybe<Scalars['String']>;
  is_active?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
  type?: Maybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Cancellation_Reasons_Max_Fields = {
  __typename?: 'cancellation_reasons_max_fields';
  cancellation_policy?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
  type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type Cancellation_Reasons_Min_Fields = {
  __typename?: 'cancellation_reasons_min_fields';
  cancellation_policy?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
  type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "cancellation_reasons" */
export type Cancellation_Reasons_Mutation_Response = {
  __typename?: 'cancellation_reasons_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Cancellation_Reasons>;
};

/** on conflict condition type for table "cancellation_reasons" */
export type Cancellation_Reasons_On_Conflict = {
  constraint: Cancellation_Reasons_Constraint;
  update_columns: Array<Cancellation_Reasons_Update_Column>;
  where?: Maybe<Cancellation_Reasons_Bool_Exp>;
};

/** Ordering options when selecting data from "cancellation_reasons". */
export type Cancellation_Reasons_Order_By = {
  cancellation_policy?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  is_active?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  order?: Maybe<Order_By>;
  type?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: cancellation_reasons */
export type Cancellation_Reasons_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "cancellation_reasons" */
export enum Cancellation_Reasons_Select_Column {
  /** column name */
  CancellationPolicy = 'cancellation_policy',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  IsActive = 'is_active',
  /** column name */
  Name = 'name',
  /** column name */
  Order = 'order',
  /** column name */
  Type = 'type',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "cancellation_reasons" */
export type Cancellation_Reasons_Set_Input = {
  cancellation_policy?: Maybe<Scalars['String']>;
  is_active?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
  type?: Maybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type Cancellation_Reasons_Stddev_Fields = {
  __typename?: 'cancellation_reasons_stddev_fields';
  order?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Cancellation_Reasons_Stddev_Pop_Fields = {
  __typename?: 'cancellation_reasons_stddev_pop_fields';
  order?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Cancellation_Reasons_Stddev_Samp_Fields = {
  __typename?: 'cancellation_reasons_stddev_samp_fields';
  order?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Cancellation_Reasons_Sum_Fields = {
  __typename?: 'cancellation_reasons_sum_fields';
  order?: Maybe<Scalars['Int']>;
};

/** update columns of table "cancellation_reasons" */
export enum Cancellation_Reasons_Update_Column {
  /** column name */
  CancellationPolicy = 'cancellation_policy',
  /** column name */
  IsActive = 'is_active',
  /** column name */
  Name = 'name',
  /** column name */
  Order = 'order',
  /** column name */
  Type = 'type'
}

/** aggregate var_pop on columns */
export type Cancellation_Reasons_Var_Pop_Fields = {
  __typename?: 'cancellation_reasons_var_pop_fields';
  order?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Cancellation_Reasons_Var_Samp_Fields = {
  __typename?: 'cancellation_reasons_var_samp_fields';
  order?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Cancellation_Reasons_Variance_Fields = {
  __typename?: 'cancellation_reasons_variance_fields';
  order?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "candidate_list" */
export type Candidate_List = {
  __typename?: 'candidate_list';
  created_at: Scalars['timestamptz'];
  first_name: Scalars['String'];
  id: Scalars['Int'];
  /** An array relationship */
  job_candidates: Array<Job_Candidates>;
  last_name: Scalars['String'];
  phone: Scalars['String'];
  rating: Scalars['Int'];
  updated_at: Scalars['timestamptz'];
};


/** columns and relationships of "candidate_list" */
export type Candidate_ListJob_CandidatesArgs = {
  distinct_on?: Maybe<Array<Job_Candidates_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Job_Candidates_Order_By>>;
  where?: Maybe<Job_Candidates_Bool_Exp>;
};

/** Boolean expression to filter rows from the table "candidate_list". All fields are combined with a logical 'AND'. */
export type Candidate_List_Bool_Exp = {
  _and?: Maybe<Array<Candidate_List_Bool_Exp>>;
  _not?: Maybe<Candidate_List_Bool_Exp>;
  _or?: Maybe<Array<Candidate_List_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  first_name?: Maybe<String_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  job_candidates?: Maybe<Job_Candidates_Bool_Exp>;
  last_name?: Maybe<String_Comparison_Exp>;
  phone?: Maybe<String_Comparison_Exp>;
  rating?: Maybe<Int_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "candidate_list" */
export enum Candidate_List_Constraint {
  /** unique or primary key constraint */
  CandidateListPkey = 'candidate_list_pkey'
}

/** input type for incrementing numeric columns in table "candidate_list" */
export type Candidate_List_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
  rating?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "candidate_list" */
export type Candidate_List_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  first_name?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  job_candidates?: Maybe<Job_Candidates_Arr_Rel_Insert_Input>;
  last_name?: Maybe<Scalars['String']>;
  phone?: Maybe<Scalars['String']>;
  rating?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "candidate_list" */
export type Candidate_List_Mutation_Response = {
  __typename?: 'candidate_list_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Candidate_List>;
};

/** input type for inserting object relation for remote table "candidate_list" */
export type Candidate_List_Obj_Rel_Insert_Input = {
  data: Candidate_List_Insert_Input;
  /** on conflict condition */
  on_conflict?: Maybe<Candidate_List_On_Conflict>;
};

/** on conflict condition type for table "candidate_list" */
export type Candidate_List_On_Conflict = {
  constraint: Candidate_List_Constraint;
  update_columns: Array<Candidate_List_Update_Column>;
  where?: Maybe<Candidate_List_Bool_Exp>;
};

/** Ordering options when selecting data from "candidate_list". */
export type Candidate_List_Order_By = {
  created_at?: Maybe<Order_By>;
  first_name?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  job_candidates_aggregate?: Maybe<Job_Candidates_Aggregate_Order_By>;
  last_name?: Maybe<Order_By>;
  phone?: Maybe<Order_By>;
  rating?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: candidate_list */
export type Candidate_List_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "candidate_list" */
export enum Candidate_List_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  FirstName = 'first_name',
  /** column name */
  Id = 'id',
  /** column name */
  LastName = 'last_name',
  /** column name */
  Phone = 'phone',
  /** column name */
  Rating = 'rating',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "candidate_list" */
export type Candidate_List_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  first_name?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  last_name?: Maybe<Scalars['String']>;
  phone?: Maybe<Scalars['String']>;
  rating?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** update columns of table "candidate_list" */
export enum Candidate_List_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  FirstName = 'first_name',
  /** column name */
  Id = 'id',
  /** column name */
  LastName = 'last_name',
  /** column name */
  Phone = 'phone',
  /** column name */
  Rating = 'rating',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** columns and relationships of "category" */
export type Category = {
  __typename?: 'category';
  created_at: Scalars['timestamptz'];
  groupName?: Maybe<Scalars['String']>;
  id: Scalars['uuid'];
  is_active: Scalars['Boolean'];
  name: Scalars['String'];
  order: Scalars['Int'];
  productsAssigned: Scalars['Int'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "category" */
export type Category_Aggregate = {
  __typename?: 'category_aggregate';
  aggregate?: Maybe<Category_Aggregate_Fields>;
  nodes: Array<Category>;
};

/** aggregate fields of "category" */
export type Category_Aggregate_Fields = {
  __typename?: 'category_aggregate_fields';
  avg?: Maybe<Category_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Category_Max_Fields>;
  min?: Maybe<Category_Min_Fields>;
  stddev?: Maybe<Category_Stddev_Fields>;
  stddev_pop?: Maybe<Category_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Category_Stddev_Samp_Fields>;
  sum?: Maybe<Category_Sum_Fields>;
  var_pop?: Maybe<Category_Var_Pop_Fields>;
  var_samp?: Maybe<Category_Var_Samp_Fields>;
  variance?: Maybe<Category_Variance_Fields>;
};


/** aggregate fields of "category" */
export type Category_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Category_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Category_Avg_Fields = {
  __typename?: 'category_avg_fields';
  order?: Maybe<Scalars['Float']>;
  productsAssigned?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "category". All fields are combined with a logical 'AND'. */
export type Category_Bool_Exp = {
  _and?: Maybe<Array<Category_Bool_Exp>>;
  _not?: Maybe<Category_Bool_Exp>;
  _or?: Maybe<Array<Category_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  groupName?: Maybe<String_Comparison_Exp>;
  id?: Maybe<Uuid_Comparison_Exp>;
  is_active?: Maybe<Boolean_Comparison_Exp>;
  name?: Maybe<String_Comparison_Exp>;
  order?: Maybe<Int_Comparison_Exp>;
  productsAssigned?: Maybe<Int_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "category" */
export enum Category_Constraint {
  /** unique or primary key constraint */
  CategoryPkey = 'category_pkey'
}

/** input type for incrementing numeric columns in table "category" */
export type Category_Inc_Input = {
  order?: Maybe<Scalars['Int']>;
  productsAssigned?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "category" */
export type Category_Insert_Input = {
  groupName?: Maybe<Scalars['String']>;
  is_active?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
  productsAssigned?: Maybe<Scalars['Int']>;
};

/** aggregate max on columns */
export type Category_Max_Fields = {
  __typename?: 'category_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  groupName?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
  productsAssigned?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type Category_Min_Fields = {
  __typename?: 'category_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  groupName?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
  productsAssigned?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "category" */
export type Category_Mutation_Response = {
  __typename?: 'category_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Category>;
};

/** on conflict condition type for table "category" */
export type Category_On_Conflict = {
  constraint: Category_Constraint;
  update_columns: Array<Category_Update_Column>;
  where?: Maybe<Category_Bool_Exp>;
};

/** Ordering options when selecting data from "category". */
export type Category_Order_By = {
  created_at?: Maybe<Order_By>;
  groupName?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  is_active?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  order?: Maybe<Order_By>;
  productsAssigned?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: category */
export type Category_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "category" */
export enum Category_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  GroupName = 'groupName',
  /** column name */
  Id = 'id',
  /** column name */
  IsActive = 'is_active',
  /** column name */
  Name = 'name',
  /** column name */
  Order = 'order',
  /** column name */
  ProductsAssigned = 'productsAssigned',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "category" */
export type Category_Set_Input = {
  groupName?: Maybe<Scalars['String']>;
  is_active?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
  productsAssigned?: Maybe<Scalars['Int']>;
};

/** aggregate stddev on columns */
export type Category_Stddev_Fields = {
  __typename?: 'category_stddev_fields';
  order?: Maybe<Scalars['Float']>;
  productsAssigned?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Category_Stddev_Pop_Fields = {
  __typename?: 'category_stddev_pop_fields';
  order?: Maybe<Scalars['Float']>;
  productsAssigned?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Category_Stddev_Samp_Fields = {
  __typename?: 'category_stddev_samp_fields';
  order?: Maybe<Scalars['Float']>;
  productsAssigned?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Category_Sum_Fields = {
  __typename?: 'category_sum_fields';
  order?: Maybe<Scalars['Int']>;
  productsAssigned?: Maybe<Scalars['Int']>;
};

/** update columns of table "category" */
export enum Category_Update_Column {
  /** column name */
  GroupName = 'groupName',
  /** column name */
  IsActive = 'is_active',
  /** column name */
  Name = 'name',
  /** column name */
  Order = 'order',
  /** column name */
  ProductsAssigned = 'productsAssigned'
}

/** aggregate var_pop on columns */
export type Category_Var_Pop_Fields = {
  __typename?: 'category_var_pop_fields';
  order?: Maybe<Scalars['Float']>;
  productsAssigned?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Category_Var_Samp_Fields = {
  __typename?: 'category_var_samp_fields';
  order?: Maybe<Scalars['Float']>;
  productsAssigned?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Category_Variance_Fields = {
  __typename?: 'category_variance_fields';
  order?: Maybe<Scalars['Float']>;
  productsAssigned?: Maybe<Scalars['Float']>;
};

export enum Class_Master_Class_Pay {
  IsFalse = 'is_false',
  IsTrue = 'is_true'
}

/** columns and relationships of "clients_data" */
export type Clients_Data = {
  __typename?: 'clients_data';
  category?: Maybe<Scalars['String']>;
  created_date: Scalars['timestamptz'];
  fieldFor?: Maybe<Scalars['String']>;
  format?: Maybe<Scalars['String']>;
  id: Scalars['uuid'];
  is_active: Scalars['Boolean'];
  is_liked: Scalars['Boolean'];
  is_locked: Scalars['Boolean'];
  is_mendatory: Scalars['Boolean'];
  is_private: Scalars['Boolean'];
  label?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
};

/** aggregated selection of "clients_data" */
export type Clients_Data_Aggregate = {
  __typename?: 'clients_data_aggregate';
  aggregate?: Maybe<Clients_Data_Aggregate_Fields>;
  nodes: Array<Clients_Data>;
};

/** aggregate fields of "clients_data" */
export type Clients_Data_Aggregate_Fields = {
  __typename?: 'clients_data_aggregate_fields';
  count: Scalars['Int'];
  max?: Maybe<Clients_Data_Max_Fields>;
  min?: Maybe<Clients_Data_Min_Fields>;
};


/** aggregate fields of "clients_data" */
export type Clients_Data_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Clients_Data_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** Boolean expression to filter rows from the table "clients_data". All fields are combined with a logical 'AND'. */
export type Clients_Data_Bool_Exp = {
  _and?: Maybe<Array<Clients_Data_Bool_Exp>>;
  _not?: Maybe<Clients_Data_Bool_Exp>;
  _or?: Maybe<Array<Clients_Data_Bool_Exp>>;
  category?: Maybe<String_Comparison_Exp>;
  created_date?: Maybe<Timestamptz_Comparison_Exp>;
  fieldFor?: Maybe<String_Comparison_Exp>;
  format?: Maybe<String_Comparison_Exp>;
  id?: Maybe<Uuid_Comparison_Exp>;
  is_active?: Maybe<Boolean_Comparison_Exp>;
  is_liked?: Maybe<Boolean_Comparison_Exp>;
  is_locked?: Maybe<Boolean_Comparison_Exp>;
  is_mendatory?: Maybe<Boolean_Comparison_Exp>;
  is_private?: Maybe<Boolean_Comparison_Exp>;
  label?: Maybe<String_Comparison_Exp>;
  name?: Maybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "clients_data" */
export enum Clients_Data_Constraint {
  /** unique or primary key constraint */
  ClientsDataPkey = 'clients_data_pkey'
}

/** input type for inserting data into table "clients_data" */
export type Clients_Data_Insert_Input = {
  category?: Maybe<Scalars['String']>;
  created_date?: Maybe<Scalars['timestamptz']>;
  fieldFor?: Maybe<Scalars['String']>;
  format?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  is_active?: Maybe<Scalars['Boolean']>;
  is_liked?: Maybe<Scalars['Boolean']>;
  is_locked?: Maybe<Scalars['Boolean']>;
  is_mendatory?: Maybe<Scalars['Boolean']>;
  is_private?: Maybe<Scalars['Boolean']>;
  label?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Clients_Data_Max_Fields = {
  __typename?: 'clients_data_max_fields';
  category?: Maybe<Scalars['String']>;
  created_date?: Maybe<Scalars['timestamptz']>;
  fieldFor?: Maybe<Scalars['String']>;
  format?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  label?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type Clients_Data_Min_Fields = {
  __typename?: 'clients_data_min_fields';
  category?: Maybe<Scalars['String']>;
  created_date?: Maybe<Scalars['timestamptz']>;
  fieldFor?: Maybe<Scalars['String']>;
  format?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  label?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "clients_data" */
export type Clients_Data_Mutation_Response = {
  __typename?: 'clients_data_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Clients_Data>;
};

/** on conflict condition type for table "clients_data" */
export type Clients_Data_On_Conflict = {
  constraint: Clients_Data_Constraint;
  update_columns: Array<Clients_Data_Update_Column>;
  where?: Maybe<Clients_Data_Bool_Exp>;
};

/** Ordering options when selecting data from "clients_data". */
export type Clients_Data_Order_By = {
  category?: Maybe<Order_By>;
  created_date?: Maybe<Order_By>;
  fieldFor?: Maybe<Order_By>;
  format?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  is_active?: Maybe<Order_By>;
  is_liked?: Maybe<Order_By>;
  is_locked?: Maybe<Order_By>;
  is_mendatory?: Maybe<Order_By>;
  is_private?: Maybe<Order_By>;
  label?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
};

/** primary key columns input for table: clients_data */
export type Clients_Data_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "clients_data" */
export enum Clients_Data_Select_Column {
  /** column name */
  Category = 'category',
  /** column name */
  CreatedDate = 'created_date',
  /** column name */
  FieldFor = 'fieldFor',
  /** column name */
  Format = 'format',
  /** column name */
  Id = 'id',
  /** column name */
  IsActive = 'is_active',
  /** column name */
  IsLiked = 'is_liked',
  /** column name */
  IsLocked = 'is_locked',
  /** column name */
  IsMendatory = 'is_mendatory',
  /** column name */
  IsPrivate = 'is_private',
  /** column name */
  Label = 'label',
  /** column name */
  Name = 'name'
}

/** input type for updating data in table "clients_data" */
export type Clients_Data_Set_Input = {
  category?: Maybe<Scalars['String']>;
  created_date?: Maybe<Scalars['timestamptz']>;
  fieldFor?: Maybe<Scalars['String']>;
  format?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  is_active?: Maybe<Scalars['Boolean']>;
  is_liked?: Maybe<Scalars['Boolean']>;
  is_locked?: Maybe<Scalars['Boolean']>;
  is_mendatory?: Maybe<Scalars['Boolean']>;
  is_private?: Maybe<Scalars['Boolean']>;
  label?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
};

/** update columns of table "clients_data" */
export enum Clients_Data_Update_Column {
  /** column name */
  Category = 'category',
  /** column name */
  CreatedDate = 'created_date',
  /** column name */
  FieldFor = 'fieldFor',
  /** column name */
  Format = 'format',
  /** column name */
  Id = 'id',
  /** column name */
  IsActive = 'is_active',
  /** column name */
  IsLiked = 'is_liked',
  /** column name */
  IsLocked = 'is_locked',
  /** column name */
  IsMendatory = 'is_mendatory',
  /** column name */
  IsPrivate = 'is_private',
  /** column name */
  Label = 'label',
  /** column name */
  Name = 'name'
}

export enum Cm_Account_Notes_Status {
  Disable = 'Disable',
  Enable = 'Enable'
}

export enum Cm_Booking_Notes_Status {
  Disable = 'Disable',
  Enable = 'Enable'
}

export enum Cm_Case_Notes_Status {
  Disable = 'Disable',
  Enable = 'Enable'
}

export enum Cm_Compaign_Notes_Status {
  Disable = 'Disable',
  Enable = 'Enable'
}

export enum Cm_Contacts_AddToQuickBooks {
  No = 'No',
  Yes = 'Yes'
}

export enum Cm_Contacts_EmailOptOut {
  No = 'No',
  Yes = 'Yes'
}

export enum Cm_Contacts_Status {
  Delete = 'Delete',
  Disable = 'Disable',
  Enable = 'Enable'
}

/** columns and relationships of "colors" */
export type Colors = {
  __typename?: 'colors';
  color: Scalars['String'];
  id: Scalars['uuid'];
  updated_at: Scalars['timestamptz'];
};

/** Boolean expression to filter rows from the table "colors". All fields are combined with a logical 'AND'. */
export type Colors_Bool_Exp = {
  _and?: Maybe<Array<Colors_Bool_Exp>>;
  _not?: Maybe<Colors_Bool_Exp>;
  _or?: Maybe<Array<Colors_Bool_Exp>>;
  color?: Maybe<String_Comparison_Exp>;
  id?: Maybe<Uuid_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** input type for inserting data into table "colors" */
export type Colors_Insert_Input = {
  color?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "colors" */
export type Colors_Mutation_Response = {
  __typename?: 'colors_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Colors>;
};

/** Ordering options when selecting data from "colors". */
export type Colors_Order_By = {
  color?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** select columns of table "colors" */
export enum Colors_Select_Column {
  /** column name */
  Color = 'color',
  /** column name */
  Id = 'id',
  /** column name */
  UpdatedAt = 'updated_at'
}

export enum Company_Details_Tax_Name {
  Gst = 'GST',
  Vat = 'VAT'
}

/** columns and relationships of "contacts" */
export type Contacts = {
  __typename?: 'contacts';
  client_id: Scalars['String'];
  created_at: Scalars['timestamptz'];
  first_name: Scalars['String'];
  id: Scalars['uuid'];
  last_name: Scalars['String'];
  mobile_number: Scalars['bigint'];
  updated_at: Scalars['timestamptz'];
};

/** Boolean expression to filter rows from the table "contacts". All fields are combined with a logical 'AND'. */
export type Contacts_Bool_Exp = {
  _and?: Maybe<Array<Contacts_Bool_Exp>>;
  _not?: Maybe<Contacts_Bool_Exp>;
  _or?: Maybe<Array<Contacts_Bool_Exp>>;
  client_id?: Maybe<String_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  first_name?: Maybe<String_Comparison_Exp>;
  id?: Maybe<Uuid_Comparison_Exp>;
  last_name?: Maybe<String_Comparison_Exp>;
  mobile_number?: Maybe<Bigint_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** Ordering options when selecting data from "contacts". */
export type Contacts_Order_By = {
  client_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  first_name?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  last_name?: Maybe<Order_By>;
  mobile_number?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** select columns of table "contacts" */
export enum Contacts_Select_Column {
  /** column name */
  ClientId = 'client_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  FirstName = 'first_name',
  /** column name */
  Id = 'id',
  /** column name */
  LastName = 'last_name',
  /** column name */
  MobileNumber = 'mobile_number',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** columns and relationships of "courses" */
export type Courses = {
  __typename?: 'courses';
  created_at: Scalars['timestamptz'];
  id: Scalars['uuid'];
  is_active: Scalars['Boolean'];
  name?: Maybe<Scalars['String']>;
  order: Scalars['Int'];
  service?: Maybe<Scalars['String']>;
  session: Scalars['Int'];
  updated_at: Scalars['timestamptz'];
};

/** Boolean expression to filter rows from the table "courses". All fields are combined with a logical 'AND'. */
export type Courses_Bool_Exp = {
  _and?: Maybe<Array<Courses_Bool_Exp>>;
  _not?: Maybe<Courses_Bool_Exp>;
  _or?: Maybe<Array<Courses_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Uuid_Comparison_Exp>;
  is_active?: Maybe<Boolean_Comparison_Exp>;
  name?: Maybe<String_Comparison_Exp>;
  order?: Maybe<Int_Comparison_Exp>;
  service?: Maybe<String_Comparison_Exp>;
  session?: Maybe<Int_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "courses" */
export enum Courses_Constraint {
  /** unique or primary key constraint */
  CoursesPkey = 'courses_pkey'
}

/** input type for incrementing numeric columns in table "courses" */
export type Courses_Inc_Input = {
  order?: Maybe<Scalars['Int']>;
  session?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "courses" */
export type Courses_Insert_Input = {
  is_active?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
  service?: Maybe<Scalars['String']>;
  session?: Maybe<Scalars['Int']>;
};

/** response of any mutation on the table "courses" */
export type Courses_Mutation_Response = {
  __typename?: 'courses_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Courses>;
};

/** on conflict condition type for table "courses" */
export type Courses_On_Conflict = {
  constraint: Courses_Constraint;
  update_columns: Array<Courses_Update_Column>;
  where?: Maybe<Courses_Bool_Exp>;
};

/** Ordering options when selecting data from "courses". */
export type Courses_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  is_active?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  order?: Maybe<Order_By>;
  service?: Maybe<Order_By>;
  session?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: courses */
export type Courses_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "courses" */
export enum Courses_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  IsActive = 'is_active',
  /** column name */
  Name = 'name',
  /** column name */
  Order = 'order',
  /** column name */
  Service = 'service',
  /** column name */
  Session = 'session',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "courses" */
export type Courses_Set_Input = {
  is_active?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
  service?: Maybe<Scalars['String']>;
  session?: Maybe<Scalars['Int']>;
};

/** update columns of table "courses" */
export enum Courses_Update_Column {
  /** column name */
  IsActive = 'is_active',
  /** column name */
  Name = 'name',
  /** column name */
  Order = 'order',
  /** column name */
  Service = 'service',
  /** column name */
  Session = 'session'
}

/** columns and relationships of "credit_note_type" */
export type Credit_Note_Type = {
  __typename?: 'credit_note_type';
  code?: Maybe<Scalars['String']>;
  created_at: Scalars['timestamptz'];
  id: Scalars['uuid'];
  invoice_prefix: Scalars['String'];
  is_active: Scalars['Boolean'];
  name: Scalars['String'];
  order: Scalars['Int'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "credit_note_type" */
export type Credit_Note_Type_Aggregate = {
  __typename?: 'credit_note_type_aggregate';
  aggregate?: Maybe<Credit_Note_Type_Aggregate_Fields>;
  nodes: Array<Credit_Note_Type>;
};

/** aggregate fields of "credit_note_type" */
export type Credit_Note_Type_Aggregate_Fields = {
  __typename?: 'credit_note_type_aggregate_fields';
  avg?: Maybe<Credit_Note_Type_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Credit_Note_Type_Max_Fields>;
  min?: Maybe<Credit_Note_Type_Min_Fields>;
  stddev?: Maybe<Credit_Note_Type_Stddev_Fields>;
  stddev_pop?: Maybe<Credit_Note_Type_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Credit_Note_Type_Stddev_Samp_Fields>;
  sum?: Maybe<Credit_Note_Type_Sum_Fields>;
  var_pop?: Maybe<Credit_Note_Type_Var_Pop_Fields>;
  var_samp?: Maybe<Credit_Note_Type_Var_Samp_Fields>;
  variance?: Maybe<Credit_Note_Type_Variance_Fields>;
};


/** aggregate fields of "credit_note_type" */
export type Credit_Note_Type_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Credit_Note_Type_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Credit_Note_Type_Avg_Fields = {
  __typename?: 'credit_note_type_avg_fields';
  order?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "credit_note_type". All fields are combined with a logical 'AND'. */
export type Credit_Note_Type_Bool_Exp = {
  _and?: Maybe<Array<Credit_Note_Type_Bool_Exp>>;
  _not?: Maybe<Credit_Note_Type_Bool_Exp>;
  _or?: Maybe<Array<Credit_Note_Type_Bool_Exp>>;
  code?: Maybe<String_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Uuid_Comparison_Exp>;
  invoice_prefix?: Maybe<String_Comparison_Exp>;
  is_active?: Maybe<Boolean_Comparison_Exp>;
  name?: Maybe<String_Comparison_Exp>;
  order?: Maybe<Int_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "credit_note_type" */
export enum Credit_Note_Type_Constraint {
  /** unique or primary key constraint */
  CreditNoteTypePkey = 'credit_note_type_pkey'
}

/** input type for incrementing numeric columns in table "credit_note_type" */
export type Credit_Note_Type_Inc_Input = {
  order?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "credit_note_type" */
export type Credit_Note_Type_Insert_Input = {
  code?: Maybe<Scalars['String']>;
  invoice_prefix?: Maybe<Scalars['String']>;
  is_active?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Credit_Note_Type_Max_Fields = {
  __typename?: 'credit_note_type_max_fields';
  code?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  invoice_prefix?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type Credit_Note_Type_Min_Fields = {
  __typename?: 'credit_note_type_min_fields';
  code?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  invoice_prefix?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "credit_note_type" */
export type Credit_Note_Type_Mutation_Response = {
  __typename?: 'credit_note_type_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Credit_Note_Type>;
};

/** on conflict condition type for table "credit_note_type" */
export type Credit_Note_Type_On_Conflict = {
  constraint: Credit_Note_Type_Constraint;
  update_columns: Array<Credit_Note_Type_Update_Column>;
  where?: Maybe<Credit_Note_Type_Bool_Exp>;
};

/** Ordering options when selecting data from "credit_note_type". */
export type Credit_Note_Type_Order_By = {
  code?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  invoice_prefix?: Maybe<Order_By>;
  is_active?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  order?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: credit_note_type */
export type Credit_Note_Type_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "credit_note_type" */
export enum Credit_Note_Type_Select_Column {
  /** column name */
  Code = 'code',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  InvoicePrefix = 'invoice_prefix',
  /** column name */
  IsActive = 'is_active',
  /** column name */
  Name = 'name',
  /** column name */
  Order = 'order',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "credit_note_type" */
export type Credit_Note_Type_Set_Input = {
  code?: Maybe<Scalars['String']>;
  invoice_prefix?: Maybe<Scalars['String']>;
  is_active?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
};

/** aggregate stddev on columns */
export type Credit_Note_Type_Stddev_Fields = {
  __typename?: 'credit_note_type_stddev_fields';
  order?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Credit_Note_Type_Stddev_Pop_Fields = {
  __typename?: 'credit_note_type_stddev_pop_fields';
  order?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Credit_Note_Type_Stddev_Samp_Fields = {
  __typename?: 'credit_note_type_stddev_samp_fields';
  order?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Credit_Note_Type_Sum_Fields = {
  __typename?: 'credit_note_type_sum_fields';
  order?: Maybe<Scalars['Int']>;
};

/** update columns of table "credit_note_type" */
export enum Credit_Note_Type_Update_Column {
  /** column name */
  Code = 'code',
  /** column name */
  InvoicePrefix = 'invoice_prefix',
  /** column name */
  IsActive = 'is_active',
  /** column name */
  Name = 'name',
  /** column name */
  Order = 'order'
}

/** aggregate var_pop on columns */
export type Credit_Note_Type_Var_Pop_Fields = {
  __typename?: 'credit_note_type_var_pop_fields';
  order?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Credit_Note_Type_Var_Samp_Fields = {
  __typename?: 'credit_note_type_var_samp_fields';
  order?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Credit_Note_Type_Variance_Fields = {
  __typename?: 'credit_note_type_variance_fields';
  order?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "credit_notes" */
export type Credit_Notes = {
  __typename?: 'credit_notes';
  created_at: Scalars['timestamptz'];
  credit_date: Scalars['date'];
  credit_no: Scalars['String'];
  customer: Scalars['String'];
  debtor: Scalars['String'];
  id: Scalars['uuid'];
  invoice_no: Scalars['numeric'];
  location: Scalars['String'];
  total: Scalars['numeric'];
  type: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "credit_notes" */
export type Credit_Notes_Aggregate = {
  __typename?: 'credit_notes_aggregate';
  aggregate?: Maybe<Credit_Notes_Aggregate_Fields>;
  nodes: Array<Credit_Notes>;
};

/** aggregate fields of "credit_notes" */
export type Credit_Notes_Aggregate_Fields = {
  __typename?: 'credit_notes_aggregate_fields';
  avg?: Maybe<Credit_Notes_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Credit_Notes_Max_Fields>;
  min?: Maybe<Credit_Notes_Min_Fields>;
  stddev?: Maybe<Credit_Notes_Stddev_Fields>;
  stddev_pop?: Maybe<Credit_Notes_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Credit_Notes_Stddev_Samp_Fields>;
  sum?: Maybe<Credit_Notes_Sum_Fields>;
  var_pop?: Maybe<Credit_Notes_Var_Pop_Fields>;
  var_samp?: Maybe<Credit_Notes_Var_Samp_Fields>;
  variance?: Maybe<Credit_Notes_Variance_Fields>;
};


/** aggregate fields of "credit_notes" */
export type Credit_Notes_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Credit_Notes_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Credit_Notes_Avg_Fields = {
  __typename?: 'credit_notes_avg_fields';
  invoice_no?: Maybe<Scalars['Float']>;
  total?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "credit_notes". All fields are combined with a logical 'AND'. */
export type Credit_Notes_Bool_Exp = {
  _and?: Maybe<Array<Credit_Notes_Bool_Exp>>;
  _not?: Maybe<Credit_Notes_Bool_Exp>;
  _or?: Maybe<Array<Credit_Notes_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  credit_date?: Maybe<Date_Comparison_Exp>;
  credit_no?: Maybe<String_Comparison_Exp>;
  customer?: Maybe<String_Comparison_Exp>;
  debtor?: Maybe<String_Comparison_Exp>;
  id?: Maybe<Uuid_Comparison_Exp>;
  invoice_no?: Maybe<Numeric_Comparison_Exp>;
  location?: Maybe<String_Comparison_Exp>;
  total?: Maybe<Numeric_Comparison_Exp>;
  type?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "credit_notes" */
export enum Credit_Notes_Constraint {
  /** unique or primary key constraint */
  CreditNotesPkey = 'credit_notes_pkey'
}

/** input type for incrementing numeric columns in table "credit_notes" */
export type Credit_Notes_Inc_Input = {
  invoice_no?: Maybe<Scalars['numeric']>;
  total?: Maybe<Scalars['numeric']>;
};

/** input type for inserting data into table "credit_notes" */
export type Credit_Notes_Insert_Input = {
  credit_date?: Maybe<Scalars['date']>;
  credit_no?: Maybe<Scalars['String']>;
  customer?: Maybe<Scalars['String']>;
  debtor?: Maybe<Scalars['String']>;
  invoice_no?: Maybe<Scalars['numeric']>;
  location?: Maybe<Scalars['String']>;
  total?: Maybe<Scalars['numeric']>;
  type?: Maybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Credit_Notes_Max_Fields = {
  __typename?: 'credit_notes_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  credit_date?: Maybe<Scalars['date']>;
  credit_no?: Maybe<Scalars['String']>;
  customer?: Maybe<Scalars['String']>;
  debtor?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  invoice_no?: Maybe<Scalars['numeric']>;
  location?: Maybe<Scalars['String']>;
  total?: Maybe<Scalars['numeric']>;
  type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type Credit_Notes_Min_Fields = {
  __typename?: 'credit_notes_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  credit_date?: Maybe<Scalars['date']>;
  credit_no?: Maybe<Scalars['String']>;
  customer?: Maybe<Scalars['String']>;
  debtor?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  invoice_no?: Maybe<Scalars['numeric']>;
  location?: Maybe<Scalars['String']>;
  total?: Maybe<Scalars['numeric']>;
  type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "credit_notes" */
export type Credit_Notes_Mutation_Response = {
  __typename?: 'credit_notes_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Credit_Notes>;
};

/** on conflict condition type for table "credit_notes" */
export type Credit_Notes_On_Conflict = {
  constraint: Credit_Notes_Constraint;
  update_columns: Array<Credit_Notes_Update_Column>;
  where?: Maybe<Credit_Notes_Bool_Exp>;
};

/** Ordering options when selecting data from "credit_notes". */
export type Credit_Notes_Order_By = {
  created_at?: Maybe<Order_By>;
  credit_date?: Maybe<Order_By>;
  credit_no?: Maybe<Order_By>;
  customer?: Maybe<Order_By>;
  debtor?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  invoice_no?: Maybe<Order_By>;
  location?: Maybe<Order_By>;
  total?: Maybe<Order_By>;
  type?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: credit_notes */
export type Credit_Notes_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "credit_notes" */
export enum Credit_Notes_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  CreditDate = 'credit_date',
  /** column name */
  CreditNo = 'credit_no',
  /** column name */
  Customer = 'customer',
  /** column name */
  Debtor = 'debtor',
  /** column name */
  Id = 'id',
  /** column name */
  InvoiceNo = 'invoice_no',
  /** column name */
  Location = 'location',
  /** column name */
  Total = 'total',
  /** column name */
  Type = 'type',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "credit_notes" */
export type Credit_Notes_Set_Input = {
  credit_date?: Maybe<Scalars['date']>;
  credit_no?: Maybe<Scalars['String']>;
  customer?: Maybe<Scalars['String']>;
  debtor?: Maybe<Scalars['String']>;
  invoice_no?: Maybe<Scalars['numeric']>;
  location?: Maybe<Scalars['String']>;
  total?: Maybe<Scalars['numeric']>;
  type?: Maybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type Credit_Notes_Stddev_Fields = {
  __typename?: 'credit_notes_stddev_fields';
  invoice_no?: Maybe<Scalars['Float']>;
  total?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Credit_Notes_Stddev_Pop_Fields = {
  __typename?: 'credit_notes_stddev_pop_fields';
  invoice_no?: Maybe<Scalars['Float']>;
  total?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Credit_Notes_Stddev_Samp_Fields = {
  __typename?: 'credit_notes_stddev_samp_fields';
  invoice_no?: Maybe<Scalars['Float']>;
  total?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Credit_Notes_Sum_Fields = {
  __typename?: 'credit_notes_sum_fields';
  invoice_no?: Maybe<Scalars['numeric']>;
  total?: Maybe<Scalars['numeric']>;
};

/** update columns of table "credit_notes" */
export enum Credit_Notes_Update_Column {
  /** column name */
  CreditDate = 'credit_date',
  /** column name */
  CreditNo = 'credit_no',
  /** column name */
  Customer = 'customer',
  /** column name */
  Debtor = 'debtor',
  /** column name */
  InvoiceNo = 'invoice_no',
  /** column name */
  Location = 'location',
  /** column name */
  Total = 'total',
  /** column name */
  Type = 'type'
}

/** aggregate var_pop on columns */
export type Credit_Notes_Var_Pop_Fields = {
  __typename?: 'credit_notes_var_pop_fields';
  invoice_no?: Maybe<Scalars['Float']>;
  total?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Credit_Notes_Var_Samp_Fields = {
  __typename?: 'credit_notes_var_samp_fields';
  invoice_no?: Maybe<Scalars['Float']>;
  total?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Credit_Notes_Variance_Fields = {
  __typename?: 'credit_notes_variance_fields';
  invoice_no?: Maybe<Scalars['Float']>;
  total?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "custom_fields_categories" */
export type Custom_Fields_Categories = {
  __typename?: 'custom_fields_categories';
  assigned_fields?: Maybe<Scalars['String']>;
  category?: Maybe<Scalars['String']>;
  created_date: Scalars['timestamptz'];
  id: Scalars['uuid'];
  is_active: Scalars['Boolean'];
};

/** aggregated selection of "custom_fields_categories" */
export type Custom_Fields_Categories_Aggregate = {
  __typename?: 'custom_fields_categories_aggregate';
  aggregate?: Maybe<Custom_Fields_Categories_Aggregate_Fields>;
  nodes: Array<Custom_Fields_Categories>;
};

/** aggregate fields of "custom_fields_categories" */
export type Custom_Fields_Categories_Aggregate_Fields = {
  __typename?: 'custom_fields_categories_aggregate_fields';
  count: Scalars['Int'];
  max?: Maybe<Custom_Fields_Categories_Max_Fields>;
  min?: Maybe<Custom_Fields_Categories_Min_Fields>;
};


/** aggregate fields of "custom_fields_categories" */
export type Custom_Fields_Categories_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Custom_Fields_Categories_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** Boolean expression to filter rows from the table "custom_fields_categories". All fields are combined with a logical 'AND'. */
export type Custom_Fields_Categories_Bool_Exp = {
  _and?: Maybe<Array<Custom_Fields_Categories_Bool_Exp>>;
  _not?: Maybe<Custom_Fields_Categories_Bool_Exp>;
  _or?: Maybe<Array<Custom_Fields_Categories_Bool_Exp>>;
  assigned_fields?: Maybe<String_Comparison_Exp>;
  category?: Maybe<String_Comparison_Exp>;
  created_date?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Uuid_Comparison_Exp>;
  is_active?: Maybe<Boolean_Comparison_Exp>;
};

/** unique or primary key constraints on table "custom_fields_categories" */
export enum Custom_Fields_Categories_Constraint {
  /** unique or primary key constraint */
  CustomFieldsCategoriesPkey = 'custom_fields_categories_pkey'
}

/** input type for inserting data into table "custom_fields_categories" */
export type Custom_Fields_Categories_Insert_Input = {
  assigned_fields?: Maybe<Scalars['String']>;
  category?: Maybe<Scalars['String']>;
  created_date?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  is_active?: Maybe<Scalars['Boolean']>;
};

/** aggregate max on columns */
export type Custom_Fields_Categories_Max_Fields = {
  __typename?: 'custom_fields_categories_max_fields';
  assigned_fields?: Maybe<Scalars['String']>;
  category?: Maybe<Scalars['String']>;
  created_date?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
};

/** aggregate min on columns */
export type Custom_Fields_Categories_Min_Fields = {
  __typename?: 'custom_fields_categories_min_fields';
  assigned_fields?: Maybe<Scalars['String']>;
  category?: Maybe<Scalars['String']>;
  created_date?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
};

/** response of any mutation on the table "custom_fields_categories" */
export type Custom_Fields_Categories_Mutation_Response = {
  __typename?: 'custom_fields_categories_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Custom_Fields_Categories>;
};

/** on conflict condition type for table "custom_fields_categories" */
export type Custom_Fields_Categories_On_Conflict = {
  constraint: Custom_Fields_Categories_Constraint;
  update_columns: Array<Custom_Fields_Categories_Update_Column>;
  where?: Maybe<Custom_Fields_Categories_Bool_Exp>;
};

/** Ordering options when selecting data from "custom_fields_categories". */
export type Custom_Fields_Categories_Order_By = {
  assigned_fields?: Maybe<Order_By>;
  category?: Maybe<Order_By>;
  created_date?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  is_active?: Maybe<Order_By>;
};

/** primary key columns input for table: custom_fields_categories */
export type Custom_Fields_Categories_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "custom_fields_categories" */
export enum Custom_Fields_Categories_Select_Column {
  /** column name */
  AssignedFields = 'assigned_fields',
  /** column name */
  Category = 'category',
  /** column name */
  CreatedDate = 'created_date',
  /** column name */
  Id = 'id',
  /** column name */
  IsActive = 'is_active'
}

/** input type for updating data in table "custom_fields_categories" */
export type Custom_Fields_Categories_Set_Input = {
  assigned_fields?: Maybe<Scalars['String']>;
  category?: Maybe<Scalars['String']>;
  created_date?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  is_active?: Maybe<Scalars['Boolean']>;
};

/** update columns of table "custom_fields_categories" */
export enum Custom_Fields_Categories_Update_Column {
  /** column name */
  AssignedFields = 'assigned_fields',
  /** column name */
  Category = 'category',
  /** column name */
  CreatedDate = 'created_date',
  /** column name */
  Id = 'id',
  /** column name */
  IsActive = 'is_active'
}


/** Boolean expression to compare columns of type "date". All fields are combined with logical 'AND'. */
export type Date_Comparison_Exp = {
  _eq?: Maybe<Scalars['date']>;
  _gt?: Maybe<Scalars['date']>;
  _gte?: Maybe<Scalars['date']>;
  _in?: Maybe<Array<Scalars['date']>>;
  _is_null?: Maybe<Scalars['Boolean']>;
  _lt?: Maybe<Scalars['date']>;
  _lte?: Maybe<Scalars['date']>;
  _neq?: Maybe<Scalars['date']>;
  _nin?: Maybe<Array<Scalars['date']>>;
};

/** columns and relationships of "debt" */
export type Debt = {
  __typename?: 'debt';
  age: Scalars['numeric'];
  balance: Scalars['numeric'];
  created_at: Scalars['timestamptz'];
  customer: Scalars['String'];
  debtor: Scalars['String'];
  id: Scalars['uuid'];
  inv_date: Scalars['date'];
  invoice_no: Scalars['numeric'];
  last_action: Scalars['String'];
  location: Scalars['String'];
  status: Scalars['Boolean'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "debt" */
export type Debt_Aggregate = {
  __typename?: 'debt_aggregate';
  aggregate?: Maybe<Debt_Aggregate_Fields>;
  nodes: Array<Debt>;
};

/** aggregate fields of "debt" */
export type Debt_Aggregate_Fields = {
  __typename?: 'debt_aggregate_fields';
  avg?: Maybe<Debt_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Debt_Max_Fields>;
  min?: Maybe<Debt_Min_Fields>;
  stddev?: Maybe<Debt_Stddev_Fields>;
  stddev_pop?: Maybe<Debt_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Debt_Stddev_Samp_Fields>;
  sum?: Maybe<Debt_Sum_Fields>;
  var_pop?: Maybe<Debt_Var_Pop_Fields>;
  var_samp?: Maybe<Debt_Var_Samp_Fields>;
  variance?: Maybe<Debt_Variance_Fields>;
};


/** aggregate fields of "debt" */
export type Debt_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Debt_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Debt_Avg_Fields = {
  __typename?: 'debt_avg_fields';
  age?: Maybe<Scalars['Float']>;
  balance?: Maybe<Scalars['Float']>;
  invoice_no?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "debt". All fields are combined with a logical 'AND'. */
export type Debt_Bool_Exp = {
  _and?: Maybe<Array<Debt_Bool_Exp>>;
  _not?: Maybe<Debt_Bool_Exp>;
  _or?: Maybe<Array<Debt_Bool_Exp>>;
  age?: Maybe<Numeric_Comparison_Exp>;
  balance?: Maybe<Numeric_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  customer?: Maybe<String_Comparison_Exp>;
  debtor?: Maybe<String_Comparison_Exp>;
  id?: Maybe<Uuid_Comparison_Exp>;
  inv_date?: Maybe<Date_Comparison_Exp>;
  invoice_no?: Maybe<Numeric_Comparison_Exp>;
  last_action?: Maybe<String_Comparison_Exp>;
  location?: Maybe<String_Comparison_Exp>;
  status?: Maybe<Boolean_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "debt" */
export enum Debt_Constraint {
  /** unique or primary key constraint */
  DebtPkey = 'debt_pkey'
}

/** input type for incrementing numeric columns in table "debt" */
export type Debt_Inc_Input = {
  age?: Maybe<Scalars['numeric']>;
  balance?: Maybe<Scalars['numeric']>;
  invoice_no?: Maybe<Scalars['numeric']>;
};

/** input type for inserting data into table "debt" */
export type Debt_Insert_Input = {
  age?: Maybe<Scalars['numeric']>;
  balance?: Maybe<Scalars['numeric']>;
  customer?: Maybe<Scalars['String']>;
  debtor?: Maybe<Scalars['String']>;
  inv_date?: Maybe<Scalars['date']>;
  invoice_no?: Maybe<Scalars['numeric']>;
  last_action?: Maybe<Scalars['String']>;
  location?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['Boolean']>;
};

/** aggregate max on columns */
export type Debt_Max_Fields = {
  __typename?: 'debt_max_fields';
  age?: Maybe<Scalars['numeric']>;
  balance?: Maybe<Scalars['numeric']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  customer?: Maybe<Scalars['String']>;
  debtor?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  inv_date?: Maybe<Scalars['date']>;
  invoice_no?: Maybe<Scalars['numeric']>;
  last_action?: Maybe<Scalars['String']>;
  location?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type Debt_Min_Fields = {
  __typename?: 'debt_min_fields';
  age?: Maybe<Scalars['numeric']>;
  balance?: Maybe<Scalars['numeric']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  customer?: Maybe<Scalars['String']>;
  debtor?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  inv_date?: Maybe<Scalars['date']>;
  invoice_no?: Maybe<Scalars['numeric']>;
  last_action?: Maybe<Scalars['String']>;
  location?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "debt" */
export type Debt_Mutation_Response = {
  __typename?: 'debt_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Debt>;
};

/** on conflict condition type for table "debt" */
export type Debt_On_Conflict = {
  constraint: Debt_Constraint;
  update_columns: Array<Debt_Update_Column>;
  where?: Maybe<Debt_Bool_Exp>;
};

/** Ordering options when selecting data from "debt". */
export type Debt_Order_By = {
  age?: Maybe<Order_By>;
  balance?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  customer?: Maybe<Order_By>;
  debtor?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  inv_date?: Maybe<Order_By>;
  invoice_no?: Maybe<Order_By>;
  last_action?: Maybe<Order_By>;
  location?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: debt */
export type Debt_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "debt" */
export enum Debt_Select_Column {
  /** column name */
  Age = 'age',
  /** column name */
  Balance = 'balance',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Customer = 'customer',
  /** column name */
  Debtor = 'debtor',
  /** column name */
  Id = 'id',
  /** column name */
  InvDate = 'inv_date',
  /** column name */
  InvoiceNo = 'invoice_no',
  /** column name */
  LastAction = 'last_action',
  /** column name */
  Location = 'location',
  /** column name */
  Status = 'status',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "debt" */
export type Debt_Set_Input = {
  age?: Maybe<Scalars['numeric']>;
  balance?: Maybe<Scalars['numeric']>;
  customer?: Maybe<Scalars['String']>;
  debtor?: Maybe<Scalars['String']>;
  inv_date?: Maybe<Scalars['date']>;
  invoice_no?: Maybe<Scalars['numeric']>;
  last_action?: Maybe<Scalars['String']>;
  location?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['Boolean']>;
};

/** aggregate stddev on columns */
export type Debt_Stddev_Fields = {
  __typename?: 'debt_stddev_fields';
  age?: Maybe<Scalars['Float']>;
  balance?: Maybe<Scalars['Float']>;
  invoice_no?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Debt_Stddev_Pop_Fields = {
  __typename?: 'debt_stddev_pop_fields';
  age?: Maybe<Scalars['Float']>;
  balance?: Maybe<Scalars['Float']>;
  invoice_no?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Debt_Stddev_Samp_Fields = {
  __typename?: 'debt_stddev_samp_fields';
  age?: Maybe<Scalars['Float']>;
  balance?: Maybe<Scalars['Float']>;
  invoice_no?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Debt_Sum_Fields = {
  __typename?: 'debt_sum_fields';
  age?: Maybe<Scalars['numeric']>;
  balance?: Maybe<Scalars['numeric']>;
  invoice_no?: Maybe<Scalars['numeric']>;
};

/** update columns of table "debt" */
export enum Debt_Update_Column {
  /** column name */
  Age = 'age',
  /** column name */
  Balance = 'balance',
  /** column name */
  Customer = 'customer',
  /** column name */
  Debtor = 'debtor',
  /** column name */
  InvDate = 'inv_date',
  /** column name */
  InvoiceNo = 'invoice_no',
  /** column name */
  LastAction = 'last_action',
  /** column name */
  Location = 'location',
  /** column name */
  Status = 'status'
}

/** aggregate var_pop on columns */
export type Debt_Var_Pop_Fields = {
  __typename?: 'debt_var_pop_fields';
  age?: Maybe<Scalars['Float']>;
  balance?: Maybe<Scalars['Float']>;
  invoice_no?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Debt_Var_Samp_Fields = {
  __typename?: 'debt_var_samp_fields';
  age?: Maybe<Scalars['Float']>;
  balance?: Maybe<Scalars['Float']>;
  invoice_no?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Debt_Variance_Fields = {
  __typename?: 'debt_variance_fields';
  age?: Maybe<Scalars['Float']>;
  balance?: Maybe<Scalars['Float']>;
  invoice_no?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "departments" */
export type Departments = {
  __typename?: 'departments';
  created_at: Scalars['timestamptz'];
  id: Scalars['uuid'];
  is_active: Scalars['Boolean'];
  name: Scalars['String'];
  order: Scalars['Int'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "departments" */
export type Departments_Aggregate = {
  __typename?: 'departments_aggregate';
  aggregate?: Maybe<Departments_Aggregate_Fields>;
  nodes: Array<Departments>;
};

/** aggregate fields of "departments" */
export type Departments_Aggregate_Fields = {
  __typename?: 'departments_aggregate_fields';
  avg?: Maybe<Departments_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Departments_Max_Fields>;
  min?: Maybe<Departments_Min_Fields>;
  stddev?: Maybe<Departments_Stddev_Fields>;
  stddev_pop?: Maybe<Departments_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Departments_Stddev_Samp_Fields>;
  sum?: Maybe<Departments_Sum_Fields>;
  var_pop?: Maybe<Departments_Var_Pop_Fields>;
  var_samp?: Maybe<Departments_Var_Samp_Fields>;
  variance?: Maybe<Departments_Variance_Fields>;
};


/** aggregate fields of "departments" */
export type Departments_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Departments_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Departments_Avg_Fields = {
  __typename?: 'departments_avg_fields';
  order?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "departments". All fields are combined with a logical 'AND'. */
export type Departments_Bool_Exp = {
  _and?: Maybe<Array<Departments_Bool_Exp>>;
  _not?: Maybe<Departments_Bool_Exp>;
  _or?: Maybe<Array<Departments_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Uuid_Comparison_Exp>;
  is_active?: Maybe<Boolean_Comparison_Exp>;
  name?: Maybe<String_Comparison_Exp>;
  order?: Maybe<Int_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "departments" */
export enum Departments_Constraint {
  /** unique or primary key constraint */
  DepartmentsPkey = 'departments_pkey'
}

/** input type for incrementing numeric columns in table "departments" */
export type Departments_Inc_Input = {
  order?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "departments" */
export type Departments_Insert_Input = {
  is_active?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Departments_Max_Fields = {
  __typename?: 'departments_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type Departments_Min_Fields = {
  __typename?: 'departments_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "departments" */
export type Departments_Mutation_Response = {
  __typename?: 'departments_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Departments>;
};

/** on conflict condition type for table "departments" */
export type Departments_On_Conflict = {
  constraint: Departments_Constraint;
  update_columns: Array<Departments_Update_Column>;
  where?: Maybe<Departments_Bool_Exp>;
};

/** Ordering options when selecting data from "departments". */
export type Departments_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  is_active?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  order?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: departments */
export type Departments_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "departments" */
export enum Departments_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  IsActive = 'is_active',
  /** column name */
  Name = 'name',
  /** column name */
  Order = 'order',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "departments" */
export type Departments_Set_Input = {
  is_active?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Departments_Stddev_Fields = {
  __typename?: 'departments_stddev_fields';
  order?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Departments_Stddev_Pop_Fields = {
  __typename?: 'departments_stddev_pop_fields';
  order?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Departments_Stddev_Samp_Fields = {
  __typename?: 'departments_stddev_samp_fields';
  order?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Departments_Sum_Fields = {
  __typename?: 'departments_sum_fields';
  order?: Maybe<Scalars['Int']>;
};

/** update columns of table "departments" */
export enum Departments_Update_Column {
  /** column name */
  IsActive = 'is_active',
  /** column name */
  Name = 'name',
  /** column name */
  Order = 'order',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Departments_Var_Pop_Fields = {
  __typename?: 'departments_var_pop_fields';
  order?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Departments_Var_Samp_Fields = {
  __typename?: 'departments_var_samp_fields';
  order?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Departments_Variance_Fields = {
  __typename?: 'departments_variance_fields';
  order?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "diagnostic_codes" */
export type Diagnostic_Codes = {
  __typename?: 'diagnostic_codes';
  ICD10_code?: Maybe<Scalars['String']>;
  ICD9_code?: Maybe<Scalars['String']>;
  OSICS10_code?: Maybe<Scalars['String']>;
  code: Scalars['String'];
  created_at: Scalars['timestamptz'];
  description: Scalars['String'];
  id: Scalars['uuid'];
  is_active: Scalars['Boolean'];
  layer1: Scalars['String'];
  layer2: Scalars['String'];
  layer3: Scalars['String'];
  layer4: Scalars['String'];
  order: Scalars['Int'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "diagnostic_codes" */
export type Diagnostic_Codes_Aggregate = {
  __typename?: 'diagnostic_codes_aggregate';
  aggregate?: Maybe<Diagnostic_Codes_Aggregate_Fields>;
  nodes: Array<Diagnostic_Codes>;
};

/** aggregate fields of "diagnostic_codes" */
export type Diagnostic_Codes_Aggregate_Fields = {
  __typename?: 'diagnostic_codes_aggregate_fields';
  avg?: Maybe<Diagnostic_Codes_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Diagnostic_Codes_Max_Fields>;
  min?: Maybe<Diagnostic_Codes_Min_Fields>;
  stddev?: Maybe<Diagnostic_Codes_Stddev_Fields>;
  stddev_pop?: Maybe<Diagnostic_Codes_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Diagnostic_Codes_Stddev_Samp_Fields>;
  sum?: Maybe<Diagnostic_Codes_Sum_Fields>;
  var_pop?: Maybe<Diagnostic_Codes_Var_Pop_Fields>;
  var_samp?: Maybe<Diagnostic_Codes_Var_Samp_Fields>;
  variance?: Maybe<Diagnostic_Codes_Variance_Fields>;
};


/** aggregate fields of "diagnostic_codes" */
export type Diagnostic_Codes_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Diagnostic_Codes_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Diagnostic_Codes_Avg_Fields = {
  __typename?: 'diagnostic_codes_avg_fields';
  order?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "diagnostic_codes". All fields are combined with a logical 'AND'. */
export type Diagnostic_Codes_Bool_Exp = {
  ICD10_code?: Maybe<String_Comparison_Exp>;
  ICD9_code?: Maybe<String_Comparison_Exp>;
  OSICS10_code?: Maybe<String_Comparison_Exp>;
  _and?: Maybe<Array<Diagnostic_Codes_Bool_Exp>>;
  _not?: Maybe<Diagnostic_Codes_Bool_Exp>;
  _or?: Maybe<Array<Diagnostic_Codes_Bool_Exp>>;
  code?: Maybe<String_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  description?: Maybe<String_Comparison_Exp>;
  id?: Maybe<Uuid_Comparison_Exp>;
  is_active?: Maybe<Boolean_Comparison_Exp>;
  layer1?: Maybe<String_Comparison_Exp>;
  layer2?: Maybe<String_Comparison_Exp>;
  layer3?: Maybe<String_Comparison_Exp>;
  layer4?: Maybe<String_Comparison_Exp>;
  order?: Maybe<Int_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "diagnostic_codes" */
export enum Diagnostic_Codes_Constraint {
  /** unique or primary key constraint */
  DiagnosticCodesPkey = 'diagnostic_codes_pkey'
}

/** input type for incrementing numeric columns in table "diagnostic_codes" */
export type Diagnostic_Codes_Inc_Input = {
  order?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "diagnostic_codes" */
export type Diagnostic_Codes_Insert_Input = {
  ICD10_code?: Maybe<Scalars['String']>;
  ICD9_code?: Maybe<Scalars['String']>;
  OSICS10_code?: Maybe<Scalars['String']>;
  code?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  is_active?: Maybe<Scalars['Boolean']>;
  layer1?: Maybe<Scalars['String']>;
  layer2?: Maybe<Scalars['String']>;
  layer3?: Maybe<Scalars['String']>;
  layer4?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
};

/** aggregate max on columns */
export type Diagnostic_Codes_Max_Fields = {
  __typename?: 'diagnostic_codes_max_fields';
  ICD10_code?: Maybe<Scalars['String']>;
  ICD9_code?: Maybe<Scalars['String']>;
  OSICS10_code?: Maybe<Scalars['String']>;
  code?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  layer1?: Maybe<Scalars['String']>;
  layer2?: Maybe<Scalars['String']>;
  layer3?: Maybe<Scalars['String']>;
  layer4?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type Diagnostic_Codes_Min_Fields = {
  __typename?: 'diagnostic_codes_min_fields';
  ICD10_code?: Maybe<Scalars['String']>;
  ICD9_code?: Maybe<Scalars['String']>;
  OSICS10_code?: Maybe<Scalars['String']>;
  code?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  layer1?: Maybe<Scalars['String']>;
  layer2?: Maybe<Scalars['String']>;
  layer3?: Maybe<Scalars['String']>;
  layer4?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "diagnostic_codes" */
export type Diagnostic_Codes_Mutation_Response = {
  __typename?: 'diagnostic_codes_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Diagnostic_Codes>;
};

/** on conflict condition type for table "diagnostic_codes" */
export type Diagnostic_Codes_On_Conflict = {
  constraint: Diagnostic_Codes_Constraint;
  update_columns: Array<Diagnostic_Codes_Update_Column>;
  where?: Maybe<Diagnostic_Codes_Bool_Exp>;
};

/** Ordering options when selecting data from "diagnostic_codes". */
export type Diagnostic_Codes_Order_By = {
  ICD10_code?: Maybe<Order_By>;
  ICD9_code?: Maybe<Order_By>;
  OSICS10_code?: Maybe<Order_By>;
  code?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  description?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  is_active?: Maybe<Order_By>;
  layer1?: Maybe<Order_By>;
  layer2?: Maybe<Order_By>;
  layer3?: Maybe<Order_By>;
  layer4?: Maybe<Order_By>;
  order?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: diagnostic_codes */
export type Diagnostic_Codes_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "diagnostic_codes" */
export enum Diagnostic_Codes_Select_Column {
  /** column name */
  Icd10Code = 'ICD10_code',
  /** column name */
  Icd9Code = 'ICD9_code',
  /** column name */
  Osics10Code = 'OSICS10_code',
  /** column name */
  Code = 'code',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Description = 'description',
  /** column name */
  Id = 'id',
  /** column name */
  IsActive = 'is_active',
  /** column name */
  Layer1 = 'layer1',
  /** column name */
  Layer2 = 'layer2',
  /** column name */
  Layer3 = 'layer3',
  /** column name */
  Layer4 = 'layer4',
  /** column name */
  Order = 'order',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "diagnostic_codes" */
export type Diagnostic_Codes_Set_Input = {
  ICD10_code?: Maybe<Scalars['String']>;
  ICD9_code?: Maybe<Scalars['String']>;
  OSICS10_code?: Maybe<Scalars['String']>;
  code?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  is_active?: Maybe<Scalars['Boolean']>;
  layer1?: Maybe<Scalars['String']>;
  layer2?: Maybe<Scalars['String']>;
  layer3?: Maybe<Scalars['String']>;
  layer4?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
};

/** aggregate stddev on columns */
export type Diagnostic_Codes_Stddev_Fields = {
  __typename?: 'diagnostic_codes_stddev_fields';
  order?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Diagnostic_Codes_Stddev_Pop_Fields = {
  __typename?: 'diagnostic_codes_stddev_pop_fields';
  order?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Diagnostic_Codes_Stddev_Samp_Fields = {
  __typename?: 'diagnostic_codes_stddev_samp_fields';
  order?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Diagnostic_Codes_Sum_Fields = {
  __typename?: 'diagnostic_codes_sum_fields';
  order?: Maybe<Scalars['Int']>;
};

/** update columns of table "diagnostic_codes" */
export enum Diagnostic_Codes_Update_Column {
  /** column name */
  Icd10Code = 'ICD10_code',
  /** column name */
  Icd9Code = 'ICD9_code',
  /** column name */
  Osics10Code = 'OSICS10_code',
  /** column name */
  Code = 'code',
  /** column name */
  Description = 'description',
  /** column name */
  IsActive = 'is_active',
  /** column name */
  Layer1 = 'layer1',
  /** column name */
  Layer2 = 'layer2',
  /** column name */
  Layer3 = 'layer3',
  /** column name */
  Layer4 = 'layer4',
  /** column name */
  Order = 'order'
}

/** aggregate var_pop on columns */
export type Diagnostic_Codes_Var_Pop_Fields = {
  __typename?: 'diagnostic_codes_var_pop_fields';
  order?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Diagnostic_Codes_Var_Samp_Fields = {
  __typename?: 'diagnostic_codes_var_samp_fields';
  order?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Diagnostic_Codes_Variance_Fields = {
  __typename?: 'diagnostic_codes_variance_fields';
  order?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "diagnostic_codeset" */
export type Diagnostic_Codeset = {
  __typename?: 'diagnostic_codeset';
  codes?: Maybe<Scalars['String']>;
  created_at: Scalars['timestamptz'];
  id: Scalars['uuid'];
  is_active: Scalars['Boolean'];
  is_lock: Scalars['Boolean'];
  name: Scalars['String'];
  order: Scalars['Int'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "diagnostic_codeset" */
export type Diagnostic_Codeset_Aggregate = {
  __typename?: 'diagnostic_codeset_aggregate';
  aggregate?: Maybe<Diagnostic_Codeset_Aggregate_Fields>;
  nodes: Array<Diagnostic_Codeset>;
};

/** aggregate fields of "diagnostic_codeset" */
export type Diagnostic_Codeset_Aggregate_Fields = {
  __typename?: 'diagnostic_codeset_aggregate_fields';
  avg?: Maybe<Diagnostic_Codeset_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Diagnostic_Codeset_Max_Fields>;
  min?: Maybe<Diagnostic_Codeset_Min_Fields>;
  stddev?: Maybe<Diagnostic_Codeset_Stddev_Fields>;
  stddev_pop?: Maybe<Diagnostic_Codeset_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Diagnostic_Codeset_Stddev_Samp_Fields>;
  sum?: Maybe<Diagnostic_Codeset_Sum_Fields>;
  var_pop?: Maybe<Diagnostic_Codeset_Var_Pop_Fields>;
  var_samp?: Maybe<Diagnostic_Codeset_Var_Samp_Fields>;
  variance?: Maybe<Diagnostic_Codeset_Variance_Fields>;
};


/** aggregate fields of "diagnostic_codeset" */
export type Diagnostic_Codeset_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Diagnostic_Codeset_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Diagnostic_Codeset_Avg_Fields = {
  __typename?: 'diagnostic_codeset_avg_fields';
  order?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "diagnostic_codeset". All fields are combined with a logical 'AND'. */
export type Diagnostic_Codeset_Bool_Exp = {
  _and?: Maybe<Array<Diagnostic_Codeset_Bool_Exp>>;
  _not?: Maybe<Diagnostic_Codeset_Bool_Exp>;
  _or?: Maybe<Array<Diagnostic_Codeset_Bool_Exp>>;
  codes?: Maybe<String_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Uuid_Comparison_Exp>;
  is_active?: Maybe<Boolean_Comparison_Exp>;
  is_lock?: Maybe<Boolean_Comparison_Exp>;
  name?: Maybe<String_Comparison_Exp>;
  order?: Maybe<Int_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "diagnostic_codeset" */
export enum Diagnostic_Codeset_Constraint {
  /** unique or primary key constraint */
  DiagnosticCodePkey = 'Diagnostic_code_pkey'
}

/** input type for incrementing numeric columns in table "diagnostic_codeset" */
export type Diagnostic_Codeset_Inc_Input = {
  order?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "diagnostic_codeset" */
export type Diagnostic_Codeset_Insert_Input = {
  codes?: Maybe<Scalars['String']>;
  is_active?: Maybe<Scalars['Boolean']>;
  is_lock?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
};

/** aggregate max on columns */
export type Diagnostic_Codeset_Max_Fields = {
  __typename?: 'diagnostic_codeset_max_fields';
  codes?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type Diagnostic_Codeset_Min_Fields = {
  __typename?: 'diagnostic_codeset_min_fields';
  codes?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "diagnostic_codeset" */
export type Diagnostic_Codeset_Mutation_Response = {
  __typename?: 'diagnostic_codeset_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Diagnostic_Codeset>;
};

/** on conflict condition type for table "diagnostic_codeset" */
export type Diagnostic_Codeset_On_Conflict = {
  constraint: Diagnostic_Codeset_Constraint;
  update_columns: Array<Diagnostic_Codeset_Update_Column>;
  where?: Maybe<Diagnostic_Codeset_Bool_Exp>;
};

/** Ordering options when selecting data from "diagnostic_codeset". */
export type Diagnostic_Codeset_Order_By = {
  codes?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  is_active?: Maybe<Order_By>;
  is_lock?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  order?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: diagnostic_codeset */
export type Diagnostic_Codeset_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "diagnostic_codeset" */
export enum Diagnostic_Codeset_Select_Column {
  /** column name */
  Codes = 'codes',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  IsActive = 'is_active',
  /** column name */
  IsLock = 'is_lock',
  /** column name */
  Name = 'name',
  /** column name */
  Order = 'order',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "diagnostic_codeset" */
export type Diagnostic_Codeset_Set_Input = {
  codes?: Maybe<Scalars['String']>;
  is_active?: Maybe<Scalars['Boolean']>;
  is_lock?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
};

/** aggregate stddev on columns */
export type Diagnostic_Codeset_Stddev_Fields = {
  __typename?: 'diagnostic_codeset_stddev_fields';
  order?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Diagnostic_Codeset_Stddev_Pop_Fields = {
  __typename?: 'diagnostic_codeset_stddev_pop_fields';
  order?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Diagnostic_Codeset_Stddev_Samp_Fields = {
  __typename?: 'diagnostic_codeset_stddev_samp_fields';
  order?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Diagnostic_Codeset_Sum_Fields = {
  __typename?: 'diagnostic_codeset_sum_fields';
  order?: Maybe<Scalars['Int']>;
};

/** update columns of table "diagnostic_codeset" */
export enum Diagnostic_Codeset_Update_Column {
  /** column name */
  Codes = 'codes',
  /** column name */
  IsActive = 'is_active',
  /** column name */
  IsLock = 'is_lock',
  /** column name */
  Name = 'name',
  /** column name */
  Order = 'order'
}

/** aggregate var_pop on columns */
export type Diagnostic_Codeset_Var_Pop_Fields = {
  __typename?: 'diagnostic_codeset_var_pop_fields';
  order?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Diagnostic_Codeset_Var_Samp_Fields = {
  __typename?: 'diagnostic_codeset_var_samp_fields';
  order?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Diagnostic_Codeset_Variance_Fields = {
  __typename?: 'diagnostic_codeset_variance_fields';
  order?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "drugs" */
export type Drugs = {
  __typename?: 'drugs';
  comment?: Maybe<Scalars['String']>;
  created_date: Scalars['timestamptz'];
  dosage: Scalars['String'];
  frequency: Scalars['String'];
  id: Scalars['uuid'];
  is_active: Scalars['Boolean'];
  name: Scalars['String'];
  route: Scalars['String'];
  unit: Scalars['String'];
};

/** aggregated selection of "drugs" */
export type Drugs_Aggregate = {
  __typename?: 'drugs_aggregate';
  aggregate?: Maybe<Drugs_Aggregate_Fields>;
  nodes: Array<Drugs>;
};

/** aggregate fields of "drugs" */
export type Drugs_Aggregate_Fields = {
  __typename?: 'drugs_aggregate_fields';
  count: Scalars['Int'];
  max?: Maybe<Drugs_Max_Fields>;
  min?: Maybe<Drugs_Min_Fields>;
};


/** aggregate fields of "drugs" */
export type Drugs_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Drugs_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** Boolean expression to filter rows from the table "drugs". All fields are combined with a logical 'AND'. */
export type Drugs_Bool_Exp = {
  _and?: Maybe<Array<Drugs_Bool_Exp>>;
  _not?: Maybe<Drugs_Bool_Exp>;
  _or?: Maybe<Array<Drugs_Bool_Exp>>;
  comment?: Maybe<String_Comparison_Exp>;
  created_date?: Maybe<Timestamptz_Comparison_Exp>;
  dosage?: Maybe<String_Comparison_Exp>;
  frequency?: Maybe<String_Comparison_Exp>;
  id?: Maybe<Uuid_Comparison_Exp>;
  is_active?: Maybe<Boolean_Comparison_Exp>;
  name?: Maybe<String_Comparison_Exp>;
  route?: Maybe<String_Comparison_Exp>;
  unit?: Maybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "drugs" */
export enum Drugs_Constraint {
  /** unique or primary key constraint */
  DrugsPkey = 'drugs_pkey'
}

/** input type for inserting data into table "drugs" */
export type Drugs_Insert_Input = {
  comment?: Maybe<Scalars['String']>;
  created_date?: Maybe<Scalars['timestamptz']>;
  dosage?: Maybe<Scalars['String']>;
  frequency?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  is_active?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  route?: Maybe<Scalars['String']>;
  unit?: Maybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Drugs_Max_Fields = {
  __typename?: 'drugs_max_fields';
  comment?: Maybe<Scalars['String']>;
  created_date?: Maybe<Scalars['timestamptz']>;
  dosage?: Maybe<Scalars['String']>;
  frequency?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
  route?: Maybe<Scalars['String']>;
  unit?: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type Drugs_Min_Fields = {
  __typename?: 'drugs_min_fields';
  comment?: Maybe<Scalars['String']>;
  created_date?: Maybe<Scalars['timestamptz']>;
  dosage?: Maybe<Scalars['String']>;
  frequency?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
  route?: Maybe<Scalars['String']>;
  unit?: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "drugs" */
export type Drugs_Mutation_Response = {
  __typename?: 'drugs_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Drugs>;
};

/** on conflict condition type for table "drugs" */
export type Drugs_On_Conflict = {
  constraint: Drugs_Constraint;
  update_columns: Array<Drugs_Update_Column>;
  where?: Maybe<Drugs_Bool_Exp>;
};

/** Ordering options when selecting data from "drugs". */
export type Drugs_Order_By = {
  comment?: Maybe<Order_By>;
  created_date?: Maybe<Order_By>;
  dosage?: Maybe<Order_By>;
  frequency?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  is_active?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  route?: Maybe<Order_By>;
  unit?: Maybe<Order_By>;
};

/** primary key columns input for table: drugs */
export type Drugs_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "drugs" */
export enum Drugs_Select_Column {
  /** column name */
  Comment = 'comment',
  /** column name */
  CreatedDate = 'created_date',
  /** column name */
  Dosage = 'dosage',
  /** column name */
  Frequency = 'frequency',
  /** column name */
  Id = 'id',
  /** column name */
  IsActive = 'is_active',
  /** column name */
  Name = 'name',
  /** column name */
  Route = 'route',
  /** column name */
  Unit = 'unit'
}

/** input type for updating data in table "drugs" */
export type Drugs_Set_Input = {
  comment?: Maybe<Scalars['String']>;
  created_date?: Maybe<Scalars['timestamptz']>;
  dosage?: Maybe<Scalars['String']>;
  frequency?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  is_active?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  route?: Maybe<Scalars['String']>;
  unit?: Maybe<Scalars['String']>;
};

/** update columns of table "drugs" */
export enum Drugs_Update_Column {
  /** column name */
  Comment = 'comment',
  /** column name */
  CreatedDate = 'created_date',
  /** column name */
  Dosage = 'dosage',
  /** column name */
  Frequency = 'frequency',
  /** column name */
  Id = 'id',
  /** column name */
  IsActive = 'is_active',
  /** column name */
  Name = 'name',
  /** column name */
  Route = 'route',
  /** column name */
  Unit = 'unit'
}

/**
 * family_relationships
 *
 *
 * columns and relationships of "family_relationships"
 */
export type Family_Relationships = {
  __typename?: 'family_relationships';
  created_at: Scalars['timestamptz'];
  id: Scalars['uuid'];
  is_active: Scalars['Boolean'];
  order: Scalars['Int'];
  relation_name: Scalars['String'];
  reserve_relation?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "family_relationships" */
export type Family_Relationships_Aggregate = {
  __typename?: 'family_relationships_aggregate';
  aggregate?: Maybe<Family_Relationships_Aggregate_Fields>;
  nodes: Array<Family_Relationships>;
};

/** aggregate fields of "family_relationships" */
export type Family_Relationships_Aggregate_Fields = {
  __typename?: 'family_relationships_aggregate_fields';
  avg?: Maybe<Family_Relationships_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Family_Relationships_Max_Fields>;
  min?: Maybe<Family_Relationships_Min_Fields>;
  stddev?: Maybe<Family_Relationships_Stddev_Fields>;
  stddev_pop?: Maybe<Family_Relationships_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Family_Relationships_Stddev_Samp_Fields>;
  sum?: Maybe<Family_Relationships_Sum_Fields>;
  var_pop?: Maybe<Family_Relationships_Var_Pop_Fields>;
  var_samp?: Maybe<Family_Relationships_Var_Samp_Fields>;
  variance?: Maybe<Family_Relationships_Variance_Fields>;
};


/** aggregate fields of "family_relationships" */
export type Family_Relationships_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Family_Relationships_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Family_Relationships_Avg_Fields = {
  __typename?: 'family_relationships_avg_fields';
  order?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "family_relationships". All fields are combined with a logical 'AND'. */
export type Family_Relationships_Bool_Exp = {
  _and?: Maybe<Array<Family_Relationships_Bool_Exp>>;
  _not?: Maybe<Family_Relationships_Bool_Exp>;
  _or?: Maybe<Array<Family_Relationships_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Uuid_Comparison_Exp>;
  is_active?: Maybe<Boolean_Comparison_Exp>;
  order?: Maybe<Int_Comparison_Exp>;
  relation_name?: Maybe<String_Comparison_Exp>;
  reserve_relation?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "family_relationships" */
export enum Family_Relationships_Constraint {
  /** unique or primary key constraint */
  FamilyRelationshipsPkey = 'family_relationships_pkey'
}

/** input type for incrementing numeric columns in table "family_relationships" */
export type Family_Relationships_Inc_Input = {
  order?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "family_relationships" */
export type Family_Relationships_Insert_Input = {
  is_active?: Maybe<Scalars['Boolean']>;
  order?: Maybe<Scalars['Int']>;
  relation_name?: Maybe<Scalars['String']>;
  reserve_relation?: Maybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Family_Relationships_Max_Fields = {
  __typename?: 'family_relationships_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  order?: Maybe<Scalars['Int']>;
  relation_name?: Maybe<Scalars['String']>;
  reserve_relation?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type Family_Relationships_Min_Fields = {
  __typename?: 'family_relationships_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  order?: Maybe<Scalars['Int']>;
  relation_name?: Maybe<Scalars['String']>;
  reserve_relation?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "family_relationships" */
export type Family_Relationships_Mutation_Response = {
  __typename?: 'family_relationships_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Family_Relationships>;
};

/** on conflict condition type for table "family_relationships" */
export type Family_Relationships_On_Conflict = {
  constraint: Family_Relationships_Constraint;
  update_columns: Array<Family_Relationships_Update_Column>;
  where?: Maybe<Family_Relationships_Bool_Exp>;
};

/** Ordering options when selecting data from "family_relationships". */
export type Family_Relationships_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  is_active?: Maybe<Order_By>;
  order?: Maybe<Order_By>;
  relation_name?: Maybe<Order_By>;
  reserve_relation?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: family_relationships */
export type Family_Relationships_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "family_relationships" */
export enum Family_Relationships_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  IsActive = 'is_active',
  /** column name */
  Order = 'order',
  /** column name */
  RelationName = 'relation_name',
  /** column name */
  ReserveRelation = 'reserve_relation',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "family_relationships" */
export type Family_Relationships_Set_Input = {
  is_active?: Maybe<Scalars['Boolean']>;
  order?: Maybe<Scalars['Int']>;
  relation_name?: Maybe<Scalars['String']>;
  reserve_relation?: Maybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type Family_Relationships_Stddev_Fields = {
  __typename?: 'family_relationships_stddev_fields';
  order?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Family_Relationships_Stddev_Pop_Fields = {
  __typename?: 'family_relationships_stddev_pop_fields';
  order?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Family_Relationships_Stddev_Samp_Fields = {
  __typename?: 'family_relationships_stddev_samp_fields';
  order?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Family_Relationships_Sum_Fields = {
  __typename?: 'family_relationships_sum_fields';
  order?: Maybe<Scalars['Int']>;
};

/** update columns of table "family_relationships" */
export enum Family_Relationships_Update_Column {
  /** column name */
  IsActive = 'is_active',
  /** column name */
  Order = 'order',
  /** column name */
  RelationName = 'relation_name',
  /** column name */
  ReserveRelation = 'reserve_relation'
}

/** aggregate var_pop on columns */
export type Family_Relationships_Var_Pop_Fields = {
  __typename?: 'family_relationships_var_pop_fields';
  order?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Family_Relationships_Var_Samp_Fields = {
  __typename?: 'family_relationships_var_samp_fields';
  order?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Family_Relationships_Variance_Fields = {
  __typename?: 'family_relationships_variance_fields';
  order?: Maybe<Scalars['Float']>;
};

/**
 * If status flag is 0 id prevents the default page content and renders the fallback slug in iframe
 *
 *
 * columns and relationships of "feature_flags"
 */
export type Feature_Flags = {
  __typename?: 'feature_flags';
  fallback_slug: Scalars['String'];
  id: Scalars['uuid'];
  page_slug: Scalars['String'];
  status: Scalars['Boolean'];
};

/** Boolean expression to filter rows from the table "feature_flags". All fields are combined with a logical 'AND'. */
export type Feature_Flags_Bool_Exp = {
  _and?: Maybe<Array<Feature_Flags_Bool_Exp>>;
  _not?: Maybe<Feature_Flags_Bool_Exp>;
  _or?: Maybe<Array<Feature_Flags_Bool_Exp>>;
  fallback_slug?: Maybe<String_Comparison_Exp>;
  id?: Maybe<Uuid_Comparison_Exp>;
  page_slug?: Maybe<String_Comparison_Exp>;
  status?: Maybe<Boolean_Comparison_Exp>;
};

/** unique or primary key constraints on table "feature_flags" */
export enum Feature_Flags_Constraint {
  /** unique or primary key constraint */
  FeatureFlagsPkey = 'feature_flags_pkey'
}

/** input type for inserting data into table "feature_flags" */
export type Feature_Flags_Insert_Input = {
  fallback_slug?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  page_slug?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['Boolean']>;
};

/** response of any mutation on the table "feature_flags" */
export type Feature_Flags_Mutation_Response = {
  __typename?: 'feature_flags_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Feature_Flags>;
};

/** on conflict condition type for table "feature_flags" */
export type Feature_Flags_On_Conflict = {
  constraint: Feature_Flags_Constraint;
  update_columns: Array<Feature_Flags_Update_Column>;
  where?: Maybe<Feature_Flags_Bool_Exp>;
};

/** Ordering options when selecting data from "feature_flags". */
export type Feature_Flags_Order_By = {
  fallback_slug?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  page_slug?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
};

/** primary key columns input for table: feature_flags */
export type Feature_Flags_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "feature_flags" */
export enum Feature_Flags_Select_Column {
  /** column name */
  FallbackSlug = 'fallback_slug',
  /** column name */
  Id = 'id',
  /** column name */
  PageSlug = 'page_slug',
  /** column name */
  Status = 'status'
}

/** input type for updating data in table "feature_flags" */
export type Feature_Flags_Set_Input = {
  fallback_slug?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  page_slug?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['Boolean']>;
};

/** update columns of table "feature_flags" */
export enum Feature_Flags_Update_Column {
  /** column name */
  FallbackSlug = 'fallback_slug',
  /** column name */
  Id = 'id',
  /** column name */
  PageSlug = 'page_slug',
  /** column name */
  Status = 'status'
}

export enum Gl_Codes_Description {
  Discount = 'discount',
  LocationCode = 'location_code',
  PaymentType = 'payment_type',
  ProductCode = 'product_code',
  ServiceCode = 'service_code',
  Setup = 'setup',
  TaxRate = 'tax_rate'
}

/** columns and relationships of "invoices" */
export type Invoices = {
  __typename?: 'invoices';
  balance: Scalars['numeric'];
  created_at: Scalars['timestamptz'];
  customer: Scalars['String'];
  debtor?: Maybe<Scalars['String']>;
  gross: Scalars['numeric'];
  id: Scalars['uuid'];
  inv_date: Scalars['date'];
  invoice_logo?: Maybe<Scalars['String']>;
  invoice_no: Scalars['Int'];
  location: Scalars['String'];
  net: Scalars['numeric'];
  paid: Scalars['numeric'];
  payment: Scalars['Boolean'];
  status: Scalars['String'];
  updated_at: Scalars['timestamptz'];
  vat: Scalars['numeric'];
};

/** aggregated selection of "invoices" */
export type Invoices_Aggregate = {
  __typename?: 'invoices_aggregate';
  aggregate?: Maybe<Invoices_Aggregate_Fields>;
  nodes: Array<Invoices>;
};

/** aggregate fields of "invoices" */
export type Invoices_Aggregate_Fields = {
  __typename?: 'invoices_aggregate_fields';
  avg?: Maybe<Invoices_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Invoices_Max_Fields>;
  min?: Maybe<Invoices_Min_Fields>;
  stddev?: Maybe<Invoices_Stddev_Fields>;
  stddev_pop?: Maybe<Invoices_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Invoices_Stddev_Samp_Fields>;
  sum?: Maybe<Invoices_Sum_Fields>;
  var_pop?: Maybe<Invoices_Var_Pop_Fields>;
  var_samp?: Maybe<Invoices_Var_Samp_Fields>;
  variance?: Maybe<Invoices_Variance_Fields>;
};


/** aggregate fields of "invoices" */
export type Invoices_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Invoices_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Invoices_Avg_Fields = {
  __typename?: 'invoices_avg_fields';
  balance?: Maybe<Scalars['Float']>;
  gross?: Maybe<Scalars['Float']>;
  invoice_no?: Maybe<Scalars['Float']>;
  net?: Maybe<Scalars['Float']>;
  paid?: Maybe<Scalars['Float']>;
  vat?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "invoices". All fields are combined with a logical 'AND'. */
export type Invoices_Bool_Exp = {
  _and?: Maybe<Array<Invoices_Bool_Exp>>;
  _not?: Maybe<Invoices_Bool_Exp>;
  _or?: Maybe<Array<Invoices_Bool_Exp>>;
  balance?: Maybe<Numeric_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  customer?: Maybe<String_Comparison_Exp>;
  debtor?: Maybe<String_Comparison_Exp>;
  gross?: Maybe<Numeric_Comparison_Exp>;
  id?: Maybe<Uuid_Comparison_Exp>;
  inv_date?: Maybe<Date_Comparison_Exp>;
  invoice_logo?: Maybe<String_Comparison_Exp>;
  invoice_no?: Maybe<Int_Comparison_Exp>;
  location?: Maybe<String_Comparison_Exp>;
  net?: Maybe<Numeric_Comparison_Exp>;
  paid?: Maybe<Numeric_Comparison_Exp>;
  payment?: Maybe<Boolean_Comparison_Exp>;
  status?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
  vat?: Maybe<Numeric_Comparison_Exp>;
};

/** unique or primary key constraints on table "invoices" */
export enum Invoices_Constraint {
  /** unique or primary key constraint */
  InvoicesPkey = 'invoices_pkey'
}

/** input type for incrementing numeric columns in table "invoices" */
export type Invoices_Inc_Input = {
  balance?: Maybe<Scalars['numeric']>;
  gross?: Maybe<Scalars['numeric']>;
  invoice_no?: Maybe<Scalars['Int']>;
  net?: Maybe<Scalars['numeric']>;
  paid?: Maybe<Scalars['numeric']>;
  vat?: Maybe<Scalars['numeric']>;
};

/** input type for inserting data into table "invoices" */
export type Invoices_Insert_Input = {
  balance?: Maybe<Scalars['numeric']>;
  customer?: Maybe<Scalars['String']>;
  debtor?: Maybe<Scalars['String']>;
  gross?: Maybe<Scalars['numeric']>;
  inv_date?: Maybe<Scalars['date']>;
  invoice_logo?: Maybe<Scalars['String']>;
  invoice_no?: Maybe<Scalars['Int']>;
  location?: Maybe<Scalars['String']>;
  net?: Maybe<Scalars['numeric']>;
  paid?: Maybe<Scalars['numeric']>;
  payment?: Maybe<Scalars['Boolean']>;
  status?: Maybe<Scalars['String']>;
  vat?: Maybe<Scalars['numeric']>;
};

/** aggregate max on columns */
export type Invoices_Max_Fields = {
  __typename?: 'invoices_max_fields';
  balance?: Maybe<Scalars['numeric']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  customer?: Maybe<Scalars['String']>;
  debtor?: Maybe<Scalars['String']>;
  gross?: Maybe<Scalars['numeric']>;
  id?: Maybe<Scalars['uuid']>;
  inv_date?: Maybe<Scalars['date']>;
  invoice_logo?: Maybe<Scalars['String']>;
  invoice_no?: Maybe<Scalars['Int']>;
  location?: Maybe<Scalars['String']>;
  net?: Maybe<Scalars['numeric']>;
  paid?: Maybe<Scalars['numeric']>;
  status?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  vat?: Maybe<Scalars['numeric']>;
};

/** aggregate min on columns */
export type Invoices_Min_Fields = {
  __typename?: 'invoices_min_fields';
  balance?: Maybe<Scalars['numeric']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  customer?: Maybe<Scalars['String']>;
  debtor?: Maybe<Scalars['String']>;
  gross?: Maybe<Scalars['numeric']>;
  id?: Maybe<Scalars['uuid']>;
  inv_date?: Maybe<Scalars['date']>;
  invoice_logo?: Maybe<Scalars['String']>;
  invoice_no?: Maybe<Scalars['Int']>;
  location?: Maybe<Scalars['String']>;
  net?: Maybe<Scalars['numeric']>;
  paid?: Maybe<Scalars['numeric']>;
  status?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  vat?: Maybe<Scalars['numeric']>;
};

/** response of any mutation on the table "invoices" */
export type Invoices_Mutation_Response = {
  __typename?: 'invoices_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Invoices>;
};

/** on conflict condition type for table "invoices" */
export type Invoices_On_Conflict = {
  constraint: Invoices_Constraint;
  update_columns: Array<Invoices_Update_Column>;
  where?: Maybe<Invoices_Bool_Exp>;
};

/** Ordering options when selecting data from "invoices". */
export type Invoices_Order_By = {
  balance?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  customer?: Maybe<Order_By>;
  debtor?: Maybe<Order_By>;
  gross?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  inv_date?: Maybe<Order_By>;
  invoice_logo?: Maybe<Order_By>;
  invoice_no?: Maybe<Order_By>;
  location?: Maybe<Order_By>;
  net?: Maybe<Order_By>;
  paid?: Maybe<Order_By>;
  payment?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  vat?: Maybe<Order_By>;
};

/** primary key columns input for table: invoices */
export type Invoices_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "invoices" */
export enum Invoices_Select_Column {
  /** column name */
  Balance = 'balance',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Customer = 'customer',
  /** column name */
  Debtor = 'debtor',
  /** column name */
  Gross = 'gross',
  /** column name */
  Id = 'id',
  /** column name */
  InvDate = 'inv_date',
  /** column name */
  InvoiceLogo = 'invoice_logo',
  /** column name */
  InvoiceNo = 'invoice_no',
  /** column name */
  Location = 'location',
  /** column name */
  Net = 'net',
  /** column name */
  Paid = 'paid',
  /** column name */
  Payment = 'payment',
  /** column name */
  Status = 'status',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  Vat = 'vat'
}

/** input type for updating data in table "invoices" */
export type Invoices_Set_Input = {
  balance?: Maybe<Scalars['numeric']>;
  customer?: Maybe<Scalars['String']>;
  debtor?: Maybe<Scalars['String']>;
  gross?: Maybe<Scalars['numeric']>;
  inv_date?: Maybe<Scalars['date']>;
  invoice_logo?: Maybe<Scalars['String']>;
  invoice_no?: Maybe<Scalars['Int']>;
  location?: Maybe<Scalars['String']>;
  net?: Maybe<Scalars['numeric']>;
  paid?: Maybe<Scalars['numeric']>;
  payment?: Maybe<Scalars['Boolean']>;
  status?: Maybe<Scalars['String']>;
  vat?: Maybe<Scalars['numeric']>;
};

/** aggregate stddev on columns */
export type Invoices_Stddev_Fields = {
  __typename?: 'invoices_stddev_fields';
  balance?: Maybe<Scalars['Float']>;
  gross?: Maybe<Scalars['Float']>;
  invoice_no?: Maybe<Scalars['Float']>;
  net?: Maybe<Scalars['Float']>;
  paid?: Maybe<Scalars['Float']>;
  vat?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Invoices_Stddev_Pop_Fields = {
  __typename?: 'invoices_stddev_pop_fields';
  balance?: Maybe<Scalars['Float']>;
  gross?: Maybe<Scalars['Float']>;
  invoice_no?: Maybe<Scalars['Float']>;
  net?: Maybe<Scalars['Float']>;
  paid?: Maybe<Scalars['Float']>;
  vat?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Invoices_Stddev_Samp_Fields = {
  __typename?: 'invoices_stddev_samp_fields';
  balance?: Maybe<Scalars['Float']>;
  gross?: Maybe<Scalars['Float']>;
  invoice_no?: Maybe<Scalars['Float']>;
  net?: Maybe<Scalars['Float']>;
  paid?: Maybe<Scalars['Float']>;
  vat?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Invoices_Sum_Fields = {
  __typename?: 'invoices_sum_fields';
  balance?: Maybe<Scalars['numeric']>;
  gross?: Maybe<Scalars['numeric']>;
  invoice_no?: Maybe<Scalars['Int']>;
  net?: Maybe<Scalars['numeric']>;
  paid?: Maybe<Scalars['numeric']>;
  vat?: Maybe<Scalars['numeric']>;
};

/** update columns of table "invoices" */
export enum Invoices_Update_Column {
  /** column name */
  Balance = 'balance',
  /** column name */
  Customer = 'customer',
  /** column name */
  Debtor = 'debtor',
  /** column name */
  Gross = 'gross',
  /** column name */
  InvDate = 'inv_date',
  /** column name */
  InvoiceLogo = 'invoice_logo',
  /** column name */
  InvoiceNo = 'invoice_no',
  /** column name */
  Location = 'location',
  /** column name */
  Net = 'net',
  /** column name */
  Paid = 'paid',
  /** column name */
  Payment = 'payment',
  /** column name */
  Status = 'status',
  /** column name */
  Vat = 'vat'
}

/** aggregate var_pop on columns */
export type Invoices_Var_Pop_Fields = {
  __typename?: 'invoices_var_pop_fields';
  balance?: Maybe<Scalars['Float']>;
  gross?: Maybe<Scalars['Float']>;
  invoice_no?: Maybe<Scalars['Float']>;
  net?: Maybe<Scalars['Float']>;
  paid?: Maybe<Scalars['Float']>;
  vat?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Invoices_Var_Samp_Fields = {
  __typename?: 'invoices_var_samp_fields';
  balance?: Maybe<Scalars['Float']>;
  gross?: Maybe<Scalars['Float']>;
  invoice_no?: Maybe<Scalars['Float']>;
  net?: Maybe<Scalars['Float']>;
  paid?: Maybe<Scalars['Float']>;
  vat?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Invoices_Variance_Fields = {
  __typename?: 'invoices_variance_fields';
  balance?: Maybe<Scalars['Float']>;
  gross?: Maybe<Scalars['Float']>;
  invoice_no?: Maybe<Scalars['Float']>;
  net?: Maybe<Scalars['Float']>;
  paid?: Maybe<Scalars['Float']>;
  vat?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "issuing_company" */
export type Issuing_Company = {
  __typename?: 'issuing_company';
  city?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at: Scalars['timestamptz'];
  id: Scalars['uuid'];
  invoice_prefix?: Maybe<Scalars['String']>;
  invoice_starting_number?: Maybe<Scalars['numeric']>;
  invoice_template?: Maybe<Scalars['String']>;
  is_active?: Maybe<Scalars['Boolean']>;
  name: Scalars['String'];
  order: Scalars['Int'];
  phone?: Maybe<Scalars['String']>;
  post_code?: Maybe<Scalars['numeric']>;
  street?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
  vat_registered?: Maybe<Scalars['Boolean']>;
  website?: Maybe<Scalars['String']>;
};

/** aggregated selection of "issuing_company" */
export type Issuing_Company_Aggregate = {
  __typename?: 'issuing_company_aggregate';
  aggregate?: Maybe<Issuing_Company_Aggregate_Fields>;
  nodes: Array<Issuing_Company>;
};

/** aggregate fields of "issuing_company" */
export type Issuing_Company_Aggregate_Fields = {
  __typename?: 'issuing_company_aggregate_fields';
  avg?: Maybe<Issuing_Company_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Issuing_Company_Max_Fields>;
  min?: Maybe<Issuing_Company_Min_Fields>;
  stddev?: Maybe<Issuing_Company_Stddev_Fields>;
  stddev_pop?: Maybe<Issuing_Company_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Issuing_Company_Stddev_Samp_Fields>;
  sum?: Maybe<Issuing_Company_Sum_Fields>;
  var_pop?: Maybe<Issuing_Company_Var_Pop_Fields>;
  var_samp?: Maybe<Issuing_Company_Var_Samp_Fields>;
  variance?: Maybe<Issuing_Company_Variance_Fields>;
};


/** aggregate fields of "issuing_company" */
export type Issuing_Company_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Issuing_Company_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Issuing_Company_Avg_Fields = {
  __typename?: 'issuing_company_avg_fields';
  invoice_starting_number?: Maybe<Scalars['Float']>;
  order?: Maybe<Scalars['Float']>;
  post_code?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "issuing_company". All fields are combined with a logical 'AND'. */
export type Issuing_Company_Bool_Exp = {
  _and?: Maybe<Array<Issuing_Company_Bool_Exp>>;
  _not?: Maybe<Issuing_Company_Bool_Exp>;
  _or?: Maybe<Array<Issuing_Company_Bool_Exp>>;
  city?: Maybe<String_Comparison_Exp>;
  country?: Maybe<String_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Uuid_Comparison_Exp>;
  invoice_prefix?: Maybe<String_Comparison_Exp>;
  invoice_starting_number?: Maybe<Numeric_Comparison_Exp>;
  invoice_template?: Maybe<String_Comparison_Exp>;
  is_active?: Maybe<Boolean_Comparison_Exp>;
  name?: Maybe<String_Comparison_Exp>;
  order?: Maybe<Int_Comparison_Exp>;
  phone?: Maybe<String_Comparison_Exp>;
  post_code?: Maybe<Numeric_Comparison_Exp>;
  street?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
  vat_registered?: Maybe<Boolean_Comparison_Exp>;
  website?: Maybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "issuing_company" */
export enum Issuing_Company_Constraint {
  /** unique or primary key constraint */
  IssuingCompanyPkey = 'issuing_company_pkey'
}

/** input type for incrementing numeric columns in table "issuing_company" */
export type Issuing_Company_Inc_Input = {
  invoice_starting_number?: Maybe<Scalars['numeric']>;
  order?: Maybe<Scalars['Int']>;
  post_code?: Maybe<Scalars['numeric']>;
};

/** input type for inserting data into table "issuing_company" */
export type Issuing_Company_Insert_Input = {
  city?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  invoice_prefix?: Maybe<Scalars['String']>;
  invoice_starting_number?: Maybe<Scalars['numeric']>;
  invoice_template?: Maybe<Scalars['String']>;
  is_active?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
  phone?: Maybe<Scalars['String']>;
  post_code?: Maybe<Scalars['numeric']>;
  street?: Maybe<Scalars['String']>;
  vat_registered?: Maybe<Scalars['Boolean']>;
  website?: Maybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Issuing_Company_Max_Fields = {
  __typename?: 'issuing_company_max_fields';
  city?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  invoice_prefix?: Maybe<Scalars['String']>;
  invoice_starting_number?: Maybe<Scalars['numeric']>;
  invoice_template?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
  phone?: Maybe<Scalars['String']>;
  post_code?: Maybe<Scalars['numeric']>;
  street?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  website?: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type Issuing_Company_Min_Fields = {
  __typename?: 'issuing_company_min_fields';
  city?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  invoice_prefix?: Maybe<Scalars['String']>;
  invoice_starting_number?: Maybe<Scalars['numeric']>;
  invoice_template?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
  phone?: Maybe<Scalars['String']>;
  post_code?: Maybe<Scalars['numeric']>;
  street?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  website?: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "issuing_company" */
export type Issuing_Company_Mutation_Response = {
  __typename?: 'issuing_company_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Issuing_Company>;
};

/** on conflict condition type for table "issuing_company" */
export type Issuing_Company_On_Conflict = {
  constraint: Issuing_Company_Constraint;
  update_columns: Array<Issuing_Company_Update_Column>;
  where?: Maybe<Issuing_Company_Bool_Exp>;
};

/** Ordering options when selecting data from "issuing_company". */
export type Issuing_Company_Order_By = {
  city?: Maybe<Order_By>;
  country?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  invoice_prefix?: Maybe<Order_By>;
  invoice_starting_number?: Maybe<Order_By>;
  invoice_template?: Maybe<Order_By>;
  is_active?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  order?: Maybe<Order_By>;
  phone?: Maybe<Order_By>;
  post_code?: Maybe<Order_By>;
  street?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  vat_registered?: Maybe<Order_By>;
  website?: Maybe<Order_By>;
};

/** primary key columns input for table: issuing_company */
export type Issuing_Company_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "issuing_company" */
export enum Issuing_Company_Select_Column {
  /** column name */
  City = 'city',
  /** column name */
  Country = 'country',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  InvoicePrefix = 'invoice_prefix',
  /** column name */
  InvoiceStartingNumber = 'invoice_starting_number',
  /** column name */
  InvoiceTemplate = 'invoice_template',
  /** column name */
  IsActive = 'is_active',
  /** column name */
  Name = 'name',
  /** column name */
  Order = 'order',
  /** column name */
  Phone = 'phone',
  /** column name */
  PostCode = 'post_code',
  /** column name */
  Street = 'street',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  VatRegistered = 'vat_registered',
  /** column name */
  Website = 'website'
}

/** input type for updating data in table "issuing_company" */
export type Issuing_Company_Set_Input = {
  city?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  invoice_prefix?: Maybe<Scalars['String']>;
  invoice_starting_number?: Maybe<Scalars['numeric']>;
  invoice_template?: Maybe<Scalars['String']>;
  is_active?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
  phone?: Maybe<Scalars['String']>;
  post_code?: Maybe<Scalars['numeric']>;
  street?: Maybe<Scalars['String']>;
  vat_registered?: Maybe<Scalars['Boolean']>;
  website?: Maybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type Issuing_Company_Stddev_Fields = {
  __typename?: 'issuing_company_stddev_fields';
  invoice_starting_number?: Maybe<Scalars['Float']>;
  order?: Maybe<Scalars['Float']>;
  post_code?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Issuing_Company_Stddev_Pop_Fields = {
  __typename?: 'issuing_company_stddev_pop_fields';
  invoice_starting_number?: Maybe<Scalars['Float']>;
  order?: Maybe<Scalars['Float']>;
  post_code?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Issuing_Company_Stddev_Samp_Fields = {
  __typename?: 'issuing_company_stddev_samp_fields';
  invoice_starting_number?: Maybe<Scalars['Float']>;
  order?: Maybe<Scalars['Float']>;
  post_code?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Issuing_Company_Sum_Fields = {
  __typename?: 'issuing_company_sum_fields';
  invoice_starting_number?: Maybe<Scalars['numeric']>;
  order?: Maybe<Scalars['Int']>;
  post_code?: Maybe<Scalars['numeric']>;
};

/** update columns of table "issuing_company" */
export enum Issuing_Company_Update_Column {
  /** column name */
  City = 'city',
  /** column name */
  Country = 'country',
  /** column name */
  InvoicePrefix = 'invoice_prefix',
  /** column name */
  InvoiceStartingNumber = 'invoice_starting_number',
  /** column name */
  InvoiceTemplate = 'invoice_template',
  /** column name */
  IsActive = 'is_active',
  /** column name */
  Name = 'name',
  /** column name */
  Order = 'order',
  /** column name */
  Phone = 'phone',
  /** column name */
  PostCode = 'post_code',
  /** column name */
  Street = 'street',
  /** column name */
  VatRegistered = 'vat_registered',
  /** column name */
  Website = 'website'
}

/** aggregate var_pop on columns */
export type Issuing_Company_Var_Pop_Fields = {
  __typename?: 'issuing_company_var_pop_fields';
  invoice_starting_number?: Maybe<Scalars['Float']>;
  order?: Maybe<Scalars['Float']>;
  post_code?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Issuing_Company_Var_Samp_Fields = {
  __typename?: 'issuing_company_var_samp_fields';
  invoice_starting_number?: Maybe<Scalars['Float']>;
  order?: Maybe<Scalars['Float']>;
  post_code?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Issuing_Company_Variance_Fields = {
  __typename?: 'issuing_company_variance_fields';
  invoice_starting_number?: Maybe<Scalars['Float']>;
  order?: Maybe<Scalars['Float']>;
  post_code?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "job_candidates" */
export type Job_Candidates = {
  __typename?: 'job_candidates';
  candidate_id: Scalars['Int'];
  /** An object relationship */
  candidate_list: Candidate_List;
  created_at: Scalars['timestamptz'];
  id: Scalars['Int'];
  is_new: Scalars['Boolean'];
  /** An object relationship */
  job_opening: Job_Openings;
  job_opening_id: Scalars['Int'];
  status: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};

/** order by aggregate values of table "job_candidates" */
export type Job_Candidates_Aggregate_Order_By = {
  avg?: Maybe<Job_Candidates_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Job_Candidates_Max_Order_By>;
  min?: Maybe<Job_Candidates_Min_Order_By>;
  stddev?: Maybe<Job_Candidates_Stddev_Order_By>;
  stddev_pop?: Maybe<Job_Candidates_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Job_Candidates_Stddev_Samp_Order_By>;
  sum?: Maybe<Job_Candidates_Sum_Order_By>;
  var_pop?: Maybe<Job_Candidates_Var_Pop_Order_By>;
  var_samp?: Maybe<Job_Candidates_Var_Samp_Order_By>;
  variance?: Maybe<Job_Candidates_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "job_candidates" */
export type Job_Candidates_Arr_Rel_Insert_Input = {
  data: Array<Job_Candidates_Insert_Input>;
  /** on conflict condition */
  on_conflict?: Maybe<Job_Candidates_On_Conflict>;
};

/** order by avg() on columns of table "job_candidates" */
export type Job_Candidates_Avg_Order_By = {
  candidate_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  job_opening_id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "job_candidates". All fields are combined with a logical 'AND'. */
export type Job_Candidates_Bool_Exp = {
  _and?: Maybe<Array<Job_Candidates_Bool_Exp>>;
  _not?: Maybe<Job_Candidates_Bool_Exp>;
  _or?: Maybe<Array<Job_Candidates_Bool_Exp>>;
  candidate_id?: Maybe<Int_Comparison_Exp>;
  candidate_list?: Maybe<Candidate_List_Bool_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  is_new?: Maybe<Boolean_Comparison_Exp>;
  job_opening?: Maybe<Job_Openings_Bool_Exp>;
  job_opening_id?: Maybe<Int_Comparison_Exp>;
  status?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "job_candidates" */
export enum Job_Candidates_Constraint {
  /** unique or primary key constraint */
  JobCandidatesPkey = 'job_candidates_pkey'
}

/** input type for incrementing numeric columns in table "job_candidates" */
export type Job_Candidates_Inc_Input = {
  candidate_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  job_opening_id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "job_candidates" */
export type Job_Candidates_Insert_Input = {
  candidate_id?: Maybe<Scalars['Int']>;
  candidate_list?: Maybe<Candidate_List_Obj_Rel_Insert_Input>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  is_new?: Maybe<Scalars['Boolean']>;
  job_opening?: Maybe<Job_Openings_Obj_Rel_Insert_Input>;
  job_opening_id?: Maybe<Scalars['Int']>;
  status?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "job_candidates" */
export type Job_Candidates_Max_Order_By = {
  candidate_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  job_opening_id?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** order by min() on columns of table "job_candidates" */
export type Job_Candidates_Min_Order_By = {
  candidate_id?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  job_opening_id?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "job_candidates" */
export type Job_Candidates_Mutation_Response = {
  __typename?: 'job_candidates_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Job_Candidates>;
};

/** on conflict condition type for table "job_candidates" */
export type Job_Candidates_On_Conflict = {
  constraint: Job_Candidates_Constraint;
  update_columns: Array<Job_Candidates_Update_Column>;
  where?: Maybe<Job_Candidates_Bool_Exp>;
};

/** Ordering options when selecting data from "job_candidates". */
export type Job_Candidates_Order_By = {
  candidate_id?: Maybe<Order_By>;
  candidate_list?: Maybe<Candidate_List_Order_By>;
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  is_new?: Maybe<Order_By>;
  job_opening?: Maybe<Job_Openings_Order_By>;
  job_opening_id?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: job_candidates */
export type Job_Candidates_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "job_candidates" */
export enum Job_Candidates_Select_Column {
  /** column name */
  CandidateId = 'candidate_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  IsNew = 'is_new',
  /** column name */
  JobOpeningId = 'job_opening_id',
  /** column name */
  Status = 'status',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "job_candidates" */
export type Job_Candidates_Set_Input = {
  candidate_id?: Maybe<Scalars['Int']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  is_new?: Maybe<Scalars['Boolean']>;
  job_opening_id?: Maybe<Scalars['Int']>;
  status?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by stddev() on columns of table "job_candidates" */
export type Job_Candidates_Stddev_Order_By = {
  candidate_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  job_opening_id?: Maybe<Order_By>;
};

/** order by stddev_pop() on columns of table "job_candidates" */
export type Job_Candidates_Stddev_Pop_Order_By = {
  candidate_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  job_opening_id?: Maybe<Order_By>;
};

/** order by stddev_samp() on columns of table "job_candidates" */
export type Job_Candidates_Stddev_Samp_Order_By = {
  candidate_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  job_opening_id?: Maybe<Order_By>;
};

/** order by sum() on columns of table "job_candidates" */
export type Job_Candidates_Sum_Order_By = {
  candidate_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  job_opening_id?: Maybe<Order_By>;
};

/** update columns of table "job_candidates" */
export enum Job_Candidates_Update_Column {
  /** column name */
  CandidateId = 'candidate_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  IsNew = 'is_new',
  /** column name */
  JobOpeningId = 'job_opening_id',
  /** column name */
  Status = 'status',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** order by var_pop() on columns of table "job_candidates" */
export type Job_Candidates_Var_Pop_Order_By = {
  candidate_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  job_opening_id?: Maybe<Order_By>;
};

/** order by var_samp() on columns of table "job_candidates" */
export type Job_Candidates_Var_Samp_Order_By = {
  candidate_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  job_opening_id?: Maybe<Order_By>;
};

/** order by variance() on columns of table "job_candidates" */
export type Job_Candidates_Variance_Order_By = {
  candidate_id?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  job_opening_id?: Maybe<Order_By>;
};

/** columns and relationships of "job_openings" */
export type Job_Openings = {
  __typename?: 'job_openings';
  city: Scalars['String'];
  country: Scalars['String'];
  created_at: Scalars['timestamptz'];
  hiring_lead: Scalars['Int'];
  id: Scalars['Int'];
  is_active?: Maybe<Scalars['Boolean']>;
  /** An array relationship */
  job_candidates: Array<Job_Candidates>;
  title: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};


/** columns and relationships of "job_openings" */
export type Job_OpeningsJob_CandidatesArgs = {
  distinct_on?: Maybe<Array<Job_Candidates_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Job_Candidates_Order_By>>;
  where?: Maybe<Job_Candidates_Bool_Exp>;
};

/** Boolean expression to filter rows from the table "job_openings". All fields are combined with a logical 'AND'. */
export type Job_Openings_Bool_Exp = {
  _and?: Maybe<Array<Job_Openings_Bool_Exp>>;
  _not?: Maybe<Job_Openings_Bool_Exp>;
  _or?: Maybe<Array<Job_Openings_Bool_Exp>>;
  city?: Maybe<String_Comparison_Exp>;
  country?: Maybe<String_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  hiring_lead?: Maybe<Int_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  is_active?: Maybe<Boolean_Comparison_Exp>;
  job_candidates?: Maybe<Job_Candidates_Bool_Exp>;
  title?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "job_openings" */
export enum Job_Openings_Constraint {
  /** unique or primary key constraint */
  JobOpeningsPkey = 'job_openings_pkey'
}

/** input type for incrementing numeric columns in table "job_openings" */
export type Job_Openings_Inc_Input = {
  hiring_lead?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "job_openings" */
export type Job_Openings_Insert_Input = {
  city?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  hiring_lead?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  is_active?: Maybe<Scalars['Boolean']>;
  job_candidates?: Maybe<Job_Candidates_Arr_Rel_Insert_Input>;
  title?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "job_openings" */
export type Job_Openings_Mutation_Response = {
  __typename?: 'job_openings_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Job_Openings>;
};

/** input type for inserting object relation for remote table "job_openings" */
export type Job_Openings_Obj_Rel_Insert_Input = {
  data: Job_Openings_Insert_Input;
  /** on conflict condition */
  on_conflict?: Maybe<Job_Openings_On_Conflict>;
};

/** on conflict condition type for table "job_openings" */
export type Job_Openings_On_Conflict = {
  constraint: Job_Openings_Constraint;
  update_columns: Array<Job_Openings_Update_Column>;
  where?: Maybe<Job_Openings_Bool_Exp>;
};

/** Ordering options when selecting data from "job_openings". */
export type Job_Openings_Order_By = {
  city?: Maybe<Order_By>;
  country?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  hiring_lead?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  is_active?: Maybe<Order_By>;
  job_candidates_aggregate?: Maybe<Job_Candidates_Aggregate_Order_By>;
  title?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: job_openings */
export type Job_Openings_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "job_openings" */
export enum Job_Openings_Select_Column {
  /** column name */
  City = 'city',
  /** column name */
  Country = 'country',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  HiringLead = 'hiring_lead',
  /** column name */
  Id = 'id',
  /** column name */
  IsActive = 'is_active',
  /** column name */
  Title = 'title',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "job_openings" */
export type Job_Openings_Set_Input = {
  city?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  hiring_lead?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  is_active?: Maybe<Scalars['Boolean']>;
  title?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** update columns of table "job_openings" */
export enum Job_Openings_Update_Column {
  /** column name */
  City = 'city',
  /** column name */
  Country = 'country',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  HiringLead = 'hiring_lead',
  /** column name */
  Id = 'id',
  /** column name */
  IsActive = 'is_active',
  /** column name */
  Title = 'title',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** columns and relationships of "job_title" */
export type Job_Title = {
  __typename?: 'job_title';
  created_at: Scalars['timestamptz'];
  id: Scalars['uuid'];
  is_active: Scalars['Boolean'];
  name: Scalars['String'];
  order: Scalars['Int'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "job_title" */
export type Job_Title_Aggregate = {
  __typename?: 'job_title_aggregate';
  aggregate?: Maybe<Job_Title_Aggregate_Fields>;
  nodes: Array<Job_Title>;
};

/** aggregate fields of "job_title" */
export type Job_Title_Aggregate_Fields = {
  __typename?: 'job_title_aggregate_fields';
  avg?: Maybe<Job_Title_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Job_Title_Max_Fields>;
  min?: Maybe<Job_Title_Min_Fields>;
  stddev?: Maybe<Job_Title_Stddev_Fields>;
  stddev_pop?: Maybe<Job_Title_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Job_Title_Stddev_Samp_Fields>;
  sum?: Maybe<Job_Title_Sum_Fields>;
  var_pop?: Maybe<Job_Title_Var_Pop_Fields>;
  var_samp?: Maybe<Job_Title_Var_Samp_Fields>;
  variance?: Maybe<Job_Title_Variance_Fields>;
};


/** aggregate fields of "job_title" */
export type Job_Title_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Job_Title_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Job_Title_Avg_Fields = {
  __typename?: 'job_title_avg_fields';
  order?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "job_title". All fields are combined with a logical 'AND'. */
export type Job_Title_Bool_Exp = {
  _and?: Maybe<Array<Job_Title_Bool_Exp>>;
  _not?: Maybe<Job_Title_Bool_Exp>;
  _or?: Maybe<Array<Job_Title_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Uuid_Comparison_Exp>;
  is_active?: Maybe<Boolean_Comparison_Exp>;
  name?: Maybe<String_Comparison_Exp>;
  order?: Maybe<Int_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "job_title" */
export enum Job_Title_Constraint {
  /** unique or primary key constraint */
  JobTitlePkey = 'job_title_pkey'
}

/** input type for incrementing numeric columns in table "job_title" */
export type Job_Title_Inc_Input = {
  order?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "job_title" */
export type Job_Title_Insert_Input = {
  is_active?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
};

/** aggregate max on columns */
export type Job_Title_Max_Fields = {
  __typename?: 'job_title_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type Job_Title_Min_Fields = {
  __typename?: 'job_title_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "job_title" */
export type Job_Title_Mutation_Response = {
  __typename?: 'job_title_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Job_Title>;
};

/** on conflict condition type for table "job_title" */
export type Job_Title_On_Conflict = {
  constraint: Job_Title_Constraint;
  update_columns: Array<Job_Title_Update_Column>;
  where?: Maybe<Job_Title_Bool_Exp>;
};

/** Ordering options when selecting data from "job_title". */
export type Job_Title_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  is_active?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  order?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: job_title */
export type Job_Title_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "job_title" */
export enum Job_Title_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  IsActive = 'is_active',
  /** column name */
  Name = 'name',
  /** column name */
  Order = 'order',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "job_title" */
export type Job_Title_Set_Input = {
  is_active?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Job_Title_Stddev_Fields = {
  __typename?: 'job_title_stddev_fields';
  order?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Job_Title_Stddev_Pop_Fields = {
  __typename?: 'job_title_stddev_pop_fields';
  order?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Job_Title_Stddev_Samp_Fields = {
  __typename?: 'job_title_stddev_samp_fields';
  order?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Job_Title_Sum_Fields = {
  __typename?: 'job_title_sum_fields';
  order?: Maybe<Scalars['Int']>;
};

/** update columns of table "job_title" */
export enum Job_Title_Update_Column {
  /** column name */
  IsActive = 'is_active',
  /** column name */
  Name = 'name',
  /** column name */
  Order = 'order',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Job_Title_Var_Pop_Fields = {
  __typename?: 'job_title_var_pop_fields';
  order?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Job_Title_Var_Samp_Fields = {
  __typename?: 'job_title_var_samp_fields';
  order?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Job_Title_Variance_Fields = {
  __typename?: 'job_title_variance_fields';
  order?: Maybe<Scalars['Float']>;
};


/** Boolean expression to compare columns of type "json". All fields are combined with logical 'AND'. */
export type Json_Comparison_Exp = {
  _eq?: Maybe<Scalars['json']>;
  _gt?: Maybe<Scalars['json']>;
  _gte?: Maybe<Scalars['json']>;
  _in?: Maybe<Array<Scalars['json']>>;
  _is_null?: Maybe<Scalars['Boolean']>;
  _lt?: Maybe<Scalars['json']>;
  _lte?: Maybe<Scalars['json']>;
  _neq?: Maybe<Scalars['json']>;
  _nin?: Maybe<Array<Scalars['json']>>;
};


/** Boolean expression to compare columns of type "jsonb". All fields are combined with logical 'AND'. */
export type Jsonb_Comparison_Exp = {
  /** is the column contained in the given json value */
  _contained_in?: Maybe<Scalars['jsonb']>;
  /** does the column contain the given json value at the top level */
  _contains?: Maybe<Scalars['jsonb']>;
  _eq?: Maybe<Scalars['jsonb']>;
  _gt?: Maybe<Scalars['jsonb']>;
  _gte?: Maybe<Scalars['jsonb']>;
  /** does the string exist as a top-level key in the column */
  _has_key?: Maybe<Scalars['String']>;
  /** do all of these strings exist as top-level keys in the column */
  _has_keys_all?: Maybe<Array<Scalars['String']>>;
  /** do any of these strings exist as top-level keys in the column */
  _has_keys_any?: Maybe<Array<Scalars['String']>>;
  _in?: Maybe<Array<Scalars['jsonb']>>;
  _is_null?: Maybe<Scalars['Boolean']>;
  _lt?: Maybe<Scalars['jsonb']>;
  _lte?: Maybe<Scalars['jsonb']>;
  _neq?: Maybe<Scalars['jsonb']>;
  _nin?: Maybe<Array<Scalars['jsonb']>>;
};

/** columns and relationships of "labs_dashboard" */
export type Labs_Dashboard = {
  __typename?: 'labs_dashboard';
  client: Scalars['String'];
  lab: Scalars['String'];
  labNo: Scalars['Int'];
  lastUpdate: Scalars['String'];
  public: Scalars['String'];
  requested: Scalars['String'];
  requester: Scalars['String'];
  test: Scalars['String'];
};

/** aggregated selection of "labs_dashboard" */
export type Labs_Dashboard_Aggregate = {
  __typename?: 'labs_dashboard_aggregate';
  aggregate?: Maybe<Labs_Dashboard_Aggregate_Fields>;
  nodes: Array<Labs_Dashboard>;
};

/** aggregate fields of "labs_dashboard" */
export type Labs_Dashboard_Aggregate_Fields = {
  __typename?: 'labs_dashboard_aggregate_fields';
  avg?: Maybe<Labs_Dashboard_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Labs_Dashboard_Max_Fields>;
  min?: Maybe<Labs_Dashboard_Min_Fields>;
  stddev?: Maybe<Labs_Dashboard_Stddev_Fields>;
  stddev_pop?: Maybe<Labs_Dashboard_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Labs_Dashboard_Stddev_Samp_Fields>;
  sum?: Maybe<Labs_Dashboard_Sum_Fields>;
  var_pop?: Maybe<Labs_Dashboard_Var_Pop_Fields>;
  var_samp?: Maybe<Labs_Dashboard_Var_Samp_Fields>;
  variance?: Maybe<Labs_Dashboard_Variance_Fields>;
};


/** aggregate fields of "labs_dashboard" */
export type Labs_Dashboard_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Labs_Dashboard_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Labs_Dashboard_Avg_Fields = {
  __typename?: 'labs_dashboard_avg_fields';
  labNo?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "labs_dashboard". All fields are combined with a logical 'AND'. */
export type Labs_Dashboard_Bool_Exp = {
  _and?: Maybe<Array<Labs_Dashboard_Bool_Exp>>;
  _not?: Maybe<Labs_Dashboard_Bool_Exp>;
  _or?: Maybe<Array<Labs_Dashboard_Bool_Exp>>;
  client?: Maybe<String_Comparison_Exp>;
  lab?: Maybe<String_Comparison_Exp>;
  labNo?: Maybe<Int_Comparison_Exp>;
  lastUpdate?: Maybe<String_Comparison_Exp>;
  public?: Maybe<String_Comparison_Exp>;
  requested?: Maybe<String_Comparison_Exp>;
  requester?: Maybe<String_Comparison_Exp>;
  test?: Maybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "labs_dashboard" */
export enum Labs_Dashboard_Constraint {
  /** unique or primary key constraint */
  LabsDashboardPkey = 'labs_dashboard_pkey'
}

/** input type for incrementing numeric columns in table "labs_dashboard" */
export type Labs_Dashboard_Inc_Input = {
  labNo?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "labs_dashboard" */
export type Labs_Dashboard_Insert_Input = {
  client?: Maybe<Scalars['String']>;
  lab?: Maybe<Scalars['String']>;
  labNo?: Maybe<Scalars['Int']>;
  lastUpdate?: Maybe<Scalars['String']>;
  public?: Maybe<Scalars['String']>;
  requested?: Maybe<Scalars['String']>;
  requester?: Maybe<Scalars['String']>;
  test?: Maybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Labs_Dashboard_Max_Fields = {
  __typename?: 'labs_dashboard_max_fields';
  client?: Maybe<Scalars['String']>;
  lab?: Maybe<Scalars['String']>;
  labNo?: Maybe<Scalars['Int']>;
  lastUpdate?: Maybe<Scalars['String']>;
  public?: Maybe<Scalars['String']>;
  requested?: Maybe<Scalars['String']>;
  requester?: Maybe<Scalars['String']>;
  test?: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type Labs_Dashboard_Min_Fields = {
  __typename?: 'labs_dashboard_min_fields';
  client?: Maybe<Scalars['String']>;
  lab?: Maybe<Scalars['String']>;
  labNo?: Maybe<Scalars['Int']>;
  lastUpdate?: Maybe<Scalars['String']>;
  public?: Maybe<Scalars['String']>;
  requested?: Maybe<Scalars['String']>;
  requester?: Maybe<Scalars['String']>;
  test?: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "labs_dashboard" */
export type Labs_Dashboard_Mutation_Response = {
  __typename?: 'labs_dashboard_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Labs_Dashboard>;
};

/** on conflict condition type for table "labs_dashboard" */
export type Labs_Dashboard_On_Conflict = {
  constraint: Labs_Dashboard_Constraint;
  update_columns: Array<Labs_Dashboard_Update_Column>;
  where?: Maybe<Labs_Dashboard_Bool_Exp>;
};

/** Ordering options when selecting data from "labs_dashboard". */
export type Labs_Dashboard_Order_By = {
  client?: Maybe<Order_By>;
  lab?: Maybe<Order_By>;
  labNo?: Maybe<Order_By>;
  lastUpdate?: Maybe<Order_By>;
  public?: Maybe<Order_By>;
  requested?: Maybe<Order_By>;
  requester?: Maybe<Order_By>;
  test?: Maybe<Order_By>;
};

/** primary key columns input for table: labs_dashboard */
export type Labs_Dashboard_Pk_Columns_Input = {
  labNo: Scalars['Int'];
};

/** select columns of table "labs_dashboard" */
export enum Labs_Dashboard_Select_Column {
  /** column name */
  Client = 'client',
  /** column name */
  Lab = 'lab',
  /** column name */
  LabNo = 'labNo',
  /** column name */
  LastUpdate = 'lastUpdate',
  /** column name */
  Public = 'public',
  /** column name */
  Requested = 'requested',
  /** column name */
  Requester = 'requester',
  /** column name */
  Test = 'test'
}

/** input type for updating data in table "labs_dashboard" */
export type Labs_Dashboard_Set_Input = {
  client?: Maybe<Scalars['String']>;
  lab?: Maybe<Scalars['String']>;
  labNo?: Maybe<Scalars['Int']>;
  lastUpdate?: Maybe<Scalars['String']>;
  public?: Maybe<Scalars['String']>;
  requested?: Maybe<Scalars['String']>;
  requester?: Maybe<Scalars['String']>;
  test?: Maybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type Labs_Dashboard_Stddev_Fields = {
  __typename?: 'labs_dashboard_stddev_fields';
  labNo?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Labs_Dashboard_Stddev_Pop_Fields = {
  __typename?: 'labs_dashboard_stddev_pop_fields';
  labNo?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Labs_Dashboard_Stddev_Samp_Fields = {
  __typename?: 'labs_dashboard_stddev_samp_fields';
  labNo?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Labs_Dashboard_Sum_Fields = {
  __typename?: 'labs_dashboard_sum_fields';
  labNo?: Maybe<Scalars['Int']>;
};

/** update columns of table "labs_dashboard" */
export enum Labs_Dashboard_Update_Column {
  /** column name */
  Client = 'client',
  /** column name */
  Lab = 'lab',
  /** column name */
  LabNo = 'labNo',
  /** column name */
  LastUpdate = 'lastUpdate',
  /** column name */
  Public = 'public',
  /** column name */
  Requested = 'requested',
  /** column name */
  Requester = 'requester',
  /** column name */
  Test = 'test'
}

/** aggregate var_pop on columns */
export type Labs_Dashboard_Var_Pop_Fields = {
  __typename?: 'labs_dashboard_var_pop_fields';
  labNo?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Labs_Dashboard_Var_Samp_Fields = {
  __typename?: 'labs_dashboard_var_samp_fields';
  labNo?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Labs_Dashboard_Variance_Fields = {
  __typename?: 'labs_dashboard_variance_fields';
  labNo?: Maybe<Scalars['Float']>;
};

/**
 * lead view
 *
 *
 * columns and relationships of "lead"
 */
export type Lead = {
  __typename?: 'lead';
  age: Scalars['Int'];
  created_at?: Maybe<Scalars['date']>;
  email: Scalars['String'];
  id: Scalars['uuid'];
  interest: Scalars['String'];
  is_active: Scalars['Boolean'];
  location: Scalars['String'];
  name: Scalars['String'];
  order: Scalars['Int'];
  owner: Scalars['String'];
  phone: Scalars['numeric'];
  source: Scalars['String'];
  status: Scalars['String'];
  updated_at?: Maybe<Scalars['date']>;
};

/** Boolean expression to filter rows from the table "lead". All fields are combined with a logical 'AND'. */
export type Lead_Bool_Exp = {
  _and?: Maybe<Array<Lead_Bool_Exp>>;
  _not?: Maybe<Lead_Bool_Exp>;
  _or?: Maybe<Array<Lead_Bool_Exp>>;
  age?: Maybe<Int_Comparison_Exp>;
  created_at?: Maybe<Date_Comparison_Exp>;
  email?: Maybe<String_Comparison_Exp>;
  id?: Maybe<Uuid_Comparison_Exp>;
  interest?: Maybe<String_Comparison_Exp>;
  is_active?: Maybe<Boolean_Comparison_Exp>;
  location?: Maybe<String_Comparison_Exp>;
  name?: Maybe<String_Comparison_Exp>;
  order?: Maybe<Int_Comparison_Exp>;
  owner?: Maybe<String_Comparison_Exp>;
  phone?: Maybe<Numeric_Comparison_Exp>;
  source?: Maybe<String_Comparison_Exp>;
  status?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Date_Comparison_Exp>;
};

/** unique or primary key constraints on table "lead" */
export enum Lead_Constraint {
  /** unique or primary key constraint */
  LeadsPkey = 'leads_pkey'
}

/** columns and relationships of "lead_fields" */
export type Lead_Fields = {
  __typename?: 'lead_fields';
  category?: Maybe<Scalars['String']>;
  created_date: Scalars['timestamptz'];
  fieldFor?: Maybe<Scalars['String']>;
  format?: Maybe<Scalars['String']>;
  id: Scalars['uuid'];
  is_active: Scalars['Boolean'];
  is_locked: Scalars['Boolean'];
  is_mendatory: Scalars['Boolean'];
  is_private: Scalars['Boolean'];
  label?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
};

/** aggregated selection of "lead_fields" */
export type Lead_Fields_Aggregate = {
  __typename?: 'lead_fields_aggregate';
  aggregate?: Maybe<Lead_Fields_Aggregate_Fields>;
  nodes: Array<Lead_Fields>;
};

/** aggregate fields of "lead_fields" */
export type Lead_Fields_Aggregate_Fields = {
  __typename?: 'lead_fields_aggregate_fields';
  count: Scalars['Int'];
  max?: Maybe<Lead_Fields_Max_Fields>;
  min?: Maybe<Lead_Fields_Min_Fields>;
};


/** aggregate fields of "lead_fields" */
export type Lead_Fields_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Lead_Fields_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** Boolean expression to filter rows from the table "lead_fields". All fields are combined with a logical 'AND'. */
export type Lead_Fields_Bool_Exp = {
  _and?: Maybe<Array<Lead_Fields_Bool_Exp>>;
  _not?: Maybe<Lead_Fields_Bool_Exp>;
  _or?: Maybe<Array<Lead_Fields_Bool_Exp>>;
  category?: Maybe<String_Comparison_Exp>;
  created_date?: Maybe<Timestamptz_Comparison_Exp>;
  fieldFor?: Maybe<String_Comparison_Exp>;
  format?: Maybe<String_Comparison_Exp>;
  id?: Maybe<Uuid_Comparison_Exp>;
  is_active?: Maybe<Boolean_Comparison_Exp>;
  is_locked?: Maybe<Boolean_Comparison_Exp>;
  is_mendatory?: Maybe<Boolean_Comparison_Exp>;
  is_private?: Maybe<Boolean_Comparison_Exp>;
  label?: Maybe<String_Comparison_Exp>;
  name?: Maybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "lead_fields" */
export enum Lead_Fields_Constraint {
  /** unique or primary key constraint */
  LeadFieldsPkey = 'lead_fields_pkey'
}

/** input type for inserting data into table "lead_fields" */
export type Lead_Fields_Insert_Input = {
  category?: Maybe<Scalars['String']>;
  created_date?: Maybe<Scalars['timestamptz']>;
  fieldFor?: Maybe<Scalars['String']>;
  format?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  is_active?: Maybe<Scalars['Boolean']>;
  is_locked?: Maybe<Scalars['Boolean']>;
  is_mendatory?: Maybe<Scalars['Boolean']>;
  is_private?: Maybe<Scalars['Boolean']>;
  label?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Lead_Fields_Max_Fields = {
  __typename?: 'lead_fields_max_fields';
  category?: Maybe<Scalars['String']>;
  created_date?: Maybe<Scalars['timestamptz']>;
  fieldFor?: Maybe<Scalars['String']>;
  format?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  label?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type Lead_Fields_Min_Fields = {
  __typename?: 'lead_fields_min_fields';
  category?: Maybe<Scalars['String']>;
  created_date?: Maybe<Scalars['timestamptz']>;
  fieldFor?: Maybe<Scalars['String']>;
  format?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  label?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "lead_fields" */
export type Lead_Fields_Mutation_Response = {
  __typename?: 'lead_fields_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Lead_Fields>;
};

/** on conflict condition type for table "lead_fields" */
export type Lead_Fields_On_Conflict = {
  constraint: Lead_Fields_Constraint;
  update_columns: Array<Lead_Fields_Update_Column>;
  where?: Maybe<Lead_Fields_Bool_Exp>;
};

/** Ordering options when selecting data from "lead_fields". */
export type Lead_Fields_Order_By = {
  category?: Maybe<Order_By>;
  created_date?: Maybe<Order_By>;
  fieldFor?: Maybe<Order_By>;
  format?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  is_active?: Maybe<Order_By>;
  is_locked?: Maybe<Order_By>;
  is_mendatory?: Maybe<Order_By>;
  is_private?: Maybe<Order_By>;
  label?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
};

/** primary key columns input for table: lead_fields */
export type Lead_Fields_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "lead_fields" */
export enum Lead_Fields_Select_Column {
  /** column name */
  Category = 'category',
  /** column name */
  CreatedDate = 'created_date',
  /** column name */
  FieldFor = 'fieldFor',
  /** column name */
  Format = 'format',
  /** column name */
  Id = 'id',
  /** column name */
  IsActive = 'is_active',
  /** column name */
  IsLocked = 'is_locked',
  /** column name */
  IsMendatory = 'is_mendatory',
  /** column name */
  IsPrivate = 'is_private',
  /** column name */
  Label = 'label',
  /** column name */
  Name = 'name'
}

/** input type for updating data in table "lead_fields" */
export type Lead_Fields_Set_Input = {
  category?: Maybe<Scalars['String']>;
  created_date?: Maybe<Scalars['timestamptz']>;
  fieldFor?: Maybe<Scalars['String']>;
  format?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  is_active?: Maybe<Scalars['Boolean']>;
  is_locked?: Maybe<Scalars['Boolean']>;
  is_mendatory?: Maybe<Scalars['Boolean']>;
  is_private?: Maybe<Scalars['Boolean']>;
  label?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
};

/** update columns of table "lead_fields" */
export enum Lead_Fields_Update_Column {
  /** column name */
  Category = 'category',
  /** column name */
  CreatedDate = 'created_date',
  /** column name */
  FieldFor = 'fieldFor',
  /** column name */
  Format = 'format',
  /** column name */
  Id = 'id',
  /** column name */
  IsActive = 'is_active',
  /** column name */
  IsLocked = 'is_locked',
  /** column name */
  IsMendatory = 'is_mendatory',
  /** column name */
  IsPrivate = 'is_private',
  /** column name */
  Label = 'label',
  /** column name */
  Name = 'name'
}

/** input type for incrementing numeric columns in table "lead" */
export type Lead_Inc_Input = {
  age?: Maybe<Scalars['Int']>;
  order?: Maybe<Scalars['Int']>;
  phone?: Maybe<Scalars['numeric']>;
};

/** input type for inserting data into table "lead" */
export type Lead_Insert_Input = {
  age?: Maybe<Scalars['Int']>;
  created_at?: Maybe<Scalars['date']>;
  email?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  interest?: Maybe<Scalars['String']>;
  is_active?: Maybe<Scalars['Boolean']>;
  location?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
  owner?: Maybe<Scalars['String']>;
  phone?: Maybe<Scalars['numeric']>;
  source?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['date']>;
};

/** response of any mutation on the table "lead" */
export type Lead_Mutation_Response = {
  __typename?: 'lead_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Lead>;
};

/** on conflict condition type for table "lead" */
export type Lead_On_Conflict = {
  constraint: Lead_Constraint;
  update_columns: Array<Lead_Update_Column>;
  where?: Maybe<Lead_Bool_Exp>;
};

/** Ordering options when selecting data from "lead". */
export type Lead_Order_By = {
  age?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  email?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  interest?: Maybe<Order_By>;
  is_active?: Maybe<Order_By>;
  location?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  order?: Maybe<Order_By>;
  owner?: Maybe<Order_By>;
  phone?: Maybe<Order_By>;
  source?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: lead */
export type Lead_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "lead" */
export enum Lead_Select_Column {
  /** column name */
  Age = 'age',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Email = 'email',
  /** column name */
  Id = 'id',
  /** column name */
  Interest = 'interest',
  /** column name */
  IsActive = 'is_active',
  /** column name */
  Location = 'location',
  /** column name */
  Name = 'name',
  /** column name */
  Order = 'order',
  /** column name */
  Owner = 'owner',
  /** column name */
  Phone = 'phone',
  /** column name */
  Source = 'source',
  /** column name */
  Status = 'status',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "lead" */
export type Lead_Set_Input = {
  age?: Maybe<Scalars['Int']>;
  created_at?: Maybe<Scalars['date']>;
  email?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  interest?: Maybe<Scalars['String']>;
  is_active?: Maybe<Scalars['Boolean']>;
  location?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
  owner?: Maybe<Scalars['String']>;
  phone?: Maybe<Scalars['numeric']>;
  source?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['date']>;
};

/** update columns of table "lead" */
export enum Lead_Update_Column {
  /** column name */
  Age = 'age',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Email = 'email',
  /** column name */
  Id = 'id',
  /** column name */
  Interest = 'interest',
  /** column name */
  IsActive = 'is_active',
  /** column name */
  Location = 'location',
  /** column name */
  Name = 'name',
  /** column name */
  Order = 'order',
  /** column name */
  Owner = 'owner',
  /** column name */
  Phone = 'phone',
  /** column name */
  Source = 'source',
  /** column name */
  Status = 'status',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** columns and relationships of "library" */
export type Library = {
  __typename?: 'library';
  created_at: Scalars['timestamptz'];
  email?: Maybe<Scalars['String']>;
  id: Scalars['uuid'];
  is_active: Scalars['Boolean'];
  name: Scalars['String'];
  order: Scalars['Int'];
  phone?: Maybe<Scalars['String']>;
  provider_no?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "library" */
export type Library_Aggregate = {
  __typename?: 'library_aggregate';
  aggregate?: Maybe<Library_Aggregate_Fields>;
  nodes: Array<Library>;
};

/** aggregate fields of "library" */
export type Library_Aggregate_Fields = {
  __typename?: 'library_aggregate_fields';
  avg?: Maybe<Library_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Library_Max_Fields>;
  min?: Maybe<Library_Min_Fields>;
  stddev?: Maybe<Library_Stddev_Fields>;
  stddev_pop?: Maybe<Library_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Library_Stddev_Samp_Fields>;
  sum?: Maybe<Library_Sum_Fields>;
  var_pop?: Maybe<Library_Var_Pop_Fields>;
  var_samp?: Maybe<Library_Var_Samp_Fields>;
  variance?: Maybe<Library_Variance_Fields>;
};


/** aggregate fields of "library" */
export type Library_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Library_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Library_Avg_Fields = {
  __typename?: 'library_avg_fields';
  order?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "library". All fields are combined with a logical 'AND'. */
export type Library_Bool_Exp = {
  _and?: Maybe<Array<Library_Bool_Exp>>;
  _not?: Maybe<Library_Bool_Exp>;
  _or?: Maybe<Array<Library_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  email?: Maybe<String_Comparison_Exp>;
  id?: Maybe<Uuid_Comparison_Exp>;
  is_active?: Maybe<Boolean_Comparison_Exp>;
  name?: Maybe<String_Comparison_Exp>;
  order?: Maybe<Int_Comparison_Exp>;
  phone?: Maybe<String_Comparison_Exp>;
  provider_no?: Maybe<String_Comparison_Exp>;
  type?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "library" */
export enum Library_Constraint {
  /** unique or primary key constraint */
  LibraryPkey = 'library_pkey'
}

/** input type for incrementing numeric columns in table "library" */
export type Library_Inc_Input = {
  order?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "library" */
export type Library_Insert_Input = {
  email?: Maybe<Scalars['String']>;
  is_active?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
  phone?: Maybe<Scalars['String']>;
  provider_no?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
};

/** columns and relationships of "library_installers" */
export type Library_Installers = {
  __typename?: 'library_installers';
  created_date: Scalars['timestamptz'];
  data: Scalars['jsonb'];
  id: Scalars['Int'];
  is_plus: Scalars['Boolean'];
  library_description: Scalars['String'];
  library_image?: Maybe<Scalars['String']>;
  library_language?: Maybe<Scalars['String']>;
  library_location?: Maybe<Scalars['String']>;
  library_name: Scalars['String'];
};


/** columns and relationships of "library_installers" */
export type Library_InstallersDataArgs = {
  path?: Maybe<Scalars['String']>;
};

/** aggregated selection of "library_installers" */
export type Library_Installers_Aggregate = {
  __typename?: 'library_installers_aggregate';
  aggregate?: Maybe<Library_Installers_Aggregate_Fields>;
  nodes: Array<Library_Installers>;
};

/** aggregate fields of "library_installers" */
export type Library_Installers_Aggregate_Fields = {
  __typename?: 'library_installers_aggregate_fields';
  avg?: Maybe<Library_Installers_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Library_Installers_Max_Fields>;
  min?: Maybe<Library_Installers_Min_Fields>;
  stddev?: Maybe<Library_Installers_Stddev_Fields>;
  stddev_pop?: Maybe<Library_Installers_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Library_Installers_Stddev_Samp_Fields>;
  sum?: Maybe<Library_Installers_Sum_Fields>;
  var_pop?: Maybe<Library_Installers_Var_Pop_Fields>;
  var_samp?: Maybe<Library_Installers_Var_Samp_Fields>;
  variance?: Maybe<Library_Installers_Variance_Fields>;
};


/** aggregate fields of "library_installers" */
export type Library_Installers_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Library_Installers_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Library_Installers_Append_Input = {
  data?: Maybe<Scalars['jsonb']>;
};

/** aggregate avg on columns */
export type Library_Installers_Avg_Fields = {
  __typename?: 'library_installers_avg_fields';
  id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "library_installers". All fields are combined with a logical 'AND'. */
export type Library_Installers_Bool_Exp = {
  _and?: Maybe<Array<Library_Installers_Bool_Exp>>;
  _not?: Maybe<Library_Installers_Bool_Exp>;
  _or?: Maybe<Array<Library_Installers_Bool_Exp>>;
  created_date?: Maybe<Timestamptz_Comparison_Exp>;
  data?: Maybe<Jsonb_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  is_plus?: Maybe<Boolean_Comparison_Exp>;
  library_description?: Maybe<String_Comparison_Exp>;
  library_image?: Maybe<String_Comparison_Exp>;
  library_language?: Maybe<String_Comparison_Exp>;
  library_location?: Maybe<String_Comparison_Exp>;
  library_name?: Maybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "library_installers" */
export enum Library_Installers_Constraint {
  /** unique or primary key constraint */
  LibraryInstallersPkey = 'library_installers_pkey'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Library_Installers_Delete_At_Path_Input = {
  data?: Maybe<Array<Scalars['String']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Library_Installers_Delete_Elem_Input = {
  data?: Maybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Library_Installers_Delete_Key_Input = {
  data?: Maybe<Scalars['String']>;
};

/** input type for incrementing numeric columns in table "library_installers" */
export type Library_Installers_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "library_installers" */
export type Library_Installers_Insert_Input = {
  created_date?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  id?: Maybe<Scalars['Int']>;
  is_plus?: Maybe<Scalars['Boolean']>;
  library_description?: Maybe<Scalars['String']>;
  library_image?: Maybe<Scalars['String']>;
  library_language?: Maybe<Scalars['String']>;
  library_location?: Maybe<Scalars['String']>;
  library_name?: Maybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Library_Installers_Max_Fields = {
  __typename?: 'library_installers_max_fields';
  created_date?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  library_description?: Maybe<Scalars['String']>;
  library_image?: Maybe<Scalars['String']>;
  library_language?: Maybe<Scalars['String']>;
  library_location?: Maybe<Scalars['String']>;
  library_name?: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type Library_Installers_Min_Fields = {
  __typename?: 'library_installers_min_fields';
  created_date?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  library_description?: Maybe<Scalars['String']>;
  library_image?: Maybe<Scalars['String']>;
  library_language?: Maybe<Scalars['String']>;
  library_location?: Maybe<Scalars['String']>;
  library_name?: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "library_installers" */
export type Library_Installers_Mutation_Response = {
  __typename?: 'library_installers_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Library_Installers>;
};

/** on conflict condition type for table "library_installers" */
export type Library_Installers_On_Conflict = {
  constraint: Library_Installers_Constraint;
  update_columns: Array<Library_Installers_Update_Column>;
  where?: Maybe<Library_Installers_Bool_Exp>;
};

/** Ordering options when selecting data from "library_installers". */
export type Library_Installers_Order_By = {
  created_date?: Maybe<Order_By>;
  data?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  is_plus?: Maybe<Order_By>;
  library_description?: Maybe<Order_By>;
  library_image?: Maybe<Order_By>;
  library_language?: Maybe<Order_By>;
  library_location?: Maybe<Order_By>;
  library_name?: Maybe<Order_By>;
};

/** primary key columns input for table: library_installers */
export type Library_Installers_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Library_Installers_Prepend_Input = {
  data?: Maybe<Scalars['jsonb']>;
};

/** select columns of table "library_installers" */
export enum Library_Installers_Select_Column {
  /** column name */
  CreatedDate = 'created_date',
  /** column name */
  Data = 'data',
  /** column name */
  Id = 'id',
  /** column name */
  IsPlus = 'is_plus',
  /** column name */
  LibraryDescription = 'library_description',
  /** column name */
  LibraryImage = 'library_image',
  /** column name */
  LibraryLanguage = 'library_language',
  /** column name */
  LibraryLocation = 'library_location',
  /** column name */
  LibraryName = 'library_name'
}

/** input type for updating data in table "library_installers" */
export type Library_Installers_Set_Input = {
  created_date?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  id?: Maybe<Scalars['Int']>;
  is_plus?: Maybe<Scalars['Boolean']>;
  library_description?: Maybe<Scalars['String']>;
  library_image?: Maybe<Scalars['String']>;
  library_language?: Maybe<Scalars['String']>;
  library_location?: Maybe<Scalars['String']>;
  library_name?: Maybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type Library_Installers_Stddev_Fields = {
  __typename?: 'library_installers_stddev_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Library_Installers_Stddev_Pop_Fields = {
  __typename?: 'library_installers_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Library_Installers_Stddev_Samp_Fields = {
  __typename?: 'library_installers_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Library_Installers_Sum_Fields = {
  __typename?: 'library_installers_sum_fields';
  id?: Maybe<Scalars['Int']>;
};

/** update columns of table "library_installers" */
export enum Library_Installers_Update_Column {
  /** column name */
  CreatedDate = 'created_date',
  /** column name */
  Data = 'data',
  /** column name */
  Id = 'id',
  /** column name */
  IsPlus = 'is_plus',
  /** column name */
  LibraryDescription = 'library_description',
  /** column name */
  LibraryImage = 'library_image',
  /** column name */
  LibraryLanguage = 'library_language',
  /** column name */
  LibraryLocation = 'library_location',
  /** column name */
  LibraryName = 'library_name'
}

/** aggregate var_pop on columns */
export type Library_Installers_Var_Pop_Fields = {
  __typename?: 'library_installers_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Library_Installers_Var_Samp_Fields = {
  __typename?: 'library_installers_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Library_Installers_Variance_Fields = {
  __typename?: 'library_installers_variance_fields';
  id?: Maybe<Scalars['Float']>;
};

/** aggregate max on columns */
export type Library_Max_Fields = {
  __typename?: 'library_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  email?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
  phone?: Maybe<Scalars['String']>;
  provider_no?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type Library_Min_Fields = {
  __typename?: 'library_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  email?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
  phone?: Maybe<Scalars['String']>;
  provider_no?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "library" */
export type Library_Mutation_Response = {
  __typename?: 'library_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Library>;
};

/** on conflict condition type for table "library" */
export type Library_On_Conflict = {
  constraint: Library_Constraint;
  update_columns: Array<Library_Update_Column>;
  where?: Maybe<Library_Bool_Exp>;
};

/** Ordering options when selecting data from "library". */
export type Library_Order_By = {
  created_at?: Maybe<Order_By>;
  email?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  is_active?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  order?: Maybe<Order_By>;
  phone?: Maybe<Order_By>;
  provider_no?: Maybe<Order_By>;
  type?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: library */
export type Library_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "library" */
export enum Library_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Email = 'email',
  /** column name */
  Id = 'id',
  /** column name */
  IsActive = 'is_active',
  /** column name */
  Name = 'name',
  /** column name */
  Order = 'order',
  /** column name */
  Phone = 'phone',
  /** column name */
  ProviderNo = 'provider_no',
  /** column name */
  Type = 'type',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "library" */
export type Library_Set_Input = {
  email?: Maybe<Scalars['String']>;
  is_active?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
  phone?: Maybe<Scalars['String']>;
  provider_no?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type Library_Stddev_Fields = {
  __typename?: 'library_stddev_fields';
  order?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Library_Stddev_Pop_Fields = {
  __typename?: 'library_stddev_pop_fields';
  order?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Library_Stddev_Samp_Fields = {
  __typename?: 'library_stddev_samp_fields';
  order?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Library_Sum_Fields = {
  __typename?: 'library_sum_fields';
  order?: Maybe<Scalars['Int']>;
};

/** update columns of table "library" */
export enum Library_Update_Column {
  /** column name */
  Email = 'email',
  /** column name */
  IsActive = 'is_active',
  /** column name */
  Name = 'name',
  /** column name */
  Order = 'order',
  /** column name */
  Phone = 'phone',
  /** column name */
  ProviderNo = 'provider_no',
  /** column name */
  Type = 'type'
}

/** aggregate var_pop on columns */
export type Library_Var_Pop_Fields = {
  __typename?: 'library_var_pop_fields';
  order?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Library_Var_Samp_Fields = {
  __typename?: 'library_var_samp_fields';
  order?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Library_Variance_Fields = {
  __typename?: 'library_variance_fields';
  order?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "locations" */
export type Locations = {
  __typename?: 'locations';
  address: Scalars['String'];
  apt?: Maybe<Scalars['String']>;
  badges?: Maybe<Scalars['json']>;
  badgesIcon?: Maybe<Scalars['json']>;
  bookable: Scalars['Boolean'];
  created_at: Scalars['timestamptz'];
  email?: Maybe<Scalars['String']>;
  employees?: Maybe<Scalars['json']>;
  hasCalender: Scalars['Boolean'];
  id: Scalars['uuid'];
  img: Scalars['String'];
  is_active: Scalars['Boolean'];
  name: Scalars['String'];
  order: Scalars['Int'];
  phone?: Maybe<Scalars['String']>;
  postcode?: Maybe<Scalars['String']>;
  showOnline: Scalars['Boolean'];
  updated_at: Scalars['timestamptz'];
  website?: Maybe<Scalars['String']>;
};


/** columns and relationships of "locations" */
export type LocationsBadgesArgs = {
  path?: Maybe<Scalars['String']>;
};


/** columns and relationships of "locations" */
export type LocationsBadgesIconArgs = {
  path?: Maybe<Scalars['String']>;
};


/** columns and relationships of "locations" */
export type LocationsEmployeesArgs = {
  path?: Maybe<Scalars['String']>;
};

/** aggregated selection of "locations" */
export type Locations_Aggregate = {
  __typename?: 'locations_aggregate';
  aggregate?: Maybe<Locations_Aggregate_Fields>;
  nodes: Array<Locations>;
};

/** aggregate fields of "locations" */
export type Locations_Aggregate_Fields = {
  __typename?: 'locations_aggregate_fields';
  avg?: Maybe<Locations_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Locations_Max_Fields>;
  min?: Maybe<Locations_Min_Fields>;
  stddev?: Maybe<Locations_Stddev_Fields>;
  stddev_pop?: Maybe<Locations_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Locations_Stddev_Samp_Fields>;
  sum?: Maybe<Locations_Sum_Fields>;
  var_pop?: Maybe<Locations_Var_Pop_Fields>;
  var_samp?: Maybe<Locations_Var_Samp_Fields>;
  variance?: Maybe<Locations_Variance_Fields>;
};


/** aggregate fields of "locations" */
export type Locations_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Locations_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Locations_Avg_Fields = {
  __typename?: 'locations_avg_fields';
  order?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "locations". All fields are combined with a logical 'AND'. */
export type Locations_Bool_Exp = {
  _and?: Maybe<Array<Locations_Bool_Exp>>;
  _not?: Maybe<Locations_Bool_Exp>;
  _or?: Maybe<Array<Locations_Bool_Exp>>;
  address?: Maybe<String_Comparison_Exp>;
  apt?: Maybe<String_Comparison_Exp>;
  badges?: Maybe<Json_Comparison_Exp>;
  badgesIcon?: Maybe<Json_Comparison_Exp>;
  bookable?: Maybe<Boolean_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  email?: Maybe<String_Comparison_Exp>;
  employees?: Maybe<Json_Comparison_Exp>;
  hasCalender?: Maybe<Boolean_Comparison_Exp>;
  id?: Maybe<Uuid_Comparison_Exp>;
  img?: Maybe<String_Comparison_Exp>;
  is_active?: Maybe<Boolean_Comparison_Exp>;
  name?: Maybe<String_Comparison_Exp>;
  order?: Maybe<Int_Comparison_Exp>;
  phone?: Maybe<String_Comparison_Exp>;
  postcode?: Maybe<String_Comparison_Exp>;
  showOnline?: Maybe<Boolean_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
  website?: Maybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "locations" */
export enum Locations_Constraint {
  /** unique or primary key constraint */
  LocationsPkey = 'locations_pkey'
}

/** input type for incrementing numeric columns in table "locations" */
export type Locations_Inc_Input = {
  order?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "locations" */
export type Locations_Insert_Input = {
  address?: Maybe<Scalars['String']>;
  apt?: Maybe<Scalars['String']>;
  badges?: Maybe<Scalars['json']>;
  badgesIcon?: Maybe<Scalars['json']>;
  bookable?: Maybe<Scalars['Boolean']>;
  email?: Maybe<Scalars['String']>;
  employees?: Maybe<Scalars['json']>;
  hasCalender?: Maybe<Scalars['Boolean']>;
  img?: Maybe<Scalars['String']>;
  is_active?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  phone?: Maybe<Scalars['String']>;
  postcode?: Maybe<Scalars['String']>;
  showOnline?: Maybe<Scalars['Boolean']>;
  website?: Maybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Locations_Max_Fields = {
  __typename?: 'locations_max_fields';
  address?: Maybe<Scalars['String']>;
  apt?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  email?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  img?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
  phone?: Maybe<Scalars['String']>;
  postcode?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  website?: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type Locations_Min_Fields = {
  __typename?: 'locations_min_fields';
  address?: Maybe<Scalars['String']>;
  apt?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  email?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  img?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
  phone?: Maybe<Scalars['String']>;
  postcode?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  website?: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "locations" */
export type Locations_Mutation_Response = {
  __typename?: 'locations_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Locations>;
};

/** on conflict condition type for table "locations" */
export type Locations_On_Conflict = {
  constraint: Locations_Constraint;
  update_columns: Array<Locations_Update_Column>;
  where?: Maybe<Locations_Bool_Exp>;
};

/** Ordering options when selecting data from "locations". */
export type Locations_Order_By = {
  address?: Maybe<Order_By>;
  apt?: Maybe<Order_By>;
  badges?: Maybe<Order_By>;
  badgesIcon?: Maybe<Order_By>;
  bookable?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  email?: Maybe<Order_By>;
  employees?: Maybe<Order_By>;
  hasCalender?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  img?: Maybe<Order_By>;
  is_active?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  order?: Maybe<Order_By>;
  phone?: Maybe<Order_By>;
  postcode?: Maybe<Order_By>;
  showOnline?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  website?: Maybe<Order_By>;
};

/** primary key columns input for table: locations */
export type Locations_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "locations" */
export enum Locations_Select_Column {
  /** column name */
  Address = 'address',
  /** column name */
  Apt = 'apt',
  /** column name */
  Badges = 'badges',
  /** column name */
  BadgesIcon = 'badgesIcon',
  /** column name */
  Bookable = 'bookable',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Email = 'email',
  /** column name */
  Employees = 'employees',
  /** column name */
  HasCalender = 'hasCalender',
  /** column name */
  Id = 'id',
  /** column name */
  Img = 'img',
  /** column name */
  IsActive = 'is_active',
  /** column name */
  Name = 'name',
  /** column name */
  Order = 'order',
  /** column name */
  Phone = 'phone',
  /** column name */
  Postcode = 'postcode',
  /** column name */
  ShowOnline = 'showOnline',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  Website = 'website'
}

/** input type for updating data in table "locations" */
export type Locations_Set_Input = {
  address?: Maybe<Scalars['String']>;
  apt?: Maybe<Scalars['String']>;
  badges?: Maybe<Scalars['json']>;
  badgesIcon?: Maybe<Scalars['json']>;
  bookable?: Maybe<Scalars['Boolean']>;
  email?: Maybe<Scalars['String']>;
  employees?: Maybe<Scalars['json']>;
  hasCalender?: Maybe<Scalars['Boolean']>;
  img?: Maybe<Scalars['String']>;
  is_active?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
  phone?: Maybe<Scalars['String']>;
  postcode?: Maybe<Scalars['String']>;
  showOnline?: Maybe<Scalars['Boolean']>;
  website?: Maybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type Locations_Stddev_Fields = {
  __typename?: 'locations_stddev_fields';
  order?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Locations_Stddev_Pop_Fields = {
  __typename?: 'locations_stddev_pop_fields';
  order?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Locations_Stddev_Samp_Fields = {
  __typename?: 'locations_stddev_samp_fields';
  order?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Locations_Sum_Fields = {
  __typename?: 'locations_sum_fields';
  order?: Maybe<Scalars['Int']>;
};

/** update columns of table "locations" */
export enum Locations_Update_Column {
  /** column name */
  Address = 'address',
  /** column name */
  Apt = 'apt',
  /** column name */
  Badges = 'badges',
  /** column name */
  BadgesIcon = 'badgesIcon',
  /** column name */
  Bookable = 'bookable',
  /** column name */
  Email = 'email',
  /** column name */
  Employees = 'employees',
  /** column name */
  HasCalender = 'hasCalender',
  /** column name */
  Img = 'img',
  /** column name */
  IsActive = 'is_active',
  /** column name */
  Name = 'name',
  /** column name */
  Order = 'order',
  /** column name */
  Phone = 'phone',
  /** column name */
  Postcode = 'postcode',
  /** column name */
  ShowOnline = 'showOnline',
  /** column name */
  Website = 'website'
}

/** aggregate var_pop on columns */
export type Locations_Var_Pop_Fields = {
  __typename?: 'locations_var_pop_fields';
  order?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Locations_Var_Samp_Fields = {
  __typename?: 'locations_var_samp_fields';
  order?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Locations_Variance_Fields = {
  __typename?: 'locations_variance_fields';
  order?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "marketing_campaign" */
export type Marketing_Campaign = {
  __typename?: 'marketing_campaign';
  created_at: Scalars['timestamptz'];
  id: Scalars['uuid'];
  name: Scalars['String'];
  order: Scalars['Int'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "marketing_campaign" */
export type Marketing_Campaign_Aggregate = {
  __typename?: 'marketing_campaign_aggregate';
  aggregate?: Maybe<Marketing_Campaign_Aggregate_Fields>;
  nodes: Array<Marketing_Campaign>;
};

/** aggregate fields of "marketing_campaign" */
export type Marketing_Campaign_Aggregate_Fields = {
  __typename?: 'marketing_campaign_aggregate_fields';
  avg?: Maybe<Marketing_Campaign_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Marketing_Campaign_Max_Fields>;
  min?: Maybe<Marketing_Campaign_Min_Fields>;
  stddev?: Maybe<Marketing_Campaign_Stddev_Fields>;
  stddev_pop?: Maybe<Marketing_Campaign_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Marketing_Campaign_Stddev_Samp_Fields>;
  sum?: Maybe<Marketing_Campaign_Sum_Fields>;
  var_pop?: Maybe<Marketing_Campaign_Var_Pop_Fields>;
  var_samp?: Maybe<Marketing_Campaign_Var_Samp_Fields>;
  variance?: Maybe<Marketing_Campaign_Variance_Fields>;
};


/** aggregate fields of "marketing_campaign" */
export type Marketing_Campaign_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Marketing_Campaign_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Marketing_Campaign_Avg_Fields = {
  __typename?: 'marketing_campaign_avg_fields';
  order?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "marketing_campaign". All fields are combined with a logical 'AND'. */
export type Marketing_Campaign_Bool_Exp = {
  _and?: Maybe<Array<Marketing_Campaign_Bool_Exp>>;
  _not?: Maybe<Marketing_Campaign_Bool_Exp>;
  _or?: Maybe<Array<Marketing_Campaign_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Uuid_Comparison_Exp>;
  name?: Maybe<String_Comparison_Exp>;
  order?: Maybe<Int_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "marketing_campaign" */
export enum Marketing_Campaign_Constraint {
  /** unique or primary key constraint */
  MarketingCampaignPkey = 'marketing_campaign_pkey'
}

/** input type for incrementing numeric columns in table "marketing_campaign" */
export type Marketing_Campaign_Inc_Input = {
  order?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "marketing_campaign" */
export type Marketing_Campaign_Insert_Input = {
  name?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
};

/** aggregate max on columns */
export type Marketing_Campaign_Max_Fields = {
  __typename?: 'marketing_campaign_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type Marketing_Campaign_Min_Fields = {
  __typename?: 'marketing_campaign_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "marketing_campaign" */
export type Marketing_Campaign_Mutation_Response = {
  __typename?: 'marketing_campaign_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Marketing_Campaign>;
};

/** on conflict condition type for table "marketing_campaign" */
export type Marketing_Campaign_On_Conflict = {
  constraint: Marketing_Campaign_Constraint;
  update_columns: Array<Marketing_Campaign_Update_Column>;
  where?: Maybe<Marketing_Campaign_Bool_Exp>;
};

/** Ordering options when selecting data from "marketing_campaign". */
export type Marketing_Campaign_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  order?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: marketing_campaign */
export type Marketing_Campaign_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "marketing_campaign" */
export enum Marketing_Campaign_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
  /** column name */
  Order = 'order',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "marketing_campaign" */
export type Marketing_Campaign_Set_Input = {
  name?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
};

/** aggregate stddev on columns */
export type Marketing_Campaign_Stddev_Fields = {
  __typename?: 'marketing_campaign_stddev_fields';
  order?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Marketing_Campaign_Stddev_Pop_Fields = {
  __typename?: 'marketing_campaign_stddev_pop_fields';
  order?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Marketing_Campaign_Stddev_Samp_Fields = {
  __typename?: 'marketing_campaign_stddev_samp_fields';
  order?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Marketing_Campaign_Sum_Fields = {
  __typename?: 'marketing_campaign_sum_fields';
  order?: Maybe<Scalars['Int']>;
};

/** update columns of table "marketing_campaign" */
export enum Marketing_Campaign_Update_Column {
  /** column name */
  Name = 'name',
  /** column name */
  Order = 'order'
}

/** aggregate var_pop on columns */
export type Marketing_Campaign_Var_Pop_Fields = {
  __typename?: 'marketing_campaign_var_pop_fields';
  order?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Marketing_Campaign_Var_Samp_Fields = {
  __typename?: 'marketing_campaign_var_samp_fields';
  order?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Marketing_Campaign_Variance_Fields = {
  __typename?: 'marketing_campaign_variance_fields';
  order?: Maybe<Scalars['Float']>;
};

/**
 * Customer Referrals & Referrals Statistics
 *
 *
 * columns and relationships of "marketing_referral"
 */
export type Marketing_Referral = {
  __typename?: 'marketing_referral';
  created_at: Scalars['timestamptz'];
  date: Scalars['date'];
  id: Scalars['uuid'];
  incentive: Scalars['Boolean'];
  referee: Scalars['String'];
  referer: Scalars['String'];
  spend: Scalars['numeric'];
  state: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "marketing_referral" */
export type Marketing_Referral_Aggregate = {
  __typename?: 'marketing_referral_aggregate';
  aggregate?: Maybe<Marketing_Referral_Aggregate_Fields>;
  nodes: Array<Marketing_Referral>;
};

/** aggregate fields of "marketing_referral" */
export type Marketing_Referral_Aggregate_Fields = {
  __typename?: 'marketing_referral_aggregate_fields';
  avg?: Maybe<Marketing_Referral_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Marketing_Referral_Max_Fields>;
  min?: Maybe<Marketing_Referral_Min_Fields>;
  stddev?: Maybe<Marketing_Referral_Stddev_Fields>;
  stddev_pop?: Maybe<Marketing_Referral_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Marketing_Referral_Stddev_Samp_Fields>;
  sum?: Maybe<Marketing_Referral_Sum_Fields>;
  var_pop?: Maybe<Marketing_Referral_Var_Pop_Fields>;
  var_samp?: Maybe<Marketing_Referral_Var_Samp_Fields>;
  variance?: Maybe<Marketing_Referral_Variance_Fields>;
};


/** aggregate fields of "marketing_referral" */
export type Marketing_Referral_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Marketing_Referral_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Marketing_Referral_Avg_Fields = {
  __typename?: 'marketing_referral_avg_fields';
  spend?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "marketing_referral". All fields are combined with a logical 'AND'. */
export type Marketing_Referral_Bool_Exp = {
  _and?: Maybe<Array<Marketing_Referral_Bool_Exp>>;
  _not?: Maybe<Marketing_Referral_Bool_Exp>;
  _or?: Maybe<Array<Marketing_Referral_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  date?: Maybe<Date_Comparison_Exp>;
  id?: Maybe<Uuid_Comparison_Exp>;
  incentive?: Maybe<Boolean_Comparison_Exp>;
  referee?: Maybe<String_Comparison_Exp>;
  referer?: Maybe<String_Comparison_Exp>;
  spend?: Maybe<Numeric_Comparison_Exp>;
  state?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "marketing_referral" */
export enum Marketing_Referral_Constraint {
  /** unique or primary key constraint */
  MarketingReferralPkey = 'marketing_referral_pkey',
  /** unique or primary key constraint */
  MarketingReferralRefereeKey = 'marketing_referral_referee_key'
}

/** input type for incrementing numeric columns in table "marketing_referral" */
export type Marketing_Referral_Inc_Input = {
  spend?: Maybe<Scalars['numeric']>;
};

/** input type for inserting data into table "marketing_referral" */
export type Marketing_Referral_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  date?: Maybe<Scalars['date']>;
  id?: Maybe<Scalars['uuid']>;
  incentive?: Maybe<Scalars['Boolean']>;
  referee?: Maybe<Scalars['String']>;
  referer?: Maybe<Scalars['String']>;
  spend?: Maybe<Scalars['numeric']>;
  state?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Marketing_Referral_Max_Fields = {
  __typename?: 'marketing_referral_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  date?: Maybe<Scalars['date']>;
  id?: Maybe<Scalars['uuid']>;
  referee?: Maybe<Scalars['String']>;
  referer?: Maybe<Scalars['String']>;
  spend?: Maybe<Scalars['numeric']>;
  state?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type Marketing_Referral_Min_Fields = {
  __typename?: 'marketing_referral_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  date?: Maybe<Scalars['date']>;
  id?: Maybe<Scalars['uuid']>;
  referee?: Maybe<Scalars['String']>;
  referer?: Maybe<Scalars['String']>;
  spend?: Maybe<Scalars['numeric']>;
  state?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "marketing_referral" */
export type Marketing_Referral_Mutation_Response = {
  __typename?: 'marketing_referral_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Marketing_Referral>;
};

/** on conflict condition type for table "marketing_referral" */
export type Marketing_Referral_On_Conflict = {
  constraint: Marketing_Referral_Constraint;
  update_columns: Array<Marketing_Referral_Update_Column>;
  where?: Maybe<Marketing_Referral_Bool_Exp>;
};

/** Ordering options when selecting data from "marketing_referral". */
export type Marketing_Referral_Order_By = {
  created_at?: Maybe<Order_By>;
  date?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  incentive?: Maybe<Order_By>;
  referee?: Maybe<Order_By>;
  referer?: Maybe<Order_By>;
  spend?: Maybe<Order_By>;
  state?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: marketing_referral */
export type Marketing_Referral_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "marketing_referral" */
export enum Marketing_Referral_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Date = 'date',
  /** column name */
  Id = 'id',
  /** column name */
  Incentive = 'incentive',
  /** column name */
  Referee = 'referee',
  /** column name */
  Referer = 'referer',
  /** column name */
  Spend = 'spend',
  /** column name */
  State = 'state',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "marketing_referral" */
export type Marketing_Referral_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  date?: Maybe<Scalars['date']>;
  id?: Maybe<Scalars['uuid']>;
  incentive?: Maybe<Scalars['Boolean']>;
  referee?: Maybe<Scalars['String']>;
  referer?: Maybe<Scalars['String']>;
  spend?: Maybe<Scalars['numeric']>;
  state?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Marketing_Referral_Stddev_Fields = {
  __typename?: 'marketing_referral_stddev_fields';
  spend?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Marketing_Referral_Stddev_Pop_Fields = {
  __typename?: 'marketing_referral_stddev_pop_fields';
  spend?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Marketing_Referral_Stddev_Samp_Fields = {
  __typename?: 'marketing_referral_stddev_samp_fields';
  spend?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Marketing_Referral_Sum_Fields = {
  __typename?: 'marketing_referral_sum_fields';
  spend?: Maybe<Scalars['numeric']>;
};

/** update columns of table "marketing_referral" */
export enum Marketing_Referral_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Date = 'date',
  /** column name */
  Id = 'id',
  /** column name */
  Incentive = 'incentive',
  /** column name */
  Referee = 'referee',
  /** column name */
  Referer = 'referer',
  /** column name */
  Spend = 'spend',
  /** column name */
  State = 'state',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Marketing_Referral_Var_Pop_Fields = {
  __typename?: 'marketing_referral_var_pop_fields';
  spend?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Marketing_Referral_Var_Samp_Fields = {
  __typename?: 'marketing_referral_var_samp_fields';
  spend?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Marketing_Referral_Variance_Fields = {
  __typename?: 'marketing_referral_variance_fields';
  spend?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "marketing_source" */
export type Marketing_Source = {
  __typename?: 'marketing_source';
  created_at: Scalars['timestamptz'];
  id: Scalars['uuid'];
  is_active: Scalars['Boolean'];
  name: Scalars['String'];
  order: Scalars['Int'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "marketing_source" */
export type Marketing_Source_Aggregate = {
  __typename?: 'marketing_source_aggregate';
  aggregate?: Maybe<Marketing_Source_Aggregate_Fields>;
  nodes: Array<Marketing_Source>;
};

/** aggregate fields of "marketing_source" */
export type Marketing_Source_Aggregate_Fields = {
  __typename?: 'marketing_source_aggregate_fields';
  avg?: Maybe<Marketing_Source_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Marketing_Source_Max_Fields>;
  min?: Maybe<Marketing_Source_Min_Fields>;
  stddev?: Maybe<Marketing_Source_Stddev_Fields>;
  stddev_pop?: Maybe<Marketing_Source_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Marketing_Source_Stddev_Samp_Fields>;
  sum?: Maybe<Marketing_Source_Sum_Fields>;
  var_pop?: Maybe<Marketing_Source_Var_Pop_Fields>;
  var_samp?: Maybe<Marketing_Source_Var_Samp_Fields>;
  variance?: Maybe<Marketing_Source_Variance_Fields>;
};


/** aggregate fields of "marketing_source" */
export type Marketing_Source_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Marketing_Source_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Marketing_Source_Avg_Fields = {
  __typename?: 'marketing_source_avg_fields';
  order?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "marketing_source". All fields are combined with a logical 'AND'. */
export type Marketing_Source_Bool_Exp = {
  _and?: Maybe<Array<Marketing_Source_Bool_Exp>>;
  _not?: Maybe<Marketing_Source_Bool_Exp>;
  _or?: Maybe<Array<Marketing_Source_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Uuid_Comparison_Exp>;
  is_active?: Maybe<Boolean_Comparison_Exp>;
  name?: Maybe<String_Comparison_Exp>;
  order?: Maybe<Int_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "marketing_source" */
export enum Marketing_Source_Constraint {
  /** unique or primary key constraint */
  MarketingSourcePkey = 'marketing_source_pkey'
}

/** input type for incrementing numeric columns in table "marketing_source" */
export type Marketing_Source_Inc_Input = {
  order?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "marketing_source" */
export type Marketing_Source_Insert_Input = {
  is_active?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Marketing_Source_Max_Fields = {
  __typename?: 'marketing_source_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type Marketing_Source_Min_Fields = {
  __typename?: 'marketing_source_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "marketing_source" */
export type Marketing_Source_Mutation_Response = {
  __typename?: 'marketing_source_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Marketing_Source>;
};

/** on conflict condition type for table "marketing_source" */
export type Marketing_Source_On_Conflict = {
  constraint: Marketing_Source_Constraint;
  update_columns: Array<Marketing_Source_Update_Column>;
  where?: Maybe<Marketing_Source_Bool_Exp>;
};

/** Ordering options when selecting data from "marketing_source". */
export type Marketing_Source_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  is_active?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  order?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: marketing_source */
export type Marketing_Source_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "marketing_source" */
export enum Marketing_Source_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  IsActive = 'is_active',
  /** column name */
  Name = 'name',
  /** column name */
  Order = 'order',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "marketing_source" */
export type Marketing_Source_Set_Input = {
  is_active?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
};

/** aggregate stddev on columns */
export type Marketing_Source_Stddev_Fields = {
  __typename?: 'marketing_source_stddev_fields';
  order?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Marketing_Source_Stddev_Pop_Fields = {
  __typename?: 'marketing_source_stddev_pop_fields';
  order?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Marketing_Source_Stddev_Samp_Fields = {
  __typename?: 'marketing_source_stddev_samp_fields';
  order?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Marketing_Source_Sum_Fields = {
  __typename?: 'marketing_source_sum_fields';
  order?: Maybe<Scalars['Int']>;
};

/** update columns of table "marketing_source" */
export enum Marketing_Source_Update_Column {
  /** column name */
  IsActive = 'is_active',
  /** column name */
  Name = 'name',
  /** column name */
  Order = 'order'
}

/** aggregate var_pop on columns */
export type Marketing_Source_Var_Pop_Fields = {
  __typename?: 'marketing_source_var_pop_fields';
  order?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Marketing_Source_Var_Samp_Fields = {
  __typename?: 'marketing_source_var_samp_fields';
  order?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Marketing_Source_Variance_Fields = {
  __typename?: 'marketing_source_variance_fields';
  order?: Maybe<Scalars['Float']>;
};

/** mutation root */
export type Mutation_Root = {
  __typename?: 'mutation_root';
  createOneAcLog?: Maybe<AcLog>;
  createOneAcLogAction?: Maybe<AcLogAction>;
  createOneAcLogUrl?: Maybe<AcLogUrl>;
  createOneAcceptEmailToken?: Maybe<AcceptEmailToken>;
  createOneAccountBalance?: Maybe<AccountBalance>;
  createOneAccountBalanceLog?: Maybe<AccountBalanceLog>;
  createOneAccountManager?: Maybe<AccountManager>;
  createOneAdvertCampaign?: Maybe<AdvertCampaign>;
  createOneApiDebug?: Maybe<ApiDebug>;
  createOneApiKey?: Maybe<ApiKey>;
  createOneAppBeforeAfter?: Maybe<AppBeforeAfter>;
  createOneAppPermission?: Maybe<AppPermission>;
  createOneAppSubscription?: Maybe<AppSubscription>;
  createOneAppSubscriptionsCompanyPrice?: Maybe<AppSubscriptionsCompanyPrice>;
  createOneAtAnswer?: Maybe<AtAnswer>;
  createOneAtConcern?: Maybe<AtConcern>;
  createOneAtQuestion?: Maybe<AtQuestion>;
  createOneAtQuestionsRelation?: Maybe<AtQuestionsRelation>;
  createOneAtQuizTake?: Maybe<AtQuizTake>;
  createOneAtSetting?: Maybe<AtSetting>;
  createOneAtTreatment?: Maybe<AtTreatment>;
  createOneAttachmentHelperLite?: Maybe<AttachmentHelperLite>;
  createOneAutomationAction?: Maybe<AutomationAction>;
  createOneAutomationDelay?: Maybe<AutomationDelay>;
  createOneAutomationFolder?: Maybe<AutomationFolder>;
  createOneAutomationLog?: Maybe<AutomationLog>;
  createOneAutomationRule?: Maybe<AutomationRule>;
  createOneAutomationTrigger?: Maybe<AutomationTrigger>;
  createOneAvilableDatesLog?: Maybe<AvilableDatesLog>;
  createOneBacsAccount?: Maybe<BacsAccount>;
  createOneBatch?: Maybe<Batch>;
  createOneBatchItem?: Maybe<BatchItem>;
  createOneBlockReason?: Maybe<BlockReason>;
  createOneBnfDrug?: Maybe<BnfDrug>;
  createOneBodyChartTemplate?: Maybe<BodyChartTemplate>;
  createOneBookingMaster?: Maybe<BookingMaster>;
  createOneBookingSetting?: Maybe<BookingSetting>;
  createOneBookingStatus?: Maybe<BookingStatus>;
  createOneBookingStatusChange?: Maybe<BookingStatusChange>;
  createOneBookitProGeneral?: Maybe<BookitProGeneral>;
  createOneBookitProSlider?: Maybe<BookitProSlider>;
  createOneBookmarkedPage?: Maybe<BookmarkedPage>;
  createOneBugLog?: Maybe<BugLog>;
  createOneCalRangeRequest?: Maybe<CalRangeRequest>;
  createOneCalendarView?: Maybe<CalendarView>;
  createOneCampaignAttachment?: Maybe<CampaignAttachment>;
  createOneCancelReason?: Maybe<CancelReason>;
  createOneCancellationPolicy?: Maybe<CancellationPolicy>;
  createOneCandidate?: Maybe<Candidate>;
  createOneCardType?: Maybe<CardType>;
  createOneCashupReport?: Maybe<CashupReport>;
  createOneCashupReportCustom?: Maybe<CashupReportCustom>;
  createOneCheckinAppt?: Maybe<CheckinAppt>;
  createOneCheckinAverages?: Maybe<CheckinAverages>;
  createOneCheckinAveragesIdle?: Maybe<CheckinAveragesIdle>;
  createOneCheckinProduct?: Maybe<CheckinProduct>;
  createOneCheckinQueue?: Maybe<CheckinQueue>;
  createOneClassCategory?: Maybe<ClassCategory>;
  createOneClassGuests?: Maybe<ClassGuests>;
  createOneClassMaster?: Maybe<ClassMaster>;
  createOneClassNotes?: Maybe<ClassNotes>;
  createOneClassProduct?: Maybe<ClassProduct>;
  createOneClassSmsHistory?: Maybe<ClassSmsHistory>;
  createOneClassTemplateSetting?: Maybe<ClassTemplateSetting>;
  createOneClasstypeMaster?: Maybe<ClasstypeMaster>;
  createOneCleverpinSetting?: Maybe<CleverpinSetting>;
  createOneClientFormSetting?: Maybe<ClientFormSetting>;
  createOneClinicalSoftware?: Maybe<ClinicalSoftware>;
  createOneClockinBreak?: Maybe<ClockinBreak>;
  createOneClockinLongpoll?: Maybe<ClockinLongpoll>;
  createOneClockinTimesheet?: Maybe<ClockinTimesheet>;
  createOneCmAccountNote?: Maybe<CmAccountNote>;
  createOneCmAppointmentCustom?: Maybe<CmAppointmentCustom>;
  createOneCmAppointmentsCustomImportHelper?: Maybe<CmAppointmentsCustomImportHelper>;
  createOneCmAuthorization?: Maybe<CmAuthorization>;
  createOneCmBookingNote?: Maybe<CmBookingNote>;
  createOneCmCampaign?: Maybe<CmCampaign>;
  createOneCmCampaignNote?: Maybe<CmCampaignNote>;
  createOneCmCase?: Maybe<CmCase>;
  createOneCmCaseNote?: Maybe<CmCaseNote>;
  createOneCmCaseReply?: Maybe<CmCaseReply>;
  createOneCmContact?: Maybe<CmContact>;
  createOneCompany?: Maybe<Company>;
  createOneCompanyDetails?: Maybe<CompanyDetails>;
  createOneCompanySubscription?: Maybe<CompanySubscription>;
  createOneGlCode?: Maybe<GlCode>;
  createOneInvPaymentType?: Maybe<InvPaymentType>;
  createOneMarketingSource?: Maybe<MarketingSource>;
  createOneMediaLlibraryAttachment?: Maybe<MediaLlibraryAttachment>;
  createOneSecondAtAnswer?: Maybe<SecondAtAnswer>;
  createOneSecondAtQuestion?: Maybe<SecondAtQuestion>;
  createOneThirdPartyAccess?: Maybe<ThirdPartyAccess>;
  createOneTimezone?: Maybe<Timezone>;
  createOneTwoFactorHistory?: Maybe<TwoFactorHistory>;
  createOneUser?: Maybe<User>;
  createOneUserSecurityQuestionsAnswer?: Maybe<UserSecurityQuestionsAnswer>;
  deleteManyAcLog?: Maybe<AffectedRowsOutput>;
  deleteManyAcLogAction?: Maybe<AffectedRowsOutput>;
  deleteManyAcLogUrl?: Maybe<AffectedRowsOutput>;
  deleteManyAcceptEmailToken?: Maybe<AffectedRowsOutput>;
  deleteManyAccountBalance?: Maybe<AffectedRowsOutput>;
  deleteManyAccountBalanceLog?: Maybe<AffectedRowsOutput>;
  deleteManyAccountManager?: Maybe<AffectedRowsOutput>;
  deleteManyAdvertCampaign?: Maybe<AffectedRowsOutput>;
  deleteManyApiDebug?: Maybe<AffectedRowsOutput>;
  deleteManyApiKey?: Maybe<AffectedRowsOutput>;
  deleteManyAppBeforeAfter?: Maybe<AffectedRowsOutput>;
  deleteManyAppPermission?: Maybe<AffectedRowsOutput>;
  deleteManyAppSubscription?: Maybe<AffectedRowsOutput>;
  deleteManyAppSubscriptionsCompanyPrice?: Maybe<AffectedRowsOutput>;
  deleteManyAtAnswer?: Maybe<AffectedRowsOutput>;
  deleteManyAtConcern?: Maybe<AffectedRowsOutput>;
  deleteManyAtQuestion?: Maybe<AffectedRowsOutput>;
  deleteManyAtQuestionsRelation?: Maybe<AffectedRowsOutput>;
  deleteManyAtQuizTake?: Maybe<AffectedRowsOutput>;
  deleteManyAtSetting?: Maybe<AffectedRowsOutput>;
  deleteManyAtTreatment?: Maybe<AffectedRowsOutput>;
  deleteManyAttachmentHelperLite?: Maybe<AffectedRowsOutput>;
  deleteManyAutomationAction?: Maybe<AffectedRowsOutput>;
  deleteManyAutomationDelay?: Maybe<AffectedRowsOutput>;
  deleteManyAutomationFolder?: Maybe<AffectedRowsOutput>;
  deleteManyAutomationLog?: Maybe<AffectedRowsOutput>;
  deleteManyAutomationRule?: Maybe<AffectedRowsOutput>;
  deleteManyAutomationTrigger?: Maybe<AffectedRowsOutput>;
  deleteManyAvilableDatesLog?: Maybe<AffectedRowsOutput>;
  deleteManyBacsAccount?: Maybe<AffectedRowsOutput>;
  deleteManyBatch?: Maybe<AffectedRowsOutput>;
  deleteManyBatchItem?: Maybe<AffectedRowsOutput>;
  deleteManyBlockReason?: Maybe<AffectedRowsOutput>;
  deleteManyBnfDrug?: Maybe<AffectedRowsOutput>;
  deleteManyBodyChartTemplate?: Maybe<AffectedRowsOutput>;
  deleteManyBookingMaster?: Maybe<AffectedRowsOutput>;
  deleteManyBookingSetting?: Maybe<AffectedRowsOutput>;
  deleteManyBookingStatus?: Maybe<AffectedRowsOutput>;
  deleteManyBookingStatusChange?: Maybe<AffectedRowsOutput>;
  deleteManyBookitProGeneral?: Maybe<AffectedRowsOutput>;
  deleteManyBookitProSlider?: Maybe<AffectedRowsOutput>;
  deleteManyBookmarkedPage?: Maybe<AffectedRowsOutput>;
  deleteManyBugLog?: Maybe<AffectedRowsOutput>;
  deleteManyCalRangeRequest?: Maybe<AffectedRowsOutput>;
  deleteManyCalendarView?: Maybe<AffectedRowsOutput>;
  deleteManyCampaignAttachment?: Maybe<AffectedRowsOutput>;
  deleteManyCancelReason?: Maybe<AffectedRowsOutput>;
  deleteManyCancellationPolicy?: Maybe<AffectedRowsOutput>;
  deleteManyCandidate?: Maybe<AffectedRowsOutput>;
  deleteManyCardType?: Maybe<AffectedRowsOutput>;
  deleteManyCashupReport?: Maybe<AffectedRowsOutput>;
  deleteManyCashupReportCustom?: Maybe<AffectedRowsOutput>;
  deleteManyCheckinAppt?: Maybe<AffectedRowsOutput>;
  deleteManyCheckinAverages?: Maybe<AffectedRowsOutput>;
  deleteManyCheckinAveragesIdle?: Maybe<AffectedRowsOutput>;
  deleteManyCheckinProduct?: Maybe<AffectedRowsOutput>;
  deleteManyCheckinQueue?: Maybe<AffectedRowsOutput>;
  deleteManyClassCategory?: Maybe<AffectedRowsOutput>;
  deleteManyClassGuests?: Maybe<AffectedRowsOutput>;
  deleteManyClassMaster?: Maybe<AffectedRowsOutput>;
  deleteManyClassNotes?: Maybe<AffectedRowsOutput>;
  deleteManyClassProduct?: Maybe<AffectedRowsOutput>;
  deleteManyClassSmsHistory?: Maybe<AffectedRowsOutput>;
  deleteManyClassTemplateSetting?: Maybe<AffectedRowsOutput>;
  deleteManyClasstypeMaster?: Maybe<AffectedRowsOutput>;
  deleteManyCleverpinSetting?: Maybe<AffectedRowsOutput>;
  deleteManyClientFormSetting?: Maybe<AffectedRowsOutput>;
  deleteManyClinicalSoftware?: Maybe<AffectedRowsOutput>;
  deleteManyClockinBreak?: Maybe<AffectedRowsOutput>;
  deleteManyClockinLongpoll?: Maybe<AffectedRowsOutput>;
  deleteManyClockinTimesheet?: Maybe<AffectedRowsOutput>;
  deleteManyCmAccountNote?: Maybe<AffectedRowsOutput>;
  deleteManyCmAppointmentCustom?: Maybe<AffectedRowsOutput>;
  deleteManyCmAppointmentsCustomImportHelper?: Maybe<AffectedRowsOutput>;
  deleteManyCmAuthorization?: Maybe<AffectedRowsOutput>;
  deleteManyCmBookingNote?: Maybe<AffectedRowsOutput>;
  deleteManyCmCampaign?: Maybe<AffectedRowsOutput>;
  deleteManyCmCampaignNote?: Maybe<AffectedRowsOutput>;
  deleteManyCmCase?: Maybe<AffectedRowsOutput>;
  deleteManyCmCaseNote?: Maybe<AffectedRowsOutput>;
  deleteManyCmCaseReply?: Maybe<AffectedRowsOutput>;
  deleteManyCmContact?: Maybe<AffectedRowsOutput>;
  deleteManyCompany?: Maybe<AffectedRowsOutput>;
  deleteManyCompanyDetails?: Maybe<AffectedRowsOutput>;
  deleteManyCompanySubscription?: Maybe<AffectedRowsOutput>;
  deleteManyGlCode?: Maybe<AffectedRowsOutput>;
  deleteManyInvPaymentType?: Maybe<AffectedRowsOutput>;
  deleteManyMarketingSource?: Maybe<AffectedRowsOutput>;
  deleteManyMediaLlibraryAttachment?: Maybe<AffectedRowsOutput>;
  deleteManySecondAtAnswer?: Maybe<AffectedRowsOutput>;
  deleteManySecondAtQuestion?: Maybe<AffectedRowsOutput>;
  deleteManyThirdPartyAccess?: Maybe<AffectedRowsOutput>;
  deleteManyTimezone?: Maybe<AffectedRowsOutput>;
  deleteManyTwoFactorHistory?: Maybe<AffectedRowsOutput>;
  deleteManyUser?: Maybe<AffectedRowsOutput>;
  deleteManyUserSecurityQuestionsAnswer?: Maybe<AffectedRowsOutput>;
  deleteOneAcLog?: Maybe<AcLog>;
  deleteOneAcLogAction?: Maybe<AcLogAction>;
  deleteOneAcLogUrl?: Maybe<AcLogUrl>;
  deleteOneAcceptEmailToken?: Maybe<AcceptEmailToken>;
  deleteOneAccountBalance?: Maybe<AccountBalance>;
  deleteOneAccountBalanceLog?: Maybe<AccountBalanceLog>;
  deleteOneAccountManager?: Maybe<AccountManager>;
  deleteOneAdvertCampaign?: Maybe<AdvertCampaign>;
  deleteOneApiDebug?: Maybe<ApiDebug>;
  deleteOneApiKey?: Maybe<ApiKey>;
  deleteOneAppBeforeAfter?: Maybe<AppBeforeAfter>;
  deleteOneAppPermission?: Maybe<AppPermission>;
  deleteOneAppSubscription?: Maybe<AppSubscription>;
  deleteOneAppSubscriptionsCompanyPrice?: Maybe<AppSubscriptionsCompanyPrice>;
  deleteOneAtAnswer?: Maybe<AtAnswer>;
  deleteOneAtConcern?: Maybe<AtConcern>;
  deleteOneAtQuestion?: Maybe<AtQuestion>;
  deleteOneAtQuestionsRelation?: Maybe<AtQuestionsRelation>;
  deleteOneAtQuizTake?: Maybe<AtQuizTake>;
  deleteOneAtSetting?: Maybe<AtSetting>;
  deleteOneAtTreatment?: Maybe<AtTreatment>;
  deleteOneAttachmentHelperLite?: Maybe<AttachmentHelperLite>;
  deleteOneAutomationAction?: Maybe<AutomationAction>;
  deleteOneAutomationDelay?: Maybe<AutomationDelay>;
  deleteOneAutomationFolder?: Maybe<AutomationFolder>;
  deleteOneAutomationLog?: Maybe<AutomationLog>;
  deleteOneAutomationRule?: Maybe<AutomationRule>;
  deleteOneAutomationTrigger?: Maybe<AutomationTrigger>;
  deleteOneAvilableDatesLog?: Maybe<AvilableDatesLog>;
  deleteOneBacsAccount?: Maybe<BacsAccount>;
  deleteOneBatch?: Maybe<Batch>;
  deleteOneBatchItem?: Maybe<BatchItem>;
  deleteOneBlockReason?: Maybe<BlockReason>;
  deleteOneBnfDrug?: Maybe<BnfDrug>;
  deleteOneBodyChartTemplate?: Maybe<BodyChartTemplate>;
  deleteOneBookingMaster?: Maybe<BookingMaster>;
  deleteOneBookingSetting?: Maybe<BookingSetting>;
  deleteOneBookingStatus?: Maybe<BookingStatus>;
  deleteOneBookingStatusChange?: Maybe<BookingStatusChange>;
  deleteOneBookitProGeneral?: Maybe<BookitProGeneral>;
  deleteOneBookitProSlider?: Maybe<BookitProSlider>;
  deleteOneBookmarkedPage?: Maybe<BookmarkedPage>;
  deleteOneBugLog?: Maybe<BugLog>;
  deleteOneCalRangeRequest?: Maybe<CalRangeRequest>;
  deleteOneCalendarView?: Maybe<CalendarView>;
  deleteOneCampaignAttachment?: Maybe<CampaignAttachment>;
  deleteOneCancelReason?: Maybe<CancelReason>;
  deleteOneCancellationPolicy?: Maybe<CancellationPolicy>;
  deleteOneCandidate?: Maybe<Candidate>;
  deleteOneCardType?: Maybe<CardType>;
  deleteOneCashupReport?: Maybe<CashupReport>;
  deleteOneCashupReportCustom?: Maybe<CashupReportCustom>;
  deleteOneCheckinAppt?: Maybe<CheckinAppt>;
  deleteOneCheckinAverages?: Maybe<CheckinAverages>;
  deleteOneCheckinAveragesIdle?: Maybe<CheckinAveragesIdle>;
  deleteOneCheckinProduct?: Maybe<CheckinProduct>;
  deleteOneCheckinQueue?: Maybe<CheckinQueue>;
  deleteOneClassCategory?: Maybe<ClassCategory>;
  deleteOneClassGuests?: Maybe<ClassGuests>;
  deleteOneClassMaster?: Maybe<ClassMaster>;
  deleteOneClassNotes?: Maybe<ClassNotes>;
  deleteOneClassProduct?: Maybe<ClassProduct>;
  deleteOneClassSmsHistory?: Maybe<ClassSmsHistory>;
  deleteOneClassTemplateSetting?: Maybe<ClassTemplateSetting>;
  deleteOneClasstypeMaster?: Maybe<ClasstypeMaster>;
  deleteOneCleverpinSetting?: Maybe<CleverpinSetting>;
  deleteOneClientFormSetting?: Maybe<ClientFormSetting>;
  deleteOneClinicalSoftware?: Maybe<ClinicalSoftware>;
  deleteOneClockinBreak?: Maybe<ClockinBreak>;
  deleteOneClockinLongpoll?: Maybe<ClockinLongpoll>;
  deleteOneClockinTimesheet?: Maybe<ClockinTimesheet>;
  deleteOneCmAccountNote?: Maybe<CmAccountNote>;
  deleteOneCmAppointmentCustom?: Maybe<CmAppointmentCustom>;
  deleteOneCmAppointmentsCustomImportHelper?: Maybe<CmAppointmentsCustomImportHelper>;
  deleteOneCmAuthorization?: Maybe<CmAuthorization>;
  deleteOneCmBookingNote?: Maybe<CmBookingNote>;
  deleteOneCmCampaign?: Maybe<CmCampaign>;
  deleteOneCmCampaignNote?: Maybe<CmCampaignNote>;
  deleteOneCmCase?: Maybe<CmCase>;
  deleteOneCmCaseNote?: Maybe<CmCaseNote>;
  deleteOneCmCaseReply?: Maybe<CmCaseReply>;
  deleteOneCmContact?: Maybe<CmContact>;
  deleteOneCompany?: Maybe<Company>;
  deleteOneCompanyDetails?: Maybe<CompanyDetails>;
  deleteOneCompanySubscription?: Maybe<CompanySubscription>;
  deleteOneGlCode?: Maybe<GlCode>;
  deleteOneInvPaymentType?: Maybe<InvPaymentType>;
  deleteOneMarketingSource?: Maybe<MarketingSource>;
  deleteOneMediaLlibraryAttachment?: Maybe<MediaLlibraryAttachment>;
  deleteOneSecondAtAnswer?: Maybe<SecondAtAnswer>;
  deleteOneSecondAtQuestion?: Maybe<SecondAtQuestion>;
  deleteOneThirdPartyAccess?: Maybe<ThirdPartyAccess>;
  deleteOneTimezone?: Maybe<Timezone>;
  deleteOneTwoFactorHistory?: Maybe<TwoFactorHistory>;
  deleteOneUser?: Maybe<User>;
  deleteOneUserSecurityQuestionsAnswer?: Maybe<UserSecurityQuestionsAnswer>;
  /** delete data from the table: "Discounts" */
  delete_Discounts?: Maybe<Discounts_Mutation_Response>;
  /** delete single row from the table: "Discounts" */
  delete_Discounts_by_pk?: Maybe<Discounts>;
  /** delete data from the table: "LMS_slugs" */
  delete_LMS_slugs?: Maybe<Lms_Slugs_Mutation_Response>;
  /** delete single row from the table: "LMS_slugs" */
  delete_LMS_slugs_by_pk?: Maybe<Lms_Slugs>;
  /** delete data from the table: "Labs" */
  delete_Labs?: Maybe<Labs_Mutation_Response>;
  /** delete single row from the table: "Labs" */
  delete_Labs_by_pk?: Maybe<Labs>;
  /** delete data from the table: "Lists_campaign" */
  delete_Lists_campaign?: Maybe<Lists_Campaign_Mutation_Response>;
  /** delete single row from the table: "Lists_campaign" */
  delete_Lists_campaign_by_pk?: Maybe<Lists_Campaign>;
  /** delete data from the table: "Newsletter_campaign" */
  delete_Newsletter_campaign?: Maybe<Newsletter_Campaign_Mutation_Response>;
  /** delete single row from the table: "Newsletter_campaign" */
  delete_Newsletter_campaign_by_pk?: Maybe<Newsletter_Campaign>;
  /** delete data from the table: "SMS_campaign" */
  delete_SMS_campaign?: Maybe<Sms_Campaign_Mutation_Response>;
  /** delete single row from the table: "SMS_campaign" */
  delete_SMS_campaign_by_pk?: Maybe<Sms_Campaign>;
  /** delete data from the table: "appointment_status" */
  delete_appointment_status?: Maybe<Appointment_Status_Mutation_Response>;
  /** delete single row from the table: "appointment_status" */
  delete_appointment_status_by_pk?: Maybe<Appointment_Status>;
  /** delete data from the table: "block_out_options" */
  delete_block_out_options?: Maybe<Block_Out_Options_Mutation_Response>;
  /** delete single row from the table: "block_out_options" */
  delete_block_out_options_by_pk?: Maybe<Block_Out_Options>;
  /** delete data from the table: "business_details" */
  delete_business_details?: Maybe<Business_Details_Mutation_Response>;
  /** delete single row from the table: "business_details" */
  delete_business_details_by_pk?: Maybe<Business_Details>;
  /** delete data from the table: "calendar_settings" */
  delete_calendar_settings?: Maybe<Calendar_Settings_Mutation_Response>;
  /** delete single row from the table: "calendar_settings" */
  delete_calendar_settings_by_pk?: Maybe<Calendar_Settings>;
  /** delete data from the table: "cancellation_reasons" */
  delete_cancellation_reasons?: Maybe<Cancellation_Reasons_Mutation_Response>;
  /** delete single row from the table: "cancellation_reasons" */
  delete_cancellation_reasons_by_pk?: Maybe<Cancellation_Reasons>;
  /** delete data from the table: "candidate_list" */
  delete_candidate_list?: Maybe<Candidate_List_Mutation_Response>;
  /** delete single row from the table: "candidate_list" */
  delete_candidate_list_by_pk?: Maybe<Candidate_List>;
  /** delete data from the table: "category" */
  delete_category?: Maybe<Category_Mutation_Response>;
  /** delete single row from the table: "category" */
  delete_category_by_pk?: Maybe<Category>;
  /** delete data from the table: "clients_data" */
  delete_clients_data?: Maybe<Clients_Data_Mutation_Response>;
  /** delete single row from the table: "clients_data" */
  delete_clients_data_by_pk?: Maybe<Clients_Data>;
  /** delete data from the table: "courses" */
  delete_courses?: Maybe<Courses_Mutation_Response>;
  /** delete single row from the table: "courses" */
  delete_courses_by_pk?: Maybe<Courses>;
  /** delete data from the table: "credit_note_type" */
  delete_credit_note_type?: Maybe<Credit_Note_Type_Mutation_Response>;
  /** delete single row from the table: "credit_note_type" */
  delete_credit_note_type_by_pk?: Maybe<Credit_Note_Type>;
  /** delete data from the table: "credit_notes" */
  delete_credit_notes?: Maybe<Credit_Notes_Mutation_Response>;
  /** delete single row from the table: "credit_notes" */
  delete_credit_notes_by_pk?: Maybe<Credit_Notes>;
  /** delete data from the table: "custom_fields_categories" */
  delete_custom_fields_categories?: Maybe<Custom_Fields_Categories_Mutation_Response>;
  /** delete single row from the table: "custom_fields_categories" */
  delete_custom_fields_categories_by_pk?: Maybe<Custom_Fields_Categories>;
  /** delete data from the table: "debt" */
  delete_debt?: Maybe<Debt_Mutation_Response>;
  /** delete single row from the table: "debt" */
  delete_debt_by_pk?: Maybe<Debt>;
  /** delete data from the table: "departments" */
  delete_departments?: Maybe<Departments_Mutation_Response>;
  /** delete single row from the table: "departments" */
  delete_departments_by_pk?: Maybe<Departments>;
  /** delete data from the table: "diagnostic_codes" */
  delete_diagnostic_codes?: Maybe<Diagnostic_Codes_Mutation_Response>;
  /** delete single row from the table: "diagnostic_codes" */
  delete_diagnostic_codes_by_pk?: Maybe<Diagnostic_Codes>;
  /** delete data from the table: "diagnostic_codeset" */
  delete_diagnostic_codeset?: Maybe<Diagnostic_Codeset_Mutation_Response>;
  /** delete single row from the table: "diagnostic_codeset" */
  delete_diagnostic_codeset_by_pk?: Maybe<Diagnostic_Codeset>;
  /** delete data from the table: "drugs" */
  delete_drugs?: Maybe<Drugs_Mutation_Response>;
  /** delete single row from the table: "drugs" */
  delete_drugs_by_pk?: Maybe<Drugs>;
  /** delete data from the table: "family_relationships" */
  delete_family_relationships?: Maybe<Family_Relationships_Mutation_Response>;
  /** delete single row from the table: "family_relationships" */
  delete_family_relationships_by_pk?: Maybe<Family_Relationships>;
  /** delete data from the table: "invoices" */
  delete_invoices?: Maybe<Invoices_Mutation_Response>;
  /** delete single row from the table: "invoices" */
  delete_invoices_by_pk?: Maybe<Invoices>;
  /** delete data from the table: "issuing_company" */
  delete_issuing_company?: Maybe<Issuing_Company_Mutation_Response>;
  /** delete single row from the table: "issuing_company" */
  delete_issuing_company_by_pk?: Maybe<Issuing_Company>;
  /** delete data from the table: "job_candidates" */
  delete_job_candidates?: Maybe<Job_Candidates_Mutation_Response>;
  /** delete single row from the table: "job_candidates" */
  delete_job_candidates_by_pk?: Maybe<Job_Candidates>;
  /** delete data from the table: "job_openings" */
  delete_job_openings?: Maybe<Job_Openings_Mutation_Response>;
  /** delete single row from the table: "job_openings" */
  delete_job_openings_by_pk?: Maybe<Job_Openings>;
  /** delete data from the table: "job_title" */
  delete_job_title?: Maybe<Job_Title_Mutation_Response>;
  /** delete single row from the table: "job_title" */
  delete_job_title_by_pk?: Maybe<Job_Title>;
  /** delete data from the table: "labs_dashboard" */
  delete_labs_dashboard?: Maybe<Labs_Dashboard_Mutation_Response>;
  /** delete single row from the table: "labs_dashboard" */
  delete_labs_dashboard_by_pk?: Maybe<Labs_Dashboard>;
  /** delete data from the table: "lead" */
  delete_lead?: Maybe<Lead_Mutation_Response>;
  /** delete single row from the table: "lead" */
  delete_lead_by_pk?: Maybe<Lead>;
  /** delete data from the table: "lead_fields" */
  delete_lead_fields?: Maybe<Lead_Fields_Mutation_Response>;
  /** delete single row from the table: "lead_fields" */
  delete_lead_fields_by_pk?: Maybe<Lead_Fields>;
  /** delete data from the table: "library" */
  delete_library?: Maybe<Library_Mutation_Response>;
  /** delete single row from the table: "library" */
  delete_library_by_pk?: Maybe<Library>;
  /** delete data from the table: "library_installers" */
  delete_library_installers?: Maybe<Library_Installers_Mutation_Response>;
  /** delete single row from the table: "library_installers" */
  delete_library_installers_by_pk?: Maybe<Library_Installers>;
  /** delete data from the table: "locations" */
  delete_locations?: Maybe<Locations_Mutation_Response>;
  /** delete single row from the table: "locations" */
  delete_locations_by_pk?: Maybe<Locations>;
  /** delete data from the table: "marketing_campaign" */
  delete_marketing_campaign?: Maybe<Marketing_Campaign_Mutation_Response>;
  /** delete single row from the table: "marketing_campaign" */
  delete_marketing_campaign_by_pk?: Maybe<Marketing_Campaign>;
  /** delete data from the table: "marketing_referral" */
  delete_marketing_referral?: Maybe<Marketing_Referral_Mutation_Response>;
  /** delete single row from the table: "marketing_referral" */
  delete_marketing_referral_by_pk?: Maybe<Marketing_Referral>;
  /** delete data from the table: "marketing_source" */
  delete_marketing_source?: Maybe<Marketing_Source_Mutation_Response>;
  /** delete single row from the table: "marketing_source" */
  delete_marketing_source_by_pk?: Maybe<Marketing_Source>;
  /** delete data from the table: "payment_types" */
  delete_payment_types?: Maybe<Payment_Types_Mutation_Response>;
  /** delete single row from the table: "payment_types" */
  delete_payment_types_by_pk?: Maybe<Payment_Types>;
  /** delete data from the table: "payments" */
  delete_payments?: Maybe<Payments_Mutation_Response>;
  /** delete single row from the table: "payments" */
  delete_payments_by_pk?: Maybe<Payments>;
  /** delete data from the table: "petty_cash_types" */
  delete_petty_cash_types?: Maybe<Petty_Cash_Types_Mutation_Response>;
  /** delete single row from the table: "petty_cash_types" */
  delete_petty_cash_types_by_pk?: Maybe<Petty_Cash_Types>;
  /** delete data from the table: "product_lists" */
  delete_product_lists?: Maybe<Product_Lists_Mutation_Response>;
  /** delete single row from the table: "product_lists" */
  delete_product_lists_by_pk?: Maybe<Product_Lists>;
  /** delete data from the table: "prototype" */
  delete_prototype?: Maybe<Prototype_Mutation_Response>;
  /** delete single row from the table: "prototype" */
  delete_prototype_by_pk?: Maybe<Prototype>;
  /** delete data from the table: "purchase_order" */
  delete_purchase_order?: Maybe<Purchase_Order_Mutation_Response>;
  /** delete single row from the table: "purchase_order" */
  delete_purchase_order_by_pk?: Maybe<Purchase_Order>;
  /** delete data from the table: "resources" */
  delete_resources?: Maybe<Resources_Mutation_Response>;
  /** delete single row from the table: "resources" */
  delete_resources_by_pk?: Maybe<Resources>;
  /** delete data from the table: "rooms" */
  delete_rooms?: Maybe<Rooms_Mutation_Response>;
  /** delete single row from the table: "rooms" */
  delete_rooms_by_pk?: Maybe<Rooms>;
  /** delete data from the table: "rota_templates" */
  delete_rota_templates?: Maybe<Rota_Templates_Mutation_Response>;
  /** delete single row from the table: "rota_templates" */
  delete_rota_templates_by_pk?: Maybe<Rota_Templates>;
  /** delete data from the table: "salutation" */
  delete_salutation?: Maybe<Salutation_Mutation_Response>;
  /** delete single row from the table: "salutation" */
  delete_salutation_by_pk?: Maybe<Salutation>;
  /** delete data from the table: "stock_take" */
  delete_stock_take?: Maybe<Stock_Take_Mutation_Response>;
  /** delete single row from the table: "stock_take" */
  delete_stock_take_by_pk?: Maybe<Stock_Take>;
  /** delete data from the table: "supplier" */
  delete_supplier?: Maybe<Supplier_Mutation_Response>;
  /** delete single row from the table: "supplier" */
  delete_supplier_by_pk?: Maybe<Supplier>;
  /** delete data from the table: "tax_rates" */
  delete_tax_rates?: Maybe<Tax_Rates_Mutation_Response>;
  /** delete single row from the table: "tax_rates" */
  delete_tax_rates_by_pk?: Maybe<Tax_Rates>;
  /** delete data from the table: "third_parties" */
  delete_third_parties?: Maybe<Third_Parties_Mutation_Response>;
  /** delete single row from the table: "third_parties" */
  delete_third_parties_by_pk?: Maybe<Third_Parties>;
  /** insert data into the table: "Discounts" */
  insert_Discounts?: Maybe<Discounts_Mutation_Response>;
  /** insert a single row into the table: "Discounts" */
  insert_Discounts_one?: Maybe<Discounts>;
  /** insert data into the table: "LMS_slugs" */
  insert_LMS_slugs?: Maybe<Lms_Slugs_Mutation_Response>;
  /** insert a single row into the table: "LMS_slugs" */
  insert_LMS_slugs_one?: Maybe<Lms_Slugs>;
  /** insert data into the table: "Labs" */
  insert_Labs?: Maybe<Labs_Mutation_Response>;
  /** insert a single row into the table: "Labs" */
  insert_Labs_one?: Maybe<Labs>;
  /** insert data into the table: "Lists_campaign" */
  insert_Lists_campaign?: Maybe<Lists_Campaign_Mutation_Response>;
  /** insert a single row into the table: "Lists_campaign" */
  insert_Lists_campaign_one?: Maybe<Lists_Campaign>;
  /** insert data into the table: "Newsletter_campaign" */
  insert_Newsletter_campaign?: Maybe<Newsletter_Campaign_Mutation_Response>;
  /** insert a single row into the table: "Newsletter_campaign" */
  insert_Newsletter_campaign_one?: Maybe<Newsletter_Campaign>;
  /** insert data into the table: "SMS_campaign" */
  insert_SMS_campaign?: Maybe<Sms_Campaign_Mutation_Response>;
  /** insert a single row into the table: "SMS_campaign" */
  insert_SMS_campaign_one?: Maybe<Sms_Campaign>;
  /** insert data into the table: "appointment_status" */
  insert_appointment_status?: Maybe<Appointment_Status_Mutation_Response>;
  /** insert a single row into the table: "appointment_status" */
  insert_appointment_status_one?: Maybe<Appointment_Status>;
  /** insert data into the table: "block_out_options" */
  insert_block_out_options?: Maybe<Block_Out_Options_Mutation_Response>;
  /** insert a single row into the table: "block_out_options" */
  insert_block_out_options_one?: Maybe<Block_Out_Options>;
  /** insert data into the table: "business_details" */
  insert_business_details?: Maybe<Business_Details_Mutation_Response>;
  /** insert a single row into the table: "business_details" */
  insert_business_details_one?: Maybe<Business_Details>;
  /** insert data into the table: "calendar_settings" */
  insert_calendar_settings?: Maybe<Calendar_Settings_Mutation_Response>;
  /** insert a single row into the table: "calendar_settings" */
  insert_calendar_settings_one?: Maybe<Calendar_Settings>;
  /** insert data into the table: "cancellation_reasons" */
  insert_cancellation_reasons?: Maybe<Cancellation_Reasons_Mutation_Response>;
  /** insert a single row into the table: "cancellation_reasons" */
  insert_cancellation_reasons_one?: Maybe<Cancellation_Reasons>;
  /** insert data into the table: "candidate_list" */
  insert_candidate_list?: Maybe<Candidate_List_Mutation_Response>;
  /** insert a single row into the table: "candidate_list" */
  insert_candidate_list_one?: Maybe<Candidate_List>;
  /** insert data into the table: "category" */
  insert_category?: Maybe<Category_Mutation_Response>;
  /** insert a single row into the table: "category" */
  insert_category_one?: Maybe<Category>;
  /** insert data into the table: "clients_data" */
  insert_clients_data?: Maybe<Clients_Data_Mutation_Response>;
  /** insert a single row into the table: "clients_data" */
  insert_clients_data_one?: Maybe<Clients_Data>;
  /** insert data into the table: "colors" */
  insert_colors?: Maybe<Colors_Mutation_Response>;
  /** insert a single row into the table: "colors" */
  insert_colors_one?: Maybe<Colors>;
  /** insert data into the table: "courses" */
  insert_courses?: Maybe<Courses_Mutation_Response>;
  /** insert a single row into the table: "courses" */
  insert_courses_one?: Maybe<Courses>;
  /** insert data into the table: "credit_note_type" */
  insert_credit_note_type?: Maybe<Credit_Note_Type_Mutation_Response>;
  /** insert a single row into the table: "credit_note_type" */
  insert_credit_note_type_one?: Maybe<Credit_Note_Type>;
  /** insert data into the table: "credit_notes" */
  insert_credit_notes?: Maybe<Credit_Notes_Mutation_Response>;
  /** insert a single row into the table: "credit_notes" */
  insert_credit_notes_one?: Maybe<Credit_Notes>;
  /** insert data into the table: "custom_fields_categories" */
  insert_custom_fields_categories?: Maybe<Custom_Fields_Categories_Mutation_Response>;
  /** insert a single row into the table: "custom_fields_categories" */
  insert_custom_fields_categories_one?: Maybe<Custom_Fields_Categories>;
  /** insert data into the table: "debt" */
  insert_debt?: Maybe<Debt_Mutation_Response>;
  /** insert a single row into the table: "debt" */
  insert_debt_one?: Maybe<Debt>;
  /** insert data into the table: "departments" */
  insert_departments?: Maybe<Departments_Mutation_Response>;
  /** insert a single row into the table: "departments" */
  insert_departments_one?: Maybe<Departments>;
  /** insert data into the table: "diagnostic_codes" */
  insert_diagnostic_codes?: Maybe<Diagnostic_Codes_Mutation_Response>;
  /** insert a single row into the table: "diagnostic_codes" */
  insert_diagnostic_codes_one?: Maybe<Diagnostic_Codes>;
  /** insert data into the table: "diagnostic_codeset" */
  insert_diagnostic_codeset?: Maybe<Diagnostic_Codeset_Mutation_Response>;
  /** insert a single row into the table: "diagnostic_codeset" */
  insert_diagnostic_codeset_one?: Maybe<Diagnostic_Codeset>;
  /** insert data into the table: "drugs" */
  insert_drugs?: Maybe<Drugs_Mutation_Response>;
  /** insert a single row into the table: "drugs" */
  insert_drugs_one?: Maybe<Drugs>;
  /** insert data into the table: "family_relationships" */
  insert_family_relationships?: Maybe<Family_Relationships_Mutation_Response>;
  /** insert a single row into the table: "family_relationships" */
  insert_family_relationships_one?: Maybe<Family_Relationships>;
  /** insert data into the table: "feature_flags" */
  insert_feature_flags?: Maybe<Feature_Flags_Mutation_Response>;
  /** insert a single row into the table: "feature_flags" */
  insert_feature_flags_one?: Maybe<Feature_Flags>;
  /** insert data into the table: "invoices" */
  insert_invoices?: Maybe<Invoices_Mutation_Response>;
  /** insert a single row into the table: "invoices" */
  insert_invoices_one?: Maybe<Invoices>;
  /** insert data into the table: "issuing_company" */
  insert_issuing_company?: Maybe<Issuing_Company_Mutation_Response>;
  /** insert a single row into the table: "issuing_company" */
  insert_issuing_company_one?: Maybe<Issuing_Company>;
  /** insert data into the table: "job_candidates" */
  insert_job_candidates?: Maybe<Job_Candidates_Mutation_Response>;
  /** insert a single row into the table: "job_candidates" */
  insert_job_candidates_one?: Maybe<Job_Candidates>;
  /** insert data into the table: "job_openings" */
  insert_job_openings?: Maybe<Job_Openings_Mutation_Response>;
  /** insert a single row into the table: "job_openings" */
  insert_job_openings_one?: Maybe<Job_Openings>;
  /** insert data into the table: "job_title" */
  insert_job_title?: Maybe<Job_Title_Mutation_Response>;
  /** insert a single row into the table: "job_title" */
  insert_job_title_one?: Maybe<Job_Title>;
  /** insert data into the table: "labs_dashboard" */
  insert_labs_dashboard?: Maybe<Labs_Dashboard_Mutation_Response>;
  /** insert a single row into the table: "labs_dashboard" */
  insert_labs_dashboard_one?: Maybe<Labs_Dashboard>;
  /** insert data into the table: "lead" */
  insert_lead?: Maybe<Lead_Mutation_Response>;
  /** insert data into the table: "lead_fields" */
  insert_lead_fields?: Maybe<Lead_Fields_Mutation_Response>;
  /** insert a single row into the table: "lead_fields" */
  insert_lead_fields_one?: Maybe<Lead_Fields>;
  /** insert a single row into the table: "lead" */
  insert_lead_one?: Maybe<Lead>;
  /** insert data into the table: "library" */
  insert_library?: Maybe<Library_Mutation_Response>;
  /** insert data into the table: "library_installers" */
  insert_library_installers?: Maybe<Library_Installers_Mutation_Response>;
  /** insert a single row into the table: "library_installers" */
  insert_library_installers_one?: Maybe<Library_Installers>;
  /** insert a single row into the table: "library" */
  insert_library_one?: Maybe<Library>;
  /** insert data into the table: "locations" */
  insert_locations?: Maybe<Locations_Mutation_Response>;
  /** insert a single row into the table: "locations" */
  insert_locations_one?: Maybe<Locations>;
  /** insert data into the table: "marketing_campaign" */
  insert_marketing_campaign?: Maybe<Marketing_Campaign_Mutation_Response>;
  /** insert a single row into the table: "marketing_campaign" */
  insert_marketing_campaign_one?: Maybe<Marketing_Campaign>;
  /** insert data into the table: "marketing_referral" */
  insert_marketing_referral?: Maybe<Marketing_Referral_Mutation_Response>;
  /** insert a single row into the table: "marketing_referral" */
  insert_marketing_referral_one?: Maybe<Marketing_Referral>;
  /** insert data into the table: "marketing_source" */
  insert_marketing_source?: Maybe<Marketing_Source_Mutation_Response>;
  /** insert a single row into the table: "marketing_source" */
  insert_marketing_source_one?: Maybe<Marketing_Source>;
  /** insert data into the table: "packages_setup" */
  insert_packages_setup?: Maybe<Packages_Setup_Mutation_Response>;
  /** insert data into the table: "payment_types" */
  insert_payment_types?: Maybe<Payment_Types_Mutation_Response>;
  /** insert a single row into the table: "payment_types" */
  insert_payment_types_one?: Maybe<Payment_Types>;
  /** insert data into the table: "payments" */
  insert_payments?: Maybe<Payments_Mutation_Response>;
  /** insert a single row into the table: "payments" */
  insert_payments_one?: Maybe<Payments>;
  /** insert data into the table: "petty_cash_types" */
  insert_petty_cash_types?: Maybe<Petty_Cash_Types_Mutation_Response>;
  /** insert a single row into the table: "petty_cash_types" */
  insert_petty_cash_types_one?: Maybe<Petty_Cash_Types>;
  /** insert data into the table: "product_lists" */
  insert_product_lists?: Maybe<Product_Lists_Mutation_Response>;
  /** insert a single row into the table: "product_lists" */
  insert_product_lists_one?: Maybe<Product_Lists>;
  /** insert data into the table: "prototype" */
  insert_prototype?: Maybe<Prototype_Mutation_Response>;
  /** insert a single row into the table: "prototype" */
  insert_prototype_one?: Maybe<Prototype>;
  /** insert data into the table: "purchase_order" */
  insert_purchase_order?: Maybe<Purchase_Order_Mutation_Response>;
  /** insert a single row into the table: "purchase_order" */
  insert_purchase_order_one?: Maybe<Purchase_Order>;
  /** insert data into the table: "resources" */
  insert_resources?: Maybe<Resources_Mutation_Response>;
  /** insert a single row into the table: "resources" */
  insert_resources_one?: Maybe<Resources>;
  /** insert data into the table: "rooms" */
  insert_rooms?: Maybe<Rooms_Mutation_Response>;
  /** insert a single row into the table: "rooms" */
  insert_rooms_one?: Maybe<Rooms>;
  /** insert data into the table: "rota_templates" */
  insert_rota_templates?: Maybe<Rota_Templates_Mutation_Response>;
  /** insert a single row into the table: "rota_templates" */
  insert_rota_templates_one?: Maybe<Rota_Templates>;
  /** insert data into the table: "salutation" */
  insert_salutation?: Maybe<Salutation_Mutation_Response>;
  /** insert a single row into the table: "salutation" */
  insert_salutation_one?: Maybe<Salutation>;
  /** insert data into the table: "stock_take" */
  insert_stock_take?: Maybe<Stock_Take_Mutation_Response>;
  /** insert a single row into the table: "stock_take" */
  insert_stock_take_one?: Maybe<Stock_Take>;
  /** insert data into the table: "supplier" */
  insert_supplier?: Maybe<Supplier_Mutation_Response>;
  /** insert a single row into the table: "supplier" */
  insert_supplier_one?: Maybe<Supplier>;
  /** insert data into the table: "tax_rates" */
  insert_tax_rates?: Maybe<Tax_Rates_Mutation_Response>;
  /** insert a single row into the table: "tax_rates" */
  insert_tax_rates_one?: Maybe<Tax_Rates>;
  /** insert data into the table: "third_parties" */
  insert_third_parties?: Maybe<Third_Parties_Mutation_Response>;
  /** insert a single row into the table: "third_parties" */
  insert_third_parties_one?: Maybe<Third_Parties>;
  login?: Maybe<Scalars['String']>;
  logout?: Maybe<Scalars['Boolean']>;
  updateManyAcLog?: Maybe<AffectedRowsOutput>;
  updateManyAcLogAction?: Maybe<AffectedRowsOutput>;
  updateManyAcLogUrl?: Maybe<AffectedRowsOutput>;
  updateManyAcceptEmailToken?: Maybe<AffectedRowsOutput>;
  updateManyAccountBalance?: Maybe<AffectedRowsOutput>;
  updateManyAccountBalanceLog?: Maybe<AffectedRowsOutput>;
  updateManyAccountManager?: Maybe<AffectedRowsOutput>;
  updateManyAdvertCampaign?: Maybe<AffectedRowsOutput>;
  updateManyApiDebug?: Maybe<AffectedRowsOutput>;
  updateManyApiKey?: Maybe<AffectedRowsOutput>;
  updateManyAppBeforeAfter?: Maybe<AffectedRowsOutput>;
  updateManyAppPermission?: Maybe<AffectedRowsOutput>;
  updateManyAppSubscription?: Maybe<AffectedRowsOutput>;
  updateManyAppSubscriptionsCompanyPrice?: Maybe<AffectedRowsOutput>;
  updateManyAtAnswer?: Maybe<AffectedRowsOutput>;
  updateManyAtConcern?: Maybe<AffectedRowsOutput>;
  updateManyAtQuestion?: Maybe<AffectedRowsOutput>;
  updateManyAtQuestionsRelation?: Maybe<AffectedRowsOutput>;
  updateManyAtQuizTake?: Maybe<AffectedRowsOutput>;
  updateManyAtSetting?: Maybe<AffectedRowsOutput>;
  updateManyAtTreatment?: Maybe<AffectedRowsOutput>;
  updateManyAttachmentHelperLite?: Maybe<AffectedRowsOutput>;
  updateManyAutomationAction?: Maybe<AffectedRowsOutput>;
  updateManyAutomationDelay?: Maybe<AffectedRowsOutput>;
  updateManyAutomationFolder?: Maybe<AffectedRowsOutput>;
  updateManyAutomationLog?: Maybe<AffectedRowsOutput>;
  updateManyAutomationRule?: Maybe<AffectedRowsOutput>;
  updateManyAutomationTrigger?: Maybe<AffectedRowsOutput>;
  updateManyAvilableDatesLog?: Maybe<AffectedRowsOutput>;
  updateManyBacsAccount?: Maybe<AffectedRowsOutput>;
  updateManyBatch?: Maybe<AffectedRowsOutput>;
  updateManyBatchItem?: Maybe<AffectedRowsOutput>;
  updateManyBlockReason?: Maybe<AffectedRowsOutput>;
  updateManyBnfDrug?: Maybe<AffectedRowsOutput>;
  updateManyBodyChartTemplate?: Maybe<AffectedRowsOutput>;
  updateManyBookingMaster?: Maybe<AffectedRowsOutput>;
  updateManyBookingSetting?: Maybe<AffectedRowsOutput>;
  updateManyBookingStatus?: Maybe<AffectedRowsOutput>;
  updateManyBookingStatusChange?: Maybe<AffectedRowsOutput>;
  updateManyBookitProGeneral?: Maybe<AffectedRowsOutput>;
  updateManyBookitProSlider?: Maybe<AffectedRowsOutput>;
  updateManyBookmarkedPage?: Maybe<AffectedRowsOutput>;
  updateManyBugLog?: Maybe<AffectedRowsOutput>;
  updateManyCalRangeRequest?: Maybe<AffectedRowsOutput>;
  updateManyCalendarView?: Maybe<AffectedRowsOutput>;
  updateManyCampaignAttachment?: Maybe<AffectedRowsOutput>;
  updateManyCancelReason?: Maybe<AffectedRowsOutput>;
  updateManyCancellationPolicy?: Maybe<AffectedRowsOutput>;
  updateManyCandidate?: Maybe<AffectedRowsOutput>;
  updateManyCardType?: Maybe<AffectedRowsOutput>;
  updateManyCashupReport?: Maybe<AffectedRowsOutput>;
  updateManyCashupReportCustom?: Maybe<AffectedRowsOutput>;
  updateManyCheckinAppt?: Maybe<AffectedRowsOutput>;
  updateManyCheckinAverages?: Maybe<AffectedRowsOutput>;
  updateManyCheckinAveragesIdle?: Maybe<AffectedRowsOutput>;
  updateManyCheckinProduct?: Maybe<AffectedRowsOutput>;
  updateManyCheckinQueue?: Maybe<AffectedRowsOutput>;
  updateManyClassCategory?: Maybe<AffectedRowsOutput>;
  updateManyClassGuests?: Maybe<AffectedRowsOutput>;
  updateManyClassMaster?: Maybe<AffectedRowsOutput>;
  updateManyClassNotes?: Maybe<AffectedRowsOutput>;
  updateManyClassProduct?: Maybe<AffectedRowsOutput>;
  updateManyClassSmsHistory?: Maybe<AffectedRowsOutput>;
  updateManyClassTemplateSetting?: Maybe<AffectedRowsOutput>;
  updateManyClasstypeMaster?: Maybe<AffectedRowsOutput>;
  updateManyCleverpinSetting?: Maybe<AffectedRowsOutput>;
  updateManyClientFormSetting?: Maybe<AffectedRowsOutput>;
  updateManyClinicalSoftware?: Maybe<AffectedRowsOutput>;
  updateManyClockinBreak?: Maybe<AffectedRowsOutput>;
  updateManyClockinLongpoll?: Maybe<AffectedRowsOutput>;
  updateManyClockinTimesheet?: Maybe<AffectedRowsOutput>;
  updateManyCmAccountNote?: Maybe<AffectedRowsOutput>;
  updateManyCmAppointmentCustom?: Maybe<AffectedRowsOutput>;
  updateManyCmAppointmentsCustomImportHelper?: Maybe<AffectedRowsOutput>;
  updateManyCmAuthorization?: Maybe<AffectedRowsOutput>;
  updateManyCmBookingNote?: Maybe<AffectedRowsOutput>;
  updateManyCmCampaign?: Maybe<AffectedRowsOutput>;
  updateManyCmCampaignNote?: Maybe<AffectedRowsOutput>;
  updateManyCmCase?: Maybe<AffectedRowsOutput>;
  updateManyCmCaseNote?: Maybe<AffectedRowsOutput>;
  updateManyCmCaseReply?: Maybe<AffectedRowsOutput>;
  updateManyCmContact?: Maybe<AffectedRowsOutput>;
  updateManyCompany?: Maybe<AffectedRowsOutput>;
  updateManyCompanyDetails?: Maybe<AffectedRowsOutput>;
  updateManyCompanySubscription?: Maybe<AffectedRowsOutput>;
  updateManyGlCode?: Maybe<AffectedRowsOutput>;
  updateManyInvPaymentType?: Maybe<AffectedRowsOutput>;
  updateManyMarketingSource?: Maybe<AffectedRowsOutput>;
  updateManyMediaLlibraryAttachment?: Maybe<AffectedRowsOutput>;
  updateManySecondAtAnswer?: Maybe<AffectedRowsOutput>;
  updateManySecondAtQuestion?: Maybe<AffectedRowsOutput>;
  updateManyThirdPartyAccess?: Maybe<AffectedRowsOutput>;
  updateManyTimezone?: Maybe<AffectedRowsOutput>;
  updateManyTwoFactorHistory?: Maybe<AffectedRowsOutput>;
  updateManyUser?: Maybe<AffectedRowsOutput>;
  updateManyUserSecurityQuestionsAnswer?: Maybe<AffectedRowsOutput>;
  updateOneAcLog?: Maybe<AcLog>;
  updateOneAcLogAction?: Maybe<AcLogAction>;
  updateOneAcLogUrl?: Maybe<AcLogUrl>;
  updateOneAcceptEmailToken?: Maybe<AcceptEmailToken>;
  updateOneAccountBalance?: Maybe<AccountBalance>;
  updateOneAccountBalanceLog?: Maybe<AccountBalanceLog>;
  updateOneAccountManager?: Maybe<AccountManager>;
  updateOneAdvertCampaign?: Maybe<AdvertCampaign>;
  updateOneApiDebug?: Maybe<ApiDebug>;
  updateOneApiKey?: Maybe<ApiKey>;
  updateOneAppBeforeAfter?: Maybe<AppBeforeAfter>;
  updateOneAppPermission?: Maybe<AppPermission>;
  updateOneAppSubscription?: Maybe<AppSubscription>;
  updateOneAppSubscriptionsCompanyPrice?: Maybe<AppSubscriptionsCompanyPrice>;
  updateOneAtAnswer?: Maybe<AtAnswer>;
  updateOneAtConcern?: Maybe<AtConcern>;
  updateOneAtQuestion?: Maybe<AtQuestion>;
  updateOneAtQuestionsRelation?: Maybe<AtQuestionsRelation>;
  updateOneAtQuizTake?: Maybe<AtQuizTake>;
  updateOneAtSetting?: Maybe<AtSetting>;
  updateOneAtTreatment?: Maybe<AtTreatment>;
  updateOneAttachmentHelperLite?: Maybe<AttachmentHelperLite>;
  updateOneAutomationAction?: Maybe<AutomationAction>;
  updateOneAutomationDelay?: Maybe<AutomationDelay>;
  updateOneAutomationFolder?: Maybe<AutomationFolder>;
  updateOneAutomationLog?: Maybe<AutomationLog>;
  updateOneAutomationRule?: Maybe<AutomationRule>;
  updateOneAutomationTrigger?: Maybe<AutomationTrigger>;
  updateOneAvilableDatesLog?: Maybe<AvilableDatesLog>;
  updateOneBacsAccount?: Maybe<BacsAccount>;
  updateOneBatch?: Maybe<Batch>;
  updateOneBatchItem?: Maybe<BatchItem>;
  updateOneBlockReason?: Maybe<BlockReason>;
  updateOneBnfDrug?: Maybe<BnfDrug>;
  updateOneBodyChartTemplate?: Maybe<BodyChartTemplate>;
  updateOneBookingMaster?: Maybe<BookingMaster>;
  updateOneBookingSetting?: Maybe<BookingSetting>;
  updateOneBookingStatus?: Maybe<BookingStatus>;
  updateOneBookingStatusChange?: Maybe<BookingStatusChange>;
  updateOneBookitProGeneral?: Maybe<BookitProGeneral>;
  updateOneBookitProSlider?: Maybe<BookitProSlider>;
  updateOneBookmarkedPage?: Maybe<BookmarkedPage>;
  updateOneBugLog?: Maybe<BugLog>;
  updateOneCalRangeRequest?: Maybe<CalRangeRequest>;
  updateOneCalendarView?: Maybe<CalendarView>;
  updateOneCampaignAttachment?: Maybe<CampaignAttachment>;
  updateOneCancelReason?: Maybe<CancelReason>;
  updateOneCancellationPolicy?: Maybe<CancellationPolicy>;
  updateOneCandidate?: Maybe<Candidate>;
  updateOneCardType?: Maybe<CardType>;
  updateOneCashupReport?: Maybe<CashupReport>;
  updateOneCashupReportCustom?: Maybe<CashupReportCustom>;
  updateOneCheckinAppt?: Maybe<CheckinAppt>;
  updateOneCheckinAverages?: Maybe<CheckinAverages>;
  updateOneCheckinAveragesIdle?: Maybe<CheckinAveragesIdle>;
  updateOneCheckinProduct?: Maybe<CheckinProduct>;
  updateOneCheckinQueue?: Maybe<CheckinQueue>;
  updateOneClassCategory?: Maybe<ClassCategory>;
  updateOneClassGuests?: Maybe<ClassGuests>;
  updateOneClassMaster?: Maybe<ClassMaster>;
  updateOneClassNotes?: Maybe<ClassNotes>;
  updateOneClassProduct?: Maybe<ClassProduct>;
  updateOneClassSmsHistory?: Maybe<ClassSmsHistory>;
  updateOneClassTemplateSetting?: Maybe<ClassTemplateSetting>;
  updateOneClasstypeMaster?: Maybe<ClasstypeMaster>;
  updateOneCleverpinSetting?: Maybe<CleverpinSetting>;
  updateOneClientFormSetting?: Maybe<ClientFormSetting>;
  updateOneClinicalSoftware?: Maybe<ClinicalSoftware>;
  updateOneClockinBreak?: Maybe<ClockinBreak>;
  updateOneClockinLongpoll?: Maybe<ClockinLongpoll>;
  updateOneClockinTimesheet?: Maybe<ClockinTimesheet>;
  updateOneCmAccountNote?: Maybe<CmAccountNote>;
  updateOneCmAppointmentCustom?: Maybe<CmAppointmentCustom>;
  updateOneCmAppointmentsCustomImportHelper?: Maybe<CmAppointmentsCustomImportHelper>;
  updateOneCmAuthorization?: Maybe<CmAuthorization>;
  updateOneCmBookingNote?: Maybe<CmBookingNote>;
  updateOneCmCampaign?: Maybe<CmCampaign>;
  updateOneCmCampaignNote?: Maybe<CmCampaignNote>;
  updateOneCmCase?: Maybe<CmCase>;
  updateOneCmCaseNote?: Maybe<CmCaseNote>;
  updateOneCmCaseReply?: Maybe<CmCaseReply>;
  updateOneCmContact?: Maybe<CmContact>;
  updateOneCompany?: Maybe<Company>;
  updateOneCompanyDetails?: Maybe<CompanyDetails>;
  updateOneCompanySubscription?: Maybe<CompanySubscription>;
  updateOneGlCode?: Maybe<GlCode>;
  updateOneInvPaymentType?: Maybe<InvPaymentType>;
  updateOneMarketingSource?: Maybe<MarketingSource>;
  updateOneMediaLlibraryAttachment?: Maybe<MediaLlibraryAttachment>;
  updateOneSecondAtAnswer?: Maybe<SecondAtAnswer>;
  updateOneSecondAtQuestion?: Maybe<SecondAtQuestion>;
  updateOneThirdPartyAccess?: Maybe<ThirdPartyAccess>;
  updateOneTimezone?: Maybe<Timezone>;
  updateOneTwoFactorHistory?: Maybe<TwoFactorHistory>;
  updateOneUser?: Maybe<User>;
  updateOneUserSecurityQuestionsAnswer?: Maybe<UserSecurityQuestionsAnswer>;
  /** update data of the table: "Discounts" */
  update_Discounts?: Maybe<Discounts_Mutation_Response>;
  /** update single row of the table: "Discounts" */
  update_Discounts_by_pk?: Maybe<Discounts>;
  /** update data of the table: "LMS_slugs" */
  update_LMS_slugs?: Maybe<Lms_Slugs_Mutation_Response>;
  /** update single row of the table: "LMS_slugs" */
  update_LMS_slugs_by_pk?: Maybe<Lms_Slugs>;
  /** update data of the table: "Labs" */
  update_Labs?: Maybe<Labs_Mutation_Response>;
  /** update single row of the table: "Labs" */
  update_Labs_by_pk?: Maybe<Labs>;
  /** update data of the table: "Lists_campaign" */
  update_Lists_campaign?: Maybe<Lists_Campaign_Mutation_Response>;
  /** update single row of the table: "Lists_campaign" */
  update_Lists_campaign_by_pk?: Maybe<Lists_Campaign>;
  /** update data of the table: "Newsletter_campaign" */
  update_Newsletter_campaign?: Maybe<Newsletter_Campaign_Mutation_Response>;
  /** update single row of the table: "Newsletter_campaign" */
  update_Newsletter_campaign_by_pk?: Maybe<Newsletter_Campaign>;
  /** update data of the table: "SMS_campaign" */
  update_SMS_campaign?: Maybe<Sms_Campaign_Mutation_Response>;
  /** update single row of the table: "SMS_campaign" */
  update_SMS_campaign_by_pk?: Maybe<Sms_Campaign>;
  /** update data of the table: "appointment_status" */
  update_appointment_status?: Maybe<Appointment_Status_Mutation_Response>;
  /** update single row of the table: "appointment_status" */
  update_appointment_status_by_pk?: Maybe<Appointment_Status>;
  /** update data of the table: "block_out_options" */
  update_block_out_options?: Maybe<Block_Out_Options_Mutation_Response>;
  /** update single row of the table: "block_out_options" */
  update_block_out_options_by_pk?: Maybe<Block_Out_Options>;
  /** update data of the table: "business_details" */
  update_business_details?: Maybe<Business_Details_Mutation_Response>;
  /** update single row of the table: "business_details" */
  update_business_details_by_pk?: Maybe<Business_Details>;
  /** update data of the table: "calendar_settings" */
  update_calendar_settings?: Maybe<Calendar_Settings_Mutation_Response>;
  /** update single row of the table: "calendar_settings" */
  update_calendar_settings_by_pk?: Maybe<Calendar_Settings>;
  /** update data of the table: "cancellation_reasons" */
  update_cancellation_reasons?: Maybe<Cancellation_Reasons_Mutation_Response>;
  /** update single row of the table: "cancellation_reasons" */
  update_cancellation_reasons_by_pk?: Maybe<Cancellation_Reasons>;
  /** update data of the table: "candidate_list" */
  update_candidate_list?: Maybe<Candidate_List_Mutation_Response>;
  /** update single row of the table: "candidate_list" */
  update_candidate_list_by_pk?: Maybe<Candidate_List>;
  /** update data of the table: "category" */
  update_category?: Maybe<Category_Mutation_Response>;
  /** update single row of the table: "category" */
  update_category_by_pk?: Maybe<Category>;
  /** update data of the table: "clients_data" */
  update_clients_data?: Maybe<Clients_Data_Mutation_Response>;
  /** update single row of the table: "clients_data" */
  update_clients_data_by_pk?: Maybe<Clients_Data>;
  /** update data of the table: "courses" */
  update_courses?: Maybe<Courses_Mutation_Response>;
  /** update single row of the table: "courses" */
  update_courses_by_pk?: Maybe<Courses>;
  /** update data of the table: "credit_note_type" */
  update_credit_note_type?: Maybe<Credit_Note_Type_Mutation_Response>;
  /** update single row of the table: "credit_note_type" */
  update_credit_note_type_by_pk?: Maybe<Credit_Note_Type>;
  /** update data of the table: "credit_notes" */
  update_credit_notes?: Maybe<Credit_Notes_Mutation_Response>;
  /** update single row of the table: "credit_notes" */
  update_credit_notes_by_pk?: Maybe<Credit_Notes>;
  /** update data of the table: "custom_fields_categories" */
  update_custom_fields_categories?: Maybe<Custom_Fields_Categories_Mutation_Response>;
  /** update single row of the table: "custom_fields_categories" */
  update_custom_fields_categories_by_pk?: Maybe<Custom_Fields_Categories>;
  /** update data of the table: "debt" */
  update_debt?: Maybe<Debt_Mutation_Response>;
  /** update single row of the table: "debt" */
  update_debt_by_pk?: Maybe<Debt>;
  /** update data of the table: "departments" */
  update_departments?: Maybe<Departments_Mutation_Response>;
  /** update single row of the table: "departments" */
  update_departments_by_pk?: Maybe<Departments>;
  /** update data of the table: "diagnostic_codes" */
  update_diagnostic_codes?: Maybe<Diagnostic_Codes_Mutation_Response>;
  /** update single row of the table: "diagnostic_codes" */
  update_diagnostic_codes_by_pk?: Maybe<Diagnostic_Codes>;
  /** update data of the table: "diagnostic_codeset" */
  update_diagnostic_codeset?: Maybe<Diagnostic_Codeset_Mutation_Response>;
  /** update single row of the table: "diagnostic_codeset" */
  update_diagnostic_codeset_by_pk?: Maybe<Diagnostic_Codeset>;
  /** update data of the table: "drugs" */
  update_drugs?: Maybe<Drugs_Mutation_Response>;
  /** update single row of the table: "drugs" */
  update_drugs_by_pk?: Maybe<Drugs>;
  /** update data of the table: "family_relationships" */
  update_family_relationships?: Maybe<Family_Relationships_Mutation_Response>;
  /** update single row of the table: "family_relationships" */
  update_family_relationships_by_pk?: Maybe<Family_Relationships>;
  /** update data of the table: "feature_flags" */
  update_feature_flags?: Maybe<Feature_Flags_Mutation_Response>;
  /** update single row of the table: "feature_flags" */
  update_feature_flags_by_pk?: Maybe<Feature_Flags>;
  /** update data of the table: "invoices" */
  update_invoices?: Maybe<Invoices_Mutation_Response>;
  /** update single row of the table: "invoices" */
  update_invoices_by_pk?: Maybe<Invoices>;
  /** update data of the table: "issuing_company" */
  update_issuing_company?: Maybe<Issuing_Company_Mutation_Response>;
  /** update single row of the table: "issuing_company" */
  update_issuing_company_by_pk?: Maybe<Issuing_Company>;
  /** update data of the table: "job_candidates" */
  update_job_candidates?: Maybe<Job_Candidates_Mutation_Response>;
  /** update single row of the table: "job_candidates" */
  update_job_candidates_by_pk?: Maybe<Job_Candidates>;
  /** update data of the table: "job_openings" */
  update_job_openings?: Maybe<Job_Openings_Mutation_Response>;
  /** update single row of the table: "job_openings" */
  update_job_openings_by_pk?: Maybe<Job_Openings>;
  /** update data of the table: "job_title" */
  update_job_title?: Maybe<Job_Title_Mutation_Response>;
  /** update single row of the table: "job_title" */
  update_job_title_by_pk?: Maybe<Job_Title>;
  /** update data of the table: "labs_dashboard" */
  update_labs_dashboard?: Maybe<Labs_Dashboard_Mutation_Response>;
  /** update single row of the table: "labs_dashboard" */
  update_labs_dashboard_by_pk?: Maybe<Labs_Dashboard>;
  /** update data of the table: "lead" */
  update_lead?: Maybe<Lead_Mutation_Response>;
  /** update single row of the table: "lead" */
  update_lead_by_pk?: Maybe<Lead>;
  /** update data of the table: "lead_fields" */
  update_lead_fields?: Maybe<Lead_Fields_Mutation_Response>;
  /** update single row of the table: "lead_fields" */
  update_lead_fields_by_pk?: Maybe<Lead_Fields>;
  /** update data of the table: "library" */
  update_library?: Maybe<Library_Mutation_Response>;
  /** update single row of the table: "library" */
  update_library_by_pk?: Maybe<Library>;
  /** update data of the table: "library_installers" */
  update_library_installers?: Maybe<Library_Installers_Mutation_Response>;
  /** update single row of the table: "library_installers" */
  update_library_installers_by_pk?: Maybe<Library_Installers>;
  /** update data of the table: "locations" */
  update_locations?: Maybe<Locations_Mutation_Response>;
  /** update single row of the table: "locations" */
  update_locations_by_pk?: Maybe<Locations>;
  /** update data of the table: "marketing_campaign" */
  update_marketing_campaign?: Maybe<Marketing_Campaign_Mutation_Response>;
  /** update single row of the table: "marketing_campaign" */
  update_marketing_campaign_by_pk?: Maybe<Marketing_Campaign>;
  /** update data of the table: "marketing_referral" */
  update_marketing_referral?: Maybe<Marketing_Referral_Mutation_Response>;
  /** update single row of the table: "marketing_referral" */
  update_marketing_referral_by_pk?: Maybe<Marketing_Referral>;
  /** update data of the table: "marketing_source" */
  update_marketing_source?: Maybe<Marketing_Source_Mutation_Response>;
  /** update single row of the table: "marketing_source" */
  update_marketing_source_by_pk?: Maybe<Marketing_Source>;
  /** update data of the table: "payment_types" */
  update_payment_types?: Maybe<Payment_Types_Mutation_Response>;
  /** update single row of the table: "payment_types" */
  update_payment_types_by_pk?: Maybe<Payment_Types>;
  /** update data of the table: "payments" */
  update_payments?: Maybe<Payments_Mutation_Response>;
  /** update single row of the table: "payments" */
  update_payments_by_pk?: Maybe<Payments>;
  /** update data of the table: "petty_cash_types" */
  update_petty_cash_types?: Maybe<Petty_Cash_Types_Mutation_Response>;
  /** update single row of the table: "petty_cash_types" */
  update_petty_cash_types_by_pk?: Maybe<Petty_Cash_Types>;
  /** update data of the table: "product_lists" */
  update_product_lists?: Maybe<Product_Lists_Mutation_Response>;
  /** update single row of the table: "product_lists" */
  update_product_lists_by_pk?: Maybe<Product_Lists>;
  /** update data of the table: "prototype" */
  update_prototype?: Maybe<Prototype_Mutation_Response>;
  /** update single row of the table: "prototype" */
  update_prototype_by_pk?: Maybe<Prototype>;
  /** update data of the table: "purchase_order" */
  update_purchase_order?: Maybe<Purchase_Order_Mutation_Response>;
  /** update single row of the table: "purchase_order" */
  update_purchase_order_by_pk?: Maybe<Purchase_Order>;
  /** update data of the table: "resources" */
  update_resources?: Maybe<Resources_Mutation_Response>;
  /** update single row of the table: "resources" */
  update_resources_by_pk?: Maybe<Resources>;
  /** update data of the table: "rooms" */
  update_rooms?: Maybe<Rooms_Mutation_Response>;
  /** update single row of the table: "rooms" */
  update_rooms_by_pk?: Maybe<Rooms>;
  /** update data of the table: "rota_templates" */
  update_rota_templates?: Maybe<Rota_Templates_Mutation_Response>;
  /** update single row of the table: "rota_templates" */
  update_rota_templates_by_pk?: Maybe<Rota_Templates>;
  /** update data of the table: "salutation" */
  update_salutation?: Maybe<Salutation_Mutation_Response>;
  /** update single row of the table: "salutation" */
  update_salutation_by_pk?: Maybe<Salutation>;
  /** update data of the table: "stock_take" */
  update_stock_take?: Maybe<Stock_Take_Mutation_Response>;
  /** update single row of the table: "stock_take" */
  update_stock_take_by_pk?: Maybe<Stock_Take>;
  /** update data of the table: "supplier" */
  update_supplier?: Maybe<Supplier_Mutation_Response>;
  /** update single row of the table: "supplier" */
  update_supplier_by_pk?: Maybe<Supplier>;
  /** update data of the table: "tax_rates" */
  update_tax_rates?: Maybe<Tax_Rates_Mutation_Response>;
  /** update single row of the table: "tax_rates" */
  update_tax_rates_by_pk?: Maybe<Tax_Rates>;
  /** update data of the table: "third_parties" */
  update_third_parties?: Maybe<Third_Parties_Mutation_Response>;
  /** update single row of the table: "third_parties" */
  update_third_parties_by_pk?: Maybe<Third_Parties>;
  upsertOneAcLog?: Maybe<AcLog>;
  upsertOneAcLogAction?: Maybe<AcLogAction>;
  upsertOneAcLogUrl?: Maybe<AcLogUrl>;
  upsertOneAcceptEmailToken?: Maybe<AcceptEmailToken>;
  upsertOneAccountBalance?: Maybe<AccountBalance>;
  upsertOneAccountBalanceLog?: Maybe<AccountBalanceLog>;
  upsertOneAccountManager?: Maybe<AccountManager>;
  upsertOneAdvertCampaign?: Maybe<AdvertCampaign>;
  upsertOneApiDebug?: Maybe<ApiDebug>;
  upsertOneApiKey?: Maybe<ApiKey>;
  upsertOneAppBeforeAfter?: Maybe<AppBeforeAfter>;
  upsertOneAppPermission?: Maybe<AppPermission>;
  upsertOneAppSubscription?: Maybe<AppSubscription>;
  upsertOneAppSubscriptionsCompanyPrice?: Maybe<AppSubscriptionsCompanyPrice>;
  upsertOneAtAnswer?: Maybe<AtAnswer>;
  upsertOneAtConcern?: Maybe<AtConcern>;
  upsertOneAtQuestion?: Maybe<AtQuestion>;
  upsertOneAtQuestionsRelation?: Maybe<AtQuestionsRelation>;
  upsertOneAtQuizTake?: Maybe<AtQuizTake>;
  upsertOneAtSetting?: Maybe<AtSetting>;
  upsertOneAtTreatment?: Maybe<AtTreatment>;
  upsertOneAttachmentHelperLite?: Maybe<AttachmentHelperLite>;
  upsertOneAutomationAction?: Maybe<AutomationAction>;
  upsertOneAutomationDelay?: Maybe<AutomationDelay>;
  upsertOneAutomationFolder?: Maybe<AutomationFolder>;
  upsertOneAutomationLog?: Maybe<AutomationLog>;
  upsertOneAutomationRule?: Maybe<AutomationRule>;
  upsertOneAutomationTrigger?: Maybe<AutomationTrigger>;
  upsertOneAvilableDatesLog?: Maybe<AvilableDatesLog>;
  upsertOneBacsAccount?: Maybe<BacsAccount>;
  upsertOneBatch?: Maybe<Batch>;
  upsertOneBatchItem?: Maybe<BatchItem>;
  upsertOneBlockReason?: Maybe<BlockReason>;
  upsertOneBnfDrug?: Maybe<BnfDrug>;
  upsertOneBodyChartTemplate?: Maybe<BodyChartTemplate>;
  upsertOneBookingMaster?: Maybe<BookingMaster>;
  upsertOneBookingSetting?: Maybe<BookingSetting>;
  upsertOneBookingStatus?: Maybe<BookingStatus>;
  upsertOneBookingStatusChange?: Maybe<BookingStatusChange>;
  upsertOneBookitProGeneral?: Maybe<BookitProGeneral>;
  upsertOneBookitProSlider?: Maybe<BookitProSlider>;
  upsertOneBookmarkedPage?: Maybe<BookmarkedPage>;
  upsertOneBugLog?: Maybe<BugLog>;
  upsertOneCalRangeRequest?: Maybe<CalRangeRequest>;
  upsertOneCalendarView?: Maybe<CalendarView>;
  upsertOneCampaignAttachment?: Maybe<CampaignAttachment>;
  upsertOneCancelReason?: Maybe<CancelReason>;
  upsertOneCancellationPolicy?: Maybe<CancellationPolicy>;
  upsertOneCandidate?: Maybe<Candidate>;
  upsertOneCardType?: Maybe<CardType>;
  upsertOneCashupReport?: Maybe<CashupReport>;
  upsertOneCashupReportCustom?: Maybe<CashupReportCustom>;
  upsertOneCheckinAppt?: Maybe<CheckinAppt>;
  upsertOneCheckinAverages?: Maybe<CheckinAverages>;
  upsertOneCheckinAveragesIdle?: Maybe<CheckinAveragesIdle>;
  upsertOneCheckinProduct?: Maybe<CheckinProduct>;
  upsertOneCheckinQueue?: Maybe<CheckinQueue>;
  upsertOneClassCategory?: Maybe<ClassCategory>;
  upsertOneClassGuests?: Maybe<ClassGuests>;
  upsertOneClassMaster?: Maybe<ClassMaster>;
  upsertOneClassNotes?: Maybe<ClassNotes>;
  upsertOneClassProduct?: Maybe<ClassProduct>;
  upsertOneClassSmsHistory?: Maybe<ClassSmsHistory>;
  upsertOneClassTemplateSetting?: Maybe<ClassTemplateSetting>;
  upsertOneClasstypeMaster?: Maybe<ClasstypeMaster>;
  upsertOneCleverpinSetting?: Maybe<CleverpinSetting>;
  upsertOneClientFormSetting?: Maybe<ClientFormSetting>;
  upsertOneClinicalSoftware?: Maybe<ClinicalSoftware>;
  upsertOneClockinBreak?: Maybe<ClockinBreak>;
  upsertOneClockinLongpoll?: Maybe<ClockinLongpoll>;
  upsertOneClockinTimesheet?: Maybe<ClockinTimesheet>;
  upsertOneCmAccountNote?: Maybe<CmAccountNote>;
  upsertOneCmAppointmentCustom?: Maybe<CmAppointmentCustom>;
  upsertOneCmAppointmentsCustomImportHelper?: Maybe<CmAppointmentsCustomImportHelper>;
  upsertOneCmAuthorization?: Maybe<CmAuthorization>;
  upsertOneCmBookingNote?: Maybe<CmBookingNote>;
  upsertOneCmCampaign?: Maybe<CmCampaign>;
  upsertOneCmCampaignNote?: Maybe<CmCampaignNote>;
  upsertOneCmCase?: Maybe<CmCase>;
  upsertOneCmCaseNote?: Maybe<CmCaseNote>;
  upsertOneCmCaseReply?: Maybe<CmCaseReply>;
  upsertOneCmContact?: Maybe<CmContact>;
  upsertOneCompany?: Maybe<Company>;
  upsertOneCompanyDetails?: Maybe<CompanyDetails>;
  upsertOneCompanySubscription?: Maybe<CompanySubscription>;
  upsertOneGlCode?: Maybe<GlCode>;
  upsertOneInvPaymentType?: Maybe<InvPaymentType>;
  upsertOneMarketingSource?: Maybe<MarketingSource>;
  upsertOneMediaLlibraryAttachment?: Maybe<MediaLlibraryAttachment>;
  upsertOneSecondAtAnswer?: Maybe<SecondAtAnswer>;
  upsertOneSecondAtQuestion?: Maybe<SecondAtQuestion>;
  upsertOneThirdPartyAccess?: Maybe<ThirdPartyAccess>;
  upsertOneTimezone?: Maybe<Timezone>;
  upsertOneTwoFactorHistory?: Maybe<TwoFactorHistory>;
  upsertOneUser?: Maybe<User>;
  upsertOneUserSecurityQuestionsAnswer?: Maybe<UserSecurityQuestionsAnswer>;
};


/** mutation root */
export type Mutation_RootCreateOneAcLogArgs = {
  data: AcLogCreateInput;
};


/** mutation root */
export type Mutation_RootCreateOneAcLogActionArgs = {
  data: AcLogActionCreateInput;
};


/** mutation root */
export type Mutation_RootCreateOneAcLogUrlArgs = {
  data: AcLogUrlCreateInput;
};


/** mutation root */
export type Mutation_RootCreateOneAcceptEmailTokenArgs = {
  data: AcceptEmailTokenCreateInput;
};


/** mutation root */
export type Mutation_RootCreateOneAccountBalanceArgs = {
  data: AccountBalanceCreateInput;
};


/** mutation root */
export type Mutation_RootCreateOneAccountBalanceLogArgs = {
  data: AccountBalanceLogCreateInput;
};


/** mutation root */
export type Mutation_RootCreateOneAccountManagerArgs = {
  data: AccountManagerCreateInput;
};


/** mutation root */
export type Mutation_RootCreateOneAdvertCampaignArgs = {
  data: AdvertCampaignCreateInput;
};


/** mutation root */
export type Mutation_RootCreateOneApiDebugArgs = {
  data: ApiDebugCreateInput;
};


/** mutation root */
export type Mutation_RootCreateOneApiKeyArgs = {
  data: ApiKeyCreateInput;
};


/** mutation root */
export type Mutation_RootCreateOneAppBeforeAfterArgs = {
  data: AppBeforeAfterCreateInput;
};


/** mutation root */
export type Mutation_RootCreateOneAppPermissionArgs = {
  data: AppPermissionCreateInput;
};


/** mutation root */
export type Mutation_RootCreateOneAppSubscriptionArgs = {
  data: AppSubscriptionCreateInput;
};


/** mutation root */
export type Mutation_RootCreateOneAppSubscriptionsCompanyPriceArgs = {
  data: AppSubscriptionsCompanyPriceCreateInput;
};


/** mutation root */
export type Mutation_RootCreateOneAtAnswerArgs = {
  data: AtAnswerCreateInput;
};


/** mutation root */
export type Mutation_RootCreateOneAtConcernArgs = {
  data: AtConcernCreateInput;
};


/** mutation root */
export type Mutation_RootCreateOneAtQuestionArgs = {
  data: AtQuestionCreateInput;
};


/** mutation root */
export type Mutation_RootCreateOneAtQuestionsRelationArgs = {
  data: AtQuestionsRelationCreateInput;
};


/** mutation root */
export type Mutation_RootCreateOneAtQuizTakeArgs = {
  data: AtQuizTakeCreateInput;
};


/** mutation root */
export type Mutation_RootCreateOneAtSettingArgs = {
  data: AtSettingCreateInput;
};


/** mutation root */
export type Mutation_RootCreateOneAtTreatmentArgs = {
  data: AtTreatmentCreateInput;
};


/** mutation root */
export type Mutation_RootCreateOneAttachmentHelperLiteArgs = {
  data: AttachmentHelperLiteCreateInput;
};


/** mutation root */
export type Mutation_RootCreateOneAutomationActionArgs = {
  data: AutomationActionCreateInput;
};


/** mutation root */
export type Mutation_RootCreateOneAutomationDelayArgs = {
  data: AutomationDelayCreateInput;
};


/** mutation root */
export type Mutation_RootCreateOneAutomationFolderArgs = {
  data: AutomationFolderCreateInput;
};


/** mutation root */
export type Mutation_RootCreateOneAutomationLogArgs = {
  data: AutomationLogCreateInput;
};


/** mutation root */
export type Mutation_RootCreateOneAutomationRuleArgs = {
  data: AutomationRuleCreateInput;
};


/** mutation root */
export type Mutation_RootCreateOneAutomationTriggerArgs = {
  data: AutomationTriggerCreateInput;
};


/** mutation root */
export type Mutation_RootCreateOneAvilableDatesLogArgs = {
  data: AvilableDatesLogCreateInput;
};


/** mutation root */
export type Mutation_RootCreateOneBacsAccountArgs = {
  data: BacsAccountCreateInput;
};


/** mutation root */
export type Mutation_RootCreateOneBatchArgs = {
  data: BatchCreateInput;
};


/** mutation root */
export type Mutation_RootCreateOneBatchItemArgs = {
  data: BatchItemCreateInput;
};


/** mutation root */
export type Mutation_RootCreateOneBlockReasonArgs = {
  data: BlockReasonCreateInput;
};


/** mutation root */
export type Mutation_RootCreateOneBnfDrugArgs = {
  data: BnfDrugCreateInput;
};


/** mutation root */
export type Mutation_RootCreateOneBodyChartTemplateArgs = {
  data: BodyChartTemplateCreateInput;
};


/** mutation root */
export type Mutation_RootCreateOneBookingMasterArgs = {
  data: BookingMasterCreateInput;
};


/** mutation root */
export type Mutation_RootCreateOneBookingSettingArgs = {
  data: BookingSettingCreateInput;
};


/** mutation root */
export type Mutation_RootCreateOneBookingStatusArgs = {
  data: BookingStatusCreateInput;
};


/** mutation root */
export type Mutation_RootCreateOneBookingStatusChangeArgs = {
  data: BookingStatusChangeCreateInput;
};


/** mutation root */
export type Mutation_RootCreateOneBookitProGeneralArgs = {
  data: BookitProGeneralCreateInput;
};


/** mutation root */
export type Mutation_RootCreateOneBookitProSliderArgs = {
  data: BookitProSliderCreateInput;
};


/** mutation root */
export type Mutation_RootCreateOneBookmarkedPageArgs = {
  data: BookmarkedPageCreateInput;
};


/** mutation root */
export type Mutation_RootCreateOneBugLogArgs = {
  data: BugLogCreateInput;
};


/** mutation root */
export type Mutation_RootCreateOneCalRangeRequestArgs = {
  data: CalRangeRequestCreateInput;
};


/** mutation root */
export type Mutation_RootCreateOneCalendarViewArgs = {
  data: CalendarViewCreateInput;
};


/** mutation root */
export type Mutation_RootCreateOneCampaignAttachmentArgs = {
  data: CampaignAttachmentCreateInput;
};


/** mutation root */
export type Mutation_RootCreateOneCancelReasonArgs = {
  data: CancelReasonCreateInput;
};


/** mutation root */
export type Mutation_RootCreateOneCancellationPolicyArgs = {
  data: CancellationPolicyCreateInput;
};


/** mutation root */
export type Mutation_RootCreateOneCandidateArgs = {
  data: CandidateCreateInput;
};


/** mutation root */
export type Mutation_RootCreateOneCardTypeArgs = {
  data: CardTypeCreateInput;
};


/** mutation root */
export type Mutation_RootCreateOneCashupReportArgs = {
  data: CashupReportCreateInput;
};


/** mutation root */
export type Mutation_RootCreateOneCashupReportCustomArgs = {
  data: CashupReportCustomCreateInput;
};


/** mutation root */
export type Mutation_RootCreateOneCheckinApptArgs = {
  data: CheckinApptCreateInput;
};


/** mutation root */
export type Mutation_RootCreateOneCheckinAveragesArgs = {
  data: CheckinAveragesCreateInput;
};


/** mutation root */
export type Mutation_RootCreateOneCheckinAveragesIdleArgs = {
  data: CheckinAveragesIdleCreateInput;
};


/** mutation root */
export type Mutation_RootCreateOneCheckinProductArgs = {
  data: CheckinProductCreateInput;
};


/** mutation root */
export type Mutation_RootCreateOneCheckinQueueArgs = {
  data: CheckinQueueCreateInput;
};


/** mutation root */
export type Mutation_RootCreateOneClassCategoryArgs = {
  data: ClassCategoryCreateInput;
};


/** mutation root */
export type Mutation_RootCreateOneClassGuestsArgs = {
  data: ClassGuestsCreateInput;
};


/** mutation root */
export type Mutation_RootCreateOneClassMasterArgs = {
  data: ClassMasterCreateInput;
};


/** mutation root */
export type Mutation_RootCreateOneClassNotesArgs = {
  data: ClassNotesCreateInput;
};


/** mutation root */
export type Mutation_RootCreateOneClassProductArgs = {
  data: ClassProductCreateInput;
};


/** mutation root */
export type Mutation_RootCreateOneClassSmsHistoryArgs = {
  data: ClassSmsHistoryCreateInput;
};


/** mutation root */
export type Mutation_RootCreateOneClassTemplateSettingArgs = {
  data: ClassTemplateSettingCreateInput;
};


/** mutation root */
export type Mutation_RootCreateOneClasstypeMasterArgs = {
  data: ClasstypeMasterCreateInput;
};


/** mutation root */
export type Mutation_RootCreateOneCleverpinSettingArgs = {
  data: CleverpinSettingCreateInput;
};


/** mutation root */
export type Mutation_RootCreateOneClientFormSettingArgs = {
  data: ClientFormSettingCreateInput;
};


/** mutation root */
export type Mutation_RootCreateOneClinicalSoftwareArgs = {
  data: ClinicalSoftwareCreateInput;
};


/** mutation root */
export type Mutation_RootCreateOneClockinBreakArgs = {
  data: ClockinBreakCreateInput;
};


/** mutation root */
export type Mutation_RootCreateOneClockinLongpollArgs = {
  data: ClockinLongpollCreateInput;
};


/** mutation root */
export type Mutation_RootCreateOneClockinTimesheetArgs = {
  data: ClockinTimesheetCreateInput;
};


/** mutation root */
export type Mutation_RootCreateOneCmAccountNoteArgs = {
  data: CmAccountNoteCreateInput;
};


/** mutation root */
export type Mutation_RootCreateOneCmAppointmentCustomArgs = {
  data: CmAppointmentCustomCreateInput;
};


/** mutation root */
export type Mutation_RootCreateOneCmAppointmentsCustomImportHelperArgs = {
  data: CmAppointmentsCustomImportHelperCreateInput;
};


/** mutation root */
export type Mutation_RootCreateOneCmAuthorizationArgs = {
  data: CmAuthorizationCreateInput;
};


/** mutation root */
export type Mutation_RootCreateOneCmBookingNoteArgs = {
  data: CmBookingNoteCreateInput;
};


/** mutation root */
export type Mutation_RootCreateOneCmCampaignArgs = {
  data: CmCampaignCreateInput;
};


/** mutation root */
export type Mutation_RootCreateOneCmCampaignNoteArgs = {
  data: CmCampaignNoteCreateInput;
};


/** mutation root */
export type Mutation_RootCreateOneCmCaseArgs = {
  data: CmCaseCreateInput;
};


/** mutation root */
export type Mutation_RootCreateOneCmCaseNoteArgs = {
  data: CmCaseNoteCreateInput;
};


/** mutation root */
export type Mutation_RootCreateOneCmCaseReplyArgs = {
  data: CmCaseReplyCreateInput;
};


/** mutation root */
export type Mutation_RootCreateOneCmContactArgs = {
  data: CmContactCreateInput;
};


/** mutation root */
export type Mutation_RootCreateOneCompanyArgs = {
  data: CompanyCreateInput;
};


/** mutation root */
export type Mutation_RootCreateOneCompanyDetailsArgs = {
  data: CompanyDetailsCreateInput;
};


/** mutation root */
export type Mutation_RootCreateOneCompanySubscriptionArgs = {
  data: CompanySubscriptionCreateInput;
};


/** mutation root */
export type Mutation_RootCreateOneGlCodeArgs = {
  data: GlCodeCreateInput;
};


/** mutation root */
export type Mutation_RootCreateOneInvPaymentTypeArgs = {
  data: InvPaymentTypeCreateInput;
};


/** mutation root */
export type Mutation_RootCreateOneMarketingSourceArgs = {
  data: MarketingSourceCreateInput;
};


/** mutation root */
export type Mutation_RootCreateOneMediaLlibraryAttachmentArgs = {
  data: MediaLlibraryAttachmentCreateInput;
};


/** mutation root */
export type Mutation_RootCreateOneSecondAtAnswerArgs = {
  data: SecondAtAnswerCreateInput;
};


/** mutation root */
export type Mutation_RootCreateOneSecondAtQuestionArgs = {
  data: SecondAtQuestionCreateInput;
};


/** mutation root */
export type Mutation_RootCreateOneThirdPartyAccessArgs = {
  data: ThirdPartyAccessCreateInput;
};


/** mutation root */
export type Mutation_RootCreateOneTimezoneArgs = {
  data: TimezoneCreateInput;
};


/** mutation root */
export type Mutation_RootCreateOneTwoFactorHistoryArgs = {
  data: TwoFactorHistoryCreateInput;
};


/** mutation root */
export type Mutation_RootCreateOneUserArgs = {
  data: UserCreateInput;
};


/** mutation root */
export type Mutation_RootCreateOneUserSecurityQuestionsAnswerArgs = {
  data: UserSecurityQuestionsAnswerCreateInput;
};


/** mutation root */
export type Mutation_RootDeleteManyAcLogArgs = {
  where?: Maybe<AcLogWhereInput>;
};


/** mutation root */
export type Mutation_RootDeleteManyAcLogActionArgs = {
  where?: Maybe<AcLogActionWhereInput>;
};


/** mutation root */
export type Mutation_RootDeleteManyAcLogUrlArgs = {
  where?: Maybe<AcLogUrlWhereInput>;
};


/** mutation root */
export type Mutation_RootDeleteManyAcceptEmailTokenArgs = {
  where?: Maybe<AcceptEmailTokenWhereInput>;
};


/** mutation root */
export type Mutation_RootDeleteManyAccountBalanceArgs = {
  where?: Maybe<AccountBalanceWhereInput>;
};


/** mutation root */
export type Mutation_RootDeleteManyAccountBalanceLogArgs = {
  where?: Maybe<AccountBalanceLogWhereInput>;
};


/** mutation root */
export type Mutation_RootDeleteManyAccountManagerArgs = {
  where?: Maybe<AccountManagerWhereInput>;
};


/** mutation root */
export type Mutation_RootDeleteManyAdvertCampaignArgs = {
  where?: Maybe<AdvertCampaignWhereInput>;
};


/** mutation root */
export type Mutation_RootDeleteManyApiDebugArgs = {
  where?: Maybe<ApiDebugWhereInput>;
};


/** mutation root */
export type Mutation_RootDeleteManyApiKeyArgs = {
  where?: Maybe<ApiKeyWhereInput>;
};


/** mutation root */
export type Mutation_RootDeleteManyAppBeforeAfterArgs = {
  where?: Maybe<AppBeforeAfterWhereInput>;
};


/** mutation root */
export type Mutation_RootDeleteManyAppPermissionArgs = {
  where?: Maybe<AppPermissionWhereInput>;
};


/** mutation root */
export type Mutation_RootDeleteManyAppSubscriptionArgs = {
  where?: Maybe<AppSubscriptionWhereInput>;
};


/** mutation root */
export type Mutation_RootDeleteManyAppSubscriptionsCompanyPriceArgs = {
  where?: Maybe<AppSubscriptionsCompanyPriceWhereInput>;
};


/** mutation root */
export type Mutation_RootDeleteManyAtAnswerArgs = {
  where?: Maybe<AtAnswerWhereInput>;
};


/** mutation root */
export type Mutation_RootDeleteManyAtConcernArgs = {
  where?: Maybe<AtConcernWhereInput>;
};


/** mutation root */
export type Mutation_RootDeleteManyAtQuestionArgs = {
  where?: Maybe<AtQuestionWhereInput>;
};


/** mutation root */
export type Mutation_RootDeleteManyAtQuestionsRelationArgs = {
  where?: Maybe<AtQuestionsRelationWhereInput>;
};


/** mutation root */
export type Mutation_RootDeleteManyAtQuizTakeArgs = {
  where?: Maybe<AtQuizTakeWhereInput>;
};


/** mutation root */
export type Mutation_RootDeleteManyAtSettingArgs = {
  where?: Maybe<AtSettingWhereInput>;
};


/** mutation root */
export type Mutation_RootDeleteManyAtTreatmentArgs = {
  where?: Maybe<AtTreatmentWhereInput>;
};


/** mutation root */
export type Mutation_RootDeleteManyAttachmentHelperLiteArgs = {
  where?: Maybe<AttachmentHelperLiteWhereInput>;
};


/** mutation root */
export type Mutation_RootDeleteManyAutomationActionArgs = {
  where?: Maybe<AutomationActionWhereInput>;
};


/** mutation root */
export type Mutation_RootDeleteManyAutomationDelayArgs = {
  where?: Maybe<AutomationDelayWhereInput>;
};


/** mutation root */
export type Mutation_RootDeleteManyAutomationFolderArgs = {
  where?: Maybe<AutomationFolderWhereInput>;
};


/** mutation root */
export type Mutation_RootDeleteManyAutomationLogArgs = {
  where?: Maybe<AutomationLogWhereInput>;
};


/** mutation root */
export type Mutation_RootDeleteManyAutomationRuleArgs = {
  where?: Maybe<AutomationRuleWhereInput>;
};


/** mutation root */
export type Mutation_RootDeleteManyAutomationTriggerArgs = {
  where?: Maybe<AutomationTriggerWhereInput>;
};


/** mutation root */
export type Mutation_RootDeleteManyAvilableDatesLogArgs = {
  where?: Maybe<AvilableDatesLogWhereInput>;
};


/** mutation root */
export type Mutation_RootDeleteManyBacsAccountArgs = {
  where?: Maybe<BacsAccountWhereInput>;
};


/** mutation root */
export type Mutation_RootDeleteManyBatchArgs = {
  where?: Maybe<BatchWhereInput>;
};


/** mutation root */
export type Mutation_RootDeleteManyBatchItemArgs = {
  where?: Maybe<BatchItemWhereInput>;
};


/** mutation root */
export type Mutation_RootDeleteManyBlockReasonArgs = {
  where?: Maybe<BlockReasonWhereInput>;
};


/** mutation root */
export type Mutation_RootDeleteManyBnfDrugArgs = {
  where?: Maybe<BnfDrugWhereInput>;
};


/** mutation root */
export type Mutation_RootDeleteManyBodyChartTemplateArgs = {
  where?: Maybe<BodyChartTemplateWhereInput>;
};


/** mutation root */
export type Mutation_RootDeleteManyBookingMasterArgs = {
  where?: Maybe<BookingMasterWhereInput>;
};


/** mutation root */
export type Mutation_RootDeleteManyBookingSettingArgs = {
  where?: Maybe<BookingSettingWhereInput>;
};


/** mutation root */
export type Mutation_RootDeleteManyBookingStatusArgs = {
  where?: Maybe<BookingStatusWhereInput>;
};


/** mutation root */
export type Mutation_RootDeleteManyBookingStatusChangeArgs = {
  where?: Maybe<BookingStatusChangeWhereInput>;
};


/** mutation root */
export type Mutation_RootDeleteManyBookitProGeneralArgs = {
  where?: Maybe<BookitProGeneralWhereInput>;
};


/** mutation root */
export type Mutation_RootDeleteManyBookitProSliderArgs = {
  where?: Maybe<BookitProSliderWhereInput>;
};


/** mutation root */
export type Mutation_RootDeleteManyBookmarkedPageArgs = {
  where?: Maybe<BookmarkedPageWhereInput>;
};


/** mutation root */
export type Mutation_RootDeleteManyBugLogArgs = {
  where?: Maybe<BugLogWhereInput>;
};


/** mutation root */
export type Mutation_RootDeleteManyCalRangeRequestArgs = {
  where?: Maybe<CalRangeRequestWhereInput>;
};


/** mutation root */
export type Mutation_RootDeleteManyCalendarViewArgs = {
  where?: Maybe<CalendarViewWhereInput>;
};


/** mutation root */
export type Mutation_RootDeleteManyCampaignAttachmentArgs = {
  where?: Maybe<CampaignAttachmentWhereInput>;
};


/** mutation root */
export type Mutation_RootDeleteManyCancelReasonArgs = {
  where?: Maybe<CancelReasonWhereInput>;
};


/** mutation root */
export type Mutation_RootDeleteManyCancellationPolicyArgs = {
  where?: Maybe<CancellationPolicyWhereInput>;
};


/** mutation root */
export type Mutation_RootDeleteManyCandidateArgs = {
  where?: Maybe<CandidateWhereInput>;
};


/** mutation root */
export type Mutation_RootDeleteManyCardTypeArgs = {
  where?: Maybe<CardTypeWhereInput>;
};


/** mutation root */
export type Mutation_RootDeleteManyCashupReportArgs = {
  where?: Maybe<CashupReportWhereInput>;
};


/** mutation root */
export type Mutation_RootDeleteManyCashupReportCustomArgs = {
  where?: Maybe<CashupReportCustomWhereInput>;
};


/** mutation root */
export type Mutation_RootDeleteManyCheckinApptArgs = {
  where?: Maybe<CheckinApptWhereInput>;
};


/** mutation root */
export type Mutation_RootDeleteManyCheckinAveragesArgs = {
  where?: Maybe<CheckinAveragesWhereInput>;
};


/** mutation root */
export type Mutation_RootDeleteManyCheckinAveragesIdleArgs = {
  where?: Maybe<CheckinAveragesIdleWhereInput>;
};


/** mutation root */
export type Mutation_RootDeleteManyCheckinProductArgs = {
  where?: Maybe<CheckinProductWhereInput>;
};


/** mutation root */
export type Mutation_RootDeleteManyCheckinQueueArgs = {
  where?: Maybe<CheckinQueueWhereInput>;
};


/** mutation root */
export type Mutation_RootDeleteManyClassCategoryArgs = {
  where?: Maybe<ClassCategoryWhereInput>;
};


/** mutation root */
export type Mutation_RootDeleteManyClassGuestsArgs = {
  where?: Maybe<ClassGuestsWhereInput>;
};


/** mutation root */
export type Mutation_RootDeleteManyClassMasterArgs = {
  where?: Maybe<ClassMasterWhereInput>;
};


/** mutation root */
export type Mutation_RootDeleteManyClassNotesArgs = {
  where?: Maybe<ClassNotesWhereInput>;
};


/** mutation root */
export type Mutation_RootDeleteManyClassProductArgs = {
  where?: Maybe<ClassProductWhereInput>;
};


/** mutation root */
export type Mutation_RootDeleteManyClassSmsHistoryArgs = {
  where?: Maybe<ClassSmsHistoryWhereInput>;
};


/** mutation root */
export type Mutation_RootDeleteManyClassTemplateSettingArgs = {
  where?: Maybe<ClassTemplateSettingWhereInput>;
};


/** mutation root */
export type Mutation_RootDeleteManyClasstypeMasterArgs = {
  where?: Maybe<ClasstypeMasterWhereInput>;
};


/** mutation root */
export type Mutation_RootDeleteManyCleverpinSettingArgs = {
  where?: Maybe<CleverpinSettingWhereInput>;
};


/** mutation root */
export type Mutation_RootDeleteManyClientFormSettingArgs = {
  where?: Maybe<ClientFormSettingWhereInput>;
};


/** mutation root */
export type Mutation_RootDeleteManyClinicalSoftwareArgs = {
  where?: Maybe<ClinicalSoftwareWhereInput>;
};


/** mutation root */
export type Mutation_RootDeleteManyClockinBreakArgs = {
  where?: Maybe<ClockinBreakWhereInput>;
};


/** mutation root */
export type Mutation_RootDeleteManyClockinLongpollArgs = {
  where?: Maybe<ClockinLongpollWhereInput>;
};


/** mutation root */
export type Mutation_RootDeleteManyClockinTimesheetArgs = {
  where?: Maybe<ClockinTimesheetWhereInput>;
};


/** mutation root */
export type Mutation_RootDeleteManyCmAccountNoteArgs = {
  where?: Maybe<CmAccountNoteWhereInput>;
};


/** mutation root */
export type Mutation_RootDeleteManyCmAppointmentCustomArgs = {
  where?: Maybe<CmAppointmentCustomWhereInput>;
};


/** mutation root */
export type Mutation_RootDeleteManyCmAppointmentsCustomImportHelperArgs = {
  where?: Maybe<CmAppointmentsCustomImportHelperWhereInput>;
};


/** mutation root */
export type Mutation_RootDeleteManyCmAuthorizationArgs = {
  where?: Maybe<CmAuthorizationWhereInput>;
};


/** mutation root */
export type Mutation_RootDeleteManyCmBookingNoteArgs = {
  where?: Maybe<CmBookingNoteWhereInput>;
};


/** mutation root */
export type Mutation_RootDeleteManyCmCampaignArgs = {
  where?: Maybe<CmCampaignWhereInput>;
};


/** mutation root */
export type Mutation_RootDeleteManyCmCampaignNoteArgs = {
  where?: Maybe<CmCampaignNoteWhereInput>;
};


/** mutation root */
export type Mutation_RootDeleteManyCmCaseArgs = {
  where?: Maybe<CmCaseWhereInput>;
};


/** mutation root */
export type Mutation_RootDeleteManyCmCaseNoteArgs = {
  where?: Maybe<CmCaseNoteWhereInput>;
};


/** mutation root */
export type Mutation_RootDeleteManyCmCaseReplyArgs = {
  where?: Maybe<CmCaseReplyWhereInput>;
};


/** mutation root */
export type Mutation_RootDeleteManyCmContactArgs = {
  where?: Maybe<CmContactWhereInput>;
};


/** mutation root */
export type Mutation_RootDeleteManyCompanyArgs = {
  where?: Maybe<CompanyWhereInput>;
};


/** mutation root */
export type Mutation_RootDeleteManyCompanyDetailsArgs = {
  where?: Maybe<CompanyDetailsWhereInput>;
};


/** mutation root */
export type Mutation_RootDeleteManyCompanySubscriptionArgs = {
  where?: Maybe<CompanySubscriptionWhereInput>;
};


/** mutation root */
export type Mutation_RootDeleteManyGlCodeArgs = {
  where?: Maybe<GlCodeWhereInput>;
};


/** mutation root */
export type Mutation_RootDeleteManyInvPaymentTypeArgs = {
  where?: Maybe<InvPaymentTypeWhereInput>;
};


/** mutation root */
export type Mutation_RootDeleteManyMarketingSourceArgs = {
  where?: Maybe<MarketingSourceWhereInput>;
};


/** mutation root */
export type Mutation_RootDeleteManyMediaLlibraryAttachmentArgs = {
  where?: Maybe<MediaLlibraryAttachmentWhereInput>;
};


/** mutation root */
export type Mutation_RootDeleteManySecondAtAnswerArgs = {
  where?: Maybe<SecondAtAnswerWhereInput>;
};


/** mutation root */
export type Mutation_RootDeleteManySecondAtQuestionArgs = {
  where?: Maybe<SecondAtQuestionWhereInput>;
};


/** mutation root */
export type Mutation_RootDeleteManyThirdPartyAccessArgs = {
  where?: Maybe<ThirdPartyAccessWhereInput>;
};


/** mutation root */
export type Mutation_RootDeleteManyTimezoneArgs = {
  where?: Maybe<TimezoneWhereInput>;
};


/** mutation root */
export type Mutation_RootDeleteManyTwoFactorHistoryArgs = {
  where?: Maybe<TwoFactorHistoryWhereInput>;
};


/** mutation root */
export type Mutation_RootDeleteManyUserArgs = {
  where?: Maybe<UserWhereInput>;
};


/** mutation root */
export type Mutation_RootDeleteManyUserSecurityQuestionsAnswerArgs = {
  where?: Maybe<UserSecurityQuestionsAnswerWhereInput>;
};


/** mutation root */
export type Mutation_RootDeleteOneAcLogArgs = {
  where: AcLogWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootDeleteOneAcLogActionArgs = {
  where: AcLogActionWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootDeleteOneAcLogUrlArgs = {
  where: AcLogUrlWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootDeleteOneAcceptEmailTokenArgs = {
  where: AcceptEmailTokenWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootDeleteOneAccountBalanceArgs = {
  where: AccountBalanceWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootDeleteOneAccountBalanceLogArgs = {
  where: AccountBalanceLogWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootDeleteOneAccountManagerArgs = {
  where: AccountManagerWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootDeleteOneAdvertCampaignArgs = {
  where: AdvertCampaignWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootDeleteOneApiDebugArgs = {
  where: ApiDebugWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootDeleteOneApiKeyArgs = {
  where: ApiKeyWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootDeleteOneAppBeforeAfterArgs = {
  where: AppBeforeAfterWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootDeleteOneAppPermissionArgs = {
  where: AppPermissionWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootDeleteOneAppSubscriptionArgs = {
  where: AppSubscriptionWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootDeleteOneAppSubscriptionsCompanyPriceArgs = {
  where: AppSubscriptionsCompanyPriceWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootDeleteOneAtAnswerArgs = {
  where: AtAnswerWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootDeleteOneAtConcernArgs = {
  where: AtConcernWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootDeleteOneAtQuestionArgs = {
  where: AtQuestionWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootDeleteOneAtQuestionsRelationArgs = {
  where: AtQuestionsRelationWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootDeleteOneAtQuizTakeArgs = {
  where: AtQuizTakeWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootDeleteOneAtSettingArgs = {
  where: AtSettingWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootDeleteOneAtTreatmentArgs = {
  where: AtTreatmentWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootDeleteOneAttachmentHelperLiteArgs = {
  where: AttachmentHelperLiteWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootDeleteOneAutomationActionArgs = {
  where: AutomationActionWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootDeleteOneAutomationDelayArgs = {
  where: AutomationDelayWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootDeleteOneAutomationFolderArgs = {
  where: AutomationFolderWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootDeleteOneAutomationLogArgs = {
  where: AutomationLogWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootDeleteOneAutomationRuleArgs = {
  where: AutomationRuleWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootDeleteOneAutomationTriggerArgs = {
  where: AutomationTriggerWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootDeleteOneAvilableDatesLogArgs = {
  where: AvilableDatesLogWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootDeleteOneBacsAccountArgs = {
  where: BacsAccountWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootDeleteOneBatchArgs = {
  where: BatchWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootDeleteOneBatchItemArgs = {
  where: BatchItemWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootDeleteOneBlockReasonArgs = {
  where: BlockReasonWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootDeleteOneBnfDrugArgs = {
  where: BnfDrugWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootDeleteOneBodyChartTemplateArgs = {
  where: BodyChartTemplateWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootDeleteOneBookingMasterArgs = {
  where: BookingMasterWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootDeleteOneBookingSettingArgs = {
  where: BookingSettingWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootDeleteOneBookingStatusArgs = {
  where: BookingStatusWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootDeleteOneBookingStatusChangeArgs = {
  where: BookingStatusChangeWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootDeleteOneBookitProGeneralArgs = {
  where: BookitProGeneralWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootDeleteOneBookitProSliderArgs = {
  where: BookitProSliderWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootDeleteOneBookmarkedPageArgs = {
  where: BookmarkedPageWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootDeleteOneBugLogArgs = {
  where: BugLogWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootDeleteOneCalRangeRequestArgs = {
  where: CalRangeRequestWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootDeleteOneCalendarViewArgs = {
  where: CalendarViewWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootDeleteOneCampaignAttachmentArgs = {
  where: CampaignAttachmentWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootDeleteOneCancelReasonArgs = {
  where: CancelReasonWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootDeleteOneCancellationPolicyArgs = {
  where: CancellationPolicyWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootDeleteOneCandidateArgs = {
  where: CandidateWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootDeleteOneCardTypeArgs = {
  where: CardTypeWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootDeleteOneCashupReportArgs = {
  where: CashupReportWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootDeleteOneCashupReportCustomArgs = {
  where: CashupReportCustomWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootDeleteOneCheckinApptArgs = {
  where: CheckinApptWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootDeleteOneCheckinAveragesArgs = {
  where: CheckinAveragesWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootDeleteOneCheckinAveragesIdleArgs = {
  where: CheckinAveragesIdleWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootDeleteOneCheckinProductArgs = {
  where: CheckinProductWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootDeleteOneCheckinQueueArgs = {
  where: CheckinQueueWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootDeleteOneClassCategoryArgs = {
  where: ClassCategoryWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootDeleteOneClassGuestsArgs = {
  where: ClassGuestsWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootDeleteOneClassMasterArgs = {
  where: ClassMasterWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootDeleteOneClassNotesArgs = {
  where: ClassNotesWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootDeleteOneClassProductArgs = {
  where: ClassProductWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootDeleteOneClassSmsHistoryArgs = {
  where: ClassSmsHistoryWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootDeleteOneClassTemplateSettingArgs = {
  where: ClassTemplateSettingWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootDeleteOneClasstypeMasterArgs = {
  where: ClasstypeMasterWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootDeleteOneCleverpinSettingArgs = {
  where: CleverpinSettingWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootDeleteOneClientFormSettingArgs = {
  where: ClientFormSettingWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootDeleteOneClinicalSoftwareArgs = {
  where: ClinicalSoftwareWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootDeleteOneClockinBreakArgs = {
  where: ClockinBreakWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootDeleteOneClockinLongpollArgs = {
  where: ClockinLongpollWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootDeleteOneClockinTimesheetArgs = {
  where: ClockinTimesheetWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootDeleteOneCmAccountNoteArgs = {
  where: CmAccountNoteWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootDeleteOneCmAppointmentCustomArgs = {
  where: CmAppointmentCustomWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootDeleteOneCmAppointmentsCustomImportHelperArgs = {
  where: CmAppointmentsCustomImportHelperWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootDeleteOneCmAuthorizationArgs = {
  where: CmAuthorizationWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootDeleteOneCmBookingNoteArgs = {
  where: CmBookingNoteWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootDeleteOneCmCampaignArgs = {
  where: CmCampaignWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootDeleteOneCmCampaignNoteArgs = {
  where: CmCampaignNoteWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootDeleteOneCmCaseArgs = {
  where: CmCaseWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootDeleteOneCmCaseNoteArgs = {
  where: CmCaseNoteWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootDeleteOneCmCaseReplyArgs = {
  where: CmCaseReplyWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootDeleteOneCmContactArgs = {
  where: CmContactWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootDeleteOneCompanyArgs = {
  where: CompanyWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootDeleteOneCompanyDetailsArgs = {
  where: CompanyDetailsWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootDeleteOneCompanySubscriptionArgs = {
  where: CompanySubscriptionWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootDeleteOneGlCodeArgs = {
  where: GlCodeWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootDeleteOneInvPaymentTypeArgs = {
  where: InvPaymentTypeWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootDeleteOneMarketingSourceArgs = {
  where: MarketingSourceWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootDeleteOneMediaLlibraryAttachmentArgs = {
  where: MediaLlibraryAttachmentWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootDeleteOneSecondAtAnswerArgs = {
  where: SecondAtAnswerWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootDeleteOneSecondAtQuestionArgs = {
  where: SecondAtQuestionWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootDeleteOneThirdPartyAccessArgs = {
  where: ThirdPartyAccessWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootDeleteOneTimezoneArgs = {
  where: TimezoneWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootDeleteOneTwoFactorHistoryArgs = {
  where: TwoFactorHistoryWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootDeleteOneUserArgs = {
  where: UserWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootDeleteOneUserSecurityQuestionsAnswerArgs = {
  where: UserSecurityQuestionsAnswerWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootDelete_DiscountsArgs = {
  where: Discounts_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Discounts_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_Lms_SlugsArgs = {
  where: Lms_Slugs_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Lms_Slugs_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_LabsArgs = {
  where: Labs_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Labs_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_Lists_CampaignArgs = {
  where: Lists_Campaign_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Lists_Campaign_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_Newsletter_CampaignArgs = {
  where: Newsletter_Campaign_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Newsletter_Campaign_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_Sms_CampaignArgs = {
  where: Sms_Campaign_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Sms_Campaign_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_Appointment_StatusArgs = {
  where: Appointment_Status_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Appointment_Status_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_Block_Out_OptionsArgs = {
  where: Block_Out_Options_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Block_Out_Options_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_Business_DetailsArgs = {
  where: Business_Details_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Business_Details_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Calendar_SettingsArgs = {
  where: Calendar_Settings_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Calendar_Settings_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_Cancellation_ReasonsArgs = {
  where: Cancellation_Reasons_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Cancellation_Reasons_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_Candidate_ListArgs = {
  where: Candidate_List_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Candidate_List_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_CategoryArgs = {
  where: Category_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Category_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_Clients_DataArgs = {
  where: Clients_Data_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Clients_Data_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_CoursesArgs = {
  where: Courses_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Courses_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_Credit_Note_TypeArgs = {
  where: Credit_Note_Type_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Credit_Note_Type_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_Credit_NotesArgs = {
  where: Credit_Notes_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Credit_Notes_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_Custom_Fields_CategoriesArgs = {
  where: Custom_Fields_Categories_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Custom_Fields_Categories_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_DebtArgs = {
  where: Debt_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Debt_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_DepartmentsArgs = {
  where: Departments_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Departments_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_Diagnostic_CodesArgs = {
  where: Diagnostic_Codes_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Diagnostic_Codes_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_Diagnostic_CodesetArgs = {
  where: Diagnostic_Codeset_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Diagnostic_Codeset_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_DrugsArgs = {
  where: Drugs_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Drugs_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_Family_RelationshipsArgs = {
  where: Family_Relationships_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Family_Relationships_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_InvoicesArgs = {
  where: Invoices_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Invoices_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_Issuing_CompanyArgs = {
  where: Issuing_Company_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Issuing_Company_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_Job_CandidatesArgs = {
  where: Job_Candidates_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Job_Candidates_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Job_OpeningsArgs = {
  where: Job_Openings_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Job_Openings_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Job_TitleArgs = {
  where: Job_Title_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Job_Title_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_Labs_DashboardArgs = {
  where: Labs_Dashboard_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Labs_Dashboard_By_PkArgs = {
  labNo: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_LeadArgs = {
  where: Lead_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Lead_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_Lead_FieldsArgs = {
  where: Lead_Fields_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Lead_Fields_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_LibraryArgs = {
  where: Library_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Library_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_Library_InstallersArgs = {
  where: Library_Installers_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Library_Installers_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_LocationsArgs = {
  where: Locations_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Locations_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_Marketing_CampaignArgs = {
  where: Marketing_Campaign_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Marketing_Campaign_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_Marketing_ReferralArgs = {
  where: Marketing_Referral_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Marketing_Referral_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_Marketing_SourceArgs = {
  where: Marketing_Source_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Marketing_Source_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_Payment_TypesArgs = {
  where: Payment_Types_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Payment_Types_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_PaymentsArgs = {
  where: Payments_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Payments_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_Petty_Cash_TypesArgs = {
  where: Petty_Cash_Types_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Petty_Cash_Types_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_Product_ListsArgs = {
  where: Product_Lists_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Product_Lists_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_PrototypeArgs = {
  where: Prototype_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Prototype_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_Purchase_OrderArgs = {
  where: Purchase_Order_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Purchase_Order_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_ResourcesArgs = {
  where: Resources_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Resources_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_RoomsArgs = {
  where: Rooms_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Rooms_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Rota_TemplatesArgs = {
  where: Rota_Templates_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Rota_Templates_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_SalutationArgs = {
  where: Salutation_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Salutation_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_Stock_TakeArgs = {
  where: Stock_Take_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Stock_Take_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_SupplierArgs = {
  where: Supplier_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Supplier_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_Tax_RatesArgs = {
  where: Tax_Rates_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Tax_Rates_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_Third_PartiesArgs = {
  where: Third_Parties_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Third_Parties_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootInsert_DiscountsArgs = {
  objects: Array<Discounts_Insert_Input>;
  on_conflict?: Maybe<Discounts_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Discounts_OneArgs = {
  object: Discounts_Insert_Input;
  on_conflict?: Maybe<Discounts_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Lms_SlugsArgs = {
  objects: Array<Lms_Slugs_Insert_Input>;
  on_conflict?: Maybe<Lms_Slugs_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Lms_Slugs_OneArgs = {
  object: Lms_Slugs_Insert_Input;
  on_conflict?: Maybe<Lms_Slugs_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_LabsArgs = {
  objects: Array<Labs_Insert_Input>;
  on_conflict?: Maybe<Labs_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Labs_OneArgs = {
  object: Labs_Insert_Input;
  on_conflict?: Maybe<Labs_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Lists_CampaignArgs = {
  objects: Array<Lists_Campaign_Insert_Input>;
  on_conflict?: Maybe<Lists_Campaign_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Lists_Campaign_OneArgs = {
  object: Lists_Campaign_Insert_Input;
  on_conflict?: Maybe<Lists_Campaign_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Newsletter_CampaignArgs = {
  objects: Array<Newsletter_Campaign_Insert_Input>;
  on_conflict?: Maybe<Newsletter_Campaign_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Newsletter_Campaign_OneArgs = {
  object: Newsletter_Campaign_Insert_Input;
  on_conflict?: Maybe<Newsletter_Campaign_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sms_CampaignArgs = {
  objects: Array<Sms_Campaign_Insert_Input>;
  on_conflict?: Maybe<Sms_Campaign_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Sms_Campaign_OneArgs = {
  object: Sms_Campaign_Insert_Input;
  on_conflict?: Maybe<Sms_Campaign_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Appointment_StatusArgs = {
  objects: Array<Appointment_Status_Insert_Input>;
  on_conflict?: Maybe<Appointment_Status_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Appointment_Status_OneArgs = {
  object: Appointment_Status_Insert_Input;
  on_conflict?: Maybe<Appointment_Status_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Block_Out_OptionsArgs = {
  objects: Array<Block_Out_Options_Insert_Input>;
  on_conflict?: Maybe<Block_Out_Options_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Block_Out_Options_OneArgs = {
  object: Block_Out_Options_Insert_Input;
  on_conflict?: Maybe<Block_Out_Options_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Business_DetailsArgs = {
  objects: Array<Business_Details_Insert_Input>;
  on_conflict?: Maybe<Business_Details_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Business_Details_OneArgs = {
  object: Business_Details_Insert_Input;
  on_conflict?: Maybe<Business_Details_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Calendar_SettingsArgs = {
  objects: Array<Calendar_Settings_Insert_Input>;
  on_conflict?: Maybe<Calendar_Settings_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Calendar_Settings_OneArgs = {
  object: Calendar_Settings_Insert_Input;
  on_conflict?: Maybe<Calendar_Settings_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Cancellation_ReasonsArgs = {
  objects: Array<Cancellation_Reasons_Insert_Input>;
  on_conflict?: Maybe<Cancellation_Reasons_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Cancellation_Reasons_OneArgs = {
  object: Cancellation_Reasons_Insert_Input;
  on_conflict?: Maybe<Cancellation_Reasons_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Candidate_ListArgs = {
  objects: Array<Candidate_List_Insert_Input>;
  on_conflict?: Maybe<Candidate_List_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Candidate_List_OneArgs = {
  object: Candidate_List_Insert_Input;
  on_conflict?: Maybe<Candidate_List_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_CategoryArgs = {
  objects: Array<Category_Insert_Input>;
  on_conflict?: Maybe<Category_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Category_OneArgs = {
  object: Category_Insert_Input;
  on_conflict?: Maybe<Category_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Clients_DataArgs = {
  objects: Array<Clients_Data_Insert_Input>;
  on_conflict?: Maybe<Clients_Data_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Clients_Data_OneArgs = {
  object: Clients_Data_Insert_Input;
  on_conflict?: Maybe<Clients_Data_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_ColorsArgs = {
  objects: Array<Colors_Insert_Input>;
};


/** mutation root */
export type Mutation_RootInsert_Colors_OneArgs = {
  object: Colors_Insert_Input;
};


/** mutation root */
export type Mutation_RootInsert_CoursesArgs = {
  objects: Array<Courses_Insert_Input>;
  on_conflict?: Maybe<Courses_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Courses_OneArgs = {
  object: Courses_Insert_Input;
  on_conflict?: Maybe<Courses_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Credit_Note_TypeArgs = {
  objects: Array<Credit_Note_Type_Insert_Input>;
  on_conflict?: Maybe<Credit_Note_Type_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Credit_Note_Type_OneArgs = {
  object: Credit_Note_Type_Insert_Input;
  on_conflict?: Maybe<Credit_Note_Type_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Credit_NotesArgs = {
  objects: Array<Credit_Notes_Insert_Input>;
  on_conflict?: Maybe<Credit_Notes_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Credit_Notes_OneArgs = {
  object: Credit_Notes_Insert_Input;
  on_conflict?: Maybe<Credit_Notes_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Custom_Fields_CategoriesArgs = {
  objects: Array<Custom_Fields_Categories_Insert_Input>;
  on_conflict?: Maybe<Custom_Fields_Categories_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Custom_Fields_Categories_OneArgs = {
  object: Custom_Fields_Categories_Insert_Input;
  on_conflict?: Maybe<Custom_Fields_Categories_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_DebtArgs = {
  objects: Array<Debt_Insert_Input>;
  on_conflict?: Maybe<Debt_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Debt_OneArgs = {
  object: Debt_Insert_Input;
  on_conflict?: Maybe<Debt_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_DepartmentsArgs = {
  objects: Array<Departments_Insert_Input>;
  on_conflict?: Maybe<Departments_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Departments_OneArgs = {
  object: Departments_Insert_Input;
  on_conflict?: Maybe<Departments_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Diagnostic_CodesArgs = {
  objects: Array<Diagnostic_Codes_Insert_Input>;
  on_conflict?: Maybe<Diagnostic_Codes_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Diagnostic_Codes_OneArgs = {
  object: Diagnostic_Codes_Insert_Input;
  on_conflict?: Maybe<Diagnostic_Codes_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Diagnostic_CodesetArgs = {
  objects: Array<Diagnostic_Codeset_Insert_Input>;
  on_conflict?: Maybe<Diagnostic_Codeset_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Diagnostic_Codeset_OneArgs = {
  object: Diagnostic_Codeset_Insert_Input;
  on_conflict?: Maybe<Diagnostic_Codeset_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_DrugsArgs = {
  objects: Array<Drugs_Insert_Input>;
  on_conflict?: Maybe<Drugs_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Drugs_OneArgs = {
  object: Drugs_Insert_Input;
  on_conflict?: Maybe<Drugs_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Family_RelationshipsArgs = {
  objects: Array<Family_Relationships_Insert_Input>;
  on_conflict?: Maybe<Family_Relationships_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Family_Relationships_OneArgs = {
  object: Family_Relationships_Insert_Input;
  on_conflict?: Maybe<Family_Relationships_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Feature_FlagsArgs = {
  objects: Array<Feature_Flags_Insert_Input>;
  on_conflict?: Maybe<Feature_Flags_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Feature_Flags_OneArgs = {
  object: Feature_Flags_Insert_Input;
  on_conflict?: Maybe<Feature_Flags_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_InvoicesArgs = {
  objects: Array<Invoices_Insert_Input>;
  on_conflict?: Maybe<Invoices_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Invoices_OneArgs = {
  object: Invoices_Insert_Input;
  on_conflict?: Maybe<Invoices_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Issuing_CompanyArgs = {
  objects: Array<Issuing_Company_Insert_Input>;
  on_conflict?: Maybe<Issuing_Company_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Issuing_Company_OneArgs = {
  object: Issuing_Company_Insert_Input;
  on_conflict?: Maybe<Issuing_Company_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Job_CandidatesArgs = {
  objects: Array<Job_Candidates_Insert_Input>;
  on_conflict?: Maybe<Job_Candidates_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Job_Candidates_OneArgs = {
  object: Job_Candidates_Insert_Input;
  on_conflict?: Maybe<Job_Candidates_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Job_OpeningsArgs = {
  objects: Array<Job_Openings_Insert_Input>;
  on_conflict?: Maybe<Job_Openings_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Job_Openings_OneArgs = {
  object: Job_Openings_Insert_Input;
  on_conflict?: Maybe<Job_Openings_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Job_TitleArgs = {
  objects: Array<Job_Title_Insert_Input>;
  on_conflict?: Maybe<Job_Title_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Job_Title_OneArgs = {
  object: Job_Title_Insert_Input;
  on_conflict?: Maybe<Job_Title_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Labs_DashboardArgs = {
  objects: Array<Labs_Dashboard_Insert_Input>;
  on_conflict?: Maybe<Labs_Dashboard_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Labs_Dashboard_OneArgs = {
  object: Labs_Dashboard_Insert_Input;
  on_conflict?: Maybe<Labs_Dashboard_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_LeadArgs = {
  objects: Array<Lead_Insert_Input>;
  on_conflict?: Maybe<Lead_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Lead_FieldsArgs = {
  objects: Array<Lead_Fields_Insert_Input>;
  on_conflict?: Maybe<Lead_Fields_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Lead_Fields_OneArgs = {
  object: Lead_Fields_Insert_Input;
  on_conflict?: Maybe<Lead_Fields_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Lead_OneArgs = {
  object: Lead_Insert_Input;
  on_conflict?: Maybe<Lead_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_LibraryArgs = {
  objects: Array<Library_Insert_Input>;
  on_conflict?: Maybe<Library_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Library_InstallersArgs = {
  objects: Array<Library_Installers_Insert_Input>;
  on_conflict?: Maybe<Library_Installers_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Library_Installers_OneArgs = {
  object: Library_Installers_Insert_Input;
  on_conflict?: Maybe<Library_Installers_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Library_OneArgs = {
  object: Library_Insert_Input;
  on_conflict?: Maybe<Library_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_LocationsArgs = {
  objects: Array<Locations_Insert_Input>;
  on_conflict?: Maybe<Locations_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Locations_OneArgs = {
  object: Locations_Insert_Input;
  on_conflict?: Maybe<Locations_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Marketing_CampaignArgs = {
  objects: Array<Marketing_Campaign_Insert_Input>;
  on_conflict?: Maybe<Marketing_Campaign_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Marketing_Campaign_OneArgs = {
  object: Marketing_Campaign_Insert_Input;
  on_conflict?: Maybe<Marketing_Campaign_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Marketing_ReferralArgs = {
  objects: Array<Marketing_Referral_Insert_Input>;
  on_conflict?: Maybe<Marketing_Referral_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Marketing_Referral_OneArgs = {
  object: Marketing_Referral_Insert_Input;
  on_conflict?: Maybe<Marketing_Referral_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Marketing_SourceArgs = {
  objects: Array<Marketing_Source_Insert_Input>;
  on_conflict?: Maybe<Marketing_Source_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Marketing_Source_OneArgs = {
  object: Marketing_Source_Insert_Input;
  on_conflict?: Maybe<Marketing_Source_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Packages_SetupArgs = {
  objects: Array<Packages_Setup_Insert_Input>;
};


/** mutation root */
export type Mutation_RootInsert_Payment_TypesArgs = {
  objects: Array<Payment_Types_Insert_Input>;
  on_conflict?: Maybe<Payment_Types_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Payment_Types_OneArgs = {
  object: Payment_Types_Insert_Input;
  on_conflict?: Maybe<Payment_Types_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_PaymentsArgs = {
  objects: Array<Payments_Insert_Input>;
  on_conflict?: Maybe<Payments_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Payments_OneArgs = {
  object: Payments_Insert_Input;
  on_conflict?: Maybe<Payments_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Petty_Cash_TypesArgs = {
  objects: Array<Petty_Cash_Types_Insert_Input>;
  on_conflict?: Maybe<Petty_Cash_Types_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Petty_Cash_Types_OneArgs = {
  object: Petty_Cash_Types_Insert_Input;
  on_conflict?: Maybe<Petty_Cash_Types_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Product_ListsArgs = {
  objects: Array<Product_Lists_Insert_Input>;
  on_conflict?: Maybe<Product_Lists_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Product_Lists_OneArgs = {
  object: Product_Lists_Insert_Input;
  on_conflict?: Maybe<Product_Lists_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_PrototypeArgs = {
  objects: Array<Prototype_Insert_Input>;
  on_conflict?: Maybe<Prototype_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Prototype_OneArgs = {
  object: Prototype_Insert_Input;
  on_conflict?: Maybe<Prototype_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Purchase_OrderArgs = {
  objects: Array<Purchase_Order_Insert_Input>;
  on_conflict?: Maybe<Purchase_Order_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Purchase_Order_OneArgs = {
  object: Purchase_Order_Insert_Input;
  on_conflict?: Maybe<Purchase_Order_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_ResourcesArgs = {
  objects: Array<Resources_Insert_Input>;
  on_conflict?: Maybe<Resources_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Resources_OneArgs = {
  object: Resources_Insert_Input;
  on_conflict?: Maybe<Resources_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_RoomsArgs = {
  objects: Array<Rooms_Insert_Input>;
  on_conflict?: Maybe<Rooms_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Rooms_OneArgs = {
  object: Rooms_Insert_Input;
  on_conflict?: Maybe<Rooms_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Rota_TemplatesArgs = {
  objects: Array<Rota_Templates_Insert_Input>;
  on_conflict?: Maybe<Rota_Templates_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Rota_Templates_OneArgs = {
  object: Rota_Templates_Insert_Input;
  on_conflict?: Maybe<Rota_Templates_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_SalutationArgs = {
  objects: Array<Salutation_Insert_Input>;
  on_conflict?: Maybe<Salutation_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Salutation_OneArgs = {
  object: Salutation_Insert_Input;
  on_conflict?: Maybe<Salutation_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Stock_TakeArgs = {
  objects: Array<Stock_Take_Insert_Input>;
  on_conflict?: Maybe<Stock_Take_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Stock_Take_OneArgs = {
  object: Stock_Take_Insert_Input;
  on_conflict?: Maybe<Stock_Take_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_SupplierArgs = {
  objects: Array<Supplier_Insert_Input>;
  on_conflict?: Maybe<Supplier_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Supplier_OneArgs = {
  object: Supplier_Insert_Input;
  on_conflict?: Maybe<Supplier_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Tax_RatesArgs = {
  objects: Array<Tax_Rates_Insert_Input>;
  on_conflict?: Maybe<Tax_Rates_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Tax_Rates_OneArgs = {
  object: Tax_Rates_Insert_Input;
  on_conflict?: Maybe<Tax_Rates_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Third_PartiesArgs = {
  objects: Array<Third_Parties_Insert_Input>;
  on_conflict?: Maybe<Third_Parties_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Third_Parties_OneArgs = {
  object: Third_Parties_Insert_Input;
  on_conflict?: Maybe<Third_Parties_On_Conflict>;
};


/** mutation root */
export type Mutation_RootLoginArgs = {
  password: Scalars['String'];
  username: Scalars['String'];
};


/** mutation root */
export type Mutation_RootUpdateManyAcLogArgs = {
  data: AcLogUpdateManyMutationInput;
  where?: Maybe<AcLogWhereInput>;
};


/** mutation root */
export type Mutation_RootUpdateManyAcLogActionArgs = {
  data: AcLogActionUpdateManyMutationInput;
  where?: Maybe<AcLogActionWhereInput>;
};


/** mutation root */
export type Mutation_RootUpdateManyAcLogUrlArgs = {
  data: AcLogUrlUpdateManyMutationInput;
  where?: Maybe<AcLogUrlWhereInput>;
};


/** mutation root */
export type Mutation_RootUpdateManyAcceptEmailTokenArgs = {
  data: AcceptEmailTokenUpdateManyMutationInput;
  where?: Maybe<AcceptEmailTokenWhereInput>;
};


/** mutation root */
export type Mutation_RootUpdateManyAccountBalanceArgs = {
  data: AccountBalanceUpdateManyMutationInput;
  where?: Maybe<AccountBalanceWhereInput>;
};


/** mutation root */
export type Mutation_RootUpdateManyAccountBalanceLogArgs = {
  data: AccountBalanceLogUpdateManyMutationInput;
  where?: Maybe<AccountBalanceLogWhereInput>;
};


/** mutation root */
export type Mutation_RootUpdateManyAccountManagerArgs = {
  data: AccountManagerUpdateManyMutationInput;
  where?: Maybe<AccountManagerWhereInput>;
};


/** mutation root */
export type Mutation_RootUpdateManyAdvertCampaignArgs = {
  data: AdvertCampaignUpdateManyMutationInput;
  where?: Maybe<AdvertCampaignWhereInput>;
};


/** mutation root */
export type Mutation_RootUpdateManyApiDebugArgs = {
  data: ApiDebugUpdateManyMutationInput;
  where?: Maybe<ApiDebugWhereInput>;
};


/** mutation root */
export type Mutation_RootUpdateManyApiKeyArgs = {
  data: ApiKeyUpdateManyMutationInput;
  where?: Maybe<ApiKeyWhereInput>;
};


/** mutation root */
export type Mutation_RootUpdateManyAppBeforeAfterArgs = {
  data: AppBeforeAfterUpdateManyMutationInput;
  where?: Maybe<AppBeforeAfterWhereInput>;
};


/** mutation root */
export type Mutation_RootUpdateManyAppPermissionArgs = {
  data: AppPermissionUpdateManyMutationInput;
  where?: Maybe<AppPermissionWhereInput>;
};


/** mutation root */
export type Mutation_RootUpdateManyAppSubscriptionArgs = {
  data: AppSubscriptionUpdateManyMutationInput;
  where?: Maybe<AppSubscriptionWhereInput>;
};


/** mutation root */
export type Mutation_RootUpdateManyAppSubscriptionsCompanyPriceArgs = {
  data: AppSubscriptionsCompanyPriceUpdateManyMutationInput;
  where?: Maybe<AppSubscriptionsCompanyPriceWhereInput>;
};


/** mutation root */
export type Mutation_RootUpdateManyAtAnswerArgs = {
  data: AtAnswerUpdateManyMutationInput;
  where?: Maybe<AtAnswerWhereInput>;
};


/** mutation root */
export type Mutation_RootUpdateManyAtConcernArgs = {
  data: AtConcernUpdateManyMutationInput;
  where?: Maybe<AtConcernWhereInput>;
};


/** mutation root */
export type Mutation_RootUpdateManyAtQuestionArgs = {
  data: AtQuestionUpdateManyMutationInput;
  where?: Maybe<AtQuestionWhereInput>;
};


/** mutation root */
export type Mutation_RootUpdateManyAtQuestionsRelationArgs = {
  data: AtQuestionsRelationUpdateManyMutationInput;
  where?: Maybe<AtQuestionsRelationWhereInput>;
};


/** mutation root */
export type Mutation_RootUpdateManyAtQuizTakeArgs = {
  data: AtQuizTakeUpdateManyMutationInput;
  where?: Maybe<AtQuizTakeWhereInput>;
};


/** mutation root */
export type Mutation_RootUpdateManyAtSettingArgs = {
  data: AtSettingUpdateManyMutationInput;
  where?: Maybe<AtSettingWhereInput>;
};


/** mutation root */
export type Mutation_RootUpdateManyAtTreatmentArgs = {
  data: AtTreatmentUpdateManyMutationInput;
  where?: Maybe<AtTreatmentWhereInput>;
};


/** mutation root */
export type Mutation_RootUpdateManyAttachmentHelperLiteArgs = {
  data: AttachmentHelperLiteUpdateManyMutationInput;
  where?: Maybe<AttachmentHelperLiteWhereInput>;
};


/** mutation root */
export type Mutation_RootUpdateManyAutomationActionArgs = {
  data: AutomationActionUpdateManyMutationInput;
  where?: Maybe<AutomationActionWhereInput>;
};


/** mutation root */
export type Mutation_RootUpdateManyAutomationDelayArgs = {
  data: AutomationDelayUpdateManyMutationInput;
  where?: Maybe<AutomationDelayWhereInput>;
};


/** mutation root */
export type Mutation_RootUpdateManyAutomationFolderArgs = {
  data: AutomationFolderUpdateManyMutationInput;
  where?: Maybe<AutomationFolderWhereInput>;
};


/** mutation root */
export type Mutation_RootUpdateManyAutomationLogArgs = {
  data: AutomationLogUpdateManyMutationInput;
  where?: Maybe<AutomationLogWhereInput>;
};


/** mutation root */
export type Mutation_RootUpdateManyAutomationRuleArgs = {
  data: AutomationRuleUpdateManyMutationInput;
  where?: Maybe<AutomationRuleWhereInput>;
};


/** mutation root */
export type Mutation_RootUpdateManyAutomationTriggerArgs = {
  data: AutomationTriggerUpdateManyMutationInput;
  where?: Maybe<AutomationTriggerWhereInput>;
};


/** mutation root */
export type Mutation_RootUpdateManyAvilableDatesLogArgs = {
  data: AvilableDatesLogUpdateManyMutationInput;
  where?: Maybe<AvilableDatesLogWhereInput>;
};


/** mutation root */
export type Mutation_RootUpdateManyBacsAccountArgs = {
  data: BacsAccountUpdateManyMutationInput;
  where?: Maybe<BacsAccountWhereInput>;
};


/** mutation root */
export type Mutation_RootUpdateManyBatchArgs = {
  data: BatchUpdateManyMutationInput;
  where?: Maybe<BatchWhereInput>;
};


/** mutation root */
export type Mutation_RootUpdateManyBatchItemArgs = {
  data: BatchItemUpdateManyMutationInput;
  where?: Maybe<BatchItemWhereInput>;
};


/** mutation root */
export type Mutation_RootUpdateManyBlockReasonArgs = {
  data: BlockReasonUpdateManyMutationInput;
  where?: Maybe<BlockReasonWhereInput>;
};


/** mutation root */
export type Mutation_RootUpdateManyBnfDrugArgs = {
  data: BnfDrugUpdateManyMutationInput;
  where?: Maybe<BnfDrugWhereInput>;
};


/** mutation root */
export type Mutation_RootUpdateManyBodyChartTemplateArgs = {
  data: BodyChartTemplateUpdateManyMutationInput;
  where?: Maybe<BodyChartTemplateWhereInput>;
};


/** mutation root */
export type Mutation_RootUpdateManyBookingMasterArgs = {
  data: BookingMasterUpdateManyMutationInput;
  where?: Maybe<BookingMasterWhereInput>;
};


/** mutation root */
export type Mutation_RootUpdateManyBookingSettingArgs = {
  data: BookingSettingUpdateManyMutationInput;
  where?: Maybe<BookingSettingWhereInput>;
};


/** mutation root */
export type Mutation_RootUpdateManyBookingStatusArgs = {
  data: BookingStatusUpdateManyMutationInput;
  where?: Maybe<BookingStatusWhereInput>;
};


/** mutation root */
export type Mutation_RootUpdateManyBookingStatusChangeArgs = {
  data: BookingStatusChangeUpdateManyMutationInput;
  where?: Maybe<BookingStatusChangeWhereInput>;
};


/** mutation root */
export type Mutation_RootUpdateManyBookitProGeneralArgs = {
  data: BookitProGeneralUpdateManyMutationInput;
  where?: Maybe<BookitProGeneralWhereInput>;
};


/** mutation root */
export type Mutation_RootUpdateManyBookitProSliderArgs = {
  data: BookitProSliderUpdateManyMutationInput;
  where?: Maybe<BookitProSliderWhereInput>;
};


/** mutation root */
export type Mutation_RootUpdateManyBookmarkedPageArgs = {
  data: BookmarkedPageUpdateManyMutationInput;
  where?: Maybe<BookmarkedPageWhereInput>;
};


/** mutation root */
export type Mutation_RootUpdateManyBugLogArgs = {
  data: BugLogUpdateManyMutationInput;
  where?: Maybe<BugLogWhereInput>;
};


/** mutation root */
export type Mutation_RootUpdateManyCalRangeRequestArgs = {
  data: CalRangeRequestUpdateManyMutationInput;
  where?: Maybe<CalRangeRequestWhereInput>;
};


/** mutation root */
export type Mutation_RootUpdateManyCalendarViewArgs = {
  data: CalendarViewUpdateManyMutationInput;
  where?: Maybe<CalendarViewWhereInput>;
};


/** mutation root */
export type Mutation_RootUpdateManyCampaignAttachmentArgs = {
  data: CampaignAttachmentUpdateManyMutationInput;
  where?: Maybe<CampaignAttachmentWhereInput>;
};


/** mutation root */
export type Mutation_RootUpdateManyCancelReasonArgs = {
  data: CancelReasonUpdateManyMutationInput;
  where?: Maybe<CancelReasonWhereInput>;
};


/** mutation root */
export type Mutation_RootUpdateManyCancellationPolicyArgs = {
  data: CancellationPolicyUpdateManyMutationInput;
  where?: Maybe<CancellationPolicyWhereInput>;
};


/** mutation root */
export type Mutation_RootUpdateManyCandidateArgs = {
  data: CandidateUpdateManyMutationInput;
  where?: Maybe<CandidateWhereInput>;
};


/** mutation root */
export type Mutation_RootUpdateManyCardTypeArgs = {
  data: CardTypeUpdateManyMutationInput;
  where?: Maybe<CardTypeWhereInput>;
};


/** mutation root */
export type Mutation_RootUpdateManyCashupReportArgs = {
  data: CashupReportUpdateManyMutationInput;
  where?: Maybe<CashupReportWhereInput>;
};


/** mutation root */
export type Mutation_RootUpdateManyCashupReportCustomArgs = {
  data: CashupReportCustomUpdateManyMutationInput;
  where?: Maybe<CashupReportCustomWhereInput>;
};


/** mutation root */
export type Mutation_RootUpdateManyCheckinApptArgs = {
  data: CheckinApptUpdateManyMutationInput;
  where?: Maybe<CheckinApptWhereInput>;
};


/** mutation root */
export type Mutation_RootUpdateManyCheckinAveragesArgs = {
  data: CheckinAveragesUpdateManyMutationInput;
  where?: Maybe<CheckinAveragesWhereInput>;
};


/** mutation root */
export type Mutation_RootUpdateManyCheckinAveragesIdleArgs = {
  data: CheckinAveragesIdleUpdateManyMutationInput;
  where?: Maybe<CheckinAveragesIdleWhereInput>;
};


/** mutation root */
export type Mutation_RootUpdateManyCheckinProductArgs = {
  data: CheckinProductUpdateManyMutationInput;
  where?: Maybe<CheckinProductWhereInput>;
};


/** mutation root */
export type Mutation_RootUpdateManyCheckinQueueArgs = {
  data: CheckinQueueUpdateManyMutationInput;
  where?: Maybe<CheckinQueueWhereInput>;
};


/** mutation root */
export type Mutation_RootUpdateManyClassCategoryArgs = {
  data: ClassCategoryUpdateManyMutationInput;
  where?: Maybe<ClassCategoryWhereInput>;
};


/** mutation root */
export type Mutation_RootUpdateManyClassGuestsArgs = {
  data: ClassGuestsUpdateManyMutationInput;
  where?: Maybe<ClassGuestsWhereInput>;
};


/** mutation root */
export type Mutation_RootUpdateManyClassMasterArgs = {
  data: ClassMasterUpdateManyMutationInput;
  where?: Maybe<ClassMasterWhereInput>;
};


/** mutation root */
export type Mutation_RootUpdateManyClassNotesArgs = {
  data: ClassNotesUpdateManyMutationInput;
  where?: Maybe<ClassNotesWhereInput>;
};


/** mutation root */
export type Mutation_RootUpdateManyClassProductArgs = {
  data: ClassProductUpdateManyMutationInput;
  where?: Maybe<ClassProductWhereInput>;
};


/** mutation root */
export type Mutation_RootUpdateManyClassSmsHistoryArgs = {
  data: ClassSmsHistoryUpdateManyMutationInput;
  where?: Maybe<ClassSmsHistoryWhereInput>;
};


/** mutation root */
export type Mutation_RootUpdateManyClassTemplateSettingArgs = {
  data: ClassTemplateSettingUpdateManyMutationInput;
  where?: Maybe<ClassTemplateSettingWhereInput>;
};


/** mutation root */
export type Mutation_RootUpdateManyClasstypeMasterArgs = {
  data: ClasstypeMasterUpdateManyMutationInput;
  where?: Maybe<ClasstypeMasterWhereInput>;
};


/** mutation root */
export type Mutation_RootUpdateManyCleverpinSettingArgs = {
  data: CleverpinSettingUpdateManyMutationInput;
  where?: Maybe<CleverpinSettingWhereInput>;
};


/** mutation root */
export type Mutation_RootUpdateManyClientFormSettingArgs = {
  data: ClientFormSettingUpdateManyMutationInput;
  where?: Maybe<ClientFormSettingWhereInput>;
};


/** mutation root */
export type Mutation_RootUpdateManyClinicalSoftwareArgs = {
  data: ClinicalSoftwareUpdateManyMutationInput;
  where?: Maybe<ClinicalSoftwareWhereInput>;
};


/** mutation root */
export type Mutation_RootUpdateManyClockinBreakArgs = {
  data: ClockinBreakUpdateManyMutationInput;
  where?: Maybe<ClockinBreakWhereInput>;
};


/** mutation root */
export type Mutation_RootUpdateManyClockinLongpollArgs = {
  data: ClockinLongpollUpdateManyMutationInput;
  where?: Maybe<ClockinLongpollWhereInput>;
};


/** mutation root */
export type Mutation_RootUpdateManyClockinTimesheetArgs = {
  data: ClockinTimesheetUpdateManyMutationInput;
  where?: Maybe<ClockinTimesheetWhereInput>;
};


/** mutation root */
export type Mutation_RootUpdateManyCmAccountNoteArgs = {
  data: CmAccountNoteUpdateManyMutationInput;
  where?: Maybe<CmAccountNoteWhereInput>;
};


/** mutation root */
export type Mutation_RootUpdateManyCmAppointmentCustomArgs = {
  data: CmAppointmentCustomUpdateManyMutationInput;
  where?: Maybe<CmAppointmentCustomWhereInput>;
};


/** mutation root */
export type Mutation_RootUpdateManyCmAppointmentsCustomImportHelperArgs = {
  data: CmAppointmentsCustomImportHelperUpdateManyMutationInput;
  where?: Maybe<CmAppointmentsCustomImportHelperWhereInput>;
};


/** mutation root */
export type Mutation_RootUpdateManyCmAuthorizationArgs = {
  data: CmAuthorizationUpdateManyMutationInput;
  where?: Maybe<CmAuthorizationWhereInput>;
};


/** mutation root */
export type Mutation_RootUpdateManyCmBookingNoteArgs = {
  data: CmBookingNoteUpdateManyMutationInput;
  where?: Maybe<CmBookingNoteWhereInput>;
};


/** mutation root */
export type Mutation_RootUpdateManyCmCampaignArgs = {
  data: CmCampaignUpdateManyMutationInput;
  where?: Maybe<CmCampaignWhereInput>;
};


/** mutation root */
export type Mutation_RootUpdateManyCmCampaignNoteArgs = {
  data: CmCampaignNoteUpdateManyMutationInput;
  where?: Maybe<CmCampaignNoteWhereInput>;
};


/** mutation root */
export type Mutation_RootUpdateManyCmCaseArgs = {
  data: CmCaseUpdateManyMutationInput;
  where?: Maybe<CmCaseWhereInput>;
};


/** mutation root */
export type Mutation_RootUpdateManyCmCaseNoteArgs = {
  data: CmCaseNoteUpdateManyMutationInput;
  where?: Maybe<CmCaseNoteWhereInput>;
};


/** mutation root */
export type Mutation_RootUpdateManyCmCaseReplyArgs = {
  data: CmCaseReplyUpdateManyMutationInput;
  where?: Maybe<CmCaseReplyWhereInput>;
};


/** mutation root */
export type Mutation_RootUpdateManyCmContactArgs = {
  data: CmContactUpdateManyMutationInput;
  where?: Maybe<CmContactWhereInput>;
};


/** mutation root */
export type Mutation_RootUpdateManyCompanyArgs = {
  data: CompanyUpdateManyMutationInput;
  where?: Maybe<CompanyWhereInput>;
};


/** mutation root */
export type Mutation_RootUpdateManyCompanyDetailsArgs = {
  data: CompanyDetailsUpdateManyMutationInput;
  where?: Maybe<CompanyDetailsWhereInput>;
};


/** mutation root */
export type Mutation_RootUpdateManyCompanySubscriptionArgs = {
  data: CompanySubscriptionUpdateManyMutationInput;
  where?: Maybe<CompanySubscriptionWhereInput>;
};


/** mutation root */
export type Mutation_RootUpdateManyGlCodeArgs = {
  data: GlCodeUpdateManyMutationInput;
  where?: Maybe<GlCodeWhereInput>;
};


/** mutation root */
export type Mutation_RootUpdateManyInvPaymentTypeArgs = {
  data: InvPaymentTypeUpdateManyMutationInput;
  where?: Maybe<InvPaymentTypeWhereInput>;
};


/** mutation root */
export type Mutation_RootUpdateManyMarketingSourceArgs = {
  data: MarketingSourceUpdateManyMutationInput;
  where?: Maybe<MarketingSourceWhereInput>;
};


/** mutation root */
export type Mutation_RootUpdateManyMediaLlibraryAttachmentArgs = {
  data: MediaLlibraryAttachmentUpdateManyMutationInput;
  where?: Maybe<MediaLlibraryAttachmentWhereInput>;
};


/** mutation root */
export type Mutation_RootUpdateManySecondAtAnswerArgs = {
  data: SecondAtAnswerUpdateManyMutationInput;
  where?: Maybe<SecondAtAnswerWhereInput>;
};


/** mutation root */
export type Mutation_RootUpdateManySecondAtQuestionArgs = {
  data: SecondAtQuestionUpdateManyMutationInput;
  where?: Maybe<SecondAtQuestionWhereInput>;
};


/** mutation root */
export type Mutation_RootUpdateManyThirdPartyAccessArgs = {
  data: ThirdPartyAccessUpdateManyMutationInput;
  where?: Maybe<ThirdPartyAccessWhereInput>;
};


/** mutation root */
export type Mutation_RootUpdateManyTimezoneArgs = {
  data: TimezoneUpdateManyMutationInput;
  where?: Maybe<TimezoneWhereInput>;
};


/** mutation root */
export type Mutation_RootUpdateManyTwoFactorHistoryArgs = {
  data: TwoFactorHistoryUpdateManyMutationInput;
  where?: Maybe<TwoFactorHistoryWhereInput>;
};


/** mutation root */
export type Mutation_RootUpdateManyUserArgs = {
  data: UserUpdateManyMutationInput;
  where?: Maybe<UserWhereInput>;
};


/** mutation root */
export type Mutation_RootUpdateManyUserSecurityQuestionsAnswerArgs = {
  data: UserSecurityQuestionsAnswerUpdateManyMutationInput;
  where?: Maybe<UserSecurityQuestionsAnswerWhereInput>;
};


/** mutation root */
export type Mutation_RootUpdateOneAcLogArgs = {
  data: AcLogUpdateInput;
  where: AcLogWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpdateOneAcLogActionArgs = {
  data: AcLogActionUpdateInput;
  where: AcLogActionWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpdateOneAcLogUrlArgs = {
  data: AcLogUrlUpdateInput;
  where: AcLogUrlWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpdateOneAcceptEmailTokenArgs = {
  data: AcceptEmailTokenUpdateInput;
  where: AcceptEmailTokenWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpdateOneAccountBalanceArgs = {
  data: AccountBalanceUpdateInput;
  where: AccountBalanceWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpdateOneAccountBalanceLogArgs = {
  data: AccountBalanceLogUpdateInput;
  where: AccountBalanceLogWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpdateOneAccountManagerArgs = {
  data: AccountManagerUpdateInput;
  where: AccountManagerWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpdateOneAdvertCampaignArgs = {
  data: AdvertCampaignUpdateInput;
  where: AdvertCampaignWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpdateOneApiDebugArgs = {
  data: ApiDebugUpdateInput;
  where: ApiDebugWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpdateOneApiKeyArgs = {
  data: ApiKeyUpdateInput;
  where: ApiKeyWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpdateOneAppBeforeAfterArgs = {
  data: AppBeforeAfterUpdateInput;
  where: AppBeforeAfterWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpdateOneAppPermissionArgs = {
  data: AppPermissionUpdateInput;
  where: AppPermissionWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpdateOneAppSubscriptionArgs = {
  data: AppSubscriptionUpdateInput;
  where: AppSubscriptionWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpdateOneAppSubscriptionsCompanyPriceArgs = {
  data: AppSubscriptionsCompanyPriceUpdateInput;
  where: AppSubscriptionsCompanyPriceWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpdateOneAtAnswerArgs = {
  data: AtAnswerUpdateInput;
  where: AtAnswerWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpdateOneAtConcernArgs = {
  data: AtConcernUpdateInput;
  where: AtConcernWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpdateOneAtQuestionArgs = {
  data: AtQuestionUpdateInput;
  where: AtQuestionWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpdateOneAtQuestionsRelationArgs = {
  data: AtQuestionsRelationUpdateInput;
  where: AtQuestionsRelationWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpdateOneAtQuizTakeArgs = {
  data: AtQuizTakeUpdateInput;
  where: AtQuizTakeWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpdateOneAtSettingArgs = {
  data: AtSettingUpdateInput;
  where: AtSettingWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpdateOneAtTreatmentArgs = {
  data: AtTreatmentUpdateInput;
  where: AtTreatmentWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpdateOneAttachmentHelperLiteArgs = {
  data: AttachmentHelperLiteUpdateInput;
  where: AttachmentHelperLiteWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpdateOneAutomationActionArgs = {
  data: AutomationActionUpdateInput;
  where: AutomationActionWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpdateOneAutomationDelayArgs = {
  data: AutomationDelayUpdateInput;
  where: AutomationDelayWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpdateOneAutomationFolderArgs = {
  data: AutomationFolderUpdateInput;
  where: AutomationFolderWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpdateOneAutomationLogArgs = {
  data: AutomationLogUpdateInput;
  where: AutomationLogWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpdateOneAutomationRuleArgs = {
  data: AutomationRuleUpdateInput;
  where: AutomationRuleWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpdateOneAutomationTriggerArgs = {
  data: AutomationTriggerUpdateInput;
  where: AutomationTriggerWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpdateOneAvilableDatesLogArgs = {
  data: AvilableDatesLogUpdateInput;
  where: AvilableDatesLogWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpdateOneBacsAccountArgs = {
  data: BacsAccountUpdateInput;
  where: BacsAccountWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpdateOneBatchArgs = {
  data: BatchUpdateInput;
  where: BatchWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpdateOneBatchItemArgs = {
  data: BatchItemUpdateInput;
  where: BatchItemWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpdateOneBlockReasonArgs = {
  data: BlockReasonUpdateInput;
  where: BlockReasonWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpdateOneBnfDrugArgs = {
  data: BnfDrugUpdateInput;
  where: BnfDrugWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpdateOneBodyChartTemplateArgs = {
  data: BodyChartTemplateUpdateInput;
  where: BodyChartTemplateWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpdateOneBookingMasterArgs = {
  data: BookingMasterUpdateInput;
  where: BookingMasterWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpdateOneBookingSettingArgs = {
  data: BookingSettingUpdateInput;
  where: BookingSettingWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpdateOneBookingStatusArgs = {
  data: BookingStatusUpdateInput;
  where: BookingStatusWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpdateOneBookingStatusChangeArgs = {
  data: BookingStatusChangeUpdateInput;
  where: BookingStatusChangeWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpdateOneBookitProGeneralArgs = {
  data: BookitProGeneralUpdateInput;
  where: BookitProGeneralWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpdateOneBookitProSliderArgs = {
  data: BookitProSliderUpdateInput;
  where: BookitProSliderWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpdateOneBookmarkedPageArgs = {
  data: BookmarkedPageUpdateInput;
  where: BookmarkedPageWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpdateOneBugLogArgs = {
  data: BugLogUpdateInput;
  where: BugLogWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpdateOneCalRangeRequestArgs = {
  data: CalRangeRequestUpdateInput;
  where: CalRangeRequestWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpdateOneCalendarViewArgs = {
  data: CalendarViewUpdateInput;
  where: CalendarViewWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpdateOneCampaignAttachmentArgs = {
  data: CampaignAttachmentUpdateInput;
  where: CampaignAttachmentWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpdateOneCancelReasonArgs = {
  data: CancelReasonUpdateInput;
  where: CancelReasonWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpdateOneCancellationPolicyArgs = {
  data: CancellationPolicyUpdateInput;
  where: CancellationPolicyWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpdateOneCandidateArgs = {
  data: CandidateUpdateInput;
  where: CandidateWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpdateOneCardTypeArgs = {
  data: CardTypeUpdateInput;
  where: CardTypeWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpdateOneCashupReportArgs = {
  data: CashupReportUpdateInput;
  where: CashupReportWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpdateOneCashupReportCustomArgs = {
  data: CashupReportCustomUpdateInput;
  where: CashupReportCustomWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpdateOneCheckinApptArgs = {
  data: CheckinApptUpdateInput;
  where: CheckinApptWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpdateOneCheckinAveragesArgs = {
  data: CheckinAveragesUpdateInput;
  where: CheckinAveragesWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpdateOneCheckinAveragesIdleArgs = {
  data: CheckinAveragesIdleUpdateInput;
  where: CheckinAveragesIdleWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpdateOneCheckinProductArgs = {
  data: CheckinProductUpdateInput;
  where: CheckinProductWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpdateOneCheckinQueueArgs = {
  data: CheckinQueueUpdateInput;
  where: CheckinQueueWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpdateOneClassCategoryArgs = {
  data: ClassCategoryUpdateInput;
  where: ClassCategoryWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpdateOneClassGuestsArgs = {
  data: ClassGuestsUpdateInput;
  where: ClassGuestsWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpdateOneClassMasterArgs = {
  data: ClassMasterUpdateInput;
  where: ClassMasterWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpdateOneClassNotesArgs = {
  data: ClassNotesUpdateInput;
  where: ClassNotesWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpdateOneClassProductArgs = {
  data: ClassProductUpdateInput;
  where: ClassProductWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpdateOneClassSmsHistoryArgs = {
  data: ClassSmsHistoryUpdateInput;
  where: ClassSmsHistoryWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpdateOneClassTemplateSettingArgs = {
  data: ClassTemplateSettingUpdateInput;
  where: ClassTemplateSettingWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpdateOneClasstypeMasterArgs = {
  data: ClasstypeMasterUpdateInput;
  where: ClasstypeMasterWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpdateOneCleverpinSettingArgs = {
  data: CleverpinSettingUpdateInput;
  where: CleverpinSettingWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpdateOneClientFormSettingArgs = {
  data: ClientFormSettingUpdateInput;
  where: ClientFormSettingWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpdateOneClinicalSoftwareArgs = {
  data: ClinicalSoftwareUpdateInput;
  where: ClinicalSoftwareWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpdateOneClockinBreakArgs = {
  data: ClockinBreakUpdateInput;
  where: ClockinBreakWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpdateOneClockinLongpollArgs = {
  data: ClockinLongpollUpdateInput;
  where: ClockinLongpollWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpdateOneClockinTimesheetArgs = {
  data: ClockinTimesheetUpdateInput;
  where: ClockinTimesheetWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpdateOneCmAccountNoteArgs = {
  data: CmAccountNoteUpdateInput;
  where: CmAccountNoteWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpdateOneCmAppointmentCustomArgs = {
  data: CmAppointmentCustomUpdateInput;
  where: CmAppointmentCustomWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpdateOneCmAppointmentsCustomImportHelperArgs = {
  data: CmAppointmentsCustomImportHelperUpdateInput;
  where: CmAppointmentsCustomImportHelperWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpdateOneCmAuthorizationArgs = {
  data: CmAuthorizationUpdateInput;
  where: CmAuthorizationWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpdateOneCmBookingNoteArgs = {
  data: CmBookingNoteUpdateInput;
  where: CmBookingNoteWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpdateOneCmCampaignArgs = {
  data: CmCampaignUpdateInput;
  where: CmCampaignWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpdateOneCmCampaignNoteArgs = {
  data: CmCampaignNoteUpdateInput;
  where: CmCampaignNoteWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpdateOneCmCaseArgs = {
  data: CmCaseUpdateInput;
  where: CmCaseWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpdateOneCmCaseNoteArgs = {
  data: CmCaseNoteUpdateInput;
  where: CmCaseNoteWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpdateOneCmCaseReplyArgs = {
  data: CmCaseReplyUpdateInput;
  where: CmCaseReplyWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpdateOneCmContactArgs = {
  data: CmContactUpdateInput;
  where: CmContactWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpdateOneCompanyArgs = {
  data: CompanyUpdateInput;
  where: CompanyWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpdateOneCompanyDetailsArgs = {
  data: CompanyDetailsUpdateInput;
  where: CompanyDetailsWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpdateOneCompanySubscriptionArgs = {
  data: CompanySubscriptionUpdateInput;
  where: CompanySubscriptionWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpdateOneGlCodeArgs = {
  data: GlCodeUpdateInput;
  where: GlCodeWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpdateOneInvPaymentTypeArgs = {
  data: InvPaymentTypeUpdateInput;
  where: InvPaymentTypeWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpdateOneMarketingSourceArgs = {
  data: MarketingSourceUpdateInput;
  where: MarketingSourceWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpdateOneMediaLlibraryAttachmentArgs = {
  data: MediaLlibraryAttachmentUpdateInput;
  where: MediaLlibraryAttachmentWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpdateOneSecondAtAnswerArgs = {
  data: SecondAtAnswerUpdateInput;
  where: SecondAtAnswerWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpdateOneSecondAtQuestionArgs = {
  data: SecondAtQuestionUpdateInput;
  where: SecondAtQuestionWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpdateOneThirdPartyAccessArgs = {
  data: ThirdPartyAccessUpdateInput;
  where: ThirdPartyAccessWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpdateOneTimezoneArgs = {
  data: TimezoneUpdateInput;
  where: TimezoneWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpdateOneTwoFactorHistoryArgs = {
  data: TwoFactorHistoryUpdateInput;
  where: TwoFactorHistoryWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpdateOneUserArgs = {
  data: UserUpdateInput;
  where: UserWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpdateOneUserSecurityQuestionsAnswerArgs = {
  data: UserSecurityQuestionsAnswerUpdateInput;
  where: UserSecurityQuestionsAnswerWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpdate_DiscountsArgs = {
  _inc?: Maybe<Discounts_Inc_Input>;
  _set?: Maybe<Discounts_Set_Input>;
  where: Discounts_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Discounts_By_PkArgs = {
  _inc?: Maybe<Discounts_Inc_Input>;
  _set?: Maybe<Discounts_Set_Input>;
  pk_columns: Discounts_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Lms_SlugsArgs = {
  _append?: Maybe<Lms_Slugs_Append_Input>;
  _delete_at_path?: Maybe<Lms_Slugs_Delete_At_Path_Input>;
  _delete_elem?: Maybe<Lms_Slugs_Delete_Elem_Input>;
  _delete_key?: Maybe<Lms_Slugs_Delete_Key_Input>;
  _prepend?: Maybe<Lms_Slugs_Prepend_Input>;
  _set?: Maybe<Lms_Slugs_Set_Input>;
  where: Lms_Slugs_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Lms_Slugs_By_PkArgs = {
  _append?: Maybe<Lms_Slugs_Append_Input>;
  _delete_at_path?: Maybe<Lms_Slugs_Delete_At_Path_Input>;
  _delete_elem?: Maybe<Lms_Slugs_Delete_Elem_Input>;
  _delete_key?: Maybe<Lms_Slugs_Delete_Key_Input>;
  _prepend?: Maybe<Lms_Slugs_Prepend_Input>;
  _set?: Maybe<Lms_Slugs_Set_Input>;
  pk_columns: Lms_Slugs_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_LabsArgs = {
  _inc?: Maybe<Labs_Inc_Input>;
  _set?: Maybe<Labs_Set_Input>;
  where: Labs_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Labs_By_PkArgs = {
  _inc?: Maybe<Labs_Inc_Input>;
  _set?: Maybe<Labs_Set_Input>;
  pk_columns: Labs_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Lists_CampaignArgs = {
  _inc?: Maybe<Lists_Campaign_Inc_Input>;
  _set?: Maybe<Lists_Campaign_Set_Input>;
  where: Lists_Campaign_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Lists_Campaign_By_PkArgs = {
  _inc?: Maybe<Lists_Campaign_Inc_Input>;
  _set?: Maybe<Lists_Campaign_Set_Input>;
  pk_columns: Lists_Campaign_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Newsletter_CampaignArgs = {
  _inc?: Maybe<Newsletter_Campaign_Inc_Input>;
  _set?: Maybe<Newsletter_Campaign_Set_Input>;
  where: Newsletter_Campaign_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Newsletter_Campaign_By_PkArgs = {
  _inc?: Maybe<Newsletter_Campaign_Inc_Input>;
  _set?: Maybe<Newsletter_Campaign_Set_Input>;
  pk_columns: Newsletter_Campaign_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Sms_CampaignArgs = {
  _inc?: Maybe<Sms_Campaign_Inc_Input>;
  _set?: Maybe<Sms_Campaign_Set_Input>;
  where: Sms_Campaign_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Sms_Campaign_By_PkArgs = {
  _inc?: Maybe<Sms_Campaign_Inc_Input>;
  _set?: Maybe<Sms_Campaign_Set_Input>;
  pk_columns: Sms_Campaign_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Appointment_StatusArgs = {
  _inc?: Maybe<Appointment_Status_Inc_Input>;
  _set?: Maybe<Appointment_Status_Set_Input>;
  where: Appointment_Status_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Appointment_Status_By_PkArgs = {
  _inc?: Maybe<Appointment_Status_Inc_Input>;
  _set?: Maybe<Appointment_Status_Set_Input>;
  pk_columns: Appointment_Status_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Block_Out_OptionsArgs = {
  _inc?: Maybe<Block_Out_Options_Inc_Input>;
  _set?: Maybe<Block_Out_Options_Set_Input>;
  where: Block_Out_Options_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Block_Out_Options_By_PkArgs = {
  _inc?: Maybe<Block_Out_Options_Inc_Input>;
  _set?: Maybe<Block_Out_Options_Set_Input>;
  pk_columns: Block_Out_Options_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Business_DetailsArgs = {
  _inc?: Maybe<Business_Details_Inc_Input>;
  _set?: Maybe<Business_Details_Set_Input>;
  where: Business_Details_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Business_Details_By_PkArgs = {
  _inc?: Maybe<Business_Details_Inc_Input>;
  _set?: Maybe<Business_Details_Set_Input>;
  pk_columns: Business_Details_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Calendar_SettingsArgs = {
  _inc?: Maybe<Calendar_Settings_Inc_Input>;
  _set?: Maybe<Calendar_Settings_Set_Input>;
  where: Calendar_Settings_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Calendar_Settings_By_PkArgs = {
  _inc?: Maybe<Calendar_Settings_Inc_Input>;
  _set?: Maybe<Calendar_Settings_Set_Input>;
  pk_columns: Calendar_Settings_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Cancellation_ReasonsArgs = {
  _inc?: Maybe<Cancellation_Reasons_Inc_Input>;
  _set?: Maybe<Cancellation_Reasons_Set_Input>;
  where: Cancellation_Reasons_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Cancellation_Reasons_By_PkArgs = {
  _inc?: Maybe<Cancellation_Reasons_Inc_Input>;
  _set?: Maybe<Cancellation_Reasons_Set_Input>;
  pk_columns: Cancellation_Reasons_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Candidate_ListArgs = {
  _inc?: Maybe<Candidate_List_Inc_Input>;
  _set?: Maybe<Candidate_List_Set_Input>;
  where: Candidate_List_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Candidate_List_By_PkArgs = {
  _inc?: Maybe<Candidate_List_Inc_Input>;
  _set?: Maybe<Candidate_List_Set_Input>;
  pk_columns: Candidate_List_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_CategoryArgs = {
  _inc?: Maybe<Category_Inc_Input>;
  _set?: Maybe<Category_Set_Input>;
  where: Category_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Category_By_PkArgs = {
  _inc?: Maybe<Category_Inc_Input>;
  _set?: Maybe<Category_Set_Input>;
  pk_columns: Category_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Clients_DataArgs = {
  _set?: Maybe<Clients_Data_Set_Input>;
  where: Clients_Data_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Clients_Data_By_PkArgs = {
  _set?: Maybe<Clients_Data_Set_Input>;
  pk_columns: Clients_Data_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_CoursesArgs = {
  _inc?: Maybe<Courses_Inc_Input>;
  _set?: Maybe<Courses_Set_Input>;
  where: Courses_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Courses_By_PkArgs = {
  _inc?: Maybe<Courses_Inc_Input>;
  _set?: Maybe<Courses_Set_Input>;
  pk_columns: Courses_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Credit_Note_TypeArgs = {
  _inc?: Maybe<Credit_Note_Type_Inc_Input>;
  _set?: Maybe<Credit_Note_Type_Set_Input>;
  where: Credit_Note_Type_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Credit_Note_Type_By_PkArgs = {
  _inc?: Maybe<Credit_Note_Type_Inc_Input>;
  _set?: Maybe<Credit_Note_Type_Set_Input>;
  pk_columns: Credit_Note_Type_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Credit_NotesArgs = {
  _inc?: Maybe<Credit_Notes_Inc_Input>;
  _set?: Maybe<Credit_Notes_Set_Input>;
  where: Credit_Notes_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Credit_Notes_By_PkArgs = {
  _inc?: Maybe<Credit_Notes_Inc_Input>;
  _set?: Maybe<Credit_Notes_Set_Input>;
  pk_columns: Credit_Notes_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Custom_Fields_CategoriesArgs = {
  _set?: Maybe<Custom_Fields_Categories_Set_Input>;
  where: Custom_Fields_Categories_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Custom_Fields_Categories_By_PkArgs = {
  _set?: Maybe<Custom_Fields_Categories_Set_Input>;
  pk_columns: Custom_Fields_Categories_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_DebtArgs = {
  _inc?: Maybe<Debt_Inc_Input>;
  _set?: Maybe<Debt_Set_Input>;
  where: Debt_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Debt_By_PkArgs = {
  _inc?: Maybe<Debt_Inc_Input>;
  _set?: Maybe<Debt_Set_Input>;
  pk_columns: Debt_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_DepartmentsArgs = {
  _inc?: Maybe<Departments_Inc_Input>;
  _set?: Maybe<Departments_Set_Input>;
  where: Departments_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Departments_By_PkArgs = {
  _inc?: Maybe<Departments_Inc_Input>;
  _set?: Maybe<Departments_Set_Input>;
  pk_columns: Departments_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Diagnostic_CodesArgs = {
  _inc?: Maybe<Diagnostic_Codes_Inc_Input>;
  _set?: Maybe<Diagnostic_Codes_Set_Input>;
  where: Diagnostic_Codes_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Diagnostic_Codes_By_PkArgs = {
  _inc?: Maybe<Diagnostic_Codes_Inc_Input>;
  _set?: Maybe<Diagnostic_Codes_Set_Input>;
  pk_columns: Diagnostic_Codes_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Diagnostic_CodesetArgs = {
  _inc?: Maybe<Diagnostic_Codeset_Inc_Input>;
  _set?: Maybe<Diagnostic_Codeset_Set_Input>;
  where: Diagnostic_Codeset_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Diagnostic_Codeset_By_PkArgs = {
  _inc?: Maybe<Diagnostic_Codeset_Inc_Input>;
  _set?: Maybe<Diagnostic_Codeset_Set_Input>;
  pk_columns: Diagnostic_Codeset_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_DrugsArgs = {
  _set?: Maybe<Drugs_Set_Input>;
  where: Drugs_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Drugs_By_PkArgs = {
  _set?: Maybe<Drugs_Set_Input>;
  pk_columns: Drugs_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Family_RelationshipsArgs = {
  _inc?: Maybe<Family_Relationships_Inc_Input>;
  _set?: Maybe<Family_Relationships_Set_Input>;
  where: Family_Relationships_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Family_Relationships_By_PkArgs = {
  _inc?: Maybe<Family_Relationships_Inc_Input>;
  _set?: Maybe<Family_Relationships_Set_Input>;
  pk_columns: Family_Relationships_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Feature_FlagsArgs = {
  _set?: Maybe<Feature_Flags_Set_Input>;
  where: Feature_Flags_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Feature_Flags_By_PkArgs = {
  _set?: Maybe<Feature_Flags_Set_Input>;
  pk_columns: Feature_Flags_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_InvoicesArgs = {
  _inc?: Maybe<Invoices_Inc_Input>;
  _set?: Maybe<Invoices_Set_Input>;
  where: Invoices_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Invoices_By_PkArgs = {
  _inc?: Maybe<Invoices_Inc_Input>;
  _set?: Maybe<Invoices_Set_Input>;
  pk_columns: Invoices_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Issuing_CompanyArgs = {
  _inc?: Maybe<Issuing_Company_Inc_Input>;
  _set?: Maybe<Issuing_Company_Set_Input>;
  where: Issuing_Company_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Issuing_Company_By_PkArgs = {
  _inc?: Maybe<Issuing_Company_Inc_Input>;
  _set?: Maybe<Issuing_Company_Set_Input>;
  pk_columns: Issuing_Company_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Job_CandidatesArgs = {
  _inc?: Maybe<Job_Candidates_Inc_Input>;
  _set?: Maybe<Job_Candidates_Set_Input>;
  where: Job_Candidates_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Job_Candidates_By_PkArgs = {
  _inc?: Maybe<Job_Candidates_Inc_Input>;
  _set?: Maybe<Job_Candidates_Set_Input>;
  pk_columns: Job_Candidates_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Job_OpeningsArgs = {
  _inc?: Maybe<Job_Openings_Inc_Input>;
  _set?: Maybe<Job_Openings_Set_Input>;
  where: Job_Openings_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Job_Openings_By_PkArgs = {
  _inc?: Maybe<Job_Openings_Inc_Input>;
  _set?: Maybe<Job_Openings_Set_Input>;
  pk_columns: Job_Openings_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Job_TitleArgs = {
  _inc?: Maybe<Job_Title_Inc_Input>;
  _set?: Maybe<Job_Title_Set_Input>;
  where: Job_Title_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Job_Title_By_PkArgs = {
  _inc?: Maybe<Job_Title_Inc_Input>;
  _set?: Maybe<Job_Title_Set_Input>;
  pk_columns: Job_Title_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Labs_DashboardArgs = {
  _inc?: Maybe<Labs_Dashboard_Inc_Input>;
  _set?: Maybe<Labs_Dashboard_Set_Input>;
  where: Labs_Dashboard_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Labs_Dashboard_By_PkArgs = {
  _inc?: Maybe<Labs_Dashboard_Inc_Input>;
  _set?: Maybe<Labs_Dashboard_Set_Input>;
  pk_columns: Labs_Dashboard_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_LeadArgs = {
  _inc?: Maybe<Lead_Inc_Input>;
  _set?: Maybe<Lead_Set_Input>;
  where: Lead_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Lead_By_PkArgs = {
  _inc?: Maybe<Lead_Inc_Input>;
  _set?: Maybe<Lead_Set_Input>;
  pk_columns: Lead_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Lead_FieldsArgs = {
  _set?: Maybe<Lead_Fields_Set_Input>;
  where: Lead_Fields_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Lead_Fields_By_PkArgs = {
  _set?: Maybe<Lead_Fields_Set_Input>;
  pk_columns: Lead_Fields_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_LibraryArgs = {
  _inc?: Maybe<Library_Inc_Input>;
  _set?: Maybe<Library_Set_Input>;
  where: Library_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Library_By_PkArgs = {
  _inc?: Maybe<Library_Inc_Input>;
  _set?: Maybe<Library_Set_Input>;
  pk_columns: Library_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Library_InstallersArgs = {
  _append?: Maybe<Library_Installers_Append_Input>;
  _delete_at_path?: Maybe<Library_Installers_Delete_At_Path_Input>;
  _delete_elem?: Maybe<Library_Installers_Delete_Elem_Input>;
  _delete_key?: Maybe<Library_Installers_Delete_Key_Input>;
  _inc?: Maybe<Library_Installers_Inc_Input>;
  _prepend?: Maybe<Library_Installers_Prepend_Input>;
  _set?: Maybe<Library_Installers_Set_Input>;
  where: Library_Installers_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Library_Installers_By_PkArgs = {
  _append?: Maybe<Library_Installers_Append_Input>;
  _delete_at_path?: Maybe<Library_Installers_Delete_At_Path_Input>;
  _delete_elem?: Maybe<Library_Installers_Delete_Elem_Input>;
  _delete_key?: Maybe<Library_Installers_Delete_Key_Input>;
  _inc?: Maybe<Library_Installers_Inc_Input>;
  _prepend?: Maybe<Library_Installers_Prepend_Input>;
  _set?: Maybe<Library_Installers_Set_Input>;
  pk_columns: Library_Installers_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_LocationsArgs = {
  _inc?: Maybe<Locations_Inc_Input>;
  _set?: Maybe<Locations_Set_Input>;
  where: Locations_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Locations_By_PkArgs = {
  _inc?: Maybe<Locations_Inc_Input>;
  _set?: Maybe<Locations_Set_Input>;
  pk_columns: Locations_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Marketing_CampaignArgs = {
  _inc?: Maybe<Marketing_Campaign_Inc_Input>;
  _set?: Maybe<Marketing_Campaign_Set_Input>;
  where: Marketing_Campaign_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Marketing_Campaign_By_PkArgs = {
  _inc?: Maybe<Marketing_Campaign_Inc_Input>;
  _set?: Maybe<Marketing_Campaign_Set_Input>;
  pk_columns: Marketing_Campaign_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Marketing_ReferralArgs = {
  _inc?: Maybe<Marketing_Referral_Inc_Input>;
  _set?: Maybe<Marketing_Referral_Set_Input>;
  where: Marketing_Referral_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Marketing_Referral_By_PkArgs = {
  _inc?: Maybe<Marketing_Referral_Inc_Input>;
  _set?: Maybe<Marketing_Referral_Set_Input>;
  pk_columns: Marketing_Referral_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Marketing_SourceArgs = {
  _inc?: Maybe<Marketing_Source_Inc_Input>;
  _set?: Maybe<Marketing_Source_Set_Input>;
  where: Marketing_Source_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Marketing_Source_By_PkArgs = {
  _inc?: Maybe<Marketing_Source_Inc_Input>;
  _set?: Maybe<Marketing_Source_Set_Input>;
  pk_columns: Marketing_Source_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Payment_TypesArgs = {
  _inc?: Maybe<Payment_Types_Inc_Input>;
  _set?: Maybe<Payment_Types_Set_Input>;
  where: Payment_Types_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Payment_Types_By_PkArgs = {
  _inc?: Maybe<Payment_Types_Inc_Input>;
  _set?: Maybe<Payment_Types_Set_Input>;
  pk_columns: Payment_Types_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_PaymentsArgs = {
  _inc?: Maybe<Payments_Inc_Input>;
  _set?: Maybe<Payments_Set_Input>;
  where: Payments_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Payments_By_PkArgs = {
  _inc?: Maybe<Payments_Inc_Input>;
  _set?: Maybe<Payments_Set_Input>;
  pk_columns: Payments_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Petty_Cash_TypesArgs = {
  _inc?: Maybe<Petty_Cash_Types_Inc_Input>;
  _set?: Maybe<Petty_Cash_Types_Set_Input>;
  where: Petty_Cash_Types_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Petty_Cash_Types_By_PkArgs = {
  _inc?: Maybe<Petty_Cash_Types_Inc_Input>;
  _set?: Maybe<Petty_Cash_Types_Set_Input>;
  pk_columns: Petty_Cash_Types_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Product_ListsArgs = {
  _inc?: Maybe<Product_Lists_Inc_Input>;
  _set?: Maybe<Product_Lists_Set_Input>;
  where: Product_Lists_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Product_Lists_By_PkArgs = {
  _inc?: Maybe<Product_Lists_Inc_Input>;
  _set?: Maybe<Product_Lists_Set_Input>;
  pk_columns: Product_Lists_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_PrototypeArgs = {
  _inc?: Maybe<Prototype_Inc_Input>;
  _set?: Maybe<Prototype_Set_Input>;
  where: Prototype_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Prototype_By_PkArgs = {
  _inc?: Maybe<Prototype_Inc_Input>;
  _set?: Maybe<Prototype_Set_Input>;
  pk_columns: Prototype_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Purchase_OrderArgs = {
  _inc?: Maybe<Purchase_Order_Inc_Input>;
  _set?: Maybe<Purchase_Order_Set_Input>;
  where: Purchase_Order_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Purchase_Order_By_PkArgs = {
  _inc?: Maybe<Purchase_Order_Inc_Input>;
  _set?: Maybe<Purchase_Order_Set_Input>;
  pk_columns: Purchase_Order_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_ResourcesArgs = {
  _inc?: Maybe<Resources_Inc_Input>;
  _set?: Maybe<Resources_Set_Input>;
  where: Resources_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Resources_By_PkArgs = {
  _inc?: Maybe<Resources_Inc_Input>;
  _set?: Maybe<Resources_Set_Input>;
  pk_columns: Resources_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_RoomsArgs = {
  _inc?: Maybe<Rooms_Inc_Input>;
  _set?: Maybe<Rooms_Set_Input>;
  where: Rooms_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Rooms_By_PkArgs = {
  _inc?: Maybe<Rooms_Inc_Input>;
  _set?: Maybe<Rooms_Set_Input>;
  pk_columns: Rooms_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Rota_TemplatesArgs = {
  _inc?: Maybe<Rota_Templates_Inc_Input>;
  _set?: Maybe<Rota_Templates_Set_Input>;
  where: Rota_Templates_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Rota_Templates_By_PkArgs = {
  _inc?: Maybe<Rota_Templates_Inc_Input>;
  _set?: Maybe<Rota_Templates_Set_Input>;
  pk_columns: Rota_Templates_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_SalutationArgs = {
  _inc?: Maybe<Salutation_Inc_Input>;
  _set?: Maybe<Salutation_Set_Input>;
  where: Salutation_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Salutation_By_PkArgs = {
  _inc?: Maybe<Salutation_Inc_Input>;
  _set?: Maybe<Salutation_Set_Input>;
  pk_columns: Salutation_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Stock_TakeArgs = {
  _inc?: Maybe<Stock_Take_Inc_Input>;
  _set?: Maybe<Stock_Take_Set_Input>;
  where: Stock_Take_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Stock_Take_By_PkArgs = {
  _inc?: Maybe<Stock_Take_Inc_Input>;
  _set?: Maybe<Stock_Take_Set_Input>;
  pk_columns: Stock_Take_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_SupplierArgs = {
  _inc?: Maybe<Supplier_Inc_Input>;
  _set?: Maybe<Supplier_Set_Input>;
  where: Supplier_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Supplier_By_PkArgs = {
  _inc?: Maybe<Supplier_Inc_Input>;
  _set?: Maybe<Supplier_Set_Input>;
  pk_columns: Supplier_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Tax_RatesArgs = {
  _inc?: Maybe<Tax_Rates_Inc_Input>;
  _set?: Maybe<Tax_Rates_Set_Input>;
  where: Tax_Rates_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Tax_Rates_By_PkArgs = {
  _inc?: Maybe<Tax_Rates_Inc_Input>;
  _set?: Maybe<Tax_Rates_Set_Input>;
  pk_columns: Tax_Rates_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Third_PartiesArgs = {
  _inc?: Maybe<Third_Parties_Inc_Input>;
  _set?: Maybe<Third_Parties_Set_Input>;
  where: Third_Parties_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Third_Parties_By_PkArgs = {
  _inc?: Maybe<Third_Parties_Inc_Input>;
  _set?: Maybe<Third_Parties_Set_Input>;
  pk_columns: Third_Parties_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpsertOneAcLogArgs = {
  create: AcLogCreateInput;
  update: AcLogUpdateInput;
  where: AcLogWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpsertOneAcLogActionArgs = {
  create: AcLogActionCreateInput;
  update: AcLogActionUpdateInput;
  where: AcLogActionWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpsertOneAcLogUrlArgs = {
  create: AcLogUrlCreateInput;
  update: AcLogUrlUpdateInput;
  where: AcLogUrlWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpsertOneAcceptEmailTokenArgs = {
  create: AcceptEmailTokenCreateInput;
  update: AcceptEmailTokenUpdateInput;
  where: AcceptEmailTokenWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpsertOneAccountBalanceArgs = {
  create: AccountBalanceCreateInput;
  update: AccountBalanceUpdateInput;
  where: AccountBalanceWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpsertOneAccountBalanceLogArgs = {
  create: AccountBalanceLogCreateInput;
  update: AccountBalanceLogUpdateInput;
  where: AccountBalanceLogWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpsertOneAccountManagerArgs = {
  create: AccountManagerCreateInput;
  update: AccountManagerUpdateInput;
  where: AccountManagerWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpsertOneAdvertCampaignArgs = {
  create: AdvertCampaignCreateInput;
  update: AdvertCampaignUpdateInput;
  where: AdvertCampaignWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpsertOneApiDebugArgs = {
  create: ApiDebugCreateInput;
  update: ApiDebugUpdateInput;
  where: ApiDebugWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpsertOneApiKeyArgs = {
  create: ApiKeyCreateInput;
  update: ApiKeyUpdateInput;
  where: ApiKeyWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpsertOneAppBeforeAfterArgs = {
  create: AppBeforeAfterCreateInput;
  update: AppBeforeAfterUpdateInput;
  where: AppBeforeAfterWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpsertOneAppPermissionArgs = {
  create: AppPermissionCreateInput;
  update: AppPermissionUpdateInput;
  where: AppPermissionWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpsertOneAppSubscriptionArgs = {
  create: AppSubscriptionCreateInput;
  update: AppSubscriptionUpdateInput;
  where: AppSubscriptionWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpsertOneAppSubscriptionsCompanyPriceArgs = {
  create: AppSubscriptionsCompanyPriceCreateInput;
  update: AppSubscriptionsCompanyPriceUpdateInput;
  where: AppSubscriptionsCompanyPriceWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpsertOneAtAnswerArgs = {
  create: AtAnswerCreateInput;
  update: AtAnswerUpdateInput;
  where: AtAnswerWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpsertOneAtConcernArgs = {
  create: AtConcernCreateInput;
  update: AtConcernUpdateInput;
  where: AtConcernWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpsertOneAtQuestionArgs = {
  create: AtQuestionCreateInput;
  update: AtQuestionUpdateInput;
  where: AtQuestionWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpsertOneAtQuestionsRelationArgs = {
  create: AtQuestionsRelationCreateInput;
  update: AtQuestionsRelationUpdateInput;
  where: AtQuestionsRelationWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpsertOneAtQuizTakeArgs = {
  create: AtQuizTakeCreateInput;
  update: AtQuizTakeUpdateInput;
  where: AtQuizTakeWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpsertOneAtSettingArgs = {
  create: AtSettingCreateInput;
  update: AtSettingUpdateInput;
  where: AtSettingWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpsertOneAtTreatmentArgs = {
  create: AtTreatmentCreateInput;
  update: AtTreatmentUpdateInput;
  where: AtTreatmentWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpsertOneAttachmentHelperLiteArgs = {
  create: AttachmentHelperLiteCreateInput;
  update: AttachmentHelperLiteUpdateInput;
  where: AttachmentHelperLiteWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpsertOneAutomationActionArgs = {
  create: AutomationActionCreateInput;
  update: AutomationActionUpdateInput;
  where: AutomationActionWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpsertOneAutomationDelayArgs = {
  create: AutomationDelayCreateInput;
  update: AutomationDelayUpdateInput;
  where: AutomationDelayWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpsertOneAutomationFolderArgs = {
  create: AutomationFolderCreateInput;
  update: AutomationFolderUpdateInput;
  where: AutomationFolderWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpsertOneAutomationLogArgs = {
  create: AutomationLogCreateInput;
  update: AutomationLogUpdateInput;
  where: AutomationLogWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpsertOneAutomationRuleArgs = {
  create: AutomationRuleCreateInput;
  update: AutomationRuleUpdateInput;
  where: AutomationRuleWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpsertOneAutomationTriggerArgs = {
  create: AutomationTriggerCreateInput;
  update: AutomationTriggerUpdateInput;
  where: AutomationTriggerWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpsertOneAvilableDatesLogArgs = {
  create: AvilableDatesLogCreateInput;
  update: AvilableDatesLogUpdateInput;
  where: AvilableDatesLogWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpsertOneBacsAccountArgs = {
  create: BacsAccountCreateInput;
  update: BacsAccountUpdateInput;
  where: BacsAccountWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpsertOneBatchArgs = {
  create: BatchCreateInput;
  update: BatchUpdateInput;
  where: BatchWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpsertOneBatchItemArgs = {
  create: BatchItemCreateInput;
  update: BatchItemUpdateInput;
  where: BatchItemWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpsertOneBlockReasonArgs = {
  create: BlockReasonCreateInput;
  update: BlockReasonUpdateInput;
  where: BlockReasonWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpsertOneBnfDrugArgs = {
  create: BnfDrugCreateInput;
  update: BnfDrugUpdateInput;
  where: BnfDrugWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpsertOneBodyChartTemplateArgs = {
  create: BodyChartTemplateCreateInput;
  update: BodyChartTemplateUpdateInput;
  where: BodyChartTemplateWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpsertOneBookingMasterArgs = {
  create: BookingMasterCreateInput;
  update: BookingMasterUpdateInput;
  where: BookingMasterWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpsertOneBookingSettingArgs = {
  create: BookingSettingCreateInput;
  update: BookingSettingUpdateInput;
  where: BookingSettingWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpsertOneBookingStatusArgs = {
  create: BookingStatusCreateInput;
  update: BookingStatusUpdateInput;
  where: BookingStatusWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpsertOneBookingStatusChangeArgs = {
  create: BookingStatusChangeCreateInput;
  update: BookingStatusChangeUpdateInput;
  where: BookingStatusChangeWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpsertOneBookitProGeneralArgs = {
  create: BookitProGeneralCreateInput;
  update: BookitProGeneralUpdateInput;
  where: BookitProGeneralWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpsertOneBookitProSliderArgs = {
  create: BookitProSliderCreateInput;
  update: BookitProSliderUpdateInput;
  where: BookitProSliderWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpsertOneBookmarkedPageArgs = {
  create: BookmarkedPageCreateInput;
  update: BookmarkedPageUpdateInput;
  where: BookmarkedPageWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpsertOneBugLogArgs = {
  create: BugLogCreateInput;
  update: BugLogUpdateInput;
  where: BugLogWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpsertOneCalRangeRequestArgs = {
  create: CalRangeRequestCreateInput;
  update: CalRangeRequestUpdateInput;
  where: CalRangeRequestWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpsertOneCalendarViewArgs = {
  create: CalendarViewCreateInput;
  update: CalendarViewUpdateInput;
  where: CalendarViewWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpsertOneCampaignAttachmentArgs = {
  create: CampaignAttachmentCreateInput;
  update: CampaignAttachmentUpdateInput;
  where: CampaignAttachmentWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpsertOneCancelReasonArgs = {
  create: CancelReasonCreateInput;
  update: CancelReasonUpdateInput;
  where: CancelReasonWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpsertOneCancellationPolicyArgs = {
  create: CancellationPolicyCreateInput;
  update: CancellationPolicyUpdateInput;
  where: CancellationPolicyWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpsertOneCandidateArgs = {
  create: CandidateCreateInput;
  update: CandidateUpdateInput;
  where: CandidateWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpsertOneCardTypeArgs = {
  create: CardTypeCreateInput;
  update: CardTypeUpdateInput;
  where: CardTypeWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpsertOneCashupReportArgs = {
  create: CashupReportCreateInput;
  update: CashupReportUpdateInput;
  where: CashupReportWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpsertOneCashupReportCustomArgs = {
  create: CashupReportCustomCreateInput;
  update: CashupReportCustomUpdateInput;
  where: CashupReportCustomWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpsertOneCheckinApptArgs = {
  create: CheckinApptCreateInput;
  update: CheckinApptUpdateInput;
  where: CheckinApptWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpsertOneCheckinAveragesArgs = {
  create: CheckinAveragesCreateInput;
  update: CheckinAveragesUpdateInput;
  where: CheckinAveragesWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpsertOneCheckinAveragesIdleArgs = {
  create: CheckinAveragesIdleCreateInput;
  update: CheckinAveragesIdleUpdateInput;
  where: CheckinAveragesIdleWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpsertOneCheckinProductArgs = {
  create: CheckinProductCreateInput;
  update: CheckinProductUpdateInput;
  where: CheckinProductWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpsertOneCheckinQueueArgs = {
  create: CheckinQueueCreateInput;
  update: CheckinQueueUpdateInput;
  where: CheckinQueueWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpsertOneClassCategoryArgs = {
  create: ClassCategoryCreateInput;
  update: ClassCategoryUpdateInput;
  where: ClassCategoryWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpsertOneClassGuestsArgs = {
  create: ClassGuestsCreateInput;
  update: ClassGuestsUpdateInput;
  where: ClassGuestsWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpsertOneClassMasterArgs = {
  create: ClassMasterCreateInput;
  update: ClassMasterUpdateInput;
  where: ClassMasterWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpsertOneClassNotesArgs = {
  create: ClassNotesCreateInput;
  update: ClassNotesUpdateInput;
  where: ClassNotesWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpsertOneClassProductArgs = {
  create: ClassProductCreateInput;
  update: ClassProductUpdateInput;
  where: ClassProductWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpsertOneClassSmsHistoryArgs = {
  create: ClassSmsHistoryCreateInput;
  update: ClassSmsHistoryUpdateInput;
  where: ClassSmsHistoryWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpsertOneClassTemplateSettingArgs = {
  create: ClassTemplateSettingCreateInput;
  update: ClassTemplateSettingUpdateInput;
  where: ClassTemplateSettingWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpsertOneClasstypeMasterArgs = {
  create: ClasstypeMasterCreateInput;
  update: ClasstypeMasterUpdateInput;
  where: ClasstypeMasterWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpsertOneCleverpinSettingArgs = {
  create: CleverpinSettingCreateInput;
  update: CleverpinSettingUpdateInput;
  where: CleverpinSettingWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpsertOneClientFormSettingArgs = {
  create: ClientFormSettingCreateInput;
  update: ClientFormSettingUpdateInput;
  where: ClientFormSettingWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpsertOneClinicalSoftwareArgs = {
  create: ClinicalSoftwareCreateInput;
  update: ClinicalSoftwareUpdateInput;
  where: ClinicalSoftwareWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpsertOneClockinBreakArgs = {
  create: ClockinBreakCreateInput;
  update: ClockinBreakUpdateInput;
  where: ClockinBreakWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpsertOneClockinLongpollArgs = {
  create: ClockinLongpollCreateInput;
  update: ClockinLongpollUpdateInput;
  where: ClockinLongpollWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpsertOneClockinTimesheetArgs = {
  create: ClockinTimesheetCreateInput;
  update: ClockinTimesheetUpdateInput;
  where: ClockinTimesheetWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpsertOneCmAccountNoteArgs = {
  create: CmAccountNoteCreateInput;
  update: CmAccountNoteUpdateInput;
  where: CmAccountNoteWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpsertOneCmAppointmentCustomArgs = {
  create: CmAppointmentCustomCreateInput;
  update: CmAppointmentCustomUpdateInput;
  where: CmAppointmentCustomWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpsertOneCmAppointmentsCustomImportHelperArgs = {
  create: CmAppointmentsCustomImportHelperCreateInput;
  update: CmAppointmentsCustomImportHelperUpdateInput;
  where: CmAppointmentsCustomImportHelperWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpsertOneCmAuthorizationArgs = {
  create: CmAuthorizationCreateInput;
  update: CmAuthorizationUpdateInput;
  where: CmAuthorizationWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpsertOneCmBookingNoteArgs = {
  create: CmBookingNoteCreateInput;
  update: CmBookingNoteUpdateInput;
  where: CmBookingNoteWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpsertOneCmCampaignArgs = {
  create: CmCampaignCreateInput;
  update: CmCampaignUpdateInput;
  where: CmCampaignWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpsertOneCmCampaignNoteArgs = {
  create: CmCampaignNoteCreateInput;
  update: CmCampaignNoteUpdateInput;
  where: CmCampaignNoteWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpsertOneCmCaseArgs = {
  create: CmCaseCreateInput;
  update: CmCaseUpdateInput;
  where: CmCaseWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpsertOneCmCaseNoteArgs = {
  create: CmCaseNoteCreateInput;
  update: CmCaseNoteUpdateInput;
  where: CmCaseNoteWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpsertOneCmCaseReplyArgs = {
  create: CmCaseReplyCreateInput;
  update: CmCaseReplyUpdateInput;
  where: CmCaseReplyWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpsertOneCmContactArgs = {
  create: CmContactCreateInput;
  update: CmContactUpdateInput;
  where: CmContactWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpsertOneCompanyArgs = {
  create: CompanyCreateInput;
  update: CompanyUpdateInput;
  where: CompanyWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpsertOneCompanyDetailsArgs = {
  create: CompanyDetailsCreateInput;
  update: CompanyDetailsUpdateInput;
  where: CompanyDetailsWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpsertOneCompanySubscriptionArgs = {
  create: CompanySubscriptionCreateInput;
  update: CompanySubscriptionUpdateInput;
  where: CompanySubscriptionWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpsertOneGlCodeArgs = {
  create: GlCodeCreateInput;
  update: GlCodeUpdateInput;
  where: GlCodeWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpsertOneInvPaymentTypeArgs = {
  create: InvPaymentTypeCreateInput;
  update: InvPaymentTypeUpdateInput;
  where: InvPaymentTypeWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpsertOneMarketingSourceArgs = {
  create: MarketingSourceCreateInput;
  update: MarketingSourceUpdateInput;
  where: MarketingSourceWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpsertOneMediaLlibraryAttachmentArgs = {
  create: MediaLlibraryAttachmentCreateInput;
  update: MediaLlibraryAttachmentUpdateInput;
  where: MediaLlibraryAttachmentWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpsertOneSecondAtAnswerArgs = {
  create: SecondAtAnswerCreateInput;
  update: SecondAtAnswerUpdateInput;
  where: SecondAtAnswerWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpsertOneSecondAtQuestionArgs = {
  create: SecondAtQuestionCreateInput;
  update: SecondAtQuestionUpdateInput;
  where: SecondAtQuestionWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpsertOneThirdPartyAccessArgs = {
  create: ThirdPartyAccessCreateInput;
  update: ThirdPartyAccessUpdateInput;
  where: ThirdPartyAccessWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpsertOneTimezoneArgs = {
  create: TimezoneCreateInput;
  update: TimezoneUpdateInput;
  where: TimezoneWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpsertOneTwoFactorHistoryArgs = {
  create: TwoFactorHistoryCreateInput;
  update: TwoFactorHistoryUpdateInput;
  where: TwoFactorHistoryWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpsertOneUserArgs = {
  create: UserCreateInput;
  update: UserUpdateInput;
  where: UserWhereUniqueInput;
};


/** mutation root */
export type Mutation_RootUpsertOneUserSecurityQuestionsAnswerArgs = {
  create: UserSecurityQuestionsAnswerCreateInput;
  update: UserSecurityQuestionsAnswerUpdateInput;
  where: UserSecurityQuestionsAnswerWhereUniqueInput;
};


/** Boolean expression to compare columns of type "numeric". All fields are combined with logical 'AND'. */
export type Numeric_Comparison_Exp = {
  _eq?: Maybe<Scalars['numeric']>;
  _gt?: Maybe<Scalars['numeric']>;
  _gte?: Maybe<Scalars['numeric']>;
  _in?: Maybe<Array<Scalars['numeric']>>;
  _is_null?: Maybe<Scalars['Boolean']>;
  _lt?: Maybe<Scalars['numeric']>;
  _lte?: Maybe<Scalars['numeric']>;
  _neq?: Maybe<Scalars['numeric']>;
  _nin?: Maybe<Array<Scalars['numeric']>>;
};

/** column ordering options */
export enum Order_By {
  /** in ascending order, nulls last */
  Asc = 'asc',
  /** in ascending order, nulls first */
  AscNullsFirst = 'asc_nulls_first',
  /** in ascending order, nulls last */
  AscNullsLast = 'asc_nulls_last',
  /** in descending order, nulls first */
  Desc = 'desc',
  /** in descending order, nulls first */
  DescNullsFirst = 'desc_nulls_first',
  /** in descending order, nulls last */
  DescNullsLast = 'desc_nulls_last'
}

/** input type for inserting data into table "packages_setup" */
export type Packages_Setup_Insert_Input = {
  is_active?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
  quantity?: Maybe<Scalars['json']>;
};

/** response of any mutation on the table "packages_setup" */
export type Packages_Setup_Mutation_Response = {
  __typename?: 'packages_setup_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
};

/** columns and relationships of "payment_types" */
export type Payment_Types = {
  __typename?: 'payment_types';
  created_at: Scalars['timestamptz'];
  description: Scalars['String'];
  gl_code: Scalars['String'];
  id: Scalars['uuid'];
  is_active: Scalars['Boolean'];
  name: Scalars['String'];
  order: Scalars['Int'];
  payment_type: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "payment_types" */
export type Payment_Types_Aggregate = {
  __typename?: 'payment_types_aggregate';
  aggregate?: Maybe<Payment_Types_Aggregate_Fields>;
  nodes: Array<Payment_Types>;
};

/** aggregate fields of "payment_types" */
export type Payment_Types_Aggregate_Fields = {
  __typename?: 'payment_types_aggregate_fields';
  avg?: Maybe<Payment_Types_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Payment_Types_Max_Fields>;
  min?: Maybe<Payment_Types_Min_Fields>;
  stddev?: Maybe<Payment_Types_Stddev_Fields>;
  stddev_pop?: Maybe<Payment_Types_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Payment_Types_Stddev_Samp_Fields>;
  sum?: Maybe<Payment_Types_Sum_Fields>;
  var_pop?: Maybe<Payment_Types_Var_Pop_Fields>;
  var_samp?: Maybe<Payment_Types_Var_Samp_Fields>;
  variance?: Maybe<Payment_Types_Variance_Fields>;
};


/** aggregate fields of "payment_types" */
export type Payment_Types_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Payment_Types_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Payment_Types_Avg_Fields = {
  __typename?: 'payment_types_avg_fields';
  order?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "payment_types". All fields are combined with a logical 'AND'. */
export type Payment_Types_Bool_Exp = {
  _and?: Maybe<Array<Payment_Types_Bool_Exp>>;
  _not?: Maybe<Payment_Types_Bool_Exp>;
  _or?: Maybe<Array<Payment_Types_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  description?: Maybe<String_Comparison_Exp>;
  gl_code?: Maybe<String_Comparison_Exp>;
  id?: Maybe<Uuid_Comparison_Exp>;
  is_active?: Maybe<Boolean_Comparison_Exp>;
  name?: Maybe<String_Comparison_Exp>;
  order?: Maybe<Int_Comparison_Exp>;
  payment_type?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "payment_types" */
export enum Payment_Types_Constraint {
  /** unique or primary key constraint */
  PaymentTypesPkey = 'payment_types_pkey'
}

/** input type for incrementing numeric columns in table "payment_types" */
export type Payment_Types_Inc_Input = {
  order?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "payment_types" */
export type Payment_Types_Insert_Input = {
  description?: Maybe<Scalars['String']>;
  gl_code?: Maybe<Scalars['String']>;
  is_active?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
  payment_type?: Maybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Payment_Types_Max_Fields = {
  __typename?: 'payment_types_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  gl_code?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
  payment_type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type Payment_Types_Min_Fields = {
  __typename?: 'payment_types_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  gl_code?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
  payment_type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "payment_types" */
export type Payment_Types_Mutation_Response = {
  __typename?: 'payment_types_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Payment_Types>;
};

/** on conflict condition type for table "payment_types" */
export type Payment_Types_On_Conflict = {
  constraint: Payment_Types_Constraint;
  update_columns: Array<Payment_Types_Update_Column>;
  where?: Maybe<Payment_Types_Bool_Exp>;
};

/** Ordering options when selecting data from "payment_types". */
export type Payment_Types_Order_By = {
  created_at?: Maybe<Order_By>;
  description?: Maybe<Order_By>;
  gl_code?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  is_active?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  order?: Maybe<Order_By>;
  payment_type?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: payment_types */
export type Payment_Types_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "payment_types" */
export enum Payment_Types_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Description = 'description',
  /** column name */
  GlCode = 'gl_code',
  /** column name */
  Id = 'id',
  /** column name */
  IsActive = 'is_active',
  /** column name */
  Name = 'name',
  /** column name */
  Order = 'order',
  /** column name */
  PaymentType = 'payment_type',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "payment_types" */
export type Payment_Types_Set_Input = {
  description?: Maybe<Scalars['String']>;
  gl_code?: Maybe<Scalars['String']>;
  is_active?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
  payment_type?: Maybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type Payment_Types_Stddev_Fields = {
  __typename?: 'payment_types_stddev_fields';
  order?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Payment_Types_Stddev_Pop_Fields = {
  __typename?: 'payment_types_stddev_pop_fields';
  order?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Payment_Types_Stddev_Samp_Fields = {
  __typename?: 'payment_types_stddev_samp_fields';
  order?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Payment_Types_Sum_Fields = {
  __typename?: 'payment_types_sum_fields';
  order?: Maybe<Scalars['Int']>;
};

/** update columns of table "payment_types" */
export enum Payment_Types_Update_Column {
  /** column name */
  Description = 'description',
  /** column name */
  GlCode = 'gl_code',
  /** column name */
  IsActive = 'is_active',
  /** column name */
  Name = 'name',
  /** column name */
  Order = 'order',
  /** column name */
  PaymentType = 'payment_type'
}

/** aggregate var_pop on columns */
export type Payment_Types_Var_Pop_Fields = {
  __typename?: 'payment_types_var_pop_fields';
  order?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Payment_Types_Var_Samp_Fields = {
  __typename?: 'payment_types_var_samp_fields';
  order?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Payment_Types_Variance_Fields = {
  __typename?: 'payment_types_variance_fields';
  order?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "payments" */
export type Payments = {
  __typename?: 'payments';
  account: Scalars['String'];
  amount: Scalars['numeric'];
  created_at: Scalars['timestamptz'];
  id: Scalars['uuid'];
  inv_date: Scalars['date'];
  location: Scalars['String'];
  payment_method: Scalars['String'];
  payment_no: Scalars['numeric'];
  updated_at: Scalars['timestamptz'];
  user: Scalars['String'];
};

/** aggregated selection of "payments" */
export type Payments_Aggregate = {
  __typename?: 'payments_aggregate';
  aggregate?: Maybe<Payments_Aggregate_Fields>;
  nodes: Array<Payments>;
};

/** aggregate fields of "payments" */
export type Payments_Aggregate_Fields = {
  __typename?: 'payments_aggregate_fields';
  avg?: Maybe<Payments_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Payments_Max_Fields>;
  min?: Maybe<Payments_Min_Fields>;
  stddev?: Maybe<Payments_Stddev_Fields>;
  stddev_pop?: Maybe<Payments_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Payments_Stddev_Samp_Fields>;
  sum?: Maybe<Payments_Sum_Fields>;
  var_pop?: Maybe<Payments_Var_Pop_Fields>;
  var_samp?: Maybe<Payments_Var_Samp_Fields>;
  variance?: Maybe<Payments_Variance_Fields>;
};


/** aggregate fields of "payments" */
export type Payments_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Payments_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Payments_Avg_Fields = {
  __typename?: 'payments_avg_fields';
  amount?: Maybe<Scalars['Float']>;
  payment_no?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "payments". All fields are combined with a logical 'AND'. */
export type Payments_Bool_Exp = {
  _and?: Maybe<Array<Payments_Bool_Exp>>;
  _not?: Maybe<Payments_Bool_Exp>;
  _or?: Maybe<Array<Payments_Bool_Exp>>;
  account?: Maybe<String_Comparison_Exp>;
  amount?: Maybe<Numeric_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Uuid_Comparison_Exp>;
  inv_date?: Maybe<Date_Comparison_Exp>;
  location?: Maybe<String_Comparison_Exp>;
  payment_method?: Maybe<String_Comparison_Exp>;
  payment_no?: Maybe<Numeric_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
  user?: Maybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "payments" */
export enum Payments_Constraint {
  /** unique or primary key constraint */
  PaymentsPkey = 'payments_pkey'
}

/** input type for incrementing numeric columns in table "payments" */
export type Payments_Inc_Input = {
  amount?: Maybe<Scalars['numeric']>;
  payment_no?: Maybe<Scalars['numeric']>;
};

/** input type for inserting data into table "payments" */
export type Payments_Insert_Input = {
  account?: Maybe<Scalars['String']>;
  amount?: Maybe<Scalars['numeric']>;
  inv_date?: Maybe<Scalars['date']>;
  location?: Maybe<Scalars['String']>;
  payment_method?: Maybe<Scalars['String']>;
  payment_no?: Maybe<Scalars['numeric']>;
  user?: Maybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Payments_Max_Fields = {
  __typename?: 'payments_max_fields';
  account?: Maybe<Scalars['String']>;
  amount?: Maybe<Scalars['numeric']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  inv_date?: Maybe<Scalars['date']>;
  location?: Maybe<Scalars['String']>;
  payment_method?: Maybe<Scalars['String']>;
  payment_no?: Maybe<Scalars['numeric']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user?: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type Payments_Min_Fields = {
  __typename?: 'payments_min_fields';
  account?: Maybe<Scalars['String']>;
  amount?: Maybe<Scalars['numeric']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  inv_date?: Maybe<Scalars['date']>;
  location?: Maybe<Scalars['String']>;
  payment_method?: Maybe<Scalars['String']>;
  payment_no?: Maybe<Scalars['numeric']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user?: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "payments" */
export type Payments_Mutation_Response = {
  __typename?: 'payments_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Payments>;
};

/** on conflict condition type for table "payments" */
export type Payments_On_Conflict = {
  constraint: Payments_Constraint;
  update_columns: Array<Payments_Update_Column>;
  where?: Maybe<Payments_Bool_Exp>;
};

/** Ordering options when selecting data from "payments". */
export type Payments_Order_By = {
  account?: Maybe<Order_By>;
  amount?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  inv_date?: Maybe<Order_By>;
  location?: Maybe<Order_By>;
  payment_method?: Maybe<Order_By>;
  payment_no?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  user?: Maybe<Order_By>;
};

/** primary key columns input for table: payments */
export type Payments_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "payments" */
export enum Payments_Select_Column {
  /** column name */
  Account = 'account',
  /** column name */
  Amount = 'amount',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  InvDate = 'inv_date',
  /** column name */
  Location = 'location',
  /** column name */
  PaymentMethod = 'payment_method',
  /** column name */
  PaymentNo = 'payment_no',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  User = 'user'
}

/** input type for updating data in table "payments" */
export type Payments_Set_Input = {
  account?: Maybe<Scalars['String']>;
  amount?: Maybe<Scalars['numeric']>;
  inv_date?: Maybe<Scalars['date']>;
  location?: Maybe<Scalars['String']>;
  payment_method?: Maybe<Scalars['String']>;
  payment_no?: Maybe<Scalars['numeric']>;
  user?: Maybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type Payments_Stddev_Fields = {
  __typename?: 'payments_stddev_fields';
  amount?: Maybe<Scalars['Float']>;
  payment_no?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Payments_Stddev_Pop_Fields = {
  __typename?: 'payments_stddev_pop_fields';
  amount?: Maybe<Scalars['Float']>;
  payment_no?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Payments_Stddev_Samp_Fields = {
  __typename?: 'payments_stddev_samp_fields';
  amount?: Maybe<Scalars['Float']>;
  payment_no?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Payments_Sum_Fields = {
  __typename?: 'payments_sum_fields';
  amount?: Maybe<Scalars['numeric']>;
  payment_no?: Maybe<Scalars['numeric']>;
};

/** update columns of table "payments" */
export enum Payments_Update_Column {
  /** column name */
  Account = 'account',
  /** column name */
  Amount = 'amount',
  /** column name */
  InvDate = 'inv_date',
  /** column name */
  Location = 'location',
  /** column name */
  PaymentMethod = 'payment_method',
  /** column name */
  PaymentNo = 'payment_no',
  /** column name */
  User = 'user'
}

/** aggregate var_pop on columns */
export type Payments_Var_Pop_Fields = {
  __typename?: 'payments_var_pop_fields';
  amount?: Maybe<Scalars['Float']>;
  payment_no?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Payments_Var_Samp_Fields = {
  __typename?: 'payments_var_samp_fields';
  amount?: Maybe<Scalars['Float']>;
  payment_no?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Payments_Variance_Fields = {
  __typename?: 'payments_variance_fields';
  amount?: Maybe<Scalars['Float']>;
  payment_no?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "petty_cash_types" */
export type Petty_Cash_Types = {
  __typename?: 'petty_cash_types';
  created_at: Scalars['timestamptz'];
  id: Scalars['uuid'];
  is_active: Scalars['Boolean'];
  name: Scalars['String'];
  order: Scalars['Int'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "petty_cash_types" */
export type Petty_Cash_Types_Aggregate = {
  __typename?: 'petty_cash_types_aggregate';
  aggregate?: Maybe<Petty_Cash_Types_Aggregate_Fields>;
  nodes: Array<Petty_Cash_Types>;
};

/** aggregate fields of "petty_cash_types" */
export type Petty_Cash_Types_Aggregate_Fields = {
  __typename?: 'petty_cash_types_aggregate_fields';
  avg?: Maybe<Petty_Cash_Types_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Petty_Cash_Types_Max_Fields>;
  min?: Maybe<Petty_Cash_Types_Min_Fields>;
  stddev?: Maybe<Petty_Cash_Types_Stddev_Fields>;
  stddev_pop?: Maybe<Petty_Cash_Types_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Petty_Cash_Types_Stddev_Samp_Fields>;
  sum?: Maybe<Petty_Cash_Types_Sum_Fields>;
  var_pop?: Maybe<Petty_Cash_Types_Var_Pop_Fields>;
  var_samp?: Maybe<Petty_Cash_Types_Var_Samp_Fields>;
  variance?: Maybe<Petty_Cash_Types_Variance_Fields>;
};


/** aggregate fields of "petty_cash_types" */
export type Petty_Cash_Types_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Petty_Cash_Types_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Petty_Cash_Types_Avg_Fields = {
  __typename?: 'petty_cash_types_avg_fields';
  order?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "petty_cash_types". All fields are combined with a logical 'AND'. */
export type Petty_Cash_Types_Bool_Exp = {
  _and?: Maybe<Array<Petty_Cash_Types_Bool_Exp>>;
  _not?: Maybe<Petty_Cash_Types_Bool_Exp>;
  _or?: Maybe<Array<Petty_Cash_Types_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Uuid_Comparison_Exp>;
  is_active?: Maybe<Boolean_Comparison_Exp>;
  name?: Maybe<String_Comparison_Exp>;
  order?: Maybe<Int_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "petty_cash_types" */
export enum Petty_Cash_Types_Constraint {
  /** unique or primary key constraint */
  PettyCashTypesPkey = 'petty_cash_types_pkey'
}

/** input type for incrementing numeric columns in table "petty_cash_types" */
export type Petty_Cash_Types_Inc_Input = {
  order?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "petty_cash_types" */
export type Petty_Cash_Types_Insert_Input = {
  is_active?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
};

/** aggregate max on columns */
export type Petty_Cash_Types_Max_Fields = {
  __typename?: 'petty_cash_types_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type Petty_Cash_Types_Min_Fields = {
  __typename?: 'petty_cash_types_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "petty_cash_types" */
export type Petty_Cash_Types_Mutation_Response = {
  __typename?: 'petty_cash_types_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Petty_Cash_Types>;
};

/** on conflict condition type for table "petty_cash_types" */
export type Petty_Cash_Types_On_Conflict = {
  constraint: Petty_Cash_Types_Constraint;
  update_columns: Array<Petty_Cash_Types_Update_Column>;
  where?: Maybe<Petty_Cash_Types_Bool_Exp>;
};

/** Ordering options when selecting data from "petty_cash_types". */
export type Petty_Cash_Types_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  is_active?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  order?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: petty_cash_types */
export type Petty_Cash_Types_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "petty_cash_types" */
export enum Petty_Cash_Types_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  IsActive = 'is_active',
  /** column name */
  Name = 'name',
  /** column name */
  Order = 'order',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "petty_cash_types" */
export type Petty_Cash_Types_Set_Input = {
  is_active?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
};

/** aggregate stddev on columns */
export type Petty_Cash_Types_Stddev_Fields = {
  __typename?: 'petty_cash_types_stddev_fields';
  order?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Petty_Cash_Types_Stddev_Pop_Fields = {
  __typename?: 'petty_cash_types_stddev_pop_fields';
  order?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Petty_Cash_Types_Stddev_Samp_Fields = {
  __typename?: 'petty_cash_types_stddev_samp_fields';
  order?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Petty_Cash_Types_Sum_Fields = {
  __typename?: 'petty_cash_types_sum_fields';
  order?: Maybe<Scalars['Int']>;
};

/** update columns of table "petty_cash_types" */
export enum Petty_Cash_Types_Update_Column {
  /** column name */
  IsActive = 'is_active',
  /** column name */
  Name = 'name',
  /** column name */
  Order = 'order'
}

/** aggregate var_pop on columns */
export type Petty_Cash_Types_Var_Pop_Fields = {
  __typename?: 'petty_cash_types_var_pop_fields';
  order?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Petty_Cash_Types_Var_Samp_Fields = {
  __typename?: 'petty_cash_types_var_samp_fields';
  order?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Petty_Cash_Types_Variance_Fields = {
  __typename?: 'petty_cash_types_variance_fields';
  order?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "product_lists" */
export type Product_Lists = {
  __typename?: 'product_lists';
  category: Scalars['String'];
  cost: Scalars['numeric'];
  created_at: Scalars['timestamptz'];
  id: Scalars['uuid'];
  is_active: Scalars['Boolean'];
  name: Scalars['String'];
  order: Scalars['Int'];
  quantity: Scalars['Int'];
  retail: Scalars['numeric'];
  status: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "product_lists" */
export type Product_Lists_Aggregate = {
  __typename?: 'product_lists_aggregate';
  aggregate?: Maybe<Product_Lists_Aggregate_Fields>;
  nodes: Array<Product_Lists>;
};

/** aggregate fields of "product_lists" */
export type Product_Lists_Aggregate_Fields = {
  __typename?: 'product_lists_aggregate_fields';
  avg?: Maybe<Product_Lists_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Product_Lists_Max_Fields>;
  min?: Maybe<Product_Lists_Min_Fields>;
  stddev?: Maybe<Product_Lists_Stddev_Fields>;
  stddev_pop?: Maybe<Product_Lists_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Product_Lists_Stddev_Samp_Fields>;
  sum?: Maybe<Product_Lists_Sum_Fields>;
  var_pop?: Maybe<Product_Lists_Var_Pop_Fields>;
  var_samp?: Maybe<Product_Lists_Var_Samp_Fields>;
  variance?: Maybe<Product_Lists_Variance_Fields>;
};


/** aggregate fields of "product_lists" */
export type Product_Lists_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Product_Lists_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Product_Lists_Avg_Fields = {
  __typename?: 'product_lists_avg_fields';
  cost?: Maybe<Scalars['Float']>;
  order?: Maybe<Scalars['Float']>;
  quantity?: Maybe<Scalars['Float']>;
  retail?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "product_lists". All fields are combined with a logical 'AND'. */
export type Product_Lists_Bool_Exp = {
  _and?: Maybe<Array<Product_Lists_Bool_Exp>>;
  _not?: Maybe<Product_Lists_Bool_Exp>;
  _or?: Maybe<Array<Product_Lists_Bool_Exp>>;
  category?: Maybe<String_Comparison_Exp>;
  cost?: Maybe<Numeric_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Uuid_Comparison_Exp>;
  is_active?: Maybe<Boolean_Comparison_Exp>;
  name?: Maybe<String_Comparison_Exp>;
  order?: Maybe<Int_Comparison_Exp>;
  quantity?: Maybe<Int_Comparison_Exp>;
  retail?: Maybe<Numeric_Comparison_Exp>;
  status?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "product_lists" */
export enum Product_Lists_Constraint {
  /** unique or primary key constraint */
  ProductListsPkey = 'product_lists_pkey'
}

/** input type for incrementing numeric columns in table "product_lists" */
export type Product_Lists_Inc_Input = {
  cost?: Maybe<Scalars['numeric']>;
  order?: Maybe<Scalars['Int']>;
  quantity?: Maybe<Scalars['Int']>;
  retail?: Maybe<Scalars['numeric']>;
};

/** input type for inserting data into table "product_lists" */
export type Product_Lists_Insert_Input = {
  category?: Maybe<Scalars['String']>;
  cost?: Maybe<Scalars['numeric']>;
  is_active?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
  quantity?: Maybe<Scalars['Int']>;
  retail?: Maybe<Scalars['numeric']>;
  status?: Maybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Product_Lists_Max_Fields = {
  __typename?: 'product_lists_max_fields';
  category?: Maybe<Scalars['String']>;
  cost?: Maybe<Scalars['numeric']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
  quantity?: Maybe<Scalars['Int']>;
  retail?: Maybe<Scalars['numeric']>;
  status?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type Product_Lists_Min_Fields = {
  __typename?: 'product_lists_min_fields';
  category?: Maybe<Scalars['String']>;
  cost?: Maybe<Scalars['numeric']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
  quantity?: Maybe<Scalars['Int']>;
  retail?: Maybe<Scalars['numeric']>;
  status?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "product_lists" */
export type Product_Lists_Mutation_Response = {
  __typename?: 'product_lists_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Product_Lists>;
};

/** on conflict condition type for table "product_lists" */
export type Product_Lists_On_Conflict = {
  constraint: Product_Lists_Constraint;
  update_columns: Array<Product_Lists_Update_Column>;
  where?: Maybe<Product_Lists_Bool_Exp>;
};

/** Ordering options when selecting data from "product_lists". */
export type Product_Lists_Order_By = {
  category?: Maybe<Order_By>;
  cost?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  is_active?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  order?: Maybe<Order_By>;
  quantity?: Maybe<Order_By>;
  retail?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: product_lists */
export type Product_Lists_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "product_lists" */
export enum Product_Lists_Select_Column {
  /** column name */
  Category = 'category',
  /** column name */
  Cost = 'cost',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  IsActive = 'is_active',
  /** column name */
  Name = 'name',
  /** column name */
  Order = 'order',
  /** column name */
  Quantity = 'quantity',
  /** column name */
  Retail = 'retail',
  /** column name */
  Status = 'status',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "product_lists" */
export type Product_Lists_Set_Input = {
  category?: Maybe<Scalars['String']>;
  cost?: Maybe<Scalars['numeric']>;
  is_active?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
  quantity?: Maybe<Scalars['Int']>;
  retail?: Maybe<Scalars['numeric']>;
  status?: Maybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type Product_Lists_Stddev_Fields = {
  __typename?: 'product_lists_stddev_fields';
  cost?: Maybe<Scalars['Float']>;
  order?: Maybe<Scalars['Float']>;
  quantity?: Maybe<Scalars['Float']>;
  retail?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Product_Lists_Stddev_Pop_Fields = {
  __typename?: 'product_lists_stddev_pop_fields';
  cost?: Maybe<Scalars['Float']>;
  order?: Maybe<Scalars['Float']>;
  quantity?: Maybe<Scalars['Float']>;
  retail?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Product_Lists_Stddev_Samp_Fields = {
  __typename?: 'product_lists_stddev_samp_fields';
  cost?: Maybe<Scalars['Float']>;
  order?: Maybe<Scalars['Float']>;
  quantity?: Maybe<Scalars['Float']>;
  retail?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Product_Lists_Sum_Fields = {
  __typename?: 'product_lists_sum_fields';
  cost?: Maybe<Scalars['numeric']>;
  order?: Maybe<Scalars['Int']>;
  quantity?: Maybe<Scalars['Int']>;
  retail?: Maybe<Scalars['numeric']>;
};

/** update columns of table "product_lists" */
export enum Product_Lists_Update_Column {
  /** column name */
  Category = 'category',
  /** column name */
  Cost = 'cost',
  /** column name */
  IsActive = 'is_active',
  /** column name */
  Name = 'name',
  /** column name */
  Order = 'order',
  /** column name */
  Quantity = 'quantity',
  /** column name */
  Retail = 'retail',
  /** column name */
  Status = 'status'
}

/** aggregate var_pop on columns */
export type Product_Lists_Var_Pop_Fields = {
  __typename?: 'product_lists_var_pop_fields';
  cost?: Maybe<Scalars['Float']>;
  order?: Maybe<Scalars['Float']>;
  quantity?: Maybe<Scalars['Float']>;
  retail?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Product_Lists_Var_Samp_Fields = {
  __typename?: 'product_lists_var_samp_fields';
  cost?: Maybe<Scalars['Float']>;
  order?: Maybe<Scalars['Float']>;
  quantity?: Maybe<Scalars['Float']>;
  retail?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Product_Lists_Variance_Fields = {
  __typename?: 'product_lists_variance_fields';
  cost?: Maybe<Scalars['Float']>;
  order?: Maybe<Scalars['Float']>;
  quantity?: Maybe<Scalars['Float']>;
  retail?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "prototype" */
export type Prototype = {
  __typename?: 'prototype';
  created_at: Scalars['timestamptz'];
  id: Scalars['uuid'];
  is_active: Scalars['Boolean'];
  name: Scalars['String'];
  order: Scalars['Int'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "prototype" */
export type Prototype_Aggregate = {
  __typename?: 'prototype_aggregate';
  aggregate?: Maybe<Prototype_Aggregate_Fields>;
  nodes: Array<Prototype>;
};

/** aggregate fields of "prototype" */
export type Prototype_Aggregate_Fields = {
  __typename?: 'prototype_aggregate_fields';
  avg?: Maybe<Prototype_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Prototype_Max_Fields>;
  min?: Maybe<Prototype_Min_Fields>;
  stddev?: Maybe<Prototype_Stddev_Fields>;
  stddev_pop?: Maybe<Prototype_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Prototype_Stddev_Samp_Fields>;
  sum?: Maybe<Prototype_Sum_Fields>;
  var_pop?: Maybe<Prototype_Var_Pop_Fields>;
  var_samp?: Maybe<Prototype_Var_Samp_Fields>;
  variance?: Maybe<Prototype_Variance_Fields>;
};


/** aggregate fields of "prototype" */
export type Prototype_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Prototype_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Prototype_Avg_Fields = {
  __typename?: 'prototype_avg_fields';
  order?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "prototype". All fields are combined with a logical 'AND'. */
export type Prototype_Bool_Exp = {
  _and?: Maybe<Array<Prototype_Bool_Exp>>;
  _not?: Maybe<Prototype_Bool_Exp>;
  _or?: Maybe<Array<Prototype_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Uuid_Comparison_Exp>;
  is_active?: Maybe<Boolean_Comparison_Exp>;
  name?: Maybe<String_Comparison_Exp>;
  order?: Maybe<Int_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "prototype" */
export enum Prototype_Constraint {
  /** unique or primary key constraint */
  PrototypePkey = 'prototype_pkey'
}

/** input type for incrementing numeric columns in table "prototype" */
export type Prototype_Inc_Input = {
  order?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "prototype" */
export type Prototype_Insert_Input = {
  is_active?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
};

/** aggregate max on columns */
export type Prototype_Max_Fields = {
  __typename?: 'prototype_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type Prototype_Min_Fields = {
  __typename?: 'prototype_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "prototype" */
export type Prototype_Mutation_Response = {
  __typename?: 'prototype_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Prototype>;
};

/** on conflict condition type for table "prototype" */
export type Prototype_On_Conflict = {
  constraint: Prototype_Constraint;
  update_columns: Array<Prototype_Update_Column>;
  where?: Maybe<Prototype_Bool_Exp>;
};

/** Ordering options when selecting data from "prototype". */
export type Prototype_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  is_active?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  order?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: prototype */
export type Prototype_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "prototype" */
export enum Prototype_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  IsActive = 'is_active',
  /** column name */
  Name = 'name',
  /** column name */
  Order = 'order',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "prototype" */
export type Prototype_Set_Input = {
  is_active?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
};

/** aggregate stddev on columns */
export type Prototype_Stddev_Fields = {
  __typename?: 'prototype_stddev_fields';
  order?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Prototype_Stddev_Pop_Fields = {
  __typename?: 'prototype_stddev_pop_fields';
  order?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Prototype_Stddev_Samp_Fields = {
  __typename?: 'prototype_stddev_samp_fields';
  order?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Prototype_Sum_Fields = {
  __typename?: 'prototype_sum_fields';
  order?: Maybe<Scalars['Int']>;
};

/** update columns of table "prototype" */
export enum Prototype_Update_Column {
  /** column name */
  IsActive = 'is_active',
  /** column name */
  Name = 'name',
  /** column name */
  Order = 'order'
}

/** aggregate var_pop on columns */
export type Prototype_Var_Pop_Fields = {
  __typename?: 'prototype_var_pop_fields';
  order?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Prototype_Var_Samp_Fields = {
  __typename?: 'prototype_var_samp_fields';
  order?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Prototype_Variance_Fields = {
  __typename?: 'prototype_variance_fields';
  order?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "purchase_order" */
export type Purchase_Order = {
  __typename?: 'purchase_order';
  create_date: Scalars['String'];
  created_at: Scalars['timestamptz'];
  created_by: Scalars['String'];
  id: Scalars['uuid'];
  is_active: Scalars['Boolean'];
  location: Scalars['String'];
  po_number: Scalars['String'];
  supplier: Scalars['String'];
  total_cost: Scalars['Int'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "purchase_order" */
export type Purchase_Order_Aggregate = {
  __typename?: 'purchase_order_aggregate';
  aggregate?: Maybe<Purchase_Order_Aggregate_Fields>;
  nodes: Array<Purchase_Order>;
};

/** aggregate fields of "purchase_order" */
export type Purchase_Order_Aggregate_Fields = {
  __typename?: 'purchase_order_aggregate_fields';
  avg?: Maybe<Purchase_Order_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Purchase_Order_Max_Fields>;
  min?: Maybe<Purchase_Order_Min_Fields>;
  stddev?: Maybe<Purchase_Order_Stddev_Fields>;
  stddev_pop?: Maybe<Purchase_Order_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Purchase_Order_Stddev_Samp_Fields>;
  sum?: Maybe<Purchase_Order_Sum_Fields>;
  var_pop?: Maybe<Purchase_Order_Var_Pop_Fields>;
  var_samp?: Maybe<Purchase_Order_Var_Samp_Fields>;
  variance?: Maybe<Purchase_Order_Variance_Fields>;
};


/** aggregate fields of "purchase_order" */
export type Purchase_Order_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Purchase_Order_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Purchase_Order_Avg_Fields = {
  __typename?: 'purchase_order_avg_fields';
  total_cost?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "purchase_order". All fields are combined with a logical 'AND'. */
export type Purchase_Order_Bool_Exp = {
  _and?: Maybe<Array<Purchase_Order_Bool_Exp>>;
  _not?: Maybe<Purchase_Order_Bool_Exp>;
  _or?: Maybe<Array<Purchase_Order_Bool_Exp>>;
  create_date?: Maybe<String_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  created_by?: Maybe<String_Comparison_Exp>;
  id?: Maybe<Uuid_Comparison_Exp>;
  is_active?: Maybe<Boolean_Comparison_Exp>;
  location?: Maybe<String_Comparison_Exp>;
  po_number?: Maybe<String_Comparison_Exp>;
  supplier?: Maybe<String_Comparison_Exp>;
  total_cost?: Maybe<Int_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "purchase_order" */
export enum Purchase_Order_Constraint {
  /** unique or primary key constraint */
  ProductListPurchaseOrderPkey = 'product_list_purchase_order_pkey'
}

/** input type for incrementing numeric columns in table "purchase_order" */
export type Purchase_Order_Inc_Input = {
  total_cost?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "purchase_order" */
export type Purchase_Order_Insert_Input = {
  create_date?: Maybe<Scalars['String']>;
  created_by?: Maybe<Scalars['String']>;
  is_active?: Maybe<Scalars['Boolean']>;
  location?: Maybe<Scalars['String']>;
  po_number?: Maybe<Scalars['String']>;
  supplier?: Maybe<Scalars['String']>;
  total_cost?: Maybe<Scalars['Int']>;
};

/** aggregate max on columns */
export type Purchase_Order_Max_Fields = {
  __typename?: 'purchase_order_max_fields';
  create_date?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  created_by?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  location?: Maybe<Scalars['String']>;
  po_number?: Maybe<Scalars['String']>;
  supplier?: Maybe<Scalars['String']>;
  total_cost?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type Purchase_Order_Min_Fields = {
  __typename?: 'purchase_order_min_fields';
  create_date?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  created_by?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  location?: Maybe<Scalars['String']>;
  po_number?: Maybe<Scalars['String']>;
  supplier?: Maybe<Scalars['String']>;
  total_cost?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "purchase_order" */
export type Purchase_Order_Mutation_Response = {
  __typename?: 'purchase_order_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Purchase_Order>;
};

/** on conflict condition type for table "purchase_order" */
export type Purchase_Order_On_Conflict = {
  constraint: Purchase_Order_Constraint;
  update_columns: Array<Purchase_Order_Update_Column>;
  where?: Maybe<Purchase_Order_Bool_Exp>;
};

/** Ordering options when selecting data from "purchase_order". */
export type Purchase_Order_Order_By = {
  create_date?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  created_by?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  is_active?: Maybe<Order_By>;
  location?: Maybe<Order_By>;
  po_number?: Maybe<Order_By>;
  supplier?: Maybe<Order_By>;
  total_cost?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: purchase_order */
export type Purchase_Order_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "purchase_order" */
export enum Purchase_Order_Select_Column {
  /** column name */
  CreateDate = 'create_date',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  CreatedBy = 'created_by',
  /** column name */
  Id = 'id',
  /** column name */
  IsActive = 'is_active',
  /** column name */
  Location = 'location',
  /** column name */
  PoNumber = 'po_number',
  /** column name */
  Supplier = 'supplier',
  /** column name */
  TotalCost = 'total_cost',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "purchase_order" */
export type Purchase_Order_Set_Input = {
  create_date?: Maybe<Scalars['String']>;
  created_by?: Maybe<Scalars['String']>;
  is_active?: Maybe<Scalars['Boolean']>;
  location?: Maybe<Scalars['String']>;
  po_number?: Maybe<Scalars['String']>;
  supplier?: Maybe<Scalars['String']>;
  total_cost?: Maybe<Scalars['Int']>;
};

/** aggregate stddev on columns */
export type Purchase_Order_Stddev_Fields = {
  __typename?: 'purchase_order_stddev_fields';
  total_cost?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Purchase_Order_Stddev_Pop_Fields = {
  __typename?: 'purchase_order_stddev_pop_fields';
  total_cost?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Purchase_Order_Stddev_Samp_Fields = {
  __typename?: 'purchase_order_stddev_samp_fields';
  total_cost?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Purchase_Order_Sum_Fields = {
  __typename?: 'purchase_order_sum_fields';
  total_cost?: Maybe<Scalars['Int']>;
};

/** update columns of table "purchase_order" */
export enum Purchase_Order_Update_Column {
  /** column name */
  CreateDate = 'create_date',
  /** column name */
  CreatedBy = 'created_by',
  /** column name */
  IsActive = 'is_active',
  /** column name */
  Location = 'location',
  /** column name */
  PoNumber = 'po_number',
  /** column name */
  Supplier = 'supplier',
  /** column name */
  TotalCost = 'total_cost'
}

/** aggregate var_pop on columns */
export type Purchase_Order_Var_Pop_Fields = {
  __typename?: 'purchase_order_var_pop_fields';
  total_cost?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Purchase_Order_Var_Samp_Fields = {
  __typename?: 'purchase_order_var_samp_fields';
  total_cost?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Purchase_Order_Variance_Fields = {
  __typename?: 'purchase_order_variance_fields';
  total_cost?: Maybe<Scalars['Float']>;
};

export type Query_Root = {
  __typename?: 'query_root';
  /** fetch data from the table: "Discounts" */
  Discounts: Array<Discounts>;
  /** fetch aggregated fields from the table: "Discounts" */
  Discounts_aggregate: Discounts_Aggregate;
  /** fetch data from the table: "Discounts" using primary key columns */
  Discounts_by_pk?: Maybe<Discounts>;
  /** fetch data from the table: "LMS_slugs" */
  LMS_slugs: Array<Lms_Slugs>;
  /** fetch aggregated fields from the table: "LMS_slugs" */
  LMS_slugs_aggregate: Lms_Slugs_Aggregate;
  /** fetch data from the table: "LMS_slugs" using primary key columns */
  LMS_slugs_by_pk?: Maybe<Lms_Slugs>;
  /** fetch data from the table: "Labs" */
  Labs: Array<Labs>;
  /** fetch aggregated fields from the table: "Labs" */
  Labs_aggregate: Labs_Aggregate;
  /** fetch data from the table: "Labs" using primary key columns */
  Labs_by_pk?: Maybe<Labs>;
  /** fetch data from the table: "Lists_campaign" */
  Lists_campaign: Array<Lists_Campaign>;
  /** fetch data from the table: "Lists_campaign" using primary key columns */
  Lists_campaign_by_pk?: Maybe<Lists_Campaign>;
  /** fetch data from the table: "Newsletter_campaign" */
  Newsletter_campaign: Array<Newsletter_Campaign>;
  /** fetch aggregated fields from the table: "Newsletter_campaign" */
  Newsletter_campaign_aggregate: Newsletter_Campaign_Aggregate;
  /** fetch data from the table: "Newsletter_campaign" using primary key columns */
  Newsletter_campaign_by_pk?: Maybe<Newsletter_Campaign>;
  /** fetch data from the table: "SMS_campaign" */
  SMS_campaign: Array<Sms_Campaign>;
  /** fetch data from the table: "SMS_campaign" using primary key columns */
  SMS_campaign_by_pk?: Maybe<Sms_Campaign>;
  acLog?: Maybe<AcLog>;
  acLogAction?: Maybe<AcLogAction>;
  acLogActions: Array<Maybe<AcLogAction>>;
  acLogActionsCount?: Maybe<Scalars['Int']>;
  acLogUrl?: Maybe<AcLogUrl>;
  acLogUrls: Array<Maybe<AcLogUrl>>;
  acLogUrlsCount?: Maybe<Scalars['Int']>;
  acLogs: Array<Maybe<AcLog>>;
  acLogsCount?: Maybe<Scalars['Int']>;
  acceptEmailToken?: Maybe<AcceptEmailToken>;
  acceptEmailTokens: Array<Maybe<AcceptEmailToken>>;
  acceptEmailTokensCount?: Maybe<Scalars['Int']>;
  accountBalance?: Maybe<AccountBalance>;
  accountBalanceLog?: Maybe<AccountBalanceLog>;
  accountBalanceLogs: Array<Maybe<AccountBalanceLog>>;
  accountBalanceLogsCount?: Maybe<Scalars['Int']>;
  accountBalances: Array<Maybe<AccountBalance>>;
  accountBalancesCount?: Maybe<Scalars['Int']>;
  accountManager?: Maybe<AccountManager>;
  accountManagers: Array<Maybe<AccountManager>>;
  accountManagersCount?: Maybe<Scalars['Int']>;
  advertCampaign?: Maybe<AdvertCampaign>;
  advertCampaigns: Array<Maybe<AdvertCampaign>>;
  advertCampaignsCount?: Maybe<Scalars['Int']>;
  apiDebug?: Maybe<ApiDebug>;
  apiDebugs: Array<Maybe<ApiDebug>>;
  apiDebugsCount?: Maybe<Scalars['Int']>;
  apiKey?: Maybe<ApiKey>;
  apiKeys: Array<Maybe<ApiKey>>;
  apiKeysCount?: Maybe<Scalars['Int']>;
  appBeforeAfter?: Maybe<AppBeforeAfter>;
  appBeforeAfters: Array<Maybe<AppBeforeAfter>>;
  appBeforeAftersCount?: Maybe<Scalars['Int']>;
  appPermission?: Maybe<AppPermission>;
  appPermissions: Array<Maybe<AppPermission>>;
  appPermissionsCount?: Maybe<Scalars['Int']>;
  appSubscription?: Maybe<AppSubscription>;
  appSubscriptions: Array<Maybe<AppSubscription>>;
  appSubscriptionsCompanyPrice?: Maybe<AppSubscriptionsCompanyPrice>;
  appSubscriptionsCompanyPrices: Array<Maybe<AppSubscriptionsCompanyPrice>>;
  appSubscriptionsCompanyPricesCount?: Maybe<Scalars['Int']>;
  appSubscriptionsCount?: Maybe<Scalars['Int']>;
  /** fetch data from the table: "appointment_status" */
  appointment_status: Array<Appointment_Status>;
  /** fetch aggregated fields from the table: "appointment_status" */
  appointment_status_aggregate: Appointment_Status_Aggregate;
  /** fetch data from the table: "appointment_status" using primary key columns */
  appointment_status_by_pk?: Maybe<Appointment_Status>;
  atAnswer?: Maybe<AtAnswer>;
  atAnswers: Array<Maybe<AtAnswer>>;
  atAnswersCount?: Maybe<Scalars['Int']>;
  atConcern?: Maybe<AtConcern>;
  atConcerns: Array<Maybe<AtConcern>>;
  atConcernsCount?: Maybe<Scalars['Int']>;
  atQuestion?: Maybe<AtQuestion>;
  atQuestions: Array<Maybe<AtQuestion>>;
  atQuestionsCount?: Maybe<Scalars['Int']>;
  atQuestionsRelation?: Maybe<AtQuestionsRelation>;
  atQuestionsRelations: Array<Maybe<AtQuestionsRelation>>;
  atQuestionsRelationsCount?: Maybe<Scalars['Int']>;
  atQuizTake?: Maybe<AtQuizTake>;
  atQuizTakes: Array<Maybe<AtQuizTake>>;
  atQuizTakesCount?: Maybe<Scalars['Int']>;
  atSetting?: Maybe<AtSetting>;
  atSettings: Array<Maybe<AtSetting>>;
  atSettingsCount?: Maybe<Scalars['Int']>;
  atTreatment?: Maybe<AtTreatment>;
  atTreatments: Array<Maybe<AtTreatment>>;
  atTreatmentsCount?: Maybe<Scalars['Int']>;
  attachmentHelperLite?: Maybe<AttachmentHelperLite>;
  attachmentHelperLites: Array<Maybe<AttachmentHelperLite>>;
  attachmentHelperLitesCount?: Maybe<Scalars['Int']>;
  automationAction?: Maybe<AutomationAction>;
  automationActions: Array<Maybe<AutomationAction>>;
  automationActionsCount?: Maybe<Scalars['Int']>;
  automationDelay?: Maybe<AutomationDelay>;
  automationDelays: Array<Maybe<AutomationDelay>>;
  automationDelaysCount?: Maybe<Scalars['Int']>;
  automationFolder?: Maybe<AutomationFolder>;
  automationFolders: Array<Maybe<AutomationFolder>>;
  automationFoldersCount?: Maybe<Scalars['Int']>;
  automationLog?: Maybe<AutomationLog>;
  automationLogs: Array<Maybe<AutomationLog>>;
  automationLogsCount?: Maybe<Scalars['Int']>;
  automationRule?: Maybe<AutomationRule>;
  automationRules: Array<Maybe<AutomationRule>>;
  automationRulesCount?: Maybe<Scalars['Int']>;
  automationTrigger?: Maybe<AutomationTrigger>;
  automationTriggers: Array<Maybe<AutomationTrigger>>;
  automationTriggersCount?: Maybe<Scalars['Int']>;
  avilableDatesLog?: Maybe<AvilableDatesLog>;
  avilableDatesLogs: Array<Maybe<AvilableDatesLog>>;
  avilableDatesLogsCount?: Maybe<Scalars['Int']>;
  bacsAccount?: Maybe<BacsAccount>;
  bacsAccounts: Array<Maybe<BacsAccount>>;
  bacsAccountsCount?: Maybe<Scalars['Int']>;
  batch?: Maybe<Batch>;
  batchItem?: Maybe<BatchItem>;
  batchItems: Array<Maybe<BatchItem>>;
  batchItemsCount?: Maybe<Scalars['Int']>;
  batches: Array<Maybe<Batch>>;
  batchesCount?: Maybe<Scalars['Int']>;
  blockReason?: Maybe<BlockReason>;
  blockReasons: Array<Maybe<BlockReason>>;
  blockReasonsCount?: Maybe<Scalars['Int']>;
  /** fetch data from the table: "block_out_options" */
  block_out_options: Array<Block_Out_Options>;
  /** fetch aggregated fields from the table: "block_out_options" */
  block_out_options_aggregate: Block_Out_Options_Aggregate;
  /** fetch data from the table: "block_out_options" using primary key columns */
  block_out_options_by_pk?: Maybe<Block_Out_Options>;
  bnfDrug?: Maybe<BnfDrug>;
  bnfDrugs: Array<Maybe<BnfDrug>>;
  bnfDrugsCount?: Maybe<Scalars['Int']>;
  bodyChartTemplate?: Maybe<BodyChartTemplate>;
  bodyChartTemplates: Array<Maybe<BodyChartTemplate>>;
  bodyChartTemplatesCount?: Maybe<Scalars['Int']>;
  bookingMaster?: Maybe<BookingMaster>;
  bookingMasters: Array<Maybe<BookingMaster>>;
  bookingMastersCount?: Maybe<Scalars['Int']>;
  bookingSetting?: Maybe<BookingSetting>;
  bookingSettings: Array<Maybe<BookingSetting>>;
  bookingSettingsCount?: Maybe<Scalars['Int']>;
  bookingStatus?: Maybe<BookingStatus>;
  bookingStatusChange?: Maybe<BookingStatusChange>;
  bookingStatusChanges: Array<Maybe<BookingStatusChange>>;
  bookingStatusChangesCount?: Maybe<Scalars['Int']>;
  bookingStatuses: Array<Maybe<BookingStatus>>;
  bookingStatusesCount?: Maybe<Scalars['Int']>;
  bookitProGeneral?: Maybe<BookitProGeneral>;
  bookitProGenerals: Array<Maybe<BookitProGeneral>>;
  bookitProGeneralsCount?: Maybe<Scalars['Int']>;
  bookitProSlider?: Maybe<BookitProSlider>;
  bookitProSliders: Array<Maybe<BookitProSlider>>;
  bookitProSlidersCount?: Maybe<Scalars['Int']>;
  bookmarkedPage?: Maybe<BookmarkedPage>;
  bookmarkedPages: Array<Maybe<BookmarkedPage>>;
  bookmarkedPagesCount?: Maybe<Scalars['Int']>;
  bugLog?: Maybe<BugLog>;
  bugLogs: Array<Maybe<BugLog>>;
  bugLogsCount?: Maybe<Scalars['Int']>;
  /** fetch data from the table: "business_details" */
  business_details: Array<Business_Details>;
  /** fetch data from the table: "business_details" using primary key columns */
  business_details_by_pk?: Maybe<Business_Details>;
  calRangeRequest?: Maybe<CalRangeRequest>;
  calRangeRequests: Array<Maybe<CalRangeRequest>>;
  calRangeRequestsCount?: Maybe<Scalars['Int']>;
  calendarView?: Maybe<CalendarView>;
  calendarViews: Array<Maybe<CalendarView>>;
  calendarViewsCount?: Maybe<Scalars['Int']>;
  /** fetch data from the table: "calendar_settings" */
  calendar_settings: Array<Calendar_Settings>;
  /** fetch data from the table: "calendar_settings" using primary key columns */
  calendar_settings_by_pk?: Maybe<Calendar_Settings>;
  campaignAttachment?: Maybe<CampaignAttachment>;
  campaignAttachments: Array<Maybe<CampaignAttachment>>;
  campaignAttachmentsCount?: Maybe<Scalars['Int']>;
  cancelReason?: Maybe<CancelReason>;
  cancelReasons: Array<Maybe<CancelReason>>;
  cancelReasonsCount?: Maybe<Scalars['Int']>;
  cancellationPolicies: Array<Maybe<CancellationPolicy>>;
  cancellationPoliciesCount?: Maybe<Scalars['Int']>;
  cancellationPolicy?: Maybe<CancellationPolicy>;
  /** fetch data from the table: "cancellation_reasons" */
  cancellation_reasons: Array<Cancellation_Reasons>;
  /** fetch aggregated fields from the table: "cancellation_reasons" */
  cancellation_reasons_aggregate: Cancellation_Reasons_Aggregate;
  /** fetch data from the table: "cancellation_reasons" using primary key columns */
  cancellation_reasons_by_pk?: Maybe<Cancellation_Reasons>;
  candidate?: Maybe<Candidate>;
  /** fetch data from the table: "candidate_list" */
  candidate_list: Array<Candidate_List>;
  /** fetch data from the table: "candidate_list" using primary key columns */
  candidate_list_by_pk?: Maybe<Candidate_List>;
  candidates: Array<Maybe<Candidate>>;
  candidatesCount?: Maybe<Scalars['Int']>;
  cardType?: Maybe<CardType>;
  cardTypes: Array<Maybe<CardType>>;
  cardTypesCount?: Maybe<Scalars['Int']>;
  cashupReport?: Maybe<CashupReport>;
  cashupReportCustom?: Maybe<CashupReportCustom>;
  cashupReportCustoms: Array<Maybe<CashupReportCustom>>;
  cashupReportCustomsCount?: Maybe<Scalars['Int']>;
  cashupReports: Array<Maybe<CashupReport>>;
  cashupReportsCount?: Maybe<Scalars['Int']>;
  /** fetch data from the table: "category" */
  category: Array<Category>;
  /** fetch aggregated fields from the table: "category" */
  category_aggregate: Category_Aggregate;
  /** fetch data from the table: "category" using primary key columns */
  category_by_pk?: Maybe<Category>;
  checkinAppt?: Maybe<CheckinAppt>;
  checkinAppts: Array<Maybe<CheckinAppt>>;
  checkinApptsCount?: Maybe<Scalars['Int']>;
  checkinAverages: Array<Maybe<CheckinAverages>>;
  checkinAveragesCount?: Maybe<Scalars['Int']>;
  checkinAveragesIdle?: Maybe<CheckinAveragesIdle>;
  checkinAveragesIdles: Array<Maybe<CheckinAveragesIdle>>;
  checkinAveragesIdlesCount?: Maybe<Scalars['Int']>;
  checkinProduct?: Maybe<CheckinProduct>;
  checkinProducts: Array<Maybe<CheckinProduct>>;
  checkinProductsCount?: Maybe<Scalars['Int']>;
  checkinQueue?: Maybe<CheckinQueue>;
  checkinQueues: Array<Maybe<CheckinQueue>>;
  checkinQueuesCount?: Maybe<Scalars['Int']>;
  classCategories: Array<Maybe<ClassCategory>>;
  classCategoriesCount?: Maybe<Scalars['Int']>;
  classCategory?: Maybe<ClassCategory>;
  classGuests: Array<Maybe<ClassGuests>>;
  classGuestsCount?: Maybe<Scalars['Int']>;
  classMaster?: Maybe<ClassMaster>;
  classMasters: Array<Maybe<ClassMaster>>;
  classMastersCount?: Maybe<Scalars['Int']>;
  classNotes: Array<Maybe<ClassNotes>>;
  classNotesCount?: Maybe<Scalars['Int']>;
  classProduct?: Maybe<ClassProduct>;
  classProducts: Array<Maybe<ClassProduct>>;
  classProductsCount?: Maybe<Scalars['Int']>;
  classSmsHistories: Array<Maybe<ClassSmsHistory>>;
  classSmsHistoriesCount?: Maybe<Scalars['Int']>;
  classSmsHistory?: Maybe<ClassSmsHistory>;
  classTemplateSetting?: Maybe<ClassTemplateSetting>;
  classTemplateSettings: Array<Maybe<ClassTemplateSetting>>;
  classTemplateSettingsCount?: Maybe<Scalars['Int']>;
  classtypeMaster?: Maybe<ClasstypeMaster>;
  classtypeMasters: Array<Maybe<ClasstypeMaster>>;
  classtypeMastersCount?: Maybe<Scalars['Int']>;
  cleverpinSetting?: Maybe<CleverpinSetting>;
  cleverpinSettings: Array<Maybe<CleverpinSetting>>;
  cleverpinSettingsCount?: Maybe<Scalars['Int']>;
  clientFormSetting?: Maybe<ClientFormSetting>;
  clientFormSettings: Array<Maybe<ClientFormSetting>>;
  clientFormSettingsCount?: Maybe<Scalars['Int']>;
  /** fetch data from the table: "clients_data" */
  clients_data: Array<Clients_Data>;
  /** fetch aggregated fields from the table: "clients_data" */
  clients_data_aggregate: Clients_Data_Aggregate;
  /** fetch data from the table: "clients_data" using primary key columns */
  clients_data_by_pk?: Maybe<Clients_Data>;
  clinicalSoftware?: Maybe<ClinicalSoftware>;
  clinicalSoftwares: Array<Maybe<ClinicalSoftware>>;
  clinicalSoftwaresCount?: Maybe<Scalars['Int']>;
  clockinBreak?: Maybe<ClockinBreak>;
  clockinBreaks: Array<Maybe<ClockinBreak>>;
  clockinBreaksCount?: Maybe<Scalars['Int']>;
  clockinLongpoll?: Maybe<ClockinLongpoll>;
  clockinLongpolls: Array<Maybe<ClockinLongpoll>>;
  clockinLongpollsCount?: Maybe<Scalars['Int']>;
  clockinTimesheet?: Maybe<ClockinTimesheet>;
  clockinTimesheets: Array<Maybe<ClockinTimesheet>>;
  clockinTimesheetsCount?: Maybe<Scalars['Int']>;
  cmAccountNote?: Maybe<CmAccountNote>;
  cmAccountNotes: Array<Maybe<CmAccountNote>>;
  cmAccountNotesCount?: Maybe<Scalars['Int']>;
  cmAppointmentCustom?: Maybe<CmAppointmentCustom>;
  cmAppointmentCustoms: Array<Maybe<CmAppointmentCustom>>;
  cmAppointmentCustomsCount?: Maybe<Scalars['Int']>;
  cmAppointmentsCustomImportHelper?: Maybe<CmAppointmentsCustomImportHelper>;
  cmAppointmentsCustomImportHelpers: Array<Maybe<CmAppointmentsCustomImportHelper>>;
  cmAppointmentsCustomImportHelpersCount?: Maybe<Scalars['Int']>;
  cmAuthorization?: Maybe<CmAuthorization>;
  cmAuthorizations: Array<Maybe<CmAuthorization>>;
  cmAuthorizationsCount?: Maybe<Scalars['Int']>;
  cmBookingNote?: Maybe<CmBookingNote>;
  cmBookingNotes: Array<Maybe<CmBookingNote>>;
  cmBookingNotesCount?: Maybe<Scalars['Int']>;
  cmCampaign?: Maybe<CmCampaign>;
  cmCampaignNote?: Maybe<CmCampaignNote>;
  cmCampaignNotes: Array<Maybe<CmCampaignNote>>;
  cmCampaignNotesCount?: Maybe<Scalars['Int']>;
  cmCampaigns: Array<Maybe<CmCampaign>>;
  cmCampaignsCount?: Maybe<Scalars['Int']>;
  cmCase?: Maybe<CmCase>;
  cmCaseNote?: Maybe<CmCaseNote>;
  cmCaseNotes: Array<Maybe<CmCaseNote>>;
  cmCaseNotesCount?: Maybe<Scalars['Int']>;
  cmCaseReplies: Array<Maybe<CmCaseReply>>;
  cmCaseRepliesCount?: Maybe<Scalars['Int']>;
  cmCaseReply?: Maybe<CmCaseReply>;
  cmCases: Array<Maybe<CmCase>>;
  cmCasesCount?: Maybe<Scalars['Int']>;
  cmContact?: Maybe<CmContact>;
  cmContacts: Array<Maybe<CmContact>>;
  cmContactsCount?: Maybe<Scalars['Int']>;
  /** fetch data from the table: "colors" */
  colors: Array<Colors>;
  /** fetch data from the table: "colors" using primary key columns */
  colors_by_pk?: Maybe<Colors>;
  companies: Array<Maybe<Company>>;
  companiesCount?: Maybe<Scalars['Int']>;
  company?: Maybe<Company>;
  companyDetails: Array<Maybe<CompanyDetails>>;
  companyDetailsCount?: Maybe<Scalars['Int']>;
  companySubscription?: Maybe<CompanySubscription>;
  companySubscriptions: Array<Maybe<CompanySubscription>>;
  companySubscriptionsCount?: Maybe<Scalars['Int']>;
  /** fetch data from the table: "contacts" */
  contacts: Array<Contacts>;
  /** fetch data from the table: "contacts" using primary key columns */
  contacts_by_pk?: Maybe<Contacts>;
  /** fetch data from the table: "courses" */
  courses: Array<Courses>;
  /** fetch data from the table: "courses" using primary key columns */
  courses_by_pk?: Maybe<Courses>;
  /** fetch data from the table: "credit_note_type" */
  credit_note_type: Array<Credit_Note_Type>;
  /** fetch aggregated fields from the table: "credit_note_type" */
  credit_note_type_aggregate: Credit_Note_Type_Aggregate;
  /** fetch data from the table: "credit_note_type" using primary key columns */
  credit_note_type_by_pk?: Maybe<Credit_Note_Type>;
  /** fetch data from the table: "credit_notes" */
  credit_notes: Array<Credit_Notes>;
  /** fetch aggregated fields from the table: "credit_notes" */
  credit_notes_aggregate: Credit_Notes_Aggregate;
  /** fetch data from the table: "credit_notes" using primary key columns */
  credit_notes_by_pk?: Maybe<Credit_Notes>;
  /** fetch data from the table: "custom_fields_categories" */
  custom_fields_categories: Array<Custom_Fields_Categories>;
  /** fetch aggregated fields from the table: "custom_fields_categories" */
  custom_fields_categories_aggregate: Custom_Fields_Categories_Aggregate;
  /** fetch data from the table: "custom_fields_categories" using primary key columns */
  custom_fields_categories_by_pk?: Maybe<Custom_Fields_Categories>;
  /** fetch data from the table: "debt" */
  debt: Array<Debt>;
  /** fetch aggregated fields from the table: "debt" */
  debt_aggregate: Debt_Aggregate;
  /** fetch data from the table: "debt" using primary key columns */
  debt_by_pk?: Maybe<Debt>;
  /** fetch data from the table: "departments" */
  departments: Array<Departments>;
  /** fetch aggregated fields from the table: "departments" */
  departments_aggregate: Departments_Aggregate;
  /** fetch data from the table: "departments" using primary key columns */
  departments_by_pk?: Maybe<Departments>;
  /** fetch data from the table: "diagnostic_codes" */
  diagnostic_codes: Array<Diagnostic_Codes>;
  /** fetch aggregated fields from the table: "diagnostic_codes" */
  diagnostic_codes_aggregate: Diagnostic_Codes_Aggregate;
  /** fetch data from the table: "diagnostic_codes" using primary key columns */
  diagnostic_codes_by_pk?: Maybe<Diagnostic_Codes>;
  /** fetch data from the table: "diagnostic_codeset" */
  diagnostic_codeset: Array<Diagnostic_Codeset>;
  /** fetch aggregated fields from the table: "diagnostic_codeset" */
  diagnostic_codeset_aggregate: Diagnostic_Codeset_Aggregate;
  /** fetch data from the table: "diagnostic_codeset" using primary key columns */
  diagnostic_codeset_by_pk?: Maybe<Diagnostic_Codeset>;
  /** fetch data from the table: "drugs" */
  drugs: Array<Drugs>;
  /** fetch aggregated fields from the table: "drugs" */
  drugs_aggregate: Drugs_Aggregate;
  /** fetch data from the table: "drugs" using primary key columns */
  drugs_by_pk?: Maybe<Drugs>;
  /** fetch data from the table: "family_relationships" */
  family_relationships: Array<Family_Relationships>;
  /** fetch aggregated fields from the table: "family_relationships" */
  family_relationships_aggregate: Family_Relationships_Aggregate;
  /** fetch data from the table: "family_relationships" using primary key columns */
  family_relationships_by_pk?: Maybe<Family_Relationships>;
  /** fetch data from the table: "feature_flags" */
  feature_flags: Array<Feature_Flags>;
  /** fetch data from the table: "feature_flags" using primary key columns */
  feature_flags_by_pk?: Maybe<Feature_Flags>;
  findFirstAcLog?: Maybe<AcLog>;
  findFirstAcLogAction?: Maybe<AcLogAction>;
  findFirstAcLogUrl?: Maybe<AcLogUrl>;
  findFirstAcceptEmailToken?: Maybe<AcceptEmailToken>;
  findFirstAccountBalance?: Maybe<AccountBalance>;
  findFirstAccountBalanceLog?: Maybe<AccountBalanceLog>;
  findFirstAccountManager?: Maybe<AccountManager>;
  findFirstAdvertCampaign?: Maybe<AdvertCampaign>;
  findFirstApiDebug?: Maybe<ApiDebug>;
  findFirstApiKey?: Maybe<ApiKey>;
  findFirstAppBeforeAfter?: Maybe<AppBeforeAfter>;
  findFirstAppPermission?: Maybe<AppPermission>;
  findFirstAppSubscription?: Maybe<AppSubscription>;
  findFirstAppSubscriptionsCompanyPrice?: Maybe<AppSubscriptionsCompanyPrice>;
  findFirstAtAnswer?: Maybe<AtAnswer>;
  findFirstAtConcern?: Maybe<AtConcern>;
  findFirstAtQuestion?: Maybe<AtQuestion>;
  findFirstAtQuestionsRelation?: Maybe<AtQuestionsRelation>;
  findFirstAtQuizTake?: Maybe<AtQuizTake>;
  findFirstAtSetting?: Maybe<AtSetting>;
  findFirstAtTreatment?: Maybe<AtTreatment>;
  findFirstAttachmentHelperLite?: Maybe<AttachmentHelperLite>;
  findFirstAutomationAction?: Maybe<AutomationAction>;
  findFirstAutomationDelay?: Maybe<AutomationDelay>;
  findFirstAutomationFolder?: Maybe<AutomationFolder>;
  findFirstAutomationLog?: Maybe<AutomationLog>;
  findFirstAutomationRule?: Maybe<AutomationRule>;
  findFirstAutomationTrigger?: Maybe<AutomationTrigger>;
  findFirstAvilableDatesLog?: Maybe<AvilableDatesLog>;
  findFirstBacsAccount?: Maybe<BacsAccount>;
  findFirstBatch?: Maybe<Batch>;
  findFirstBatchItem?: Maybe<BatchItem>;
  findFirstBlockReason?: Maybe<BlockReason>;
  findFirstBnfDrug?: Maybe<BnfDrug>;
  findFirstBodyChartTemplate?: Maybe<BodyChartTemplate>;
  findFirstBookingMaster?: Maybe<BookingMaster>;
  findFirstBookingSetting?: Maybe<BookingSetting>;
  findFirstBookingStatus?: Maybe<BookingStatus>;
  findFirstBookingStatusChange?: Maybe<BookingStatusChange>;
  findFirstBookitProGeneral?: Maybe<BookitProGeneral>;
  findFirstBookitProSlider?: Maybe<BookitProSlider>;
  findFirstBookmarkedPage?: Maybe<BookmarkedPage>;
  findFirstBugLog?: Maybe<BugLog>;
  findFirstCalRangeRequest?: Maybe<CalRangeRequest>;
  findFirstCalendarView?: Maybe<CalendarView>;
  findFirstCampaignAttachment?: Maybe<CampaignAttachment>;
  findFirstCancelReason?: Maybe<CancelReason>;
  findFirstCancellationPolicy?: Maybe<CancellationPolicy>;
  findFirstCandidate?: Maybe<Candidate>;
  findFirstCardType?: Maybe<CardType>;
  findFirstCashupReport?: Maybe<CashupReport>;
  findFirstCashupReportCustom?: Maybe<CashupReportCustom>;
  findFirstCheckinAppt?: Maybe<CheckinAppt>;
  findFirstCheckinAverages?: Maybe<CheckinAverages>;
  findFirstCheckinAveragesIdle?: Maybe<CheckinAveragesIdle>;
  findFirstCheckinProduct?: Maybe<CheckinProduct>;
  findFirstCheckinQueue?: Maybe<CheckinQueue>;
  findFirstClassCategory?: Maybe<ClassCategory>;
  findFirstClassGuests?: Maybe<ClassGuests>;
  findFirstClassMaster?: Maybe<ClassMaster>;
  findFirstClassNotes?: Maybe<ClassNotes>;
  findFirstClassProduct?: Maybe<ClassProduct>;
  findFirstClassSmsHistory?: Maybe<ClassSmsHistory>;
  findFirstClassTemplateSetting?: Maybe<ClassTemplateSetting>;
  findFirstClasstypeMaster?: Maybe<ClasstypeMaster>;
  findFirstCleverpinSetting?: Maybe<CleverpinSetting>;
  findFirstClientFormSetting?: Maybe<ClientFormSetting>;
  findFirstClinicalSoftware?: Maybe<ClinicalSoftware>;
  findFirstClockinBreak?: Maybe<ClockinBreak>;
  findFirstClockinLongpoll?: Maybe<ClockinLongpoll>;
  findFirstClockinTimesheet?: Maybe<ClockinTimesheet>;
  findFirstCmAccountNote?: Maybe<CmAccountNote>;
  findFirstCmAppointmentCustom?: Maybe<CmAppointmentCustom>;
  findFirstCmAppointmentsCustomImportHelper?: Maybe<CmAppointmentsCustomImportHelper>;
  findFirstCmAuthorization?: Maybe<CmAuthorization>;
  findFirstCmBookingNote?: Maybe<CmBookingNote>;
  findFirstCmCampaign?: Maybe<CmCampaign>;
  findFirstCmCampaignNote?: Maybe<CmCampaignNote>;
  findFirstCmCase?: Maybe<CmCase>;
  findFirstCmCaseNote?: Maybe<CmCaseNote>;
  findFirstCmCaseReply?: Maybe<CmCaseReply>;
  findFirstCmContact?: Maybe<CmContact>;
  findFirstCompany?: Maybe<Company>;
  findFirstCompanyDetails?: Maybe<CompanyDetails>;
  findFirstCompanySubscription?: Maybe<CompanySubscription>;
  findFirstGlCode?: Maybe<GlCode>;
  findFirstInvPaymentType?: Maybe<InvPaymentType>;
  findFirstMarketingSource?: Maybe<MarketingSource>;
  findFirstMediaLlibraryAttachment?: Maybe<MediaLlibraryAttachment>;
  findFirstSecondAtAnswer?: Maybe<SecondAtAnswer>;
  findFirstSecondAtQuestion?: Maybe<SecondAtQuestion>;
  findFirstThirdPartyAccess?: Maybe<ThirdPartyAccess>;
  findFirstTimezone?: Maybe<Timezone>;
  findFirstTwoFactorHistory?: Maybe<TwoFactorHistory>;
  findFirstUser?: Maybe<User>;
  findFirstUserSecurityQuestionsAnswer?: Maybe<UserSecurityQuestionsAnswer>;
  glCode?: Maybe<GlCode>;
  glCodes: Array<Maybe<GlCode>>;
  glCodesCount?: Maybe<Scalars['Int']>;
  invPaymentType?: Maybe<InvPaymentType>;
  invPaymentTypes: Array<Maybe<InvPaymentType>>;
  invPaymentTypesCount?: Maybe<Scalars['Int']>;
  /** fetch data from the table: "invoices" */
  invoices: Array<Invoices>;
  /** fetch aggregated fields from the table: "invoices" */
  invoices_aggregate: Invoices_Aggregate;
  /** fetch data from the table: "invoices" using primary key columns */
  invoices_by_pk?: Maybe<Invoices>;
  /** fetch data from the table: "issuing_company" */
  issuing_company: Array<Issuing_Company>;
  /** fetch aggregated fields from the table: "issuing_company" */
  issuing_company_aggregate: Issuing_Company_Aggregate;
  /** fetch data from the table: "issuing_company" using primary key columns */
  issuing_company_by_pk?: Maybe<Issuing_Company>;
  /** fetch data from the table: "job_candidates" */
  job_candidates: Array<Job_Candidates>;
  /** fetch data from the table: "job_candidates" using primary key columns */
  job_candidates_by_pk?: Maybe<Job_Candidates>;
  /** fetch data from the table: "job_openings" */
  job_openings: Array<Job_Openings>;
  /** fetch data from the table: "job_openings" using primary key columns */
  job_openings_by_pk?: Maybe<Job_Openings>;
  /** fetch data from the table: "job_title" */
  job_title: Array<Job_Title>;
  /** fetch aggregated fields from the table: "job_title" */
  job_title_aggregate: Job_Title_Aggregate;
  /** fetch data from the table: "job_title" using primary key columns */
  job_title_by_pk?: Maybe<Job_Title>;
  /** fetch data from the table: "labs_dashboard" */
  labs_dashboard: Array<Labs_Dashboard>;
  /** fetch aggregated fields from the table: "labs_dashboard" */
  labs_dashboard_aggregate: Labs_Dashboard_Aggregate;
  /** fetch data from the table: "labs_dashboard" using primary key columns */
  labs_dashboard_by_pk?: Maybe<Labs_Dashboard>;
  /** fetch data from the table: "lead" */
  lead: Array<Lead>;
  /** fetch data from the table: "lead" using primary key columns */
  lead_by_pk?: Maybe<Lead>;
  /** fetch data from the table: "lead_fields" */
  lead_fields: Array<Lead_Fields>;
  /** fetch aggregated fields from the table: "lead_fields" */
  lead_fields_aggregate: Lead_Fields_Aggregate;
  /** fetch data from the table: "lead_fields" using primary key columns */
  lead_fields_by_pk?: Maybe<Lead_Fields>;
  /** fetch data from the table: "library" */
  library: Array<Library>;
  /** fetch aggregated fields from the table: "library" */
  library_aggregate: Library_Aggregate;
  /** fetch data from the table: "library" using primary key columns */
  library_by_pk?: Maybe<Library>;
  /** fetch data from the table: "library_installers" */
  library_installers: Array<Library_Installers>;
  /** fetch aggregated fields from the table: "library_installers" */
  library_installers_aggregate: Library_Installers_Aggregate;
  /** fetch data from the table: "library_installers" using primary key columns */
  library_installers_by_pk?: Maybe<Library_Installers>;
  /** fetch data from the table: "locations" */
  locations: Array<Locations>;
  /** fetch aggregated fields from the table: "locations" */
  locations_aggregate: Locations_Aggregate;
  /** fetch data from the table: "locations" using primary key columns */
  locations_by_pk?: Maybe<Locations>;
  marketingSource?: Maybe<MarketingSource>;
  marketingSources: Array<Maybe<MarketingSource>>;
  marketingSourcesCount?: Maybe<Scalars['Int']>;
  /** fetch data from the table: "marketing_campaign" */
  marketing_campaign: Array<Marketing_Campaign>;
  /** fetch aggregated fields from the table: "marketing_campaign" */
  marketing_campaign_aggregate: Marketing_Campaign_Aggregate;
  /** fetch data from the table: "marketing_campaign" using primary key columns */
  marketing_campaign_by_pk?: Maybe<Marketing_Campaign>;
  /** fetch data from the table: "marketing_referral" */
  marketing_referral: Array<Marketing_Referral>;
  /** fetch aggregated fields from the table: "marketing_referral" */
  marketing_referral_aggregate: Marketing_Referral_Aggregate;
  /** fetch data from the table: "marketing_referral" using primary key columns */
  marketing_referral_by_pk?: Maybe<Marketing_Referral>;
  /** fetch data from the table: "marketing_source" */
  marketing_source: Array<Marketing_Source>;
  /** fetch aggregated fields from the table: "marketing_source" */
  marketing_source_aggregate: Marketing_Source_Aggregate;
  /** fetch data from the table: "marketing_source" using primary key columns */
  marketing_source_by_pk?: Maybe<Marketing_Source>;
  me?: Maybe<User>;
  mediaLlibraryAttachment?: Maybe<MediaLlibraryAttachment>;
  mediaLlibraryAttachments: Array<Maybe<MediaLlibraryAttachment>>;
  mediaLlibraryAttachmentsCount?: Maybe<Scalars['Int']>;
  /** fetch data from the table: "payment_types" */
  payment_types: Array<Payment_Types>;
  /** fetch aggregated fields from the table: "payment_types" */
  payment_types_aggregate: Payment_Types_Aggregate;
  /** fetch data from the table: "payment_types" using primary key columns */
  payment_types_by_pk?: Maybe<Payment_Types>;
  /** fetch data from the table: "payments" */
  payments: Array<Payments>;
  /** fetch aggregated fields from the table: "payments" */
  payments_aggregate: Payments_Aggregate;
  /** fetch data from the table: "payments" using primary key columns */
  payments_by_pk?: Maybe<Payments>;
  /** fetch data from the table: "petty_cash_types" */
  petty_cash_types: Array<Petty_Cash_Types>;
  /** fetch aggregated fields from the table: "petty_cash_types" */
  petty_cash_types_aggregate: Petty_Cash_Types_Aggregate;
  /** fetch data from the table: "petty_cash_types" using primary key columns */
  petty_cash_types_by_pk?: Maybe<Petty_Cash_Types>;
  ping?: Maybe<Scalars['String']>;
  /** fetch data from the table: "product_lists" */
  product_lists: Array<Product_Lists>;
  /** fetch aggregated fields from the table: "product_lists" */
  product_lists_aggregate: Product_Lists_Aggregate;
  /** fetch data from the table: "product_lists" using primary key columns */
  product_lists_by_pk?: Maybe<Product_Lists>;
  /** fetch data from the table: "prototype" */
  prototype: Array<Prototype>;
  /** fetch aggregated fields from the table: "prototype" */
  prototype_aggregate: Prototype_Aggregate;
  /** fetch data from the table: "prototype" using primary key columns */
  prototype_by_pk?: Maybe<Prototype>;
  /** fetch data from the table: "purchase_order" */
  purchase_order: Array<Purchase_Order>;
  /** fetch aggregated fields from the table: "purchase_order" */
  purchase_order_aggregate: Purchase_Order_Aggregate;
  /** fetch data from the table: "purchase_order" using primary key columns */
  purchase_order_by_pk?: Maybe<Purchase_Order>;
  /** fetch data from the table: "resources" */
  resources: Array<Resources>;
  /** fetch aggregated fields from the table: "resources" */
  resources_aggregate: Resources_Aggregate;
  /** fetch data from the table: "resources" using primary key columns */
  resources_by_pk?: Maybe<Resources>;
  /** fetch data from the table: "rooms" */
  rooms: Array<Rooms>;
  /** fetch aggregated fields from the table: "rooms" */
  rooms_aggregate: Rooms_Aggregate;
  /** fetch data from the table: "rooms" using primary key columns */
  rooms_by_pk?: Maybe<Rooms>;
  /** fetch data from the table: "rota_templates" */
  rota_templates: Array<Rota_Templates>;
  /** fetch aggregated fields from the table: "rota_templates" */
  rota_templates_aggregate: Rota_Templates_Aggregate;
  /** fetch data from the table: "rota_templates" using primary key columns */
  rota_templates_by_pk?: Maybe<Rota_Templates>;
  /** fetch data from the table: "salutation" */
  salutation: Array<Salutation>;
  /** fetch aggregated fields from the table: "salutation" */
  salutation_aggregate: Salutation_Aggregate;
  /** fetch data from the table: "salutation" using primary key columns */
  salutation_by_pk?: Maybe<Salutation>;
  secondAtAnswer?: Maybe<SecondAtAnswer>;
  secondAtAnswers: Array<Maybe<SecondAtAnswer>>;
  secondAtAnswersCount?: Maybe<Scalars['Int']>;
  secondAtQuestion?: Maybe<SecondAtQuestion>;
  secondAtQuestions: Array<Maybe<SecondAtQuestion>>;
  secondAtQuestionsCount?: Maybe<Scalars['Int']>;
  /** fetch data from the table: "stock_take" */
  stock_take: Array<Stock_Take>;
  /** fetch aggregated fields from the table: "stock_take" */
  stock_take_aggregate: Stock_Take_Aggregate;
  /** fetch data from the table: "stock_take" using primary key columns */
  stock_take_by_pk?: Maybe<Stock_Take>;
  /** fetch data from the table: "supplier" */
  supplier: Array<Supplier>;
  /** fetch aggregated fields from the table: "supplier" */
  supplier_aggregate: Supplier_Aggregate;
  /** fetch data from the table: "supplier" using primary key columns */
  supplier_by_pk?: Maybe<Supplier>;
  /** fetch data from the table: "tax_rates" */
  tax_rates: Array<Tax_Rates>;
  /** fetch aggregated fields from the table: "tax_rates" */
  tax_rates_aggregate: Tax_Rates_Aggregate;
  /** fetch data from the table: "tax_rates" using primary key columns */
  tax_rates_by_pk?: Maybe<Tax_Rates>;
  thirdPartyAccess?: Maybe<ThirdPartyAccess>;
  thirdPartyAccesses: Array<Maybe<ThirdPartyAccess>>;
  thirdPartyAccessesCount?: Maybe<Scalars['Int']>;
  /** fetch data from the table: "third_parties" */
  third_parties: Array<Third_Parties>;
  /** fetch aggregated fields from the table: "third_parties" */
  third_parties_aggregate: Third_Parties_Aggregate;
  /** fetch data from the table: "third_parties" using primary key columns */
  third_parties_by_pk?: Maybe<Third_Parties>;
  timezone?: Maybe<Timezone>;
  timezones: Array<Maybe<Timezone>>;
  timezonesCount?: Maybe<Scalars['Int']>;
  twoFactorHistories: Array<Maybe<TwoFactorHistory>>;
  twoFactorHistoriesCount?: Maybe<Scalars['Int']>;
  twoFactorHistory?: Maybe<TwoFactorHistory>;
  user?: Maybe<User>;
  userSecurityQuestionsAnswer?: Maybe<UserSecurityQuestionsAnswer>;
  userSecurityQuestionsAnswers: Array<Maybe<UserSecurityQuestionsAnswer>>;
  userSecurityQuestionsAnswersCount?: Maybe<Scalars['Int']>;
  users: Array<Maybe<User>>;
  usersCount?: Maybe<Scalars['Int']>;
};


export type Query_RootDiscountsArgs = {
  distinct_on?: Maybe<Array<Discounts_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Discounts_Order_By>>;
  where?: Maybe<Discounts_Bool_Exp>;
};


export type Query_RootDiscounts_AggregateArgs = {
  distinct_on?: Maybe<Array<Discounts_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Discounts_Order_By>>;
  where?: Maybe<Discounts_Bool_Exp>;
};


export type Query_RootDiscounts_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Query_RootLms_SlugsArgs = {
  distinct_on?: Maybe<Array<Lms_Slugs_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Lms_Slugs_Order_By>>;
  where?: Maybe<Lms_Slugs_Bool_Exp>;
};


export type Query_RootLms_Slugs_AggregateArgs = {
  distinct_on?: Maybe<Array<Lms_Slugs_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Lms_Slugs_Order_By>>;
  where?: Maybe<Lms_Slugs_Bool_Exp>;
};


export type Query_RootLms_Slugs_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Query_RootLabsArgs = {
  distinct_on?: Maybe<Array<Labs_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Labs_Order_By>>;
  where?: Maybe<Labs_Bool_Exp>;
};


export type Query_RootLabs_AggregateArgs = {
  distinct_on?: Maybe<Array<Labs_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Labs_Order_By>>;
  where?: Maybe<Labs_Bool_Exp>;
};


export type Query_RootLabs_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Query_RootLists_CampaignArgs = {
  distinct_on?: Maybe<Array<Lists_Campaign_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Lists_Campaign_Order_By>>;
  where?: Maybe<Lists_Campaign_Bool_Exp>;
};


export type Query_RootLists_Campaign_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Query_RootNewsletter_CampaignArgs = {
  distinct_on?: Maybe<Array<Newsletter_Campaign_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Newsletter_Campaign_Order_By>>;
  where?: Maybe<Newsletter_Campaign_Bool_Exp>;
};


export type Query_RootNewsletter_Campaign_AggregateArgs = {
  distinct_on?: Maybe<Array<Newsletter_Campaign_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Newsletter_Campaign_Order_By>>;
  where?: Maybe<Newsletter_Campaign_Bool_Exp>;
};


export type Query_RootNewsletter_Campaign_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Query_RootSms_CampaignArgs = {
  distinct_on?: Maybe<Array<Sms_Campaign_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sms_Campaign_Order_By>>;
  where?: Maybe<Sms_Campaign_Bool_Exp>;
};


export type Query_RootSms_Campaign_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Query_RootAcLogArgs = {
  where: AcLogWhereUniqueInput;
};


export type Query_RootAcLogActionArgs = {
  where: AcLogActionWhereUniqueInput;
};


export type Query_RootAcLogActionsArgs = {
  cursor?: Maybe<AcLogActionWhereUniqueInput>;
  orderBy?: Maybe<Array<AcLogActionOrderByInput>>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<AcLogActionWhereInput>;
};


export type Query_RootAcLogActionsCountArgs = {
  where?: Maybe<AcLogActionWhereInput>;
};


export type Query_RootAcLogUrlArgs = {
  where: AcLogUrlWhereUniqueInput;
};


export type Query_RootAcLogUrlsArgs = {
  cursor?: Maybe<AcLogUrlWhereUniqueInput>;
  orderBy?: Maybe<Array<AcLogUrlOrderByInput>>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<AcLogUrlWhereInput>;
};


export type Query_RootAcLogUrlsCountArgs = {
  where?: Maybe<AcLogUrlWhereInput>;
};


export type Query_RootAcLogsArgs = {
  cursor?: Maybe<AcLogWhereUniqueInput>;
  orderBy?: Maybe<Array<AcLogOrderByInput>>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<AcLogWhereInput>;
};


export type Query_RootAcLogsCountArgs = {
  where?: Maybe<AcLogWhereInput>;
};


export type Query_RootAcceptEmailTokenArgs = {
  where: AcceptEmailTokenWhereUniqueInput;
};


export type Query_RootAcceptEmailTokensArgs = {
  cursor?: Maybe<AcceptEmailTokenWhereUniqueInput>;
  orderBy?: Maybe<Array<AcceptEmailTokenOrderByInput>>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<AcceptEmailTokenWhereInput>;
};


export type Query_RootAcceptEmailTokensCountArgs = {
  where?: Maybe<AcceptEmailTokenWhereInput>;
};


export type Query_RootAccountBalanceArgs = {
  where: AccountBalanceWhereUniqueInput;
};


export type Query_RootAccountBalanceLogArgs = {
  where: AccountBalanceLogWhereUniqueInput;
};


export type Query_RootAccountBalanceLogsArgs = {
  cursor?: Maybe<AccountBalanceLogWhereUniqueInput>;
  orderBy?: Maybe<Array<AccountBalanceLogOrderByInput>>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<AccountBalanceLogWhereInput>;
};


export type Query_RootAccountBalanceLogsCountArgs = {
  where?: Maybe<AccountBalanceLogWhereInput>;
};


export type Query_RootAccountBalancesArgs = {
  cursor?: Maybe<AccountBalanceWhereUniqueInput>;
  orderBy?: Maybe<Array<AccountBalanceOrderByInput>>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<AccountBalanceWhereInput>;
};


export type Query_RootAccountBalancesCountArgs = {
  where?: Maybe<AccountBalanceWhereInput>;
};


export type Query_RootAccountManagerArgs = {
  where: AccountManagerWhereUniqueInput;
};


export type Query_RootAccountManagersArgs = {
  cursor?: Maybe<AccountManagerWhereUniqueInput>;
  orderBy?: Maybe<Array<AccountManagerOrderByInput>>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<AccountManagerWhereInput>;
};


export type Query_RootAccountManagersCountArgs = {
  where?: Maybe<AccountManagerWhereInput>;
};


export type Query_RootAdvertCampaignArgs = {
  where: AdvertCampaignWhereUniqueInput;
};


export type Query_RootAdvertCampaignsArgs = {
  cursor?: Maybe<AdvertCampaignWhereUniqueInput>;
  orderBy?: Maybe<Array<AdvertCampaignOrderByInput>>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<AdvertCampaignWhereInput>;
};


export type Query_RootAdvertCampaignsCountArgs = {
  where?: Maybe<AdvertCampaignWhereInput>;
};


export type Query_RootApiDebugArgs = {
  where: ApiDebugWhereUniqueInput;
};


export type Query_RootApiDebugsArgs = {
  cursor?: Maybe<ApiDebugWhereUniqueInput>;
  orderBy?: Maybe<Array<ApiDebugOrderByInput>>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<ApiDebugWhereInput>;
};


export type Query_RootApiDebugsCountArgs = {
  where?: Maybe<ApiDebugWhereInput>;
};


export type Query_RootApiKeyArgs = {
  where: ApiKeyWhereUniqueInput;
};


export type Query_RootApiKeysArgs = {
  cursor?: Maybe<ApiKeyWhereUniqueInput>;
  orderBy?: Maybe<Array<ApiKeyOrderByInput>>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<ApiKeyWhereInput>;
};


export type Query_RootApiKeysCountArgs = {
  where?: Maybe<ApiKeyWhereInput>;
};


export type Query_RootAppBeforeAfterArgs = {
  where: AppBeforeAfterWhereUniqueInput;
};


export type Query_RootAppBeforeAftersArgs = {
  cursor?: Maybe<AppBeforeAfterWhereUniqueInput>;
  orderBy?: Maybe<Array<AppBeforeAfterOrderByInput>>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<AppBeforeAfterWhereInput>;
};


export type Query_RootAppBeforeAftersCountArgs = {
  where?: Maybe<AppBeforeAfterWhereInput>;
};


export type Query_RootAppPermissionArgs = {
  where: AppPermissionWhereUniqueInput;
};


export type Query_RootAppPermissionsArgs = {
  cursor?: Maybe<AppPermissionWhereUniqueInput>;
  orderBy?: Maybe<Array<AppPermissionOrderByInput>>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<AppPermissionWhereInput>;
};


export type Query_RootAppPermissionsCountArgs = {
  where?: Maybe<AppPermissionWhereInput>;
};


export type Query_RootAppSubscriptionArgs = {
  where: AppSubscriptionWhereUniqueInput;
};


export type Query_RootAppSubscriptionsArgs = {
  cursor?: Maybe<AppSubscriptionWhereUniqueInput>;
  orderBy?: Maybe<Array<AppSubscriptionOrderByInput>>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<AppSubscriptionWhereInput>;
};


export type Query_RootAppSubscriptionsCompanyPriceArgs = {
  where: AppSubscriptionsCompanyPriceWhereUniqueInput;
};


export type Query_RootAppSubscriptionsCompanyPricesArgs = {
  cursor?: Maybe<AppSubscriptionsCompanyPriceWhereUniqueInput>;
  orderBy?: Maybe<Array<AppSubscriptionsCompanyPriceOrderByInput>>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<AppSubscriptionsCompanyPriceWhereInput>;
};


export type Query_RootAppSubscriptionsCompanyPricesCountArgs = {
  where?: Maybe<AppSubscriptionsCompanyPriceWhereInput>;
};


export type Query_RootAppSubscriptionsCountArgs = {
  where?: Maybe<AppSubscriptionWhereInput>;
};


export type Query_RootAppointment_StatusArgs = {
  distinct_on?: Maybe<Array<Appointment_Status_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Appointment_Status_Order_By>>;
  where?: Maybe<Appointment_Status_Bool_Exp>;
};


export type Query_RootAppointment_Status_AggregateArgs = {
  distinct_on?: Maybe<Array<Appointment_Status_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Appointment_Status_Order_By>>;
  where?: Maybe<Appointment_Status_Bool_Exp>;
};


export type Query_RootAppointment_Status_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Query_RootAtAnswerArgs = {
  where: AtAnswerWhereUniqueInput;
};


export type Query_RootAtAnswersArgs = {
  cursor?: Maybe<AtAnswerWhereUniqueInput>;
  orderBy?: Maybe<Array<AtAnswerOrderByInput>>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<AtAnswerWhereInput>;
};


export type Query_RootAtAnswersCountArgs = {
  where?: Maybe<AtAnswerWhereInput>;
};


export type Query_RootAtConcernArgs = {
  where: AtConcernWhereUniqueInput;
};


export type Query_RootAtConcernsArgs = {
  cursor?: Maybe<AtConcernWhereUniqueInput>;
  orderBy?: Maybe<Array<AtConcernOrderByInput>>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<AtConcernWhereInput>;
};


export type Query_RootAtConcernsCountArgs = {
  where?: Maybe<AtConcernWhereInput>;
};


export type Query_RootAtQuestionArgs = {
  where: AtQuestionWhereUniqueInput;
};


export type Query_RootAtQuestionsArgs = {
  cursor?: Maybe<AtQuestionWhereUniqueInput>;
  orderBy?: Maybe<Array<AtQuestionOrderByInput>>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<AtQuestionWhereInput>;
};


export type Query_RootAtQuestionsCountArgs = {
  where?: Maybe<AtQuestionWhereInput>;
};


export type Query_RootAtQuestionsRelationArgs = {
  where: AtQuestionsRelationWhereUniqueInput;
};


export type Query_RootAtQuestionsRelationsArgs = {
  cursor?: Maybe<AtQuestionsRelationWhereUniqueInput>;
  orderBy?: Maybe<Array<AtQuestionsRelationOrderByInput>>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<AtQuestionsRelationWhereInput>;
};


export type Query_RootAtQuestionsRelationsCountArgs = {
  where?: Maybe<AtQuestionsRelationWhereInput>;
};


export type Query_RootAtQuizTakeArgs = {
  where: AtQuizTakeWhereUniqueInput;
};


export type Query_RootAtQuizTakesArgs = {
  cursor?: Maybe<AtQuizTakeWhereUniqueInput>;
  orderBy?: Maybe<Array<AtQuizTakeOrderByInput>>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<AtQuizTakeWhereInput>;
};


export type Query_RootAtQuizTakesCountArgs = {
  where?: Maybe<AtQuizTakeWhereInput>;
};


export type Query_RootAtSettingArgs = {
  where: AtSettingWhereUniqueInput;
};


export type Query_RootAtSettingsArgs = {
  cursor?: Maybe<AtSettingWhereUniqueInput>;
  orderBy?: Maybe<Array<AtSettingOrderByInput>>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<AtSettingWhereInput>;
};


export type Query_RootAtSettingsCountArgs = {
  where?: Maybe<AtSettingWhereInput>;
};


export type Query_RootAtTreatmentArgs = {
  where: AtTreatmentWhereUniqueInput;
};


export type Query_RootAtTreatmentsArgs = {
  cursor?: Maybe<AtTreatmentWhereUniqueInput>;
  orderBy?: Maybe<Array<AtTreatmentOrderByInput>>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<AtTreatmentWhereInput>;
};


export type Query_RootAtTreatmentsCountArgs = {
  where?: Maybe<AtTreatmentWhereInput>;
};


export type Query_RootAttachmentHelperLiteArgs = {
  where: AttachmentHelperLiteWhereUniqueInput;
};


export type Query_RootAttachmentHelperLitesArgs = {
  cursor?: Maybe<AttachmentHelperLiteWhereUniqueInput>;
  orderBy?: Maybe<Array<AttachmentHelperLiteOrderByInput>>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<AttachmentHelperLiteWhereInput>;
};


export type Query_RootAttachmentHelperLitesCountArgs = {
  where?: Maybe<AttachmentHelperLiteWhereInput>;
};


export type Query_RootAutomationActionArgs = {
  where: AutomationActionWhereUniqueInput;
};


export type Query_RootAutomationActionsArgs = {
  cursor?: Maybe<AutomationActionWhereUniqueInput>;
  orderBy?: Maybe<Array<AutomationActionOrderByInput>>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<AutomationActionWhereInput>;
};


export type Query_RootAutomationActionsCountArgs = {
  where?: Maybe<AutomationActionWhereInput>;
};


export type Query_RootAutomationDelayArgs = {
  where: AutomationDelayWhereUniqueInput;
};


export type Query_RootAutomationDelaysArgs = {
  cursor?: Maybe<AutomationDelayWhereUniqueInput>;
  orderBy?: Maybe<Array<AutomationDelayOrderByInput>>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<AutomationDelayWhereInput>;
};


export type Query_RootAutomationDelaysCountArgs = {
  where?: Maybe<AutomationDelayWhereInput>;
};


export type Query_RootAutomationFolderArgs = {
  where: AutomationFolderWhereUniqueInput;
};


export type Query_RootAutomationFoldersArgs = {
  cursor?: Maybe<AutomationFolderWhereUniqueInput>;
  orderBy?: Maybe<Array<AutomationFolderOrderByInput>>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<AutomationFolderWhereInput>;
};


export type Query_RootAutomationFoldersCountArgs = {
  where?: Maybe<AutomationFolderWhereInput>;
};


export type Query_RootAutomationLogArgs = {
  where: AutomationLogWhereUniqueInput;
};


export type Query_RootAutomationLogsArgs = {
  cursor?: Maybe<AutomationLogWhereUniqueInput>;
  orderBy?: Maybe<Array<AutomationLogOrderByInput>>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<AutomationLogWhereInput>;
};


export type Query_RootAutomationLogsCountArgs = {
  where?: Maybe<AutomationLogWhereInput>;
};


export type Query_RootAutomationRuleArgs = {
  where: AutomationRuleWhereUniqueInput;
};


export type Query_RootAutomationRulesArgs = {
  cursor?: Maybe<AutomationRuleWhereUniqueInput>;
  orderBy?: Maybe<Array<AutomationRuleOrderByInput>>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<AutomationRuleWhereInput>;
};


export type Query_RootAutomationRulesCountArgs = {
  where?: Maybe<AutomationRuleWhereInput>;
};


export type Query_RootAutomationTriggerArgs = {
  where: AutomationTriggerWhereUniqueInput;
};


export type Query_RootAutomationTriggersArgs = {
  cursor?: Maybe<AutomationTriggerWhereUniqueInput>;
  orderBy?: Maybe<Array<AutomationTriggerOrderByInput>>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<AutomationTriggerWhereInput>;
};


export type Query_RootAutomationTriggersCountArgs = {
  where?: Maybe<AutomationTriggerWhereInput>;
};


export type Query_RootAvilableDatesLogArgs = {
  where: AvilableDatesLogWhereUniqueInput;
};


export type Query_RootAvilableDatesLogsArgs = {
  cursor?: Maybe<AvilableDatesLogWhereUniqueInput>;
  orderBy?: Maybe<Array<AvilableDatesLogOrderByInput>>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<AvilableDatesLogWhereInput>;
};


export type Query_RootAvilableDatesLogsCountArgs = {
  where?: Maybe<AvilableDatesLogWhereInput>;
};


export type Query_RootBacsAccountArgs = {
  where: BacsAccountWhereUniqueInput;
};


export type Query_RootBacsAccountsArgs = {
  cursor?: Maybe<BacsAccountWhereUniqueInput>;
  orderBy?: Maybe<Array<BacsAccountOrderByInput>>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<BacsAccountWhereInput>;
};


export type Query_RootBacsAccountsCountArgs = {
  where?: Maybe<BacsAccountWhereInput>;
};


export type Query_RootBatchArgs = {
  where: BatchWhereUniqueInput;
};


export type Query_RootBatchItemArgs = {
  where: BatchItemWhereUniqueInput;
};


export type Query_RootBatchItemsArgs = {
  cursor?: Maybe<BatchItemWhereUniqueInput>;
  orderBy?: Maybe<Array<BatchItemOrderByInput>>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<BatchItemWhereInput>;
};


export type Query_RootBatchItemsCountArgs = {
  where?: Maybe<BatchItemWhereInput>;
};


export type Query_RootBatchesArgs = {
  cursor?: Maybe<BatchWhereUniqueInput>;
  orderBy?: Maybe<Array<BatchOrderByInput>>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<BatchWhereInput>;
};


export type Query_RootBatchesCountArgs = {
  where?: Maybe<BatchWhereInput>;
};


export type Query_RootBlockReasonArgs = {
  where: BlockReasonWhereUniqueInput;
};


export type Query_RootBlockReasonsArgs = {
  cursor?: Maybe<BlockReasonWhereUniqueInput>;
  orderBy?: Maybe<Array<BlockReasonOrderByInput>>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<BlockReasonWhereInput>;
};


export type Query_RootBlockReasonsCountArgs = {
  where?: Maybe<BlockReasonWhereInput>;
};


export type Query_RootBlock_Out_OptionsArgs = {
  distinct_on?: Maybe<Array<Block_Out_Options_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Block_Out_Options_Order_By>>;
  where?: Maybe<Block_Out_Options_Bool_Exp>;
};


export type Query_RootBlock_Out_Options_AggregateArgs = {
  distinct_on?: Maybe<Array<Block_Out_Options_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Block_Out_Options_Order_By>>;
  where?: Maybe<Block_Out_Options_Bool_Exp>;
};


export type Query_RootBlock_Out_Options_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Query_RootBnfDrugArgs = {
  where: BnfDrugWhereUniqueInput;
};


export type Query_RootBnfDrugsArgs = {
  cursor?: Maybe<BnfDrugWhereUniqueInput>;
  orderBy?: Maybe<Array<BnfDrugOrderByInput>>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<BnfDrugWhereInput>;
};


export type Query_RootBnfDrugsCountArgs = {
  where?: Maybe<BnfDrugWhereInput>;
};


export type Query_RootBodyChartTemplateArgs = {
  where: BodyChartTemplateWhereUniqueInput;
};


export type Query_RootBodyChartTemplatesArgs = {
  cursor?: Maybe<BodyChartTemplateWhereUniqueInput>;
  orderBy?: Maybe<Array<BodyChartTemplateOrderByInput>>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<BodyChartTemplateWhereInput>;
};


export type Query_RootBodyChartTemplatesCountArgs = {
  where?: Maybe<BodyChartTemplateWhereInput>;
};


export type Query_RootBookingMasterArgs = {
  where: BookingMasterWhereUniqueInput;
};


export type Query_RootBookingMastersArgs = {
  cursor?: Maybe<BookingMasterWhereUniqueInput>;
  orderBy?: Maybe<Array<BookingMasterOrderByInput>>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<BookingMasterWhereInput>;
};


export type Query_RootBookingMastersCountArgs = {
  where?: Maybe<BookingMasterWhereInput>;
};


export type Query_RootBookingSettingArgs = {
  where: BookingSettingWhereUniqueInput;
};


export type Query_RootBookingSettingsArgs = {
  cursor?: Maybe<BookingSettingWhereUniqueInput>;
  orderBy?: Maybe<Array<BookingSettingOrderByInput>>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<BookingSettingWhereInput>;
};


export type Query_RootBookingSettingsCountArgs = {
  where?: Maybe<BookingSettingWhereInput>;
};


export type Query_RootBookingStatusArgs = {
  where: BookingStatusWhereUniqueInput;
};


export type Query_RootBookingStatusChangeArgs = {
  where: BookingStatusChangeWhereUniqueInput;
};


export type Query_RootBookingStatusChangesArgs = {
  cursor?: Maybe<BookingStatusChangeWhereUniqueInput>;
  orderBy?: Maybe<Array<BookingStatusChangeOrderByInput>>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<BookingStatusChangeWhereInput>;
};


export type Query_RootBookingStatusChangesCountArgs = {
  where?: Maybe<BookingStatusChangeWhereInput>;
};


export type Query_RootBookingStatusesArgs = {
  cursor?: Maybe<BookingStatusWhereUniqueInput>;
  orderBy?: Maybe<Array<BookingStatusOrderByInput>>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<BookingStatusWhereInput>;
};


export type Query_RootBookingStatusesCountArgs = {
  where?: Maybe<BookingStatusWhereInput>;
};


export type Query_RootBookitProGeneralArgs = {
  where: BookitProGeneralWhereUniqueInput;
};


export type Query_RootBookitProGeneralsArgs = {
  cursor?: Maybe<BookitProGeneralWhereUniqueInput>;
  orderBy?: Maybe<Array<BookitProGeneralOrderByInput>>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<BookitProGeneralWhereInput>;
};


export type Query_RootBookitProGeneralsCountArgs = {
  where?: Maybe<BookitProGeneralWhereInput>;
};


export type Query_RootBookitProSliderArgs = {
  where: BookitProSliderWhereUniqueInput;
};


export type Query_RootBookitProSlidersArgs = {
  cursor?: Maybe<BookitProSliderWhereUniqueInput>;
  orderBy?: Maybe<Array<BookitProSliderOrderByInput>>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<BookitProSliderWhereInput>;
};


export type Query_RootBookitProSlidersCountArgs = {
  where?: Maybe<BookitProSliderWhereInput>;
};


export type Query_RootBookmarkedPageArgs = {
  where: BookmarkedPageWhereUniqueInput;
};


export type Query_RootBookmarkedPagesArgs = {
  cursor?: Maybe<BookmarkedPageWhereUniqueInput>;
  orderBy?: Maybe<Array<BookmarkedPageOrderByInput>>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<BookmarkedPageWhereInput>;
};


export type Query_RootBookmarkedPagesCountArgs = {
  where?: Maybe<BookmarkedPageWhereInput>;
};


export type Query_RootBugLogArgs = {
  where: BugLogWhereUniqueInput;
};


export type Query_RootBugLogsArgs = {
  cursor?: Maybe<BugLogWhereUniqueInput>;
  orderBy?: Maybe<Array<BugLogOrderByInput>>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<BugLogWhereInput>;
};


export type Query_RootBugLogsCountArgs = {
  where?: Maybe<BugLogWhereInput>;
};


export type Query_RootBusiness_DetailsArgs = {
  distinct_on?: Maybe<Array<Business_Details_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Business_Details_Order_By>>;
  where?: Maybe<Business_Details_Bool_Exp>;
};


export type Query_RootBusiness_Details_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootCalRangeRequestArgs = {
  where: CalRangeRequestWhereUniqueInput;
};


export type Query_RootCalRangeRequestsArgs = {
  cursor?: Maybe<CalRangeRequestWhereUniqueInput>;
  orderBy?: Maybe<Array<CalRangeRequestOrderByInput>>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<CalRangeRequestWhereInput>;
};


export type Query_RootCalRangeRequestsCountArgs = {
  where?: Maybe<CalRangeRequestWhereInput>;
};


export type Query_RootCalendarViewArgs = {
  where: CalendarViewWhereUniqueInput;
};


export type Query_RootCalendarViewsArgs = {
  cursor?: Maybe<CalendarViewWhereUniqueInput>;
  orderBy?: Maybe<Array<CalendarViewOrderByInput>>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<CalendarViewWhereInput>;
};


export type Query_RootCalendarViewsCountArgs = {
  where?: Maybe<CalendarViewWhereInput>;
};


export type Query_RootCalendar_SettingsArgs = {
  distinct_on?: Maybe<Array<Calendar_Settings_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Calendar_Settings_Order_By>>;
  where?: Maybe<Calendar_Settings_Bool_Exp>;
};


export type Query_RootCalendar_Settings_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Query_RootCampaignAttachmentArgs = {
  where: CampaignAttachmentWhereUniqueInput;
};


export type Query_RootCampaignAttachmentsArgs = {
  cursor?: Maybe<CampaignAttachmentWhereUniqueInput>;
  orderBy?: Maybe<Array<CampaignAttachmentOrderByInput>>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<CampaignAttachmentWhereInput>;
};


export type Query_RootCampaignAttachmentsCountArgs = {
  where?: Maybe<CampaignAttachmentWhereInput>;
};


export type Query_RootCancelReasonArgs = {
  where: CancelReasonWhereUniqueInput;
};


export type Query_RootCancelReasonsArgs = {
  cursor?: Maybe<CancelReasonWhereUniqueInput>;
  orderBy?: Maybe<Array<CancelReasonOrderByInput>>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<CancelReasonWhereInput>;
};


export type Query_RootCancelReasonsCountArgs = {
  where?: Maybe<CancelReasonWhereInput>;
};


export type Query_RootCancellationPoliciesArgs = {
  cursor?: Maybe<CancellationPolicyWhereUniqueInput>;
  orderBy?: Maybe<Array<CancellationPolicyOrderByInput>>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<CancellationPolicyWhereInput>;
};


export type Query_RootCancellationPoliciesCountArgs = {
  where?: Maybe<CancellationPolicyWhereInput>;
};


export type Query_RootCancellationPolicyArgs = {
  where: CancellationPolicyWhereUniqueInput;
};


export type Query_RootCancellation_ReasonsArgs = {
  distinct_on?: Maybe<Array<Cancellation_Reasons_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Cancellation_Reasons_Order_By>>;
  where?: Maybe<Cancellation_Reasons_Bool_Exp>;
};


export type Query_RootCancellation_Reasons_AggregateArgs = {
  distinct_on?: Maybe<Array<Cancellation_Reasons_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Cancellation_Reasons_Order_By>>;
  where?: Maybe<Cancellation_Reasons_Bool_Exp>;
};


export type Query_RootCancellation_Reasons_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Query_RootCandidateArgs = {
  where: CandidateWhereUniqueInput;
};


export type Query_RootCandidate_ListArgs = {
  distinct_on?: Maybe<Array<Candidate_List_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Candidate_List_Order_By>>;
  where?: Maybe<Candidate_List_Bool_Exp>;
};


export type Query_RootCandidate_List_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootCandidatesArgs = {
  cursor?: Maybe<CandidateWhereUniqueInput>;
  orderBy?: Maybe<Array<CandidateOrderByInput>>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<CandidateWhereInput>;
};


export type Query_RootCandidatesCountArgs = {
  where?: Maybe<CandidateWhereInput>;
};


export type Query_RootCardTypeArgs = {
  where: CardTypeWhereUniqueInput;
};


export type Query_RootCardTypesArgs = {
  cursor?: Maybe<CardTypeWhereUniqueInput>;
  orderBy?: Maybe<Array<CardTypeOrderByInput>>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<CardTypeWhereInput>;
};


export type Query_RootCardTypesCountArgs = {
  where?: Maybe<CardTypeWhereInput>;
};


export type Query_RootCashupReportArgs = {
  where: CashupReportWhereUniqueInput;
};


export type Query_RootCashupReportCustomArgs = {
  where: CashupReportCustomWhereUniqueInput;
};


export type Query_RootCashupReportCustomsArgs = {
  cursor?: Maybe<CashupReportCustomWhereUniqueInput>;
  orderBy?: Maybe<Array<CashupReportCustomOrderByInput>>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<CashupReportCustomWhereInput>;
};


export type Query_RootCashupReportCustomsCountArgs = {
  where?: Maybe<CashupReportCustomWhereInput>;
};


export type Query_RootCashupReportsArgs = {
  cursor?: Maybe<CashupReportWhereUniqueInput>;
  orderBy?: Maybe<Array<CashupReportOrderByInput>>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<CashupReportWhereInput>;
};


export type Query_RootCashupReportsCountArgs = {
  where?: Maybe<CashupReportWhereInput>;
};


export type Query_RootCategoryArgs = {
  distinct_on?: Maybe<Array<Category_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Category_Order_By>>;
  where?: Maybe<Category_Bool_Exp>;
};


export type Query_RootCategory_AggregateArgs = {
  distinct_on?: Maybe<Array<Category_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Category_Order_By>>;
  where?: Maybe<Category_Bool_Exp>;
};


export type Query_RootCategory_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Query_RootCheckinApptArgs = {
  where: CheckinApptWhereUniqueInput;
};


export type Query_RootCheckinApptsArgs = {
  cursor?: Maybe<CheckinApptWhereUniqueInput>;
  orderBy?: Maybe<Array<CheckinApptOrderByInput>>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<CheckinApptWhereInput>;
};


export type Query_RootCheckinApptsCountArgs = {
  where?: Maybe<CheckinApptWhereInput>;
};


export type Query_RootCheckinAveragesArgs = {
  cursor?: Maybe<CheckinAveragesWhereUniqueInput>;
  orderBy?: Maybe<Array<CheckinAveragesOrderByInput>>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<CheckinAveragesWhereInput>;
};


export type Query_RootCheckinAveragesCountArgs = {
  where?: Maybe<CheckinAveragesWhereInput>;
};


export type Query_RootCheckinAveragesIdleArgs = {
  where: CheckinAveragesIdleWhereUniqueInput;
};


export type Query_RootCheckinAveragesIdlesArgs = {
  cursor?: Maybe<CheckinAveragesIdleWhereUniqueInput>;
  orderBy?: Maybe<Array<CheckinAveragesIdleOrderByInput>>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<CheckinAveragesIdleWhereInput>;
};


export type Query_RootCheckinAveragesIdlesCountArgs = {
  where?: Maybe<CheckinAveragesIdleWhereInput>;
};


export type Query_RootCheckinProductArgs = {
  where: CheckinProductWhereUniqueInput;
};


export type Query_RootCheckinProductsArgs = {
  cursor?: Maybe<CheckinProductWhereUniqueInput>;
  orderBy?: Maybe<Array<CheckinProductOrderByInput>>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<CheckinProductWhereInput>;
};


export type Query_RootCheckinProductsCountArgs = {
  where?: Maybe<CheckinProductWhereInput>;
};


export type Query_RootCheckinQueueArgs = {
  where: CheckinQueueWhereUniqueInput;
};


export type Query_RootCheckinQueuesArgs = {
  cursor?: Maybe<CheckinQueueWhereUniqueInput>;
  orderBy?: Maybe<Array<CheckinQueueOrderByInput>>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<CheckinQueueWhereInput>;
};


export type Query_RootCheckinQueuesCountArgs = {
  where?: Maybe<CheckinQueueWhereInput>;
};


export type Query_RootClassCategoriesArgs = {
  cursor?: Maybe<ClassCategoryWhereUniqueInput>;
  orderBy?: Maybe<Array<ClassCategoryOrderByInput>>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<ClassCategoryWhereInput>;
};


export type Query_RootClassCategoriesCountArgs = {
  where?: Maybe<ClassCategoryWhereInput>;
};


export type Query_RootClassCategoryArgs = {
  where: ClassCategoryWhereUniqueInput;
};


export type Query_RootClassGuestsArgs = {
  cursor?: Maybe<ClassGuestsWhereUniqueInput>;
  orderBy?: Maybe<Array<ClassGuestsOrderByInput>>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<ClassGuestsWhereInput>;
};


export type Query_RootClassGuestsCountArgs = {
  where?: Maybe<ClassGuestsWhereInput>;
};


export type Query_RootClassMasterArgs = {
  where: ClassMasterWhereUniqueInput;
};


export type Query_RootClassMastersArgs = {
  cursor?: Maybe<ClassMasterWhereUniqueInput>;
  orderBy?: Maybe<Array<ClassMasterOrderByInput>>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<ClassMasterWhereInput>;
};


export type Query_RootClassMastersCountArgs = {
  where?: Maybe<ClassMasterWhereInput>;
};


export type Query_RootClassNotesArgs = {
  cursor?: Maybe<ClassNotesWhereUniqueInput>;
  orderBy?: Maybe<Array<ClassNotesOrderByInput>>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<ClassNotesWhereInput>;
};


export type Query_RootClassNotesCountArgs = {
  where?: Maybe<ClassNotesWhereInput>;
};


export type Query_RootClassProductArgs = {
  where: ClassProductWhereUniqueInput;
};


export type Query_RootClassProductsArgs = {
  cursor?: Maybe<ClassProductWhereUniqueInput>;
  orderBy?: Maybe<Array<ClassProductOrderByInput>>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<ClassProductWhereInput>;
};


export type Query_RootClassProductsCountArgs = {
  where?: Maybe<ClassProductWhereInput>;
};


export type Query_RootClassSmsHistoriesArgs = {
  cursor?: Maybe<ClassSmsHistoryWhereUniqueInput>;
  orderBy?: Maybe<Array<ClassSmsHistoryOrderByInput>>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<ClassSmsHistoryWhereInput>;
};


export type Query_RootClassSmsHistoriesCountArgs = {
  where?: Maybe<ClassSmsHistoryWhereInput>;
};


export type Query_RootClassSmsHistoryArgs = {
  where: ClassSmsHistoryWhereUniqueInput;
};


export type Query_RootClassTemplateSettingArgs = {
  where: ClassTemplateSettingWhereUniqueInput;
};


export type Query_RootClassTemplateSettingsArgs = {
  cursor?: Maybe<ClassTemplateSettingWhereUniqueInput>;
  orderBy?: Maybe<Array<ClassTemplateSettingOrderByInput>>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<ClassTemplateSettingWhereInput>;
};


export type Query_RootClassTemplateSettingsCountArgs = {
  where?: Maybe<ClassTemplateSettingWhereInput>;
};


export type Query_RootClasstypeMasterArgs = {
  where: ClasstypeMasterWhereUniqueInput;
};


export type Query_RootClasstypeMastersArgs = {
  cursor?: Maybe<ClasstypeMasterWhereUniqueInput>;
  orderBy?: Maybe<Array<ClasstypeMasterOrderByInput>>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<ClasstypeMasterWhereInput>;
};


export type Query_RootClasstypeMastersCountArgs = {
  where?: Maybe<ClasstypeMasterWhereInput>;
};


export type Query_RootCleverpinSettingArgs = {
  where: CleverpinSettingWhereUniqueInput;
};


export type Query_RootCleverpinSettingsArgs = {
  cursor?: Maybe<CleverpinSettingWhereUniqueInput>;
  orderBy?: Maybe<Array<CleverpinSettingOrderByInput>>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<CleverpinSettingWhereInput>;
};


export type Query_RootCleverpinSettingsCountArgs = {
  where?: Maybe<CleverpinSettingWhereInput>;
};


export type Query_RootClientFormSettingArgs = {
  where: ClientFormSettingWhereUniqueInput;
};


export type Query_RootClientFormSettingsArgs = {
  cursor?: Maybe<ClientFormSettingWhereUniqueInput>;
  orderBy?: Maybe<Array<ClientFormSettingOrderByInput>>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<ClientFormSettingWhereInput>;
};


export type Query_RootClientFormSettingsCountArgs = {
  where?: Maybe<ClientFormSettingWhereInput>;
};


export type Query_RootClients_DataArgs = {
  distinct_on?: Maybe<Array<Clients_Data_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Clients_Data_Order_By>>;
  where?: Maybe<Clients_Data_Bool_Exp>;
};


export type Query_RootClients_Data_AggregateArgs = {
  distinct_on?: Maybe<Array<Clients_Data_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Clients_Data_Order_By>>;
  where?: Maybe<Clients_Data_Bool_Exp>;
};


export type Query_RootClients_Data_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Query_RootClinicalSoftwareArgs = {
  where: ClinicalSoftwareWhereUniqueInput;
};


export type Query_RootClinicalSoftwaresArgs = {
  cursor?: Maybe<ClinicalSoftwareWhereUniqueInput>;
  orderBy?: Maybe<Array<ClinicalSoftwareOrderByInput>>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<ClinicalSoftwareWhereInput>;
};


export type Query_RootClinicalSoftwaresCountArgs = {
  where?: Maybe<ClinicalSoftwareWhereInput>;
};


export type Query_RootClockinBreakArgs = {
  where: ClockinBreakWhereUniqueInput;
};


export type Query_RootClockinBreaksArgs = {
  cursor?: Maybe<ClockinBreakWhereUniqueInput>;
  orderBy?: Maybe<Array<ClockinBreakOrderByInput>>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<ClockinBreakWhereInput>;
};


export type Query_RootClockinBreaksCountArgs = {
  where?: Maybe<ClockinBreakWhereInput>;
};


export type Query_RootClockinLongpollArgs = {
  where: ClockinLongpollWhereUniqueInput;
};


export type Query_RootClockinLongpollsArgs = {
  cursor?: Maybe<ClockinLongpollWhereUniqueInput>;
  orderBy?: Maybe<Array<ClockinLongpollOrderByInput>>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<ClockinLongpollWhereInput>;
};


export type Query_RootClockinLongpollsCountArgs = {
  where?: Maybe<ClockinLongpollWhereInput>;
};


export type Query_RootClockinTimesheetArgs = {
  where: ClockinTimesheetWhereUniqueInput;
};


export type Query_RootClockinTimesheetsArgs = {
  cursor?: Maybe<ClockinTimesheetWhereUniqueInput>;
  orderBy?: Maybe<Array<ClockinTimesheetOrderByInput>>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<ClockinTimesheetWhereInput>;
};


export type Query_RootClockinTimesheetsCountArgs = {
  where?: Maybe<ClockinTimesheetWhereInput>;
};


export type Query_RootCmAccountNoteArgs = {
  where: CmAccountNoteWhereUniqueInput;
};


export type Query_RootCmAccountNotesArgs = {
  cursor?: Maybe<CmAccountNoteWhereUniqueInput>;
  orderBy?: Maybe<Array<CmAccountNoteOrderByInput>>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<CmAccountNoteWhereInput>;
};


export type Query_RootCmAccountNotesCountArgs = {
  where?: Maybe<CmAccountNoteWhereInput>;
};


export type Query_RootCmAppointmentCustomArgs = {
  where: CmAppointmentCustomWhereUniqueInput;
};


export type Query_RootCmAppointmentCustomsArgs = {
  cursor?: Maybe<CmAppointmentCustomWhereUniqueInput>;
  orderBy?: Maybe<Array<CmAppointmentCustomOrderByInput>>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<CmAppointmentCustomWhereInput>;
};


export type Query_RootCmAppointmentCustomsCountArgs = {
  where?: Maybe<CmAppointmentCustomWhereInput>;
};


export type Query_RootCmAppointmentsCustomImportHelperArgs = {
  where: CmAppointmentsCustomImportHelperWhereUniqueInput;
};


export type Query_RootCmAppointmentsCustomImportHelpersArgs = {
  cursor?: Maybe<CmAppointmentsCustomImportHelperWhereUniqueInput>;
  orderBy?: Maybe<Array<CmAppointmentsCustomImportHelperOrderByInput>>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<CmAppointmentsCustomImportHelperWhereInput>;
};


export type Query_RootCmAppointmentsCustomImportHelpersCountArgs = {
  where?: Maybe<CmAppointmentsCustomImportHelperWhereInput>;
};


export type Query_RootCmAuthorizationArgs = {
  where: CmAuthorizationWhereUniqueInput;
};


export type Query_RootCmAuthorizationsArgs = {
  cursor?: Maybe<CmAuthorizationWhereUniqueInput>;
  orderBy?: Maybe<Array<CmAuthorizationOrderByInput>>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<CmAuthorizationWhereInput>;
};


export type Query_RootCmAuthorizationsCountArgs = {
  where?: Maybe<CmAuthorizationWhereInput>;
};


export type Query_RootCmBookingNoteArgs = {
  where: CmBookingNoteWhereUniqueInput;
};


export type Query_RootCmBookingNotesArgs = {
  cursor?: Maybe<CmBookingNoteWhereUniqueInput>;
  orderBy?: Maybe<Array<CmBookingNoteOrderByInput>>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<CmBookingNoteWhereInput>;
};


export type Query_RootCmBookingNotesCountArgs = {
  where?: Maybe<CmBookingNoteWhereInput>;
};


export type Query_RootCmCampaignArgs = {
  where: CmCampaignWhereUniqueInput;
};


export type Query_RootCmCampaignNoteArgs = {
  where: CmCampaignNoteWhereUniqueInput;
};


export type Query_RootCmCampaignNotesArgs = {
  cursor?: Maybe<CmCampaignNoteWhereUniqueInput>;
  orderBy?: Maybe<Array<CmCampaignNoteOrderByInput>>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<CmCampaignNoteWhereInput>;
};


export type Query_RootCmCampaignNotesCountArgs = {
  where?: Maybe<CmCampaignNoteWhereInput>;
};


export type Query_RootCmCampaignsArgs = {
  cursor?: Maybe<CmCampaignWhereUniqueInput>;
  orderBy?: Maybe<Array<CmCampaignOrderByInput>>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<CmCampaignWhereInput>;
};


export type Query_RootCmCampaignsCountArgs = {
  where?: Maybe<CmCampaignWhereInput>;
};


export type Query_RootCmCaseArgs = {
  where: CmCaseWhereUniqueInput;
};


export type Query_RootCmCaseNoteArgs = {
  where: CmCaseNoteWhereUniqueInput;
};


export type Query_RootCmCaseNotesArgs = {
  cursor?: Maybe<CmCaseNoteWhereUniqueInput>;
  orderBy?: Maybe<Array<CmCaseNoteOrderByInput>>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<CmCaseNoteWhereInput>;
};


export type Query_RootCmCaseNotesCountArgs = {
  where?: Maybe<CmCaseNoteWhereInput>;
};


export type Query_RootCmCaseRepliesArgs = {
  cursor?: Maybe<CmCaseReplyWhereUniqueInput>;
  orderBy?: Maybe<Array<CmCaseReplyOrderByInput>>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<CmCaseReplyWhereInput>;
};


export type Query_RootCmCaseRepliesCountArgs = {
  where?: Maybe<CmCaseReplyWhereInput>;
};


export type Query_RootCmCaseReplyArgs = {
  where: CmCaseReplyWhereUniqueInput;
};


export type Query_RootCmCasesArgs = {
  cursor?: Maybe<CmCaseWhereUniqueInput>;
  orderBy?: Maybe<Array<CmCaseOrderByInput>>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<CmCaseWhereInput>;
};


export type Query_RootCmCasesCountArgs = {
  where?: Maybe<CmCaseWhereInput>;
};


export type Query_RootCmContactArgs = {
  where: CmContactWhereUniqueInput;
};


export type Query_RootCmContactsArgs = {
  cursor?: Maybe<CmContactWhereUniqueInput>;
  orderBy?: Maybe<Array<CmContactOrderByInput>>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<CmContactWhereInput>;
};


export type Query_RootCmContactsCountArgs = {
  where?: Maybe<CmContactWhereInput>;
};


export type Query_RootColorsArgs = {
  distinct_on?: Maybe<Array<Colors_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Colors_Order_By>>;
  where?: Maybe<Colors_Bool_Exp>;
};


export type Query_RootColors_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Query_RootCompaniesArgs = {
  cursor?: Maybe<CompanyWhereUniqueInput>;
  orderBy?: Maybe<Array<CompanyOrderByInput>>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<CompanyWhereInput>;
};


export type Query_RootCompaniesCountArgs = {
  where?: Maybe<CompanyWhereInput>;
};


export type Query_RootCompanyArgs = {
  where: CompanyWhereUniqueInput;
};


export type Query_RootCompanyDetailsArgs = {
  cursor?: Maybe<CompanyDetailsWhereUniqueInput>;
  orderBy?: Maybe<Array<CompanyDetailsOrderByInput>>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<CompanyDetailsWhereInput>;
};


export type Query_RootCompanyDetailsCountArgs = {
  where?: Maybe<CompanyDetailsWhereInput>;
};


export type Query_RootCompanySubscriptionArgs = {
  where: CompanySubscriptionWhereUniqueInput;
};


export type Query_RootCompanySubscriptionsArgs = {
  cursor?: Maybe<CompanySubscriptionWhereUniqueInput>;
  orderBy?: Maybe<Array<CompanySubscriptionOrderByInput>>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<CompanySubscriptionWhereInput>;
};


export type Query_RootCompanySubscriptionsCountArgs = {
  where?: Maybe<CompanySubscriptionWhereInput>;
};


export type Query_RootContactsArgs = {
  distinct_on?: Maybe<Array<Contacts_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Contacts_Order_By>>;
  where?: Maybe<Contacts_Bool_Exp>;
};


export type Query_RootContacts_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Query_RootCoursesArgs = {
  distinct_on?: Maybe<Array<Courses_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Courses_Order_By>>;
  where?: Maybe<Courses_Bool_Exp>;
};


export type Query_RootCourses_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Query_RootCredit_Note_TypeArgs = {
  distinct_on?: Maybe<Array<Credit_Note_Type_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Credit_Note_Type_Order_By>>;
  where?: Maybe<Credit_Note_Type_Bool_Exp>;
};


export type Query_RootCredit_Note_Type_AggregateArgs = {
  distinct_on?: Maybe<Array<Credit_Note_Type_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Credit_Note_Type_Order_By>>;
  where?: Maybe<Credit_Note_Type_Bool_Exp>;
};


export type Query_RootCredit_Note_Type_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Query_RootCredit_NotesArgs = {
  distinct_on?: Maybe<Array<Credit_Notes_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Credit_Notes_Order_By>>;
  where?: Maybe<Credit_Notes_Bool_Exp>;
};


export type Query_RootCredit_Notes_AggregateArgs = {
  distinct_on?: Maybe<Array<Credit_Notes_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Credit_Notes_Order_By>>;
  where?: Maybe<Credit_Notes_Bool_Exp>;
};


export type Query_RootCredit_Notes_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Query_RootCustom_Fields_CategoriesArgs = {
  distinct_on?: Maybe<Array<Custom_Fields_Categories_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Custom_Fields_Categories_Order_By>>;
  where?: Maybe<Custom_Fields_Categories_Bool_Exp>;
};


export type Query_RootCustom_Fields_Categories_AggregateArgs = {
  distinct_on?: Maybe<Array<Custom_Fields_Categories_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Custom_Fields_Categories_Order_By>>;
  where?: Maybe<Custom_Fields_Categories_Bool_Exp>;
};


export type Query_RootCustom_Fields_Categories_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Query_RootDebtArgs = {
  distinct_on?: Maybe<Array<Debt_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Debt_Order_By>>;
  where?: Maybe<Debt_Bool_Exp>;
};


export type Query_RootDebt_AggregateArgs = {
  distinct_on?: Maybe<Array<Debt_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Debt_Order_By>>;
  where?: Maybe<Debt_Bool_Exp>;
};


export type Query_RootDebt_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Query_RootDepartmentsArgs = {
  distinct_on?: Maybe<Array<Departments_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Departments_Order_By>>;
  where?: Maybe<Departments_Bool_Exp>;
};


export type Query_RootDepartments_AggregateArgs = {
  distinct_on?: Maybe<Array<Departments_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Departments_Order_By>>;
  where?: Maybe<Departments_Bool_Exp>;
};


export type Query_RootDepartments_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Query_RootDiagnostic_CodesArgs = {
  distinct_on?: Maybe<Array<Diagnostic_Codes_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Diagnostic_Codes_Order_By>>;
  where?: Maybe<Diagnostic_Codes_Bool_Exp>;
};


export type Query_RootDiagnostic_Codes_AggregateArgs = {
  distinct_on?: Maybe<Array<Diagnostic_Codes_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Diagnostic_Codes_Order_By>>;
  where?: Maybe<Diagnostic_Codes_Bool_Exp>;
};


export type Query_RootDiagnostic_Codes_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Query_RootDiagnostic_CodesetArgs = {
  distinct_on?: Maybe<Array<Diagnostic_Codeset_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Diagnostic_Codeset_Order_By>>;
  where?: Maybe<Diagnostic_Codeset_Bool_Exp>;
};


export type Query_RootDiagnostic_Codeset_AggregateArgs = {
  distinct_on?: Maybe<Array<Diagnostic_Codeset_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Diagnostic_Codeset_Order_By>>;
  where?: Maybe<Diagnostic_Codeset_Bool_Exp>;
};


export type Query_RootDiagnostic_Codeset_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Query_RootDrugsArgs = {
  distinct_on?: Maybe<Array<Drugs_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Drugs_Order_By>>;
  where?: Maybe<Drugs_Bool_Exp>;
};


export type Query_RootDrugs_AggregateArgs = {
  distinct_on?: Maybe<Array<Drugs_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Drugs_Order_By>>;
  where?: Maybe<Drugs_Bool_Exp>;
};


export type Query_RootDrugs_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Query_RootFamily_RelationshipsArgs = {
  distinct_on?: Maybe<Array<Family_Relationships_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Family_Relationships_Order_By>>;
  where?: Maybe<Family_Relationships_Bool_Exp>;
};


export type Query_RootFamily_Relationships_AggregateArgs = {
  distinct_on?: Maybe<Array<Family_Relationships_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Family_Relationships_Order_By>>;
  where?: Maybe<Family_Relationships_Bool_Exp>;
};


export type Query_RootFamily_Relationships_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Query_RootFeature_FlagsArgs = {
  distinct_on?: Maybe<Array<Feature_Flags_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Feature_Flags_Order_By>>;
  where?: Maybe<Feature_Flags_Bool_Exp>;
};


export type Query_RootFeature_Flags_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Query_RootFindFirstAcLogArgs = {
  cursor?: Maybe<AcLogWhereUniqueInput>;
  orderBy?: Maybe<AcLogOrderByInput>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<AcLogWhereInput>;
};


export type Query_RootFindFirstAcLogActionArgs = {
  cursor?: Maybe<AcLogActionWhereUniqueInput>;
  orderBy?: Maybe<AcLogActionOrderByInput>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<AcLogActionWhereInput>;
};


export type Query_RootFindFirstAcLogUrlArgs = {
  cursor?: Maybe<AcLogUrlWhereUniqueInput>;
  orderBy?: Maybe<AcLogUrlOrderByInput>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<AcLogUrlWhereInput>;
};


export type Query_RootFindFirstAcceptEmailTokenArgs = {
  cursor?: Maybe<AcceptEmailTokenWhereUniqueInput>;
  orderBy?: Maybe<AcceptEmailTokenOrderByInput>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<AcceptEmailTokenWhereInput>;
};


export type Query_RootFindFirstAccountBalanceArgs = {
  cursor?: Maybe<AccountBalanceWhereUniqueInput>;
  orderBy?: Maybe<AccountBalanceOrderByInput>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<AccountBalanceWhereInput>;
};


export type Query_RootFindFirstAccountBalanceLogArgs = {
  cursor?: Maybe<AccountBalanceLogWhereUniqueInput>;
  orderBy?: Maybe<AccountBalanceLogOrderByInput>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<AccountBalanceLogWhereInput>;
};


export type Query_RootFindFirstAccountManagerArgs = {
  cursor?: Maybe<AccountManagerWhereUniqueInput>;
  orderBy?: Maybe<AccountManagerOrderByInput>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<AccountManagerWhereInput>;
};


export type Query_RootFindFirstAdvertCampaignArgs = {
  cursor?: Maybe<AdvertCampaignWhereUniqueInput>;
  orderBy?: Maybe<AdvertCampaignOrderByInput>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<AdvertCampaignWhereInput>;
};


export type Query_RootFindFirstApiDebugArgs = {
  cursor?: Maybe<ApiDebugWhereUniqueInput>;
  orderBy?: Maybe<ApiDebugOrderByInput>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<ApiDebugWhereInput>;
};


export type Query_RootFindFirstApiKeyArgs = {
  cursor?: Maybe<ApiKeyWhereUniqueInput>;
  orderBy?: Maybe<ApiKeyOrderByInput>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<ApiKeyWhereInput>;
};


export type Query_RootFindFirstAppBeforeAfterArgs = {
  cursor?: Maybe<AppBeforeAfterWhereUniqueInput>;
  orderBy?: Maybe<AppBeforeAfterOrderByInput>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<AppBeforeAfterWhereInput>;
};


export type Query_RootFindFirstAppPermissionArgs = {
  cursor?: Maybe<AppPermissionWhereUniqueInput>;
  orderBy?: Maybe<AppPermissionOrderByInput>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<AppPermissionWhereInput>;
};


export type Query_RootFindFirstAppSubscriptionArgs = {
  cursor?: Maybe<AppSubscriptionWhereUniqueInput>;
  orderBy?: Maybe<AppSubscriptionOrderByInput>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<AppSubscriptionWhereInput>;
};


export type Query_RootFindFirstAppSubscriptionsCompanyPriceArgs = {
  cursor?: Maybe<AppSubscriptionsCompanyPriceWhereUniqueInput>;
  orderBy?: Maybe<AppSubscriptionsCompanyPriceOrderByInput>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<AppSubscriptionsCompanyPriceWhereInput>;
};


export type Query_RootFindFirstAtAnswerArgs = {
  cursor?: Maybe<AtAnswerWhereUniqueInput>;
  orderBy?: Maybe<AtAnswerOrderByInput>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<AtAnswerWhereInput>;
};


export type Query_RootFindFirstAtConcernArgs = {
  cursor?: Maybe<AtConcernWhereUniqueInput>;
  orderBy?: Maybe<AtConcernOrderByInput>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<AtConcernWhereInput>;
};


export type Query_RootFindFirstAtQuestionArgs = {
  cursor?: Maybe<AtQuestionWhereUniqueInput>;
  orderBy?: Maybe<AtQuestionOrderByInput>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<AtQuestionWhereInput>;
};


export type Query_RootFindFirstAtQuestionsRelationArgs = {
  cursor?: Maybe<AtQuestionsRelationWhereUniqueInput>;
  orderBy?: Maybe<AtQuestionsRelationOrderByInput>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<AtQuestionsRelationWhereInput>;
};


export type Query_RootFindFirstAtQuizTakeArgs = {
  cursor?: Maybe<AtQuizTakeWhereUniqueInput>;
  orderBy?: Maybe<AtQuizTakeOrderByInput>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<AtQuizTakeWhereInput>;
};


export type Query_RootFindFirstAtSettingArgs = {
  cursor?: Maybe<AtSettingWhereUniqueInput>;
  orderBy?: Maybe<AtSettingOrderByInput>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<AtSettingWhereInput>;
};


export type Query_RootFindFirstAtTreatmentArgs = {
  cursor?: Maybe<AtTreatmentWhereUniqueInput>;
  orderBy?: Maybe<AtTreatmentOrderByInput>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<AtTreatmentWhereInput>;
};


export type Query_RootFindFirstAttachmentHelperLiteArgs = {
  cursor?: Maybe<AttachmentHelperLiteWhereUniqueInput>;
  orderBy?: Maybe<AttachmentHelperLiteOrderByInput>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<AttachmentHelperLiteWhereInput>;
};


export type Query_RootFindFirstAutomationActionArgs = {
  cursor?: Maybe<AutomationActionWhereUniqueInput>;
  orderBy?: Maybe<AutomationActionOrderByInput>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<AutomationActionWhereInput>;
};


export type Query_RootFindFirstAutomationDelayArgs = {
  cursor?: Maybe<AutomationDelayWhereUniqueInput>;
  orderBy?: Maybe<AutomationDelayOrderByInput>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<AutomationDelayWhereInput>;
};


export type Query_RootFindFirstAutomationFolderArgs = {
  cursor?: Maybe<AutomationFolderWhereUniqueInput>;
  orderBy?: Maybe<AutomationFolderOrderByInput>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<AutomationFolderWhereInput>;
};


export type Query_RootFindFirstAutomationLogArgs = {
  cursor?: Maybe<AutomationLogWhereUniqueInput>;
  orderBy?: Maybe<AutomationLogOrderByInput>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<AutomationLogWhereInput>;
};


export type Query_RootFindFirstAutomationRuleArgs = {
  cursor?: Maybe<AutomationRuleWhereUniqueInput>;
  orderBy?: Maybe<AutomationRuleOrderByInput>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<AutomationRuleWhereInput>;
};


export type Query_RootFindFirstAutomationTriggerArgs = {
  cursor?: Maybe<AutomationTriggerWhereUniqueInput>;
  orderBy?: Maybe<AutomationTriggerOrderByInput>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<AutomationTriggerWhereInput>;
};


export type Query_RootFindFirstAvilableDatesLogArgs = {
  cursor?: Maybe<AvilableDatesLogWhereUniqueInput>;
  orderBy?: Maybe<AvilableDatesLogOrderByInput>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<AvilableDatesLogWhereInput>;
};


export type Query_RootFindFirstBacsAccountArgs = {
  cursor?: Maybe<BacsAccountWhereUniqueInput>;
  orderBy?: Maybe<BacsAccountOrderByInput>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<BacsAccountWhereInput>;
};


export type Query_RootFindFirstBatchArgs = {
  cursor?: Maybe<BatchWhereUniqueInput>;
  orderBy?: Maybe<BatchOrderByInput>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<BatchWhereInput>;
};


export type Query_RootFindFirstBatchItemArgs = {
  cursor?: Maybe<BatchItemWhereUniqueInput>;
  orderBy?: Maybe<BatchItemOrderByInput>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<BatchItemWhereInput>;
};


export type Query_RootFindFirstBlockReasonArgs = {
  cursor?: Maybe<BlockReasonWhereUniqueInput>;
  orderBy?: Maybe<BlockReasonOrderByInput>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<BlockReasonWhereInput>;
};


export type Query_RootFindFirstBnfDrugArgs = {
  cursor?: Maybe<BnfDrugWhereUniqueInput>;
  orderBy?: Maybe<BnfDrugOrderByInput>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<BnfDrugWhereInput>;
};


export type Query_RootFindFirstBodyChartTemplateArgs = {
  cursor?: Maybe<BodyChartTemplateWhereUniqueInput>;
  orderBy?: Maybe<BodyChartTemplateOrderByInput>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<BodyChartTemplateWhereInput>;
};


export type Query_RootFindFirstBookingMasterArgs = {
  cursor?: Maybe<BookingMasterWhereUniqueInput>;
  orderBy?: Maybe<BookingMasterOrderByInput>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<BookingMasterWhereInput>;
};


export type Query_RootFindFirstBookingSettingArgs = {
  cursor?: Maybe<BookingSettingWhereUniqueInput>;
  orderBy?: Maybe<BookingSettingOrderByInput>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<BookingSettingWhereInput>;
};


export type Query_RootFindFirstBookingStatusArgs = {
  cursor?: Maybe<BookingStatusWhereUniqueInput>;
  orderBy?: Maybe<BookingStatusOrderByInput>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<BookingStatusWhereInput>;
};


export type Query_RootFindFirstBookingStatusChangeArgs = {
  cursor?: Maybe<BookingStatusChangeWhereUniqueInput>;
  orderBy?: Maybe<BookingStatusChangeOrderByInput>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<BookingStatusChangeWhereInput>;
};


export type Query_RootFindFirstBookitProGeneralArgs = {
  cursor?: Maybe<BookitProGeneralWhereUniqueInput>;
  orderBy?: Maybe<BookitProGeneralOrderByInput>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<BookitProGeneralWhereInput>;
};


export type Query_RootFindFirstBookitProSliderArgs = {
  cursor?: Maybe<BookitProSliderWhereUniqueInput>;
  orderBy?: Maybe<BookitProSliderOrderByInput>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<BookitProSliderWhereInput>;
};


export type Query_RootFindFirstBookmarkedPageArgs = {
  cursor?: Maybe<BookmarkedPageWhereUniqueInput>;
  orderBy?: Maybe<BookmarkedPageOrderByInput>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<BookmarkedPageWhereInput>;
};


export type Query_RootFindFirstBugLogArgs = {
  cursor?: Maybe<BugLogWhereUniqueInput>;
  orderBy?: Maybe<BugLogOrderByInput>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<BugLogWhereInput>;
};


export type Query_RootFindFirstCalRangeRequestArgs = {
  cursor?: Maybe<CalRangeRequestWhereUniqueInput>;
  orderBy?: Maybe<CalRangeRequestOrderByInput>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<CalRangeRequestWhereInput>;
};


export type Query_RootFindFirstCalendarViewArgs = {
  cursor?: Maybe<CalendarViewWhereUniqueInput>;
  orderBy?: Maybe<CalendarViewOrderByInput>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<CalendarViewWhereInput>;
};


export type Query_RootFindFirstCampaignAttachmentArgs = {
  cursor?: Maybe<CampaignAttachmentWhereUniqueInput>;
  orderBy?: Maybe<CampaignAttachmentOrderByInput>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<CampaignAttachmentWhereInput>;
};


export type Query_RootFindFirstCancelReasonArgs = {
  cursor?: Maybe<CancelReasonWhereUniqueInput>;
  orderBy?: Maybe<CancelReasonOrderByInput>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<CancelReasonWhereInput>;
};


export type Query_RootFindFirstCancellationPolicyArgs = {
  cursor?: Maybe<CancellationPolicyWhereUniqueInput>;
  orderBy?: Maybe<CancellationPolicyOrderByInput>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<CancellationPolicyWhereInput>;
};


export type Query_RootFindFirstCandidateArgs = {
  cursor?: Maybe<CandidateWhereUniqueInput>;
  orderBy?: Maybe<CandidateOrderByInput>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<CandidateWhereInput>;
};


export type Query_RootFindFirstCardTypeArgs = {
  cursor?: Maybe<CardTypeWhereUniqueInput>;
  orderBy?: Maybe<CardTypeOrderByInput>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<CardTypeWhereInput>;
};


export type Query_RootFindFirstCashupReportArgs = {
  cursor?: Maybe<CashupReportWhereUniqueInput>;
  orderBy?: Maybe<CashupReportOrderByInput>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<CashupReportWhereInput>;
};


export type Query_RootFindFirstCashupReportCustomArgs = {
  cursor?: Maybe<CashupReportCustomWhereUniqueInput>;
  orderBy?: Maybe<CashupReportCustomOrderByInput>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<CashupReportCustomWhereInput>;
};


export type Query_RootFindFirstCheckinApptArgs = {
  cursor?: Maybe<CheckinApptWhereUniqueInput>;
  orderBy?: Maybe<CheckinApptOrderByInput>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<CheckinApptWhereInput>;
};


export type Query_RootFindFirstCheckinAveragesArgs = {
  cursor?: Maybe<CheckinAveragesWhereUniqueInput>;
  orderBy?: Maybe<CheckinAveragesOrderByInput>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<CheckinAveragesWhereInput>;
};


export type Query_RootFindFirstCheckinAveragesIdleArgs = {
  cursor?: Maybe<CheckinAveragesIdleWhereUniqueInput>;
  orderBy?: Maybe<CheckinAveragesIdleOrderByInput>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<CheckinAveragesIdleWhereInput>;
};


export type Query_RootFindFirstCheckinProductArgs = {
  cursor?: Maybe<CheckinProductWhereUniqueInput>;
  orderBy?: Maybe<CheckinProductOrderByInput>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<CheckinProductWhereInput>;
};


export type Query_RootFindFirstCheckinQueueArgs = {
  cursor?: Maybe<CheckinQueueWhereUniqueInput>;
  orderBy?: Maybe<CheckinQueueOrderByInput>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<CheckinQueueWhereInput>;
};


export type Query_RootFindFirstClassCategoryArgs = {
  cursor?: Maybe<ClassCategoryWhereUniqueInput>;
  orderBy?: Maybe<ClassCategoryOrderByInput>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<ClassCategoryWhereInput>;
};


export type Query_RootFindFirstClassGuestsArgs = {
  cursor?: Maybe<ClassGuestsWhereUniqueInput>;
  orderBy?: Maybe<ClassGuestsOrderByInput>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<ClassGuestsWhereInput>;
};


export type Query_RootFindFirstClassMasterArgs = {
  cursor?: Maybe<ClassMasterWhereUniqueInput>;
  orderBy?: Maybe<ClassMasterOrderByInput>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<ClassMasterWhereInput>;
};


export type Query_RootFindFirstClassNotesArgs = {
  cursor?: Maybe<ClassNotesWhereUniqueInput>;
  orderBy?: Maybe<ClassNotesOrderByInput>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<ClassNotesWhereInput>;
};


export type Query_RootFindFirstClassProductArgs = {
  cursor?: Maybe<ClassProductWhereUniqueInput>;
  orderBy?: Maybe<ClassProductOrderByInput>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<ClassProductWhereInput>;
};


export type Query_RootFindFirstClassSmsHistoryArgs = {
  cursor?: Maybe<ClassSmsHistoryWhereUniqueInput>;
  orderBy?: Maybe<ClassSmsHistoryOrderByInput>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<ClassSmsHistoryWhereInput>;
};


export type Query_RootFindFirstClassTemplateSettingArgs = {
  cursor?: Maybe<ClassTemplateSettingWhereUniqueInput>;
  orderBy?: Maybe<ClassTemplateSettingOrderByInput>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<ClassTemplateSettingWhereInput>;
};


export type Query_RootFindFirstClasstypeMasterArgs = {
  cursor?: Maybe<ClasstypeMasterWhereUniqueInput>;
  orderBy?: Maybe<ClasstypeMasterOrderByInput>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<ClasstypeMasterWhereInput>;
};


export type Query_RootFindFirstCleverpinSettingArgs = {
  cursor?: Maybe<CleverpinSettingWhereUniqueInput>;
  orderBy?: Maybe<CleverpinSettingOrderByInput>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<CleverpinSettingWhereInput>;
};


export type Query_RootFindFirstClientFormSettingArgs = {
  cursor?: Maybe<ClientFormSettingWhereUniqueInput>;
  orderBy?: Maybe<ClientFormSettingOrderByInput>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<ClientFormSettingWhereInput>;
};


export type Query_RootFindFirstClinicalSoftwareArgs = {
  cursor?: Maybe<ClinicalSoftwareWhereUniqueInput>;
  orderBy?: Maybe<ClinicalSoftwareOrderByInput>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<ClinicalSoftwareWhereInput>;
};


export type Query_RootFindFirstClockinBreakArgs = {
  cursor?: Maybe<ClockinBreakWhereUniqueInput>;
  orderBy?: Maybe<ClockinBreakOrderByInput>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<ClockinBreakWhereInput>;
};


export type Query_RootFindFirstClockinLongpollArgs = {
  cursor?: Maybe<ClockinLongpollWhereUniqueInput>;
  orderBy?: Maybe<ClockinLongpollOrderByInput>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<ClockinLongpollWhereInput>;
};


export type Query_RootFindFirstClockinTimesheetArgs = {
  cursor?: Maybe<ClockinTimesheetWhereUniqueInput>;
  orderBy?: Maybe<ClockinTimesheetOrderByInput>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<ClockinTimesheetWhereInput>;
};


export type Query_RootFindFirstCmAccountNoteArgs = {
  cursor?: Maybe<CmAccountNoteWhereUniqueInput>;
  orderBy?: Maybe<CmAccountNoteOrderByInput>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<CmAccountNoteWhereInput>;
};


export type Query_RootFindFirstCmAppointmentCustomArgs = {
  cursor?: Maybe<CmAppointmentCustomWhereUniqueInput>;
  orderBy?: Maybe<CmAppointmentCustomOrderByInput>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<CmAppointmentCustomWhereInput>;
};


export type Query_RootFindFirstCmAppointmentsCustomImportHelperArgs = {
  cursor?: Maybe<CmAppointmentsCustomImportHelperWhereUniqueInput>;
  orderBy?: Maybe<CmAppointmentsCustomImportHelperOrderByInput>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<CmAppointmentsCustomImportHelperWhereInput>;
};


export type Query_RootFindFirstCmAuthorizationArgs = {
  cursor?: Maybe<CmAuthorizationWhereUniqueInput>;
  orderBy?: Maybe<CmAuthorizationOrderByInput>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<CmAuthorizationWhereInput>;
};


export type Query_RootFindFirstCmBookingNoteArgs = {
  cursor?: Maybe<CmBookingNoteWhereUniqueInput>;
  orderBy?: Maybe<CmBookingNoteOrderByInput>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<CmBookingNoteWhereInput>;
};


export type Query_RootFindFirstCmCampaignArgs = {
  cursor?: Maybe<CmCampaignWhereUniqueInput>;
  orderBy?: Maybe<CmCampaignOrderByInput>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<CmCampaignWhereInput>;
};


export type Query_RootFindFirstCmCampaignNoteArgs = {
  cursor?: Maybe<CmCampaignNoteWhereUniqueInput>;
  orderBy?: Maybe<CmCampaignNoteOrderByInput>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<CmCampaignNoteWhereInput>;
};


export type Query_RootFindFirstCmCaseArgs = {
  cursor?: Maybe<CmCaseWhereUniqueInput>;
  orderBy?: Maybe<CmCaseOrderByInput>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<CmCaseWhereInput>;
};


export type Query_RootFindFirstCmCaseNoteArgs = {
  cursor?: Maybe<CmCaseNoteWhereUniqueInput>;
  orderBy?: Maybe<CmCaseNoteOrderByInput>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<CmCaseNoteWhereInput>;
};


export type Query_RootFindFirstCmCaseReplyArgs = {
  cursor?: Maybe<CmCaseReplyWhereUniqueInput>;
  orderBy?: Maybe<CmCaseReplyOrderByInput>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<CmCaseReplyWhereInput>;
};


export type Query_RootFindFirstCmContactArgs = {
  cursor?: Maybe<CmContactWhereUniqueInput>;
  orderBy?: Maybe<CmContactOrderByInput>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<CmContactWhereInput>;
};


export type Query_RootFindFirstCompanyArgs = {
  cursor?: Maybe<CompanyWhereUniqueInput>;
  orderBy?: Maybe<CompanyOrderByInput>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<CompanyWhereInput>;
};


export type Query_RootFindFirstCompanyDetailsArgs = {
  cursor?: Maybe<CompanyDetailsWhereUniqueInput>;
  orderBy?: Maybe<CompanyDetailsOrderByInput>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<CompanyDetailsWhereInput>;
};


export type Query_RootFindFirstCompanySubscriptionArgs = {
  cursor?: Maybe<CompanySubscriptionWhereUniqueInput>;
  orderBy?: Maybe<CompanySubscriptionOrderByInput>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<CompanySubscriptionWhereInput>;
};


export type Query_RootFindFirstGlCodeArgs = {
  cursor?: Maybe<GlCodeWhereUniqueInput>;
  orderBy?: Maybe<GlCodeOrderByInput>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<GlCodeWhereInput>;
};


export type Query_RootFindFirstInvPaymentTypeArgs = {
  cursor?: Maybe<InvPaymentTypeWhereUniqueInput>;
  orderBy?: Maybe<InvPaymentTypeOrderByInput>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<InvPaymentTypeWhereInput>;
};


export type Query_RootFindFirstMarketingSourceArgs = {
  cursor?: Maybe<MarketingSourceWhereUniqueInput>;
  orderBy?: Maybe<MarketingSourceOrderByInput>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<MarketingSourceWhereInput>;
};


export type Query_RootFindFirstMediaLlibraryAttachmentArgs = {
  cursor?: Maybe<MediaLlibraryAttachmentWhereUniqueInput>;
  orderBy?: Maybe<MediaLlibraryAttachmentOrderByInput>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<MediaLlibraryAttachmentWhereInput>;
};


export type Query_RootFindFirstSecondAtAnswerArgs = {
  cursor?: Maybe<SecondAtAnswerWhereUniqueInput>;
  orderBy?: Maybe<SecondAtAnswerOrderByInput>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<SecondAtAnswerWhereInput>;
};


export type Query_RootFindFirstSecondAtQuestionArgs = {
  cursor?: Maybe<SecondAtQuestionWhereUniqueInput>;
  orderBy?: Maybe<SecondAtQuestionOrderByInput>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<SecondAtQuestionWhereInput>;
};


export type Query_RootFindFirstThirdPartyAccessArgs = {
  cursor?: Maybe<ThirdPartyAccessWhereUniqueInput>;
  orderBy?: Maybe<ThirdPartyAccessOrderByInput>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<ThirdPartyAccessWhereInput>;
};


export type Query_RootFindFirstTimezoneArgs = {
  cursor?: Maybe<TimezoneWhereUniqueInput>;
  orderBy?: Maybe<TimezoneOrderByInput>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<TimezoneWhereInput>;
};


export type Query_RootFindFirstTwoFactorHistoryArgs = {
  cursor?: Maybe<TwoFactorHistoryWhereUniqueInput>;
  orderBy?: Maybe<TwoFactorHistoryOrderByInput>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<TwoFactorHistoryWhereInput>;
};


export type Query_RootFindFirstUserArgs = {
  cursor?: Maybe<UserWhereUniqueInput>;
  orderBy?: Maybe<UserOrderByInput>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<UserWhereInput>;
};


export type Query_RootFindFirstUserSecurityQuestionsAnswerArgs = {
  cursor?: Maybe<UserSecurityQuestionsAnswerWhereUniqueInput>;
  orderBy?: Maybe<UserSecurityQuestionsAnswerOrderByInput>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<UserSecurityQuestionsAnswerWhereInput>;
};


export type Query_RootGlCodeArgs = {
  where: GlCodeWhereUniqueInput;
};


export type Query_RootGlCodesArgs = {
  cursor?: Maybe<GlCodeWhereUniqueInput>;
  orderBy?: Maybe<Array<GlCodeOrderByInput>>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<GlCodeWhereInput>;
};


export type Query_RootGlCodesCountArgs = {
  where?: Maybe<GlCodeWhereInput>;
};


export type Query_RootInvPaymentTypeArgs = {
  where: InvPaymentTypeWhereUniqueInput;
};


export type Query_RootInvPaymentTypesArgs = {
  cursor?: Maybe<InvPaymentTypeWhereUniqueInput>;
  orderBy?: Maybe<Array<InvPaymentTypeOrderByInput>>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<InvPaymentTypeWhereInput>;
};


export type Query_RootInvPaymentTypesCountArgs = {
  where?: Maybe<InvPaymentTypeWhereInput>;
};


export type Query_RootInvoicesArgs = {
  distinct_on?: Maybe<Array<Invoices_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Invoices_Order_By>>;
  where?: Maybe<Invoices_Bool_Exp>;
};


export type Query_RootInvoices_AggregateArgs = {
  distinct_on?: Maybe<Array<Invoices_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Invoices_Order_By>>;
  where?: Maybe<Invoices_Bool_Exp>;
};


export type Query_RootInvoices_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Query_RootIssuing_CompanyArgs = {
  distinct_on?: Maybe<Array<Issuing_Company_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Issuing_Company_Order_By>>;
  where?: Maybe<Issuing_Company_Bool_Exp>;
};


export type Query_RootIssuing_Company_AggregateArgs = {
  distinct_on?: Maybe<Array<Issuing_Company_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Issuing_Company_Order_By>>;
  where?: Maybe<Issuing_Company_Bool_Exp>;
};


export type Query_RootIssuing_Company_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Query_RootJob_CandidatesArgs = {
  distinct_on?: Maybe<Array<Job_Candidates_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Job_Candidates_Order_By>>;
  where?: Maybe<Job_Candidates_Bool_Exp>;
};


export type Query_RootJob_Candidates_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootJob_OpeningsArgs = {
  distinct_on?: Maybe<Array<Job_Openings_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Job_Openings_Order_By>>;
  where?: Maybe<Job_Openings_Bool_Exp>;
};


export type Query_RootJob_Openings_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootJob_TitleArgs = {
  distinct_on?: Maybe<Array<Job_Title_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Job_Title_Order_By>>;
  where?: Maybe<Job_Title_Bool_Exp>;
};


export type Query_RootJob_Title_AggregateArgs = {
  distinct_on?: Maybe<Array<Job_Title_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Job_Title_Order_By>>;
  where?: Maybe<Job_Title_Bool_Exp>;
};


export type Query_RootJob_Title_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Query_RootLabs_DashboardArgs = {
  distinct_on?: Maybe<Array<Labs_Dashboard_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Labs_Dashboard_Order_By>>;
  where?: Maybe<Labs_Dashboard_Bool_Exp>;
};


export type Query_RootLabs_Dashboard_AggregateArgs = {
  distinct_on?: Maybe<Array<Labs_Dashboard_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Labs_Dashboard_Order_By>>;
  where?: Maybe<Labs_Dashboard_Bool_Exp>;
};


export type Query_RootLabs_Dashboard_By_PkArgs = {
  labNo: Scalars['Int'];
};


export type Query_RootLeadArgs = {
  distinct_on?: Maybe<Array<Lead_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Lead_Order_By>>;
  where?: Maybe<Lead_Bool_Exp>;
};


export type Query_RootLead_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Query_RootLead_FieldsArgs = {
  distinct_on?: Maybe<Array<Lead_Fields_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Lead_Fields_Order_By>>;
  where?: Maybe<Lead_Fields_Bool_Exp>;
};


export type Query_RootLead_Fields_AggregateArgs = {
  distinct_on?: Maybe<Array<Lead_Fields_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Lead_Fields_Order_By>>;
  where?: Maybe<Lead_Fields_Bool_Exp>;
};


export type Query_RootLead_Fields_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Query_RootLibraryArgs = {
  distinct_on?: Maybe<Array<Library_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Library_Order_By>>;
  where?: Maybe<Library_Bool_Exp>;
};


export type Query_RootLibrary_AggregateArgs = {
  distinct_on?: Maybe<Array<Library_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Library_Order_By>>;
  where?: Maybe<Library_Bool_Exp>;
};


export type Query_RootLibrary_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Query_RootLibrary_InstallersArgs = {
  distinct_on?: Maybe<Array<Library_Installers_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Library_Installers_Order_By>>;
  where?: Maybe<Library_Installers_Bool_Exp>;
};


export type Query_RootLibrary_Installers_AggregateArgs = {
  distinct_on?: Maybe<Array<Library_Installers_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Library_Installers_Order_By>>;
  where?: Maybe<Library_Installers_Bool_Exp>;
};


export type Query_RootLibrary_Installers_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootLocationsArgs = {
  distinct_on?: Maybe<Array<Locations_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Locations_Order_By>>;
  where?: Maybe<Locations_Bool_Exp>;
};


export type Query_RootLocations_AggregateArgs = {
  distinct_on?: Maybe<Array<Locations_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Locations_Order_By>>;
  where?: Maybe<Locations_Bool_Exp>;
};


export type Query_RootLocations_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Query_RootMarketingSourceArgs = {
  where: MarketingSourceWhereUniqueInput;
};


export type Query_RootMarketingSourcesArgs = {
  cursor?: Maybe<MarketingSourceWhereUniqueInput>;
  orderBy?: Maybe<Array<MarketingSourceOrderByInput>>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<MarketingSourceWhereInput>;
};


export type Query_RootMarketingSourcesCountArgs = {
  where?: Maybe<MarketingSourceWhereInput>;
};


export type Query_RootMarketing_CampaignArgs = {
  distinct_on?: Maybe<Array<Marketing_Campaign_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Marketing_Campaign_Order_By>>;
  where?: Maybe<Marketing_Campaign_Bool_Exp>;
};


export type Query_RootMarketing_Campaign_AggregateArgs = {
  distinct_on?: Maybe<Array<Marketing_Campaign_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Marketing_Campaign_Order_By>>;
  where?: Maybe<Marketing_Campaign_Bool_Exp>;
};


export type Query_RootMarketing_Campaign_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Query_RootMarketing_ReferralArgs = {
  distinct_on?: Maybe<Array<Marketing_Referral_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Marketing_Referral_Order_By>>;
  where?: Maybe<Marketing_Referral_Bool_Exp>;
};


export type Query_RootMarketing_Referral_AggregateArgs = {
  distinct_on?: Maybe<Array<Marketing_Referral_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Marketing_Referral_Order_By>>;
  where?: Maybe<Marketing_Referral_Bool_Exp>;
};


export type Query_RootMarketing_Referral_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Query_RootMarketing_SourceArgs = {
  distinct_on?: Maybe<Array<Marketing_Source_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Marketing_Source_Order_By>>;
  where?: Maybe<Marketing_Source_Bool_Exp>;
};


export type Query_RootMarketing_Source_AggregateArgs = {
  distinct_on?: Maybe<Array<Marketing_Source_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Marketing_Source_Order_By>>;
  where?: Maybe<Marketing_Source_Bool_Exp>;
};


export type Query_RootMarketing_Source_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Query_RootMediaLlibraryAttachmentArgs = {
  where: MediaLlibraryAttachmentWhereUniqueInput;
};


export type Query_RootMediaLlibraryAttachmentsArgs = {
  cursor?: Maybe<MediaLlibraryAttachmentWhereUniqueInput>;
  orderBy?: Maybe<Array<MediaLlibraryAttachmentOrderByInput>>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<MediaLlibraryAttachmentWhereInput>;
};


export type Query_RootMediaLlibraryAttachmentsCountArgs = {
  where?: Maybe<MediaLlibraryAttachmentWhereInput>;
};


export type Query_RootPayment_TypesArgs = {
  distinct_on?: Maybe<Array<Payment_Types_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Payment_Types_Order_By>>;
  where?: Maybe<Payment_Types_Bool_Exp>;
};


export type Query_RootPayment_Types_AggregateArgs = {
  distinct_on?: Maybe<Array<Payment_Types_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Payment_Types_Order_By>>;
  where?: Maybe<Payment_Types_Bool_Exp>;
};


export type Query_RootPayment_Types_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Query_RootPaymentsArgs = {
  distinct_on?: Maybe<Array<Payments_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Payments_Order_By>>;
  where?: Maybe<Payments_Bool_Exp>;
};


export type Query_RootPayments_AggregateArgs = {
  distinct_on?: Maybe<Array<Payments_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Payments_Order_By>>;
  where?: Maybe<Payments_Bool_Exp>;
};


export type Query_RootPayments_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Query_RootPetty_Cash_TypesArgs = {
  distinct_on?: Maybe<Array<Petty_Cash_Types_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Petty_Cash_Types_Order_By>>;
  where?: Maybe<Petty_Cash_Types_Bool_Exp>;
};


export type Query_RootPetty_Cash_Types_AggregateArgs = {
  distinct_on?: Maybe<Array<Petty_Cash_Types_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Petty_Cash_Types_Order_By>>;
  where?: Maybe<Petty_Cash_Types_Bool_Exp>;
};


export type Query_RootPetty_Cash_Types_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Query_RootProduct_ListsArgs = {
  distinct_on?: Maybe<Array<Product_Lists_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Product_Lists_Order_By>>;
  where?: Maybe<Product_Lists_Bool_Exp>;
};


export type Query_RootProduct_Lists_AggregateArgs = {
  distinct_on?: Maybe<Array<Product_Lists_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Product_Lists_Order_By>>;
  where?: Maybe<Product_Lists_Bool_Exp>;
};


export type Query_RootProduct_Lists_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Query_RootPrototypeArgs = {
  distinct_on?: Maybe<Array<Prototype_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Prototype_Order_By>>;
  where?: Maybe<Prototype_Bool_Exp>;
};


export type Query_RootPrototype_AggregateArgs = {
  distinct_on?: Maybe<Array<Prototype_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Prototype_Order_By>>;
  where?: Maybe<Prototype_Bool_Exp>;
};


export type Query_RootPrototype_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Query_RootPurchase_OrderArgs = {
  distinct_on?: Maybe<Array<Purchase_Order_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Purchase_Order_Order_By>>;
  where?: Maybe<Purchase_Order_Bool_Exp>;
};


export type Query_RootPurchase_Order_AggregateArgs = {
  distinct_on?: Maybe<Array<Purchase_Order_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Purchase_Order_Order_By>>;
  where?: Maybe<Purchase_Order_Bool_Exp>;
};


export type Query_RootPurchase_Order_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Query_RootResourcesArgs = {
  distinct_on?: Maybe<Array<Resources_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Resources_Order_By>>;
  where?: Maybe<Resources_Bool_Exp>;
};


export type Query_RootResources_AggregateArgs = {
  distinct_on?: Maybe<Array<Resources_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Resources_Order_By>>;
  where?: Maybe<Resources_Bool_Exp>;
};


export type Query_RootResources_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Query_RootRoomsArgs = {
  distinct_on?: Maybe<Array<Rooms_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Rooms_Order_By>>;
  where?: Maybe<Rooms_Bool_Exp>;
};


export type Query_RootRooms_AggregateArgs = {
  distinct_on?: Maybe<Array<Rooms_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Rooms_Order_By>>;
  where?: Maybe<Rooms_Bool_Exp>;
};


export type Query_RootRooms_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootRota_TemplatesArgs = {
  distinct_on?: Maybe<Array<Rota_Templates_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Rota_Templates_Order_By>>;
  where?: Maybe<Rota_Templates_Bool_Exp>;
};


export type Query_RootRota_Templates_AggregateArgs = {
  distinct_on?: Maybe<Array<Rota_Templates_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Rota_Templates_Order_By>>;
  where?: Maybe<Rota_Templates_Bool_Exp>;
};


export type Query_RootRota_Templates_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Query_RootSalutationArgs = {
  distinct_on?: Maybe<Array<Salutation_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Salutation_Order_By>>;
  where?: Maybe<Salutation_Bool_Exp>;
};


export type Query_RootSalutation_AggregateArgs = {
  distinct_on?: Maybe<Array<Salutation_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Salutation_Order_By>>;
  where?: Maybe<Salutation_Bool_Exp>;
};


export type Query_RootSalutation_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Query_RootSecondAtAnswerArgs = {
  where: SecondAtAnswerWhereUniqueInput;
};


export type Query_RootSecondAtAnswersArgs = {
  cursor?: Maybe<SecondAtAnswerWhereUniqueInput>;
  orderBy?: Maybe<Array<SecondAtAnswerOrderByInput>>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<SecondAtAnswerWhereInput>;
};


export type Query_RootSecondAtAnswersCountArgs = {
  where?: Maybe<SecondAtAnswerWhereInput>;
};


export type Query_RootSecondAtQuestionArgs = {
  where: SecondAtQuestionWhereUniqueInput;
};


export type Query_RootSecondAtQuestionsArgs = {
  cursor?: Maybe<SecondAtQuestionWhereUniqueInput>;
  orderBy?: Maybe<Array<SecondAtQuestionOrderByInput>>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<SecondAtQuestionWhereInput>;
};


export type Query_RootSecondAtQuestionsCountArgs = {
  where?: Maybe<SecondAtQuestionWhereInput>;
};


export type Query_RootStock_TakeArgs = {
  distinct_on?: Maybe<Array<Stock_Take_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Stock_Take_Order_By>>;
  where?: Maybe<Stock_Take_Bool_Exp>;
};


export type Query_RootStock_Take_AggregateArgs = {
  distinct_on?: Maybe<Array<Stock_Take_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Stock_Take_Order_By>>;
  where?: Maybe<Stock_Take_Bool_Exp>;
};


export type Query_RootStock_Take_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Query_RootSupplierArgs = {
  distinct_on?: Maybe<Array<Supplier_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Supplier_Order_By>>;
  where?: Maybe<Supplier_Bool_Exp>;
};


export type Query_RootSupplier_AggregateArgs = {
  distinct_on?: Maybe<Array<Supplier_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Supplier_Order_By>>;
  where?: Maybe<Supplier_Bool_Exp>;
};


export type Query_RootSupplier_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Query_RootTax_RatesArgs = {
  distinct_on?: Maybe<Array<Tax_Rates_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Tax_Rates_Order_By>>;
  where?: Maybe<Tax_Rates_Bool_Exp>;
};


export type Query_RootTax_Rates_AggregateArgs = {
  distinct_on?: Maybe<Array<Tax_Rates_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Tax_Rates_Order_By>>;
  where?: Maybe<Tax_Rates_Bool_Exp>;
};


export type Query_RootTax_Rates_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Query_RootThirdPartyAccessArgs = {
  where: ThirdPartyAccessWhereUniqueInput;
};


export type Query_RootThirdPartyAccessesArgs = {
  cursor?: Maybe<ThirdPartyAccessWhereUniqueInput>;
  orderBy?: Maybe<Array<ThirdPartyAccessOrderByInput>>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<ThirdPartyAccessWhereInput>;
};


export type Query_RootThirdPartyAccessesCountArgs = {
  where?: Maybe<ThirdPartyAccessWhereInput>;
};


export type Query_RootThird_PartiesArgs = {
  distinct_on?: Maybe<Array<Third_Parties_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Third_Parties_Order_By>>;
  where?: Maybe<Third_Parties_Bool_Exp>;
};


export type Query_RootThird_Parties_AggregateArgs = {
  distinct_on?: Maybe<Array<Third_Parties_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Third_Parties_Order_By>>;
  where?: Maybe<Third_Parties_Bool_Exp>;
};


export type Query_RootThird_Parties_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Query_RootTimezoneArgs = {
  where: TimezoneWhereUniqueInput;
};


export type Query_RootTimezonesArgs = {
  cursor?: Maybe<TimezoneWhereUniqueInput>;
  orderBy?: Maybe<Array<TimezoneOrderByInput>>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<TimezoneWhereInput>;
};


export type Query_RootTimezonesCountArgs = {
  where?: Maybe<TimezoneWhereInput>;
};


export type Query_RootTwoFactorHistoriesArgs = {
  cursor?: Maybe<TwoFactorHistoryWhereUniqueInput>;
  orderBy?: Maybe<Array<TwoFactorHistoryOrderByInput>>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<TwoFactorHistoryWhereInput>;
};


export type Query_RootTwoFactorHistoriesCountArgs = {
  where?: Maybe<TwoFactorHistoryWhereInput>;
};


export type Query_RootTwoFactorHistoryArgs = {
  where: TwoFactorHistoryWhereUniqueInput;
};


export type Query_RootUserArgs = {
  where: UserWhereUniqueInput;
};


export type Query_RootUserSecurityQuestionsAnswerArgs = {
  where: UserSecurityQuestionsAnswerWhereUniqueInput;
};


export type Query_RootUserSecurityQuestionsAnswersArgs = {
  cursor?: Maybe<UserSecurityQuestionsAnswerWhereUniqueInput>;
  orderBy?: Maybe<Array<UserSecurityQuestionsAnswerOrderByInput>>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<UserSecurityQuestionsAnswerWhereInput>;
};


export type Query_RootUserSecurityQuestionsAnswersCountArgs = {
  where?: Maybe<UserSecurityQuestionsAnswerWhereInput>;
};


export type Query_RootUsersArgs = {
  cursor?: Maybe<UserWhereUniqueInput>;
  orderBy?: Maybe<Array<UserOrderByInput>>;
  skip?: Maybe<Scalars['Int']>;
  take?: Maybe<Scalars['Int']>;
  where?: Maybe<UserWhereInput>;
};


export type Query_RootUsersCountArgs = {
  where?: Maybe<UserWhereInput>;
};

/** columns and relationships of "resources" */
export type Resources = {
  __typename?: 'resources';
  created_at: Scalars['timestamptz'];
  id: Scalars['uuid'];
  is_active: Scalars['Boolean'];
  location: Scalars['String'];
  name: Scalars['String'];
  order: Scalars['Int'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "resources" */
export type Resources_Aggregate = {
  __typename?: 'resources_aggregate';
  aggregate?: Maybe<Resources_Aggregate_Fields>;
  nodes: Array<Resources>;
};

/** aggregate fields of "resources" */
export type Resources_Aggregate_Fields = {
  __typename?: 'resources_aggregate_fields';
  avg?: Maybe<Resources_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Resources_Max_Fields>;
  min?: Maybe<Resources_Min_Fields>;
  stddev?: Maybe<Resources_Stddev_Fields>;
  stddev_pop?: Maybe<Resources_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Resources_Stddev_Samp_Fields>;
  sum?: Maybe<Resources_Sum_Fields>;
  var_pop?: Maybe<Resources_Var_Pop_Fields>;
  var_samp?: Maybe<Resources_Var_Samp_Fields>;
  variance?: Maybe<Resources_Variance_Fields>;
};


/** aggregate fields of "resources" */
export type Resources_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Resources_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Resources_Avg_Fields = {
  __typename?: 'resources_avg_fields';
  order?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "resources". All fields are combined with a logical 'AND'. */
export type Resources_Bool_Exp = {
  _and?: Maybe<Array<Resources_Bool_Exp>>;
  _not?: Maybe<Resources_Bool_Exp>;
  _or?: Maybe<Array<Resources_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Uuid_Comparison_Exp>;
  is_active?: Maybe<Boolean_Comparison_Exp>;
  location?: Maybe<String_Comparison_Exp>;
  name?: Maybe<String_Comparison_Exp>;
  order?: Maybe<Int_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "resources" */
export enum Resources_Constraint {
  /** unique or primary key constraint */
  ResourcesPkey = 'resources_pkey'
}

/** input type for incrementing numeric columns in table "resources" */
export type Resources_Inc_Input = {
  order?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "resources" */
export type Resources_Insert_Input = {
  is_active?: Maybe<Scalars['Boolean']>;
  location?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
};

/** aggregate max on columns */
export type Resources_Max_Fields = {
  __typename?: 'resources_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  location?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type Resources_Min_Fields = {
  __typename?: 'resources_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  location?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "resources" */
export type Resources_Mutation_Response = {
  __typename?: 'resources_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Resources>;
};

/** on conflict condition type for table "resources" */
export type Resources_On_Conflict = {
  constraint: Resources_Constraint;
  update_columns: Array<Resources_Update_Column>;
  where?: Maybe<Resources_Bool_Exp>;
};

/** Ordering options when selecting data from "resources". */
export type Resources_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  is_active?: Maybe<Order_By>;
  location?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  order?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: resources */
export type Resources_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "resources" */
export enum Resources_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  IsActive = 'is_active',
  /** column name */
  Location = 'location',
  /** column name */
  Name = 'name',
  /** column name */
  Order = 'order',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "resources" */
export type Resources_Set_Input = {
  is_active?: Maybe<Scalars['Boolean']>;
  location?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
};

/** aggregate stddev on columns */
export type Resources_Stddev_Fields = {
  __typename?: 'resources_stddev_fields';
  order?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Resources_Stddev_Pop_Fields = {
  __typename?: 'resources_stddev_pop_fields';
  order?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Resources_Stddev_Samp_Fields = {
  __typename?: 'resources_stddev_samp_fields';
  order?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Resources_Sum_Fields = {
  __typename?: 'resources_sum_fields';
  order?: Maybe<Scalars['Int']>;
};

/** update columns of table "resources" */
export enum Resources_Update_Column {
  /** column name */
  IsActive = 'is_active',
  /** column name */
  Location = 'location',
  /** column name */
  Name = 'name',
  /** column name */
  Order = 'order'
}

/** aggregate var_pop on columns */
export type Resources_Var_Pop_Fields = {
  __typename?: 'resources_var_pop_fields';
  order?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Resources_Var_Samp_Fields = {
  __typename?: 'resources_var_samp_fields';
  order?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Resources_Variance_Fields = {
  __typename?: 'resources_variance_fields';
  order?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "rooms" */
export type Rooms = {
  __typename?: 'rooms';
  created_at: Scalars['timestamptz'];
  id: Scalars['Int'];
  is_active: Scalars['Boolean'];
  location: Scalars['String'];
  order: Scalars['Int'];
  room_name: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "rooms" */
export type Rooms_Aggregate = {
  __typename?: 'rooms_aggregate';
  aggregate?: Maybe<Rooms_Aggregate_Fields>;
  nodes: Array<Rooms>;
};

/** aggregate fields of "rooms" */
export type Rooms_Aggregate_Fields = {
  __typename?: 'rooms_aggregate_fields';
  avg?: Maybe<Rooms_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Rooms_Max_Fields>;
  min?: Maybe<Rooms_Min_Fields>;
  stddev?: Maybe<Rooms_Stddev_Fields>;
  stddev_pop?: Maybe<Rooms_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Rooms_Stddev_Samp_Fields>;
  sum?: Maybe<Rooms_Sum_Fields>;
  var_pop?: Maybe<Rooms_Var_Pop_Fields>;
  var_samp?: Maybe<Rooms_Var_Samp_Fields>;
  variance?: Maybe<Rooms_Variance_Fields>;
};


/** aggregate fields of "rooms" */
export type Rooms_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Rooms_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Rooms_Avg_Fields = {
  __typename?: 'rooms_avg_fields';
  id?: Maybe<Scalars['Float']>;
  order?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "rooms". All fields are combined with a logical 'AND'. */
export type Rooms_Bool_Exp = {
  _and?: Maybe<Array<Rooms_Bool_Exp>>;
  _not?: Maybe<Rooms_Bool_Exp>;
  _or?: Maybe<Array<Rooms_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  is_active?: Maybe<Boolean_Comparison_Exp>;
  location?: Maybe<String_Comparison_Exp>;
  order?: Maybe<Int_Comparison_Exp>;
  room_name?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "rooms" */
export enum Rooms_Constraint {
  /** unique or primary key constraint */
  RoomsPkey = 'rooms_pkey'
}

/** input type for incrementing numeric columns in table "rooms" */
export type Rooms_Inc_Input = {
  order?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "rooms" */
export type Rooms_Insert_Input = {
  is_active?: Maybe<Scalars['Boolean']>;
  location?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
  room_name?: Maybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Rooms_Max_Fields = {
  __typename?: 'rooms_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  location?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
  room_name?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type Rooms_Min_Fields = {
  __typename?: 'rooms_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  location?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
  room_name?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "rooms" */
export type Rooms_Mutation_Response = {
  __typename?: 'rooms_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Rooms>;
};

/** on conflict condition type for table "rooms" */
export type Rooms_On_Conflict = {
  constraint: Rooms_Constraint;
  update_columns: Array<Rooms_Update_Column>;
  where?: Maybe<Rooms_Bool_Exp>;
};

/** Ordering options when selecting data from "rooms". */
export type Rooms_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  is_active?: Maybe<Order_By>;
  location?: Maybe<Order_By>;
  order?: Maybe<Order_By>;
  room_name?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: rooms */
export type Rooms_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "rooms" */
export enum Rooms_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  IsActive = 'is_active',
  /** column name */
  Location = 'location',
  /** column name */
  Order = 'order',
  /** column name */
  RoomName = 'room_name',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "rooms" */
export type Rooms_Set_Input = {
  is_active?: Maybe<Scalars['Boolean']>;
  location?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
  room_name?: Maybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type Rooms_Stddev_Fields = {
  __typename?: 'rooms_stddev_fields';
  id?: Maybe<Scalars['Float']>;
  order?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Rooms_Stddev_Pop_Fields = {
  __typename?: 'rooms_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
  order?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Rooms_Stddev_Samp_Fields = {
  __typename?: 'rooms_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
  order?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Rooms_Sum_Fields = {
  __typename?: 'rooms_sum_fields';
  id?: Maybe<Scalars['Int']>;
  order?: Maybe<Scalars['Int']>;
};

/** update columns of table "rooms" */
export enum Rooms_Update_Column {
  /** column name */
  IsActive = 'is_active',
  /** column name */
  Location = 'location',
  /** column name */
  Order = 'order',
  /** column name */
  RoomName = 'room_name'
}

/** aggregate var_pop on columns */
export type Rooms_Var_Pop_Fields = {
  __typename?: 'rooms_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
  order?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Rooms_Var_Samp_Fields = {
  __typename?: 'rooms_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
  order?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Rooms_Variance_Fields = {
  __typename?: 'rooms_variance_fields';
  id?: Maybe<Scalars['Float']>;
  order?: Maybe<Scalars['Float']>;
};

/**
 * rota_template
 *
 *
 * columns and relationships of "rota_templates"
 */
export type Rota_Templates = {
  __typename?: 'rota_templates';
  created_at: Scalars['timestamptz'];
  days?: Maybe<Scalars['json']>;
  end_time: Scalars['timetz'];
  id: Scalars['uuid'];
  is_active: Scalars['Boolean'];
  name: Scalars['String'];
  order: Scalars['Int'];
  start_time: Scalars['timetz'];
  updated_at: Scalars['timestamptz'];
};


/**
 * rota_template
 *
 *
 * columns and relationships of "rota_templates"
 */
export type Rota_TemplatesDaysArgs = {
  path?: Maybe<Scalars['String']>;
};

/** aggregated selection of "rota_templates" */
export type Rota_Templates_Aggregate = {
  __typename?: 'rota_templates_aggregate';
  aggregate?: Maybe<Rota_Templates_Aggregate_Fields>;
  nodes: Array<Rota_Templates>;
};

/** aggregate fields of "rota_templates" */
export type Rota_Templates_Aggregate_Fields = {
  __typename?: 'rota_templates_aggregate_fields';
  avg?: Maybe<Rota_Templates_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Rota_Templates_Max_Fields>;
  min?: Maybe<Rota_Templates_Min_Fields>;
  stddev?: Maybe<Rota_Templates_Stddev_Fields>;
  stddev_pop?: Maybe<Rota_Templates_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Rota_Templates_Stddev_Samp_Fields>;
  sum?: Maybe<Rota_Templates_Sum_Fields>;
  var_pop?: Maybe<Rota_Templates_Var_Pop_Fields>;
  var_samp?: Maybe<Rota_Templates_Var_Samp_Fields>;
  variance?: Maybe<Rota_Templates_Variance_Fields>;
};


/** aggregate fields of "rota_templates" */
export type Rota_Templates_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Rota_Templates_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Rota_Templates_Avg_Fields = {
  __typename?: 'rota_templates_avg_fields';
  order?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "rota_templates". All fields are combined with a logical 'AND'. */
export type Rota_Templates_Bool_Exp = {
  _and?: Maybe<Array<Rota_Templates_Bool_Exp>>;
  _not?: Maybe<Rota_Templates_Bool_Exp>;
  _or?: Maybe<Array<Rota_Templates_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  days?: Maybe<Json_Comparison_Exp>;
  end_time?: Maybe<Timetz_Comparison_Exp>;
  id?: Maybe<Uuid_Comparison_Exp>;
  is_active?: Maybe<Boolean_Comparison_Exp>;
  name?: Maybe<String_Comparison_Exp>;
  order?: Maybe<Int_Comparison_Exp>;
  start_time?: Maybe<Timetz_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "rota_templates" */
export enum Rota_Templates_Constraint {
  /** unique or primary key constraint */
  RotaTemplatesIdKey = 'rota_templates_id_key',
  /** unique or primary key constraint */
  RotaTemplatesPkey = 'rota_templates_pkey'
}

/** input type for incrementing numeric columns in table "rota_templates" */
export type Rota_Templates_Inc_Input = {
  order?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "rota_templates" */
export type Rota_Templates_Insert_Input = {
  days?: Maybe<Scalars['json']>;
  end_time?: Maybe<Scalars['timetz']>;
  is_active?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
  start_time?: Maybe<Scalars['timetz']>;
};

/** aggregate max on columns */
export type Rota_Templates_Max_Fields = {
  __typename?: 'rota_templates_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  end_time?: Maybe<Scalars['timetz']>;
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
  start_time?: Maybe<Scalars['timetz']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type Rota_Templates_Min_Fields = {
  __typename?: 'rota_templates_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  end_time?: Maybe<Scalars['timetz']>;
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
  start_time?: Maybe<Scalars['timetz']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "rota_templates" */
export type Rota_Templates_Mutation_Response = {
  __typename?: 'rota_templates_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Rota_Templates>;
};

/** on conflict condition type for table "rota_templates" */
export type Rota_Templates_On_Conflict = {
  constraint: Rota_Templates_Constraint;
  update_columns: Array<Rota_Templates_Update_Column>;
  where?: Maybe<Rota_Templates_Bool_Exp>;
};

/** Ordering options when selecting data from "rota_templates". */
export type Rota_Templates_Order_By = {
  created_at?: Maybe<Order_By>;
  days?: Maybe<Order_By>;
  end_time?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  is_active?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  order?: Maybe<Order_By>;
  start_time?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: rota_templates */
export type Rota_Templates_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "rota_templates" */
export enum Rota_Templates_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Days = 'days',
  /** column name */
  EndTime = 'end_time',
  /** column name */
  Id = 'id',
  /** column name */
  IsActive = 'is_active',
  /** column name */
  Name = 'name',
  /** column name */
  Order = 'order',
  /** column name */
  StartTime = 'start_time',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "rota_templates" */
export type Rota_Templates_Set_Input = {
  days?: Maybe<Scalars['json']>;
  end_time?: Maybe<Scalars['timetz']>;
  is_active?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
  start_time?: Maybe<Scalars['timetz']>;
};

/** aggregate stddev on columns */
export type Rota_Templates_Stddev_Fields = {
  __typename?: 'rota_templates_stddev_fields';
  order?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Rota_Templates_Stddev_Pop_Fields = {
  __typename?: 'rota_templates_stddev_pop_fields';
  order?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Rota_Templates_Stddev_Samp_Fields = {
  __typename?: 'rota_templates_stddev_samp_fields';
  order?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Rota_Templates_Sum_Fields = {
  __typename?: 'rota_templates_sum_fields';
  order?: Maybe<Scalars['Int']>;
};

/** update columns of table "rota_templates" */
export enum Rota_Templates_Update_Column {
  /** column name */
  Days = 'days',
  /** column name */
  EndTime = 'end_time',
  /** column name */
  IsActive = 'is_active',
  /** column name */
  Name = 'name',
  /** column name */
  Order = 'order',
  /** column name */
  StartTime = 'start_time'
}

/** aggregate var_pop on columns */
export type Rota_Templates_Var_Pop_Fields = {
  __typename?: 'rota_templates_var_pop_fields';
  order?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Rota_Templates_Var_Samp_Fields = {
  __typename?: 'rota_templates_var_samp_fields';
  order?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Rota_Templates_Variance_Fields = {
  __typename?: 'rota_templates_variance_fields';
  order?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "salutation" */
export type Salutation = {
  __typename?: 'salutation';
  created_at: Scalars['timestamptz'];
  id: Scalars['uuid'];
  is_active: Scalars['Boolean'];
  order: Scalars['Int'];
  salutation: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "salutation" */
export type Salutation_Aggregate = {
  __typename?: 'salutation_aggregate';
  aggregate?: Maybe<Salutation_Aggregate_Fields>;
  nodes: Array<Salutation>;
};

/** aggregate fields of "salutation" */
export type Salutation_Aggregate_Fields = {
  __typename?: 'salutation_aggregate_fields';
  avg?: Maybe<Salutation_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Salutation_Max_Fields>;
  min?: Maybe<Salutation_Min_Fields>;
  stddev?: Maybe<Salutation_Stddev_Fields>;
  stddev_pop?: Maybe<Salutation_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Salutation_Stddev_Samp_Fields>;
  sum?: Maybe<Salutation_Sum_Fields>;
  var_pop?: Maybe<Salutation_Var_Pop_Fields>;
  var_samp?: Maybe<Salutation_Var_Samp_Fields>;
  variance?: Maybe<Salutation_Variance_Fields>;
};


/** aggregate fields of "salutation" */
export type Salutation_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Salutation_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Salutation_Avg_Fields = {
  __typename?: 'salutation_avg_fields';
  order?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "salutation". All fields are combined with a logical 'AND'. */
export type Salutation_Bool_Exp = {
  _and?: Maybe<Array<Salutation_Bool_Exp>>;
  _not?: Maybe<Salutation_Bool_Exp>;
  _or?: Maybe<Array<Salutation_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Uuid_Comparison_Exp>;
  is_active?: Maybe<Boolean_Comparison_Exp>;
  order?: Maybe<Int_Comparison_Exp>;
  salutation?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "salutation" */
export enum Salutation_Constraint {
  /** unique or primary key constraint */
  SalutationPkey = 'salutation_pkey'
}

/** input type for incrementing numeric columns in table "salutation" */
export type Salutation_Inc_Input = {
  order?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "salutation" */
export type Salutation_Insert_Input = {
  is_active?: Maybe<Scalars['Boolean']>;
  salutation?: Maybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Salutation_Max_Fields = {
  __typename?: 'salutation_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  order?: Maybe<Scalars['Int']>;
  salutation?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type Salutation_Min_Fields = {
  __typename?: 'salutation_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  order?: Maybe<Scalars['Int']>;
  salutation?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "salutation" */
export type Salutation_Mutation_Response = {
  __typename?: 'salutation_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Salutation>;
};

/** on conflict condition type for table "salutation" */
export type Salutation_On_Conflict = {
  constraint: Salutation_Constraint;
  update_columns: Array<Salutation_Update_Column>;
  where?: Maybe<Salutation_Bool_Exp>;
};

/** Ordering options when selecting data from "salutation". */
export type Salutation_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  is_active?: Maybe<Order_By>;
  order?: Maybe<Order_By>;
  salutation?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: salutation */
export type Salutation_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "salutation" */
export enum Salutation_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  IsActive = 'is_active',
  /** column name */
  Order = 'order',
  /** column name */
  Salutation = 'salutation',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "salutation" */
export type Salutation_Set_Input = {
  is_active?: Maybe<Scalars['Boolean']>;
  order?: Maybe<Scalars['Int']>;
  salutation?: Maybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type Salutation_Stddev_Fields = {
  __typename?: 'salutation_stddev_fields';
  order?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Salutation_Stddev_Pop_Fields = {
  __typename?: 'salutation_stddev_pop_fields';
  order?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Salutation_Stddev_Samp_Fields = {
  __typename?: 'salutation_stddev_samp_fields';
  order?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Salutation_Sum_Fields = {
  __typename?: 'salutation_sum_fields';
  order?: Maybe<Scalars['Int']>;
};

/** update columns of table "salutation" */
export enum Salutation_Update_Column {
  /** column name */
  IsActive = 'is_active',
  /** column name */
  Order = 'order',
  /** column name */
  Salutation = 'salutation'
}

/** aggregate var_pop on columns */
export type Salutation_Var_Pop_Fields = {
  __typename?: 'salutation_var_pop_fields';
  order?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Salutation_Var_Samp_Fields = {
  __typename?: 'salutation_var_samp_fields';
  order?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Salutation_Variance_Fields = {
  __typename?: 'salutation_variance_fields';
  order?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "stock_take" */
export type Stock_Take = {
  __typename?: 'stock_take';
  count_no: Scalars['String'];
  counted_by: Scalars['String'];
  created_at: Scalars['timestamptz'];
  discrepanciesDown?: Maybe<Scalars['Int']>;
  discrepanciesUp?: Maybe<Scalars['Int']>;
  id: Scalars['uuid'];
  location: Scalars['String'];
  name: Scalars['String'];
  start_date: Scalars['String'];
  status?: Maybe<Scalars['String']>;
  total: Scalars['numeric'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "stock_take" */
export type Stock_Take_Aggregate = {
  __typename?: 'stock_take_aggregate';
  aggregate?: Maybe<Stock_Take_Aggregate_Fields>;
  nodes: Array<Stock_Take>;
};

/** aggregate fields of "stock_take" */
export type Stock_Take_Aggregate_Fields = {
  __typename?: 'stock_take_aggregate_fields';
  avg?: Maybe<Stock_Take_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Stock_Take_Max_Fields>;
  min?: Maybe<Stock_Take_Min_Fields>;
  stddev?: Maybe<Stock_Take_Stddev_Fields>;
  stddev_pop?: Maybe<Stock_Take_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Stock_Take_Stddev_Samp_Fields>;
  sum?: Maybe<Stock_Take_Sum_Fields>;
  var_pop?: Maybe<Stock_Take_Var_Pop_Fields>;
  var_samp?: Maybe<Stock_Take_Var_Samp_Fields>;
  variance?: Maybe<Stock_Take_Variance_Fields>;
};


/** aggregate fields of "stock_take" */
export type Stock_Take_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Stock_Take_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Stock_Take_Avg_Fields = {
  __typename?: 'stock_take_avg_fields';
  discrepanciesDown?: Maybe<Scalars['Float']>;
  discrepanciesUp?: Maybe<Scalars['Float']>;
  total?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "stock_take". All fields are combined with a logical 'AND'. */
export type Stock_Take_Bool_Exp = {
  _and?: Maybe<Array<Stock_Take_Bool_Exp>>;
  _not?: Maybe<Stock_Take_Bool_Exp>;
  _or?: Maybe<Array<Stock_Take_Bool_Exp>>;
  count_no?: Maybe<String_Comparison_Exp>;
  counted_by?: Maybe<String_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  discrepanciesDown?: Maybe<Int_Comparison_Exp>;
  discrepanciesUp?: Maybe<Int_Comparison_Exp>;
  id?: Maybe<Uuid_Comparison_Exp>;
  location?: Maybe<String_Comparison_Exp>;
  name?: Maybe<String_Comparison_Exp>;
  start_date?: Maybe<String_Comparison_Exp>;
  status?: Maybe<String_Comparison_Exp>;
  total?: Maybe<Numeric_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "stock_take" */
export enum Stock_Take_Constraint {
  /** unique or primary key constraint */
  ProductListStockPkey = 'product_list_stock_pkey'
}

/** input type for incrementing numeric columns in table "stock_take" */
export type Stock_Take_Inc_Input = {
  discrepanciesDown?: Maybe<Scalars['Int']>;
  discrepanciesUp?: Maybe<Scalars['Int']>;
  total?: Maybe<Scalars['numeric']>;
};

/** input type for inserting data into table "stock_take" */
export type Stock_Take_Insert_Input = {
  count_no?: Maybe<Scalars['String']>;
  counted_by?: Maybe<Scalars['String']>;
  discrepanciesDown?: Maybe<Scalars['Int']>;
  discrepanciesUp?: Maybe<Scalars['Int']>;
  location?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  start_date?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  total?: Maybe<Scalars['numeric']>;
};

/** aggregate max on columns */
export type Stock_Take_Max_Fields = {
  __typename?: 'stock_take_max_fields';
  count_no?: Maybe<Scalars['String']>;
  counted_by?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  discrepanciesDown?: Maybe<Scalars['Int']>;
  discrepanciesUp?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['uuid']>;
  location?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  start_date?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  total?: Maybe<Scalars['numeric']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type Stock_Take_Min_Fields = {
  __typename?: 'stock_take_min_fields';
  count_no?: Maybe<Scalars['String']>;
  counted_by?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  discrepanciesDown?: Maybe<Scalars['Int']>;
  discrepanciesUp?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['uuid']>;
  location?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  start_date?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  total?: Maybe<Scalars['numeric']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "stock_take" */
export type Stock_Take_Mutation_Response = {
  __typename?: 'stock_take_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Stock_Take>;
};

/** on conflict condition type for table "stock_take" */
export type Stock_Take_On_Conflict = {
  constraint: Stock_Take_Constraint;
  update_columns: Array<Stock_Take_Update_Column>;
  where?: Maybe<Stock_Take_Bool_Exp>;
};

/** Ordering options when selecting data from "stock_take". */
export type Stock_Take_Order_By = {
  count_no?: Maybe<Order_By>;
  counted_by?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  discrepanciesDown?: Maybe<Order_By>;
  discrepanciesUp?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  location?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  start_date?: Maybe<Order_By>;
  status?: Maybe<Order_By>;
  total?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: stock_take */
export type Stock_Take_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "stock_take" */
export enum Stock_Take_Select_Column {
  /** column name */
  CountNo = 'count_no',
  /** column name */
  CountedBy = 'counted_by',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DiscrepanciesDown = 'discrepanciesDown',
  /** column name */
  DiscrepanciesUp = 'discrepanciesUp',
  /** column name */
  Id = 'id',
  /** column name */
  Location = 'location',
  /** column name */
  Name = 'name',
  /** column name */
  StartDate = 'start_date',
  /** column name */
  Status = 'status',
  /** column name */
  Total = 'total',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "stock_take" */
export type Stock_Take_Set_Input = {
  count_no?: Maybe<Scalars['String']>;
  counted_by?: Maybe<Scalars['String']>;
  discrepanciesDown?: Maybe<Scalars['Int']>;
  discrepanciesUp?: Maybe<Scalars['Int']>;
  location?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  start_date?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  total?: Maybe<Scalars['numeric']>;
};

/** aggregate stddev on columns */
export type Stock_Take_Stddev_Fields = {
  __typename?: 'stock_take_stddev_fields';
  discrepanciesDown?: Maybe<Scalars['Float']>;
  discrepanciesUp?: Maybe<Scalars['Float']>;
  total?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Stock_Take_Stddev_Pop_Fields = {
  __typename?: 'stock_take_stddev_pop_fields';
  discrepanciesDown?: Maybe<Scalars['Float']>;
  discrepanciesUp?: Maybe<Scalars['Float']>;
  total?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Stock_Take_Stddev_Samp_Fields = {
  __typename?: 'stock_take_stddev_samp_fields';
  discrepanciesDown?: Maybe<Scalars['Float']>;
  discrepanciesUp?: Maybe<Scalars['Float']>;
  total?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Stock_Take_Sum_Fields = {
  __typename?: 'stock_take_sum_fields';
  discrepanciesDown?: Maybe<Scalars['Int']>;
  discrepanciesUp?: Maybe<Scalars['Int']>;
  total?: Maybe<Scalars['numeric']>;
};

/** update columns of table "stock_take" */
export enum Stock_Take_Update_Column {
  /** column name */
  CountNo = 'count_no',
  /** column name */
  CountedBy = 'counted_by',
  /** column name */
  DiscrepanciesDown = 'discrepanciesDown',
  /** column name */
  DiscrepanciesUp = 'discrepanciesUp',
  /** column name */
  Location = 'location',
  /** column name */
  Name = 'name',
  /** column name */
  StartDate = 'start_date',
  /** column name */
  Status = 'status',
  /** column name */
  Total = 'total'
}

/** aggregate var_pop on columns */
export type Stock_Take_Var_Pop_Fields = {
  __typename?: 'stock_take_var_pop_fields';
  discrepanciesDown?: Maybe<Scalars['Float']>;
  discrepanciesUp?: Maybe<Scalars['Float']>;
  total?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Stock_Take_Var_Samp_Fields = {
  __typename?: 'stock_take_var_samp_fields';
  discrepanciesDown?: Maybe<Scalars['Float']>;
  discrepanciesUp?: Maybe<Scalars['Float']>;
  total?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Stock_Take_Variance_Fields = {
  __typename?: 'stock_take_variance_fields';
  discrepanciesDown?: Maybe<Scalars['Float']>;
  discrepanciesUp?: Maybe<Scalars['Float']>;
  total?: Maybe<Scalars['Float']>;
};

export type Subscription_Root = {
  __typename?: 'subscription_root';
  /** fetch data from the table: "Discounts" */
  Discounts: Array<Discounts>;
  /** fetch aggregated fields from the table: "Discounts" */
  Discounts_aggregate: Discounts_Aggregate;
  /** fetch data from the table: "Discounts" using primary key columns */
  Discounts_by_pk?: Maybe<Discounts>;
  /** fetch data from the table: "LMS_slugs" */
  LMS_slugs: Array<Lms_Slugs>;
  /** fetch aggregated fields from the table: "LMS_slugs" */
  LMS_slugs_aggregate: Lms_Slugs_Aggregate;
  /** fetch data from the table: "LMS_slugs" using primary key columns */
  LMS_slugs_by_pk?: Maybe<Lms_Slugs>;
  /** fetch data from the table: "Labs" */
  Labs: Array<Labs>;
  /** fetch aggregated fields from the table: "Labs" */
  Labs_aggregate: Labs_Aggregate;
  /** fetch data from the table: "Labs" using primary key columns */
  Labs_by_pk?: Maybe<Labs>;
  /** fetch data from the table: "Lists_campaign" */
  Lists_campaign: Array<Lists_Campaign>;
  /** fetch data from the table: "Lists_campaign" using primary key columns */
  Lists_campaign_by_pk?: Maybe<Lists_Campaign>;
  /** fetch data from the table: "Newsletter_campaign" */
  Newsletter_campaign: Array<Newsletter_Campaign>;
  /** fetch aggregated fields from the table: "Newsletter_campaign" */
  Newsletter_campaign_aggregate: Newsletter_Campaign_Aggregate;
  /** fetch data from the table: "Newsletter_campaign" using primary key columns */
  Newsletter_campaign_by_pk?: Maybe<Newsletter_Campaign>;
  /** fetch data from the table: "SMS_campaign" */
  SMS_campaign: Array<Sms_Campaign>;
  /** fetch data from the table: "SMS_campaign" using primary key columns */
  SMS_campaign_by_pk?: Maybe<Sms_Campaign>;
  /** fetch data from the table: "appointment_status" */
  appointment_status: Array<Appointment_Status>;
  /** fetch aggregated fields from the table: "appointment_status" */
  appointment_status_aggregate: Appointment_Status_Aggregate;
  /** fetch data from the table: "appointment_status" using primary key columns */
  appointment_status_by_pk?: Maybe<Appointment_Status>;
  /** fetch data from the table: "block_out_options" */
  block_out_options: Array<Block_Out_Options>;
  /** fetch aggregated fields from the table: "block_out_options" */
  block_out_options_aggregate: Block_Out_Options_Aggregate;
  /** fetch data from the table: "block_out_options" using primary key columns */
  block_out_options_by_pk?: Maybe<Block_Out_Options>;
  /** fetch data from the table: "business_details" */
  business_details: Array<Business_Details>;
  /** fetch data from the table: "business_details" using primary key columns */
  business_details_by_pk?: Maybe<Business_Details>;
  /** fetch data from the table: "calendar_settings" */
  calendar_settings: Array<Calendar_Settings>;
  /** fetch data from the table: "calendar_settings" using primary key columns */
  calendar_settings_by_pk?: Maybe<Calendar_Settings>;
  /** fetch data from the table: "cancellation_reasons" */
  cancellation_reasons: Array<Cancellation_Reasons>;
  /** fetch aggregated fields from the table: "cancellation_reasons" */
  cancellation_reasons_aggregate: Cancellation_Reasons_Aggregate;
  /** fetch data from the table: "cancellation_reasons" using primary key columns */
  cancellation_reasons_by_pk?: Maybe<Cancellation_Reasons>;
  /** fetch data from the table: "candidate_list" */
  candidate_list: Array<Candidate_List>;
  /** fetch data from the table: "candidate_list" using primary key columns */
  candidate_list_by_pk?: Maybe<Candidate_List>;
  /** fetch data from the table: "category" */
  category: Array<Category>;
  /** fetch aggregated fields from the table: "category" */
  category_aggregate: Category_Aggregate;
  /** fetch data from the table: "category" using primary key columns */
  category_by_pk?: Maybe<Category>;
  /** fetch data from the table: "clients_data" */
  clients_data: Array<Clients_Data>;
  /** fetch aggregated fields from the table: "clients_data" */
  clients_data_aggregate: Clients_Data_Aggregate;
  /** fetch data from the table: "clients_data" using primary key columns */
  clients_data_by_pk?: Maybe<Clients_Data>;
  /** fetch data from the table: "colors" */
  colors: Array<Colors>;
  /** fetch data from the table: "colors" using primary key columns */
  colors_by_pk?: Maybe<Colors>;
  /** fetch data from the table: "contacts" */
  contacts: Array<Contacts>;
  /** fetch data from the table: "contacts" using primary key columns */
  contacts_by_pk?: Maybe<Contacts>;
  /** fetch data from the table: "courses" */
  courses: Array<Courses>;
  /** fetch data from the table: "courses" using primary key columns */
  courses_by_pk?: Maybe<Courses>;
  /** fetch data from the table: "credit_note_type" */
  credit_note_type: Array<Credit_Note_Type>;
  /** fetch aggregated fields from the table: "credit_note_type" */
  credit_note_type_aggregate: Credit_Note_Type_Aggregate;
  /** fetch data from the table: "credit_note_type" using primary key columns */
  credit_note_type_by_pk?: Maybe<Credit_Note_Type>;
  /** fetch data from the table: "credit_notes" */
  credit_notes: Array<Credit_Notes>;
  /** fetch aggregated fields from the table: "credit_notes" */
  credit_notes_aggregate: Credit_Notes_Aggregate;
  /** fetch data from the table: "credit_notes" using primary key columns */
  credit_notes_by_pk?: Maybe<Credit_Notes>;
  /** fetch data from the table: "custom_fields_categories" */
  custom_fields_categories: Array<Custom_Fields_Categories>;
  /** fetch aggregated fields from the table: "custom_fields_categories" */
  custom_fields_categories_aggregate: Custom_Fields_Categories_Aggregate;
  /** fetch data from the table: "custom_fields_categories" using primary key columns */
  custom_fields_categories_by_pk?: Maybe<Custom_Fields_Categories>;
  /** fetch data from the table: "debt" */
  debt: Array<Debt>;
  /** fetch aggregated fields from the table: "debt" */
  debt_aggregate: Debt_Aggregate;
  /** fetch data from the table: "debt" using primary key columns */
  debt_by_pk?: Maybe<Debt>;
  /** fetch data from the table: "departments" */
  departments: Array<Departments>;
  /** fetch aggregated fields from the table: "departments" */
  departments_aggregate: Departments_Aggregate;
  /** fetch data from the table: "departments" using primary key columns */
  departments_by_pk?: Maybe<Departments>;
  /** fetch data from the table: "diagnostic_codes" */
  diagnostic_codes: Array<Diagnostic_Codes>;
  /** fetch aggregated fields from the table: "diagnostic_codes" */
  diagnostic_codes_aggregate: Diagnostic_Codes_Aggregate;
  /** fetch data from the table: "diagnostic_codes" using primary key columns */
  diagnostic_codes_by_pk?: Maybe<Diagnostic_Codes>;
  /** fetch data from the table: "diagnostic_codeset" */
  diagnostic_codeset: Array<Diagnostic_Codeset>;
  /** fetch aggregated fields from the table: "diagnostic_codeset" */
  diagnostic_codeset_aggregate: Diagnostic_Codeset_Aggregate;
  /** fetch data from the table: "diagnostic_codeset" using primary key columns */
  diagnostic_codeset_by_pk?: Maybe<Diagnostic_Codeset>;
  /** fetch data from the table: "drugs" */
  drugs: Array<Drugs>;
  /** fetch aggregated fields from the table: "drugs" */
  drugs_aggregate: Drugs_Aggregate;
  /** fetch data from the table: "drugs" using primary key columns */
  drugs_by_pk?: Maybe<Drugs>;
  /** fetch data from the table: "family_relationships" */
  family_relationships: Array<Family_Relationships>;
  /** fetch aggregated fields from the table: "family_relationships" */
  family_relationships_aggregate: Family_Relationships_Aggregate;
  /** fetch data from the table: "family_relationships" using primary key columns */
  family_relationships_by_pk?: Maybe<Family_Relationships>;
  /** fetch data from the table: "feature_flags" */
  feature_flags: Array<Feature_Flags>;
  /** fetch data from the table: "feature_flags" using primary key columns */
  feature_flags_by_pk?: Maybe<Feature_Flags>;
  /** fetch data from the table: "invoices" */
  invoices: Array<Invoices>;
  /** fetch aggregated fields from the table: "invoices" */
  invoices_aggregate: Invoices_Aggregate;
  /** fetch data from the table: "invoices" using primary key columns */
  invoices_by_pk?: Maybe<Invoices>;
  /** fetch data from the table: "issuing_company" */
  issuing_company: Array<Issuing_Company>;
  /** fetch aggregated fields from the table: "issuing_company" */
  issuing_company_aggregate: Issuing_Company_Aggregate;
  /** fetch data from the table: "issuing_company" using primary key columns */
  issuing_company_by_pk?: Maybe<Issuing_Company>;
  /** fetch data from the table: "job_candidates" */
  job_candidates: Array<Job_Candidates>;
  /** fetch data from the table: "job_candidates" using primary key columns */
  job_candidates_by_pk?: Maybe<Job_Candidates>;
  /** fetch data from the table: "job_openings" */
  job_openings: Array<Job_Openings>;
  /** fetch data from the table: "job_openings" using primary key columns */
  job_openings_by_pk?: Maybe<Job_Openings>;
  /** fetch data from the table: "job_title" */
  job_title: Array<Job_Title>;
  /** fetch aggregated fields from the table: "job_title" */
  job_title_aggregate: Job_Title_Aggregate;
  /** fetch data from the table: "job_title" using primary key columns */
  job_title_by_pk?: Maybe<Job_Title>;
  /** fetch data from the table: "labs_dashboard" */
  labs_dashboard: Array<Labs_Dashboard>;
  /** fetch aggregated fields from the table: "labs_dashboard" */
  labs_dashboard_aggregate: Labs_Dashboard_Aggregate;
  /** fetch data from the table: "labs_dashboard" using primary key columns */
  labs_dashboard_by_pk?: Maybe<Labs_Dashboard>;
  /** fetch data from the table: "lead" */
  lead: Array<Lead>;
  /** fetch data from the table: "lead" using primary key columns */
  lead_by_pk?: Maybe<Lead>;
  /** fetch data from the table: "lead_fields" */
  lead_fields: Array<Lead_Fields>;
  /** fetch aggregated fields from the table: "lead_fields" */
  lead_fields_aggregate: Lead_Fields_Aggregate;
  /** fetch data from the table: "lead_fields" using primary key columns */
  lead_fields_by_pk?: Maybe<Lead_Fields>;
  /** fetch data from the table: "library" */
  library: Array<Library>;
  /** fetch aggregated fields from the table: "library" */
  library_aggregate: Library_Aggregate;
  /** fetch data from the table: "library" using primary key columns */
  library_by_pk?: Maybe<Library>;
  /** fetch data from the table: "library_installers" */
  library_installers: Array<Library_Installers>;
  /** fetch aggregated fields from the table: "library_installers" */
  library_installers_aggregate: Library_Installers_Aggregate;
  /** fetch data from the table: "library_installers" using primary key columns */
  library_installers_by_pk?: Maybe<Library_Installers>;
  /** fetch data from the table: "locations" */
  locations: Array<Locations>;
  /** fetch aggregated fields from the table: "locations" */
  locations_aggregate: Locations_Aggregate;
  /** fetch data from the table: "locations" using primary key columns */
  locations_by_pk?: Maybe<Locations>;
  /** fetch data from the table: "marketing_campaign" */
  marketing_campaign: Array<Marketing_Campaign>;
  /** fetch aggregated fields from the table: "marketing_campaign" */
  marketing_campaign_aggregate: Marketing_Campaign_Aggregate;
  /** fetch data from the table: "marketing_campaign" using primary key columns */
  marketing_campaign_by_pk?: Maybe<Marketing_Campaign>;
  /** fetch data from the table: "marketing_referral" */
  marketing_referral: Array<Marketing_Referral>;
  /** fetch aggregated fields from the table: "marketing_referral" */
  marketing_referral_aggregate: Marketing_Referral_Aggregate;
  /** fetch data from the table: "marketing_referral" using primary key columns */
  marketing_referral_by_pk?: Maybe<Marketing_Referral>;
  /** fetch data from the table: "marketing_source" */
  marketing_source: Array<Marketing_Source>;
  /** fetch aggregated fields from the table: "marketing_source" */
  marketing_source_aggregate: Marketing_Source_Aggregate;
  /** fetch data from the table: "marketing_source" using primary key columns */
  marketing_source_by_pk?: Maybe<Marketing_Source>;
  /** fetch data from the table: "payment_types" */
  payment_types: Array<Payment_Types>;
  /** fetch aggregated fields from the table: "payment_types" */
  payment_types_aggregate: Payment_Types_Aggregate;
  /** fetch data from the table: "payment_types" using primary key columns */
  payment_types_by_pk?: Maybe<Payment_Types>;
  /** fetch data from the table: "payments" */
  payments: Array<Payments>;
  /** fetch aggregated fields from the table: "payments" */
  payments_aggregate: Payments_Aggregate;
  /** fetch data from the table: "payments" using primary key columns */
  payments_by_pk?: Maybe<Payments>;
  /** fetch data from the table: "petty_cash_types" */
  petty_cash_types: Array<Petty_Cash_Types>;
  /** fetch aggregated fields from the table: "petty_cash_types" */
  petty_cash_types_aggregate: Petty_Cash_Types_Aggregate;
  /** fetch data from the table: "petty_cash_types" using primary key columns */
  petty_cash_types_by_pk?: Maybe<Petty_Cash_Types>;
  /** fetch data from the table: "product_lists" */
  product_lists: Array<Product_Lists>;
  /** fetch aggregated fields from the table: "product_lists" */
  product_lists_aggregate: Product_Lists_Aggregate;
  /** fetch data from the table: "product_lists" using primary key columns */
  product_lists_by_pk?: Maybe<Product_Lists>;
  /** fetch data from the table: "prototype" */
  prototype: Array<Prototype>;
  /** fetch aggregated fields from the table: "prototype" */
  prototype_aggregate: Prototype_Aggregate;
  /** fetch data from the table: "prototype" using primary key columns */
  prototype_by_pk?: Maybe<Prototype>;
  /** fetch data from the table: "purchase_order" */
  purchase_order: Array<Purchase_Order>;
  /** fetch aggregated fields from the table: "purchase_order" */
  purchase_order_aggregate: Purchase_Order_Aggregate;
  /** fetch data from the table: "purchase_order" using primary key columns */
  purchase_order_by_pk?: Maybe<Purchase_Order>;
  /** fetch data from the table: "resources" */
  resources: Array<Resources>;
  /** fetch aggregated fields from the table: "resources" */
  resources_aggregate: Resources_Aggregate;
  /** fetch data from the table: "resources" using primary key columns */
  resources_by_pk?: Maybe<Resources>;
  /** fetch data from the table: "rooms" */
  rooms: Array<Rooms>;
  /** fetch aggregated fields from the table: "rooms" */
  rooms_aggregate: Rooms_Aggregate;
  /** fetch data from the table: "rooms" using primary key columns */
  rooms_by_pk?: Maybe<Rooms>;
  /** fetch data from the table: "rota_templates" */
  rota_templates: Array<Rota_Templates>;
  /** fetch aggregated fields from the table: "rota_templates" */
  rota_templates_aggregate: Rota_Templates_Aggregate;
  /** fetch data from the table: "rota_templates" using primary key columns */
  rota_templates_by_pk?: Maybe<Rota_Templates>;
  /** fetch data from the table: "salutation" */
  salutation: Array<Salutation>;
  /** fetch aggregated fields from the table: "salutation" */
  salutation_aggregate: Salutation_Aggregate;
  /** fetch data from the table: "salutation" using primary key columns */
  salutation_by_pk?: Maybe<Salutation>;
  /** fetch data from the table: "stock_take" */
  stock_take: Array<Stock_Take>;
  /** fetch aggregated fields from the table: "stock_take" */
  stock_take_aggregate: Stock_Take_Aggregate;
  /** fetch data from the table: "stock_take" using primary key columns */
  stock_take_by_pk?: Maybe<Stock_Take>;
  /** fetch data from the table: "supplier" */
  supplier: Array<Supplier>;
  /** fetch aggregated fields from the table: "supplier" */
  supplier_aggregate: Supplier_Aggregate;
  /** fetch data from the table: "supplier" using primary key columns */
  supplier_by_pk?: Maybe<Supplier>;
  /** fetch data from the table: "tax_rates" */
  tax_rates: Array<Tax_Rates>;
  /** fetch aggregated fields from the table: "tax_rates" */
  tax_rates_aggregate: Tax_Rates_Aggregate;
  /** fetch data from the table: "tax_rates" using primary key columns */
  tax_rates_by_pk?: Maybe<Tax_Rates>;
  /** fetch data from the table: "third_parties" */
  third_parties: Array<Third_Parties>;
  /** fetch aggregated fields from the table: "third_parties" */
  third_parties_aggregate: Third_Parties_Aggregate;
  /** fetch data from the table: "third_parties" using primary key columns */
  third_parties_by_pk?: Maybe<Third_Parties>;
};


export type Subscription_RootDiscountsArgs = {
  distinct_on?: Maybe<Array<Discounts_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Discounts_Order_By>>;
  where?: Maybe<Discounts_Bool_Exp>;
};


export type Subscription_RootDiscounts_AggregateArgs = {
  distinct_on?: Maybe<Array<Discounts_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Discounts_Order_By>>;
  where?: Maybe<Discounts_Bool_Exp>;
};


export type Subscription_RootDiscounts_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Subscription_RootLms_SlugsArgs = {
  distinct_on?: Maybe<Array<Lms_Slugs_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Lms_Slugs_Order_By>>;
  where?: Maybe<Lms_Slugs_Bool_Exp>;
};


export type Subscription_RootLms_Slugs_AggregateArgs = {
  distinct_on?: Maybe<Array<Lms_Slugs_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Lms_Slugs_Order_By>>;
  where?: Maybe<Lms_Slugs_Bool_Exp>;
};


export type Subscription_RootLms_Slugs_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Subscription_RootLabsArgs = {
  distinct_on?: Maybe<Array<Labs_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Labs_Order_By>>;
  where?: Maybe<Labs_Bool_Exp>;
};


export type Subscription_RootLabs_AggregateArgs = {
  distinct_on?: Maybe<Array<Labs_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Labs_Order_By>>;
  where?: Maybe<Labs_Bool_Exp>;
};


export type Subscription_RootLabs_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Subscription_RootLists_CampaignArgs = {
  distinct_on?: Maybe<Array<Lists_Campaign_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Lists_Campaign_Order_By>>;
  where?: Maybe<Lists_Campaign_Bool_Exp>;
};


export type Subscription_RootLists_Campaign_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Subscription_RootNewsletter_CampaignArgs = {
  distinct_on?: Maybe<Array<Newsletter_Campaign_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Newsletter_Campaign_Order_By>>;
  where?: Maybe<Newsletter_Campaign_Bool_Exp>;
};


export type Subscription_RootNewsletter_Campaign_AggregateArgs = {
  distinct_on?: Maybe<Array<Newsletter_Campaign_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Newsletter_Campaign_Order_By>>;
  where?: Maybe<Newsletter_Campaign_Bool_Exp>;
};


export type Subscription_RootNewsletter_Campaign_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Subscription_RootSms_CampaignArgs = {
  distinct_on?: Maybe<Array<Sms_Campaign_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Sms_Campaign_Order_By>>;
  where?: Maybe<Sms_Campaign_Bool_Exp>;
};


export type Subscription_RootSms_Campaign_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Subscription_RootAppointment_StatusArgs = {
  distinct_on?: Maybe<Array<Appointment_Status_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Appointment_Status_Order_By>>;
  where?: Maybe<Appointment_Status_Bool_Exp>;
};


export type Subscription_RootAppointment_Status_AggregateArgs = {
  distinct_on?: Maybe<Array<Appointment_Status_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Appointment_Status_Order_By>>;
  where?: Maybe<Appointment_Status_Bool_Exp>;
};


export type Subscription_RootAppointment_Status_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Subscription_RootBlock_Out_OptionsArgs = {
  distinct_on?: Maybe<Array<Block_Out_Options_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Block_Out_Options_Order_By>>;
  where?: Maybe<Block_Out_Options_Bool_Exp>;
};


export type Subscription_RootBlock_Out_Options_AggregateArgs = {
  distinct_on?: Maybe<Array<Block_Out_Options_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Block_Out_Options_Order_By>>;
  where?: Maybe<Block_Out_Options_Bool_Exp>;
};


export type Subscription_RootBlock_Out_Options_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Subscription_RootBusiness_DetailsArgs = {
  distinct_on?: Maybe<Array<Business_Details_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Business_Details_Order_By>>;
  where?: Maybe<Business_Details_Bool_Exp>;
};


export type Subscription_RootBusiness_Details_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootCalendar_SettingsArgs = {
  distinct_on?: Maybe<Array<Calendar_Settings_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Calendar_Settings_Order_By>>;
  where?: Maybe<Calendar_Settings_Bool_Exp>;
};


export type Subscription_RootCalendar_Settings_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Subscription_RootCancellation_ReasonsArgs = {
  distinct_on?: Maybe<Array<Cancellation_Reasons_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Cancellation_Reasons_Order_By>>;
  where?: Maybe<Cancellation_Reasons_Bool_Exp>;
};


export type Subscription_RootCancellation_Reasons_AggregateArgs = {
  distinct_on?: Maybe<Array<Cancellation_Reasons_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Cancellation_Reasons_Order_By>>;
  where?: Maybe<Cancellation_Reasons_Bool_Exp>;
};


export type Subscription_RootCancellation_Reasons_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Subscription_RootCandidate_ListArgs = {
  distinct_on?: Maybe<Array<Candidate_List_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Candidate_List_Order_By>>;
  where?: Maybe<Candidate_List_Bool_Exp>;
};


export type Subscription_RootCandidate_List_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootCategoryArgs = {
  distinct_on?: Maybe<Array<Category_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Category_Order_By>>;
  where?: Maybe<Category_Bool_Exp>;
};


export type Subscription_RootCategory_AggregateArgs = {
  distinct_on?: Maybe<Array<Category_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Category_Order_By>>;
  where?: Maybe<Category_Bool_Exp>;
};


export type Subscription_RootCategory_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Subscription_RootClients_DataArgs = {
  distinct_on?: Maybe<Array<Clients_Data_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Clients_Data_Order_By>>;
  where?: Maybe<Clients_Data_Bool_Exp>;
};


export type Subscription_RootClients_Data_AggregateArgs = {
  distinct_on?: Maybe<Array<Clients_Data_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Clients_Data_Order_By>>;
  where?: Maybe<Clients_Data_Bool_Exp>;
};


export type Subscription_RootClients_Data_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Subscription_RootColorsArgs = {
  distinct_on?: Maybe<Array<Colors_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Colors_Order_By>>;
  where?: Maybe<Colors_Bool_Exp>;
};


export type Subscription_RootColors_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Subscription_RootContactsArgs = {
  distinct_on?: Maybe<Array<Contacts_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Contacts_Order_By>>;
  where?: Maybe<Contacts_Bool_Exp>;
};


export type Subscription_RootContacts_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Subscription_RootCoursesArgs = {
  distinct_on?: Maybe<Array<Courses_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Courses_Order_By>>;
  where?: Maybe<Courses_Bool_Exp>;
};


export type Subscription_RootCourses_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Subscription_RootCredit_Note_TypeArgs = {
  distinct_on?: Maybe<Array<Credit_Note_Type_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Credit_Note_Type_Order_By>>;
  where?: Maybe<Credit_Note_Type_Bool_Exp>;
};


export type Subscription_RootCredit_Note_Type_AggregateArgs = {
  distinct_on?: Maybe<Array<Credit_Note_Type_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Credit_Note_Type_Order_By>>;
  where?: Maybe<Credit_Note_Type_Bool_Exp>;
};


export type Subscription_RootCredit_Note_Type_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Subscription_RootCredit_NotesArgs = {
  distinct_on?: Maybe<Array<Credit_Notes_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Credit_Notes_Order_By>>;
  where?: Maybe<Credit_Notes_Bool_Exp>;
};


export type Subscription_RootCredit_Notes_AggregateArgs = {
  distinct_on?: Maybe<Array<Credit_Notes_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Credit_Notes_Order_By>>;
  where?: Maybe<Credit_Notes_Bool_Exp>;
};


export type Subscription_RootCredit_Notes_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Subscription_RootCustom_Fields_CategoriesArgs = {
  distinct_on?: Maybe<Array<Custom_Fields_Categories_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Custom_Fields_Categories_Order_By>>;
  where?: Maybe<Custom_Fields_Categories_Bool_Exp>;
};


export type Subscription_RootCustom_Fields_Categories_AggregateArgs = {
  distinct_on?: Maybe<Array<Custom_Fields_Categories_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Custom_Fields_Categories_Order_By>>;
  where?: Maybe<Custom_Fields_Categories_Bool_Exp>;
};


export type Subscription_RootCustom_Fields_Categories_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Subscription_RootDebtArgs = {
  distinct_on?: Maybe<Array<Debt_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Debt_Order_By>>;
  where?: Maybe<Debt_Bool_Exp>;
};


export type Subscription_RootDebt_AggregateArgs = {
  distinct_on?: Maybe<Array<Debt_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Debt_Order_By>>;
  where?: Maybe<Debt_Bool_Exp>;
};


export type Subscription_RootDebt_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Subscription_RootDepartmentsArgs = {
  distinct_on?: Maybe<Array<Departments_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Departments_Order_By>>;
  where?: Maybe<Departments_Bool_Exp>;
};


export type Subscription_RootDepartments_AggregateArgs = {
  distinct_on?: Maybe<Array<Departments_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Departments_Order_By>>;
  where?: Maybe<Departments_Bool_Exp>;
};


export type Subscription_RootDepartments_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Subscription_RootDiagnostic_CodesArgs = {
  distinct_on?: Maybe<Array<Diagnostic_Codes_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Diagnostic_Codes_Order_By>>;
  where?: Maybe<Diagnostic_Codes_Bool_Exp>;
};


export type Subscription_RootDiagnostic_Codes_AggregateArgs = {
  distinct_on?: Maybe<Array<Diagnostic_Codes_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Diagnostic_Codes_Order_By>>;
  where?: Maybe<Diagnostic_Codes_Bool_Exp>;
};


export type Subscription_RootDiagnostic_Codes_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Subscription_RootDiagnostic_CodesetArgs = {
  distinct_on?: Maybe<Array<Diagnostic_Codeset_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Diagnostic_Codeset_Order_By>>;
  where?: Maybe<Diagnostic_Codeset_Bool_Exp>;
};


export type Subscription_RootDiagnostic_Codeset_AggregateArgs = {
  distinct_on?: Maybe<Array<Diagnostic_Codeset_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Diagnostic_Codeset_Order_By>>;
  where?: Maybe<Diagnostic_Codeset_Bool_Exp>;
};


export type Subscription_RootDiagnostic_Codeset_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Subscription_RootDrugsArgs = {
  distinct_on?: Maybe<Array<Drugs_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Drugs_Order_By>>;
  where?: Maybe<Drugs_Bool_Exp>;
};


export type Subscription_RootDrugs_AggregateArgs = {
  distinct_on?: Maybe<Array<Drugs_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Drugs_Order_By>>;
  where?: Maybe<Drugs_Bool_Exp>;
};


export type Subscription_RootDrugs_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Subscription_RootFamily_RelationshipsArgs = {
  distinct_on?: Maybe<Array<Family_Relationships_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Family_Relationships_Order_By>>;
  where?: Maybe<Family_Relationships_Bool_Exp>;
};


export type Subscription_RootFamily_Relationships_AggregateArgs = {
  distinct_on?: Maybe<Array<Family_Relationships_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Family_Relationships_Order_By>>;
  where?: Maybe<Family_Relationships_Bool_Exp>;
};


export type Subscription_RootFamily_Relationships_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Subscription_RootFeature_FlagsArgs = {
  distinct_on?: Maybe<Array<Feature_Flags_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Feature_Flags_Order_By>>;
  where?: Maybe<Feature_Flags_Bool_Exp>;
};


export type Subscription_RootFeature_Flags_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Subscription_RootInvoicesArgs = {
  distinct_on?: Maybe<Array<Invoices_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Invoices_Order_By>>;
  where?: Maybe<Invoices_Bool_Exp>;
};


export type Subscription_RootInvoices_AggregateArgs = {
  distinct_on?: Maybe<Array<Invoices_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Invoices_Order_By>>;
  where?: Maybe<Invoices_Bool_Exp>;
};


export type Subscription_RootInvoices_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Subscription_RootIssuing_CompanyArgs = {
  distinct_on?: Maybe<Array<Issuing_Company_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Issuing_Company_Order_By>>;
  where?: Maybe<Issuing_Company_Bool_Exp>;
};


export type Subscription_RootIssuing_Company_AggregateArgs = {
  distinct_on?: Maybe<Array<Issuing_Company_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Issuing_Company_Order_By>>;
  where?: Maybe<Issuing_Company_Bool_Exp>;
};


export type Subscription_RootIssuing_Company_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Subscription_RootJob_CandidatesArgs = {
  distinct_on?: Maybe<Array<Job_Candidates_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Job_Candidates_Order_By>>;
  where?: Maybe<Job_Candidates_Bool_Exp>;
};


export type Subscription_RootJob_Candidates_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootJob_OpeningsArgs = {
  distinct_on?: Maybe<Array<Job_Openings_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Job_Openings_Order_By>>;
  where?: Maybe<Job_Openings_Bool_Exp>;
};


export type Subscription_RootJob_Openings_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootJob_TitleArgs = {
  distinct_on?: Maybe<Array<Job_Title_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Job_Title_Order_By>>;
  where?: Maybe<Job_Title_Bool_Exp>;
};


export type Subscription_RootJob_Title_AggregateArgs = {
  distinct_on?: Maybe<Array<Job_Title_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Job_Title_Order_By>>;
  where?: Maybe<Job_Title_Bool_Exp>;
};


export type Subscription_RootJob_Title_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Subscription_RootLabs_DashboardArgs = {
  distinct_on?: Maybe<Array<Labs_Dashboard_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Labs_Dashboard_Order_By>>;
  where?: Maybe<Labs_Dashboard_Bool_Exp>;
};


export type Subscription_RootLabs_Dashboard_AggregateArgs = {
  distinct_on?: Maybe<Array<Labs_Dashboard_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Labs_Dashboard_Order_By>>;
  where?: Maybe<Labs_Dashboard_Bool_Exp>;
};


export type Subscription_RootLabs_Dashboard_By_PkArgs = {
  labNo: Scalars['Int'];
};


export type Subscription_RootLeadArgs = {
  distinct_on?: Maybe<Array<Lead_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Lead_Order_By>>;
  where?: Maybe<Lead_Bool_Exp>;
};


export type Subscription_RootLead_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Subscription_RootLead_FieldsArgs = {
  distinct_on?: Maybe<Array<Lead_Fields_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Lead_Fields_Order_By>>;
  where?: Maybe<Lead_Fields_Bool_Exp>;
};


export type Subscription_RootLead_Fields_AggregateArgs = {
  distinct_on?: Maybe<Array<Lead_Fields_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Lead_Fields_Order_By>>;
  where?: Maybe<Lead_Fields_Bool_Exp>;
};


export type Subscription_RootLead_Fields_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Subscription_RootLibraryArgs = {
  distinct_on?: Maybe<Array<Library_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Library_Order_By>>;
  where?: Maybe<Library_Bool_Exp>;
};


export type Subscription_RootLibrary_AggregateArgs = {
  distinct_on?: Maybe<Array<Library_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Library_Order_By>>;
  where?: Maybe<Library_Bool_Exp>;
};


export type Subscription_RootLibrary_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Subscription_RootLibrary_InstallersArgs = {
  distinct_on?: Maybe<Array<Library_Installers_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Library_Installers_Order_By>>;
  where?: Maybe<Library_Installers_Bool_Exp>;
};


export type Subscription_RootLibrary_Installers_AggregateArgs = {
  distinct_on?: Maybe<Array<Library_Installers_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Library_Installers_Order_By>>;
  where?: Maybe<Library_Installers_Bool_Exp>;
};


export type Subscription_RootLibrary_Installers_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootLocationsArgs = {
  distinct_on?: Maybe<Array<Locations_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Locations_Order_By>>;
  where?: Maybe<Locations_Bool_Exp>;
};


export type Subscription_RootLocations_AggregateArgs = {
  distinct_on?: Maybe<Array<Locations_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Locations_Order_By>>;
  where?: Maybe<Locations_Bool_Exp>;
};


export type Subscription_RootLocations_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Subscription_RootMarketing_CampaignArgs = {
  distinct_on?: Maybe<Array<Marketing_Campaign_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Marketing_Campaign_Order_By>>;
  where?: Maybe<Marketing_Campaign_Bool_Exp>;
};


export type Subscription_RootMarketing_Campaign_AggregateArgs = {
  distinct_on?: Maybe<Array<Marketing_Campaign_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Marketing_Campaign_Order_By>>;
  where?: Maybe<Marketing_Campaign_Bool_Exp>;
};


export type Subscription_RootMarketing_Campaign_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Subscription_RootMarketing_ReferralArgs = {
  distinct_on?: Maybe<Array<Marketing_Referral_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Marketing_Referral_Order_By>>;
  where?: Maybe<Marketing_Referral_Bool_Exp>;
};


export type Subscription_RootMarketing_Referral_AggregateArgs = {
  distinct_on?: Maybe<Array<Marketing_Referral_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Marketing_Referral_Order_By>>;
  where?: Maybe<Marketing_Referral_Bool_Exp>;
};


export type Subscription_RootMarketing_Referral_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Subscription_RootMarketing_SourceArgs = {
  distinct_on?: Maybe<Array<Marketing_Source_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Marketing_Source_Order_By>>;
  where?: Maybe<Marketing_Source_Bool_Exp>;
};


export type Subscription_RootMarketing_Source_AggregateArgs = {
  distinct_on?: Maybe<Array<Marketing_Source_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Marketing_Source_Order_By>>;
  where?: Maybe<Marketing_Source_Bool_Exp>;
};


export type Subscription_RootMarketing_Source_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Subscription_RootPayment_TypesArgs = {
  distinct_on?: Maybe<Array<Payment_Types_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Payment_Types_Order_By>>;
  where?: Maybe<Payment_Types_Bool_Exp>;
};


export type Subscription_RootPayment_Types_AggregateArgs = {
  distinct_on?: Maybe<Array<Payment_Types_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Payment_Types_Order_By>>;
  where?: Maybe<Payment_Types_Bool_Exp>;
};


export type Subscription_RootPayment_Types_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Subscription_RootPaymentsArgs = {
  distinct_on?: Maybe<Array<Payments_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Payments_Order_By>>;
  where?: Maybe<Payments_Bool_Exp>;
};


export type Subscription_RootPayments_AggregateArgs = {
  distinct_on?: Maybe<Array<Payments_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Payments_Order_By>>;
  where?: Maybe<Payments_Bool_Exp>;
};


export type Subscription_RootPayments_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Subscription_RootPetty_Cash_TypesArgs = {
  distinct_on?: Maybe<Array<Petty_Cash_Types_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Petty_Cash_Types_Order_By>>;
  where?: Maybe<Petty_Cash_Types_Bool_Exp>;
};


export type Subscription_RootPetty_Cash_Types_AggregateArgs = {
  distinct_on?: Maybe<Array<Petty_Cash_Types_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Petty_Cash_Types_Order_By>>;
  where?: Maybe<Petty_Cash_Types_Bool_Exp>;
};


export type Subscription_RootPetty_Cash_Types_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Subscription_RootProduct_ListsArgs = {
  distinct_on?: Maybe<Array<Product_Lists_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Product_Lists_Order_By>>;
  where?: Maybe<Product_Lists_Bool_Exp>;
};


export type Subscription_RootProduct_Lists_AggregateArgs = {
  distinct_on?: Maybe<Array<Product_Lists_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Product_Lists_Order_By>>;
  where?: Maybe<Product_Lists_Bool_Exp>;
};


export type Subscription_RootProduct_Lists_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Subscription_RootPrototypeArgs = {
  distinct_on?: Maybe<Array<Prototype_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Prototype_Order_By>>;
  where?: Maybe<Prototype_Bool_Exp>;
};


export type Subscription_RootPrototype_AggregateArgs = {
  distinct_on?: Maybe<Array<Prototype_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Prototype_Order_By>>;
  where?: Maybe<Prototype_Bool_Exp>;
};


export type Subscription_RootPrototype_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Subscription_RootPurchase_OrderArgs = {
  distinct_on?: Maybe<Array<Purchase_Order_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Purchase_Order_Order_By>>;
  where?: Maybe<Purchase_Order_Bool_Exp>;
};


export type Subscription_RootPurchase_Order_AggregateArgs = {
  distinct_on?: Maybe<Array<Purchase_Order_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Purchase_Order_Order_By>>;
  where?: Maybe<Purchase_Order_Bool_Exp>;
};


export type Subscription_RootPurchase_Order_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Subscription_RootResourcesArgs = {
  distinct_on?: Maybe<Array<Resources_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Resources_Order_By>>;
  where?: Maybe<Resources_Bool_Exp>;
};


export type Subscription_RootResources_AggregateArgs = {
  distinct_on?: Maybe<Array<Resources_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Resources_Order_By>>;
  where?: Maybe<Resources_Bool_Exp>;
};


export type Subscription_RootResources_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Subscription_RootRoomsArgs = {
  distinct_on?: Maybe<Array<Rooms_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Rooms_Order_By>>;
  where?: Maybe<Rooms_Bool_Exp>;
};


export type Subscription_RootRooms_AggregateArgs = {
  distinct_on?: Maybe<Array<Rooms_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Rooms_Order_By>>;
  where?: Maybe<Rooms_Bool_Exp>;
};


export type Subscription_RootRooms_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootRota_TemplatesArgs = {
  distinct_on?: Maybe<Array<Rota_Templates_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Rota_Templates_Order_By>>;
  where?: Maybe<Rota_Templates_Bool_Exp>;
};


export type Subscription_RootRota_Templates_AggregateArgs = {
  distinct_on?: Maybe<Array<Rota_Templates_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Rota_Templates_Order_By>>;
  where?: Maybe<Rota_Templates_Bool_Exp>;
};


export type Subscription_RootRota_Templates_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Subscription_RootSalutationArgs = {
  distinct_on?: Maybe<Array<Salutation_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Salutation_Order_By>>;
  where?: Maybe<Salutation_Bool_Exp>;
};


export type Subscription_RootSalutation_AggregateArgs = {
  distinct_on?: Maybe<Array<Salutation_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Salutation_Order_By>>;
  where?: Maybe<Salutation_Bool_Exp>;
};


export type Subscription_RootSalutation_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Subscription_RootStock_TakeArgs = {
  distinct_on?: Maybe<Array<Stock_Take_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Stock_Take_Order_By>>;
  where?: Maybe<Stock_Take_Bool_Exp>;
};


export type Subscription_RootStock_Take_AggregateArgs = {
  distinct_on?: Maybe<Array<Stock_Take_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Stock_Take_Order_By>>;
  where?: Maybe<Stock_Take_Bool_Exp>;
};


export type Subscription_RootStock_Take_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Subscription_RootSupplierArgs = {
  distinct_on?: Maybe<Array<Supplier_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Supplier_Order_By>>;
  where?: Maybe<Supplier_Bool_Exp>;
};


export type Subscription_RootSupplier_AggregateArgs = {
  distinct_on?: Maybe<Array<Supplier_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Supplier_Order_By>>;
  where?: Maybe<Supplier_Bool_Exp>;
};


export type Subscription_RootSupplier_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Subscription_RootTax_RatesArgs = {
  distinct_on?: Maybe<Array<Tax_Rates_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Tax_Rates_Order_By>>;
  where?: Maybe<Tax_Rates_Bool_Exp>;
};


export type Subscription_RootTax_Rates_AggregateArgs = {
  distinct_on?: Maybe<Array<Tax_Rates_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Tax_Rates_Order_By>>;
  where?: Maybe<Tax_Rates_Bool_Exp>;
};


export type Subscription_RootTax_Rates_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Subscription_RootThird_PartiesArgs = {
  distinct_on?: Maybe<Array<Third_Parties_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Third_Parties_Order_By>>;
  where?: Maybe<Third_Parties_Bool_Exp>;
};


export type Subscription_RootThird_Parties_AggregateArgs = {
  distinct_on?: Maybe<Array<Third_Parties_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Third_Parties_Order_By>>;
  where?: Maybe<Third_Parties_Bool_Exp>;
};


export type Subscription_RootThird_Parties_By_PkArgs = {
  id: Scalars['uuid'];
};

/** columns and relationships of "supplier" */
export type Supplier = {
  __typename?: 'supplier';
  created_at: Scalars['timestamptz'];
  id: Scalars['uuid'];
  is_active: Scalars['Boolean'];
  order: Scalars['Int'];
  products_assigned: Scalars['Int'];
  supplier_name: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "supplier" */
export type Supplier_Aggregate = {
  __typename?: 'supplier_aggregate';
  aggregate?: Maybe<Supplier_Aggregate_Fields>;
  nodes: Array<Supplier>;
};

/** aggregate fields of "supplier" */
export type Supplier_Aggregate_Fields = {
  __typename?: 'supplier_aggregate_fields';
  avg?: Maybe<Supplier_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Supplier_Max_Fields>;
  min?: Maybe<Supplier_Min_Fields>;
  stddev?: Maybe<Supplier_Stddev_Fields>;
  stddev_pop?: Maybe<Supplier_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Supplier_Stddev_Samp_Fields>;
  sum?: Maybe<Supplier_Sum_Fields>;
  var_pop?: Maybe<Supplier_Var_Pop_Fields>;
  var_samp?: Maybe<Supplier_Var_Samp_Fields>;
  variance?: Maybe<Supplier_Variance_Fields>;
};


/** aggregate fields of "supplier" */
export type Supplier_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Supplier_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Supplier_Avg_Fields = {
  __typename?: 'supplier_avg_fields';
  order?: Maybe<Scalars['Float']>;
  products_assigned?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "supplier". All fields are combined with a logical 'AND'. */
export type Supplier_Bool_Exp = {
  _and?: Maybe<Array<Supplier_Bool_Exp>>;
  _not?: Maybe<Supplier_Bool_Exp>;
  _or?: Maybe<Array<Supplier_Bool_Exp>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Uuid_Comparison_Exp>;
  is_active?: Maybe<Boolean_Comparison_Exp>;
  order?: Maybe<Int_Comparison_Exp>;
  products_assigned?: Maybe<Int_Comparison_Exp>;
  supplier_name?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "supplier" */
export enum Supplier_Constraint {
  /** unique or primary key constraint */
  ProductListSupplierPkey = 'product_list_supplier_pkey'
}

/** input type for incrementing numeric columns in table "supplier" */
export type Supplier_Inc_Input = {
  order?: Maybe<Scalars['Int']>;
  products_assigned?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "supplier" */
export type Supplier_Insert_Input = {
  is_active?: Maybe<Scalars['Boolean']>;
  order?: Maybe<Scalars['Int']>;
  products_assigned?: Maybe<Scalars['Int']>;
  supplier_name?: Maybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Supplier_Max_Fields = {
  __typename?: 'supplier_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  order?: Maybe<Scalars['Int']>;
  products_assigned?: Maybe<Scalars['Int']>;
  supplier_name?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type Supplier_Min_Fields = {
  __typename?: 'supplier_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  order?: Maybe<Scalars['Int']>;
  products_assigned?: Maybe<Scalars['Int']>;
  supplier_name?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "supplier" */
export type Supplier_Mutation_Response = {
  __typename?: 'supplier_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Supplier>;
};

/** on conflict condition type for table "supplier" */
export type Supplier_On_Conflict = {
  constraint: Supplier_Constraint;
  update_columns: Array<Supplier_Update_Column>;
  where?: Maybe<Supplier_Bool_Exp>;
};

/** Ordering options when selecting data from "supplier". */
export type Supplier_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  is_active?: Maybe<Order_By>;
  order?: Maybe<Order_By>;
  products_assigned?: Maybe<Order_By>;
  supplier_name?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: supplier */
export type Supplier_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "supplier" */
export enum Supplier_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  IsActive = 'is_active',
  /** column name */
  Order = 'order',
  /** column name */
  ProductsAssigned = 'products_assigned',
  /** column name */
  SupplierName = 'supplier_name',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "supplier" */
export type Supplier_Set_Input = {
  is_active?: Maybe<Scalars['Boolean']>;
  order?: Maybe<Scalars['Int']>;
  products_assigned?: Maybe<Scalars['Int']>;
  supplier_name?: Maybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type Supplier_Stddev_Fields = {
  __typename?: 'supplier_stddev_fields';
  order?: Maybe<Scalars['Float']>;
  products_assigned?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Supplier_Stddev_Pop_Fields = {
  __typename?: 'supplier_stddev_pop_fields';
  order?: Maybe<Scalars['Float']>;
  products_assigned?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Supplier_Stddev_Samp_Fields = {
  __typename?: 'supplier_stddev_samp_fields';
  order?: Maybe<Scalars['Float']>;
  products_assigned?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Supplier_Sum_Fields = {
  __typename?: 'supplier_sum_fields';
  order?: Maybe<Scalars['Int']>;
  products_assigned?: Maybe<Scalars['Int']>;
};

/** update columns of table "supplier" */
export enum Supplier_Update_Column {
  /** column name */
  IsActive = 'is_active',
  /** column name */
  Order = 'order',
  /** column name */
  ProductsAssigned = 'products_assigned',
  /** column name */
  SupplierName = 'supplier_name'
}

/** aggregate var_pop on columns */
export type Supplier_Var_Pop_Fields = {
  __typename?: 'supplier_var_pop_fields';
  order?: Maybe<Scalars['Float']>;
  products_assigned?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Supplier_Var_Samp_Fields = {
  __typename?: 'supplier_var_samp_fields';
  order?: Maybe<Scalars['Float']>;
  products_assigned?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Supplier_Variance_Fields = {
  __typename?: 'supplier_variance_fields';
  order?: Maybe<Scalars['Float']>;
  products_assigned?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "tax_rates" */
export type Tax_Rates = {
  __typename?: 'tax_rates';
  created_at: Scalars['timetz'];
  glCode?: Maybe<Scalars['String']>;
  id: Scalars['uuid'];
  is_active: Scalars['Boolean'];
  name: Scalars['String'];
  order: Scalars['Int'];
  updated_at: Scalars['timetz'];
  value: Scalars['Float'];
};

/** aggregated selection of "tax_rates" */
export type Tax_Rates_Aggregate = {
  __typename?: 'tax_rates_aggregate';
  aggregate?: Maybe<Tax_Rates_Aggregate_Fields>;
  nodes: Array<Tax_Rates>;
};

/** aggregate fields of "tax_rates" */
export type Tax_Rates_Aggregate_Fields = {
  __typename?: 'tax_rates_aggregate_fields';
  avg?: Maybe<Tax_Rates_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Tax_Rates_Max_Fields>;
  min?: Maybe<Tax_Rates_Min_Fields>;
  stddev?: Maybe<Tax_Rates_Stddev_Fields>;
  stddev_pop?: Maybe<Tax_Rates_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Tax_Rates_Stddev_Samp_Fields>;
  sum?: Maybe<Tax_Rates_Sum_Fields>;
  var_pop?: Maybe<Tax_Rates_Var_Pop_Fields>;
  var_samp?: Maybe<Tax_Rates_Var_Samp_Fields>;
  variance?: Maybe<Tax_Rates_Variance_Fields>;
};


/** aggregate fields of "tax_rates" */
export type Tax_Rates_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Tax_Rates_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Tax_Rates_Avg_Fields = {
  __typename?: 'tax_rates_avg_fields';
  order?: Maybe<Scalars['Float']>;
  value?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "tax_rates". All fields are combined with a logical 'AND'. */
export type Tax_Rates_Bool_Exp = {
  _and?: Maybe<Array<Tax_Rates_Bool_Exp>>;
  _not?: Maybe<Tax_Rates_Bool_Exp>;
  _or?: Maybe<Array<Tax_Rates_Bool_Exp>>;
  created_at?: Maybe<Timetz_Comparison_Exp>;
  glCode?: Maybe<String_Comparison_Exp>;
  id?: Maybe<Uuid_Comparison_Exp>;
  is_active?: Maybe<Boolean_Comparison_Exp>;
  name?: Maybe<String_Comparison_Exp>;
  order?: Maybe<Int_Comparison_Exp>;
  updated_at?: Maybe<Timetz_Comparison_Exp>;
  value?: Maybe<Float_Comparison_Exp>;
};

/** unique or primary key constraints on table "tax_rates" */
export enum Tax_Rates_Constraint {
  /** unique or primary key constraint */
  TaxesPkey = 'Taxes_pkey'
}

/** input type for incrementing numeric columns in table "tax_rates" */
export type Tax_Rates_Inc_Input = {
  order?: Maybe<Scalars['Int']>;
  value?: Maybe<Scalars['Float']>;
};

/** input type for inserting data into table "tax_rates" */
export type Tax_Rates_Insert_Input = {
  glCode?: Maybe<Scalars['String']>;
  is_active?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
  value?: Maybe<Scalars['Float']>;
};

/** aggregate max on columns */
export type Tax_Rates_Max_Fields = {
  __typename?: 'tax_rates_max_fields';
  created_at?: Maybe<Scalars['timetz']>;
  glCode?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timetz']>;
  value?: Maybe<Scalars['Float']>;
};

/** aggregate min on columns */
export type Tax_Rates_Min_Fields = {
  __typename?: 'tax_rates_min_fields';
  created_at?: Maybe<Scalars['timetz']>;
  glCode?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timetz']>;
  value?: Maybe<Scalars['Float']>;
};

/** response of any mutation on the table "tax_rates" */
export type Tax_Rates_Mutation_Response = {
  __typename?: 'tax_rates_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Tax_Rates>;
};

/** on conflict condition type for table "tax_rates" */
export type Tax_Rates_On_Conflict = {
  constraint: Tax_Rates_Constraint;
  update_columns: Array<Tax_Rates_Update_Column>;
  where?: Maybe<Tax_Rates_Bool_Exp>;
};

/** Ordering options when selecting data from "tax_rates". */
export type Tax_Rates_Order_By = {
  created_at?: Maybe<Order_By>;
  glCode?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  is_active?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  order?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  value?: Maybe<Order_By>;
};

/** primary key columns input for table: tax_rates */
export type Tax_Rates_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "tax_rates" */
export enum Tax_Rates_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  GlCode = 'glCode',
  /** column name */
  Id = 'id',
  /** column name */
  IsActive = 'is_active',
  /** column name */
  Name = 'name',
  /** column name */
  Order = 'order',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  Value = 'value'
}

/** input type for updating data in table "tax_rates" */
export type Tax_Rates_Set_Input = {
  glCode?: Maybe<Scalars['String']>;
  is_active?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timetz']>;
  value?: Maybe<Scalars['Float']>;
};

/** aggregate stddev on columns */
export type Tax_Rates_Stddev_Fields = {
  __typename?: 'tax_rates_stddev_fields';
  order?: Maybe<Scalars['Float']>;
  value?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Tax_Rates_Stddev_Pop_Fields = {
  __typename?: 'tax_rates_stddev_pop_fields';
  order?: Maybe<Scalars['Float']>;
  value?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Tax_Rates_Stddev_Samp_Fields = {
  __typename?: 'tax_rates_stddev_samp_fields';
  order?: Maybe<Scalars['Float']>;
  value?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Tax_Rates_Sum_Fields = {
  __typename?: 'tax_rates_sum_fields';
  order?: Maybe<Scalars['Int']>;
  value?: Maybe<Scalars['Float']>;
};

/** update columns of table "tax_rates" */
export enum Tax_Rates_Update_Column {
  /** column name */
  GlCode = 'glCode',
  /** column name */
  IsActive = 'is_active',
  /** column name */
  Name = 'name',
  /** column name */
  Order = 'order',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  Value = 'value'
}

/** aggregate var_pop on columns */
export type Tax_Rates_Var_Pop_Fields = {
  __typename?: 'tax_rates_var_pop_fields';
  order?: Maybe<Scalars['Float']>;
  value?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Tax_Rates_Var_Samp_Fields = {
  __typename?: 'tax_rates_var_samp_fields';
  order?: Maybe<Scalars['Float']>;
  value?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Tax_Rates_Variance_Fields = {
  __typename?: 'tax_rates_variance_fields';
  order?: Maybe<Scalars['Float']>;
  value?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "third_parties" */
export type Third_Parties = {
  __typename?: 'third_parties';
  city?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at: Scalars['timestamptz'];
  email?: Maybe<Scalars['String']>;
  health_code_identifier?: Maybe<Scalars['String']>;
  id: Scalars['uuid'];
  is_active: Scalars['Boolean'];
  name: Scalars['String'];
  order: Scalars['Int'];
  phone?: Maybe<Scalars['String']>;
  post_code?: Maybe<Scalars['String']>;
  provider_no?: Maybe<Scalars['String']>;
  street?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
  website?: Maybe<Scalars['String']>;
};

/** aggregated selection of "third_parties" */
export type Third_Parties_Aggregate = {
  __typename?: 'third_parties_aggregate';
  aggregate?: Maybe<Third_Parties_Aggregate_Fields>;
  nodes: Array<Third_Parties>;
};

/** aggregate fields of "third_parties" */
export type Third_Parties_Aggregate_Fields = {
  __typename?: 'third_parties_aggregate_fields';
  avg?: Maybe<Third_Parties_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Third_Parties_Max_Fields>;
  min?: Maybe<Third_Parties_Min_Fields>;
  stddev?: Maybe<Third_Parties_Stddev_Fields>;
  stddev_pop?: Maybe<Third_Parties_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Third_Parties_Stddev_Samp_Fields>;
  sum?: Maybe<Third_Parties_Sum_Fields>;
  var_pop?: Maybe<Third_Parties_Var_Pop_Fields>;
  var_samp?: Maybe<Third_Parties_Var_Samp_Fields>;
  variance?: Maybe<Third_Parties_Variance_Fields>;
};


/** aggregate fields of "third_parties" */
export type Third_Parties_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Third_Parties_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Third_Parties_Avg_Fields = {
  __typename?: 'third_parties_avg_fields';
  order?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "third_parties". All fields are combined with a logical 'AND'. */
export type Third_Parties_Bool_Exp = {
  _and?: Maybe<Array<Third_Parties_Bool_Exp>>;
  _not?: Maybe<Third_Parties_Bool_Exp>;
  _or?: Maybe<Array<Third_Parties_Bool_Exp>>;
  city?: Maybe<String_Comparison_Exp>;
  country?: Maybe<String_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  email?: Maybe<String_Comparison_Exp>;
  health_code_identifier?: Maybe<String_Comparison_Exp>;
  id?: Maybe<Uuid_Comparison_Exp>;
  is_active?: Maybe<Boolean_Comparison_Exp>;
  name?: Maybe<String_Comparison_Exp>;
  order?: Maybe<Int_Comparison_Exp>;
  phone?: Maybe<String_Comparison_Exp>;
  post_code?: Maybe<String_Comparison_Exp>;
  provider_no?: Maybe<String_Comparison_Exp>;
  street?: Maybe<String_Comparison_Exp>;
  type?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
  website?: Maybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "third_parties" */
export enum Third_Parties_Constraint {
  /** unique or primary key constraint */
  ThirdPartiesPkey = 'third_parties_pkey'
}

/** input type for incrementing numeric columns in table "third_parties" */
export type Third_Parties_Inc_Input = {
  order?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "third_parties" */
export type Third_Parties_Insert_Input = {
  city?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  email?: Maybe<Scalars['String']>;
  health_code_identifier?: Maybe<Scalars['String']>;
  is_active?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
  phone?: Maybe<Scalars['String']>;
  post_code?: Maybe<Scalars['String']>;
  provider_no?: Maybe<Scalars['String']>;
  street?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  website?: Maybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Third_Parties_Max_Fields = {
  __typename?: 'third_parties_max_fields';
  city?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  email?: Maybe<Scalars['String']>;
  health_code_identifier?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
  phone?: Maybe<Scalars['String']>;
  post_code?: Maybe<Scalars['String']>;
  provider_no?: Maybe<Scalars['String']>;
  street?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  website?: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type Third_Parties_Min_Fields = {
  __typename?: 'third_parties_min_fields';
  city?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  email?: Maybe<Scalars['String']>;
  health_code_identifier?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
  phone?: Maybe<Scalars['String']>;
  post_code?: Maybe<Scalars['String']>;
  provider_no?: Maybe<Scalars['String']>;
  street?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  website?: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "third_parties" */
export type Third_Parties_Mutation_Response = {
  __typename?: 'third_parties_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Third_Parties>;
};

/** on conflict condition type for table "third_parties" */
export type Third_Parties_On_Conflict = {
  constraint: Third_Parties_Constraint;
  update_columns: Array<Third_Parties_Update_Column>;
  where?: Maybe<Third_Parties_Bool_Exp>;
};

/** Ordering options when selecting data from "third_parties". */
export type Third_Parties_Order_By = {
  city?: Maybe<Order_By>;
  country?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  email?: Maybe<Order_By>;
  health_code_identifier?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  is_active?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  order?: Maybe<Order_By>;
  phone?: Maybe<Order_By>;
  post_code?: Maybe<Order_By>;
  provider_no?: Maybe<Order_By>;
  street?: Maybe<Order_By>;
  type?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  website?: Maybe<Order_By>;
};

/** primary key columns input for table: third_parties */
export type Third_Parties_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "third_parties" */
export enum Third_Parties_Select_Column {
  /** column name */
  City = 'city',
  /** column name */
  Country = 'country',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Email = 'email',
  /** column name */
  HealthCodeIdentifier = 'health_code_identifier',
  /** column name */
  Id = 'id',
  /** column name */
  IsActive = 'is_active',
  /** column name */
  Name = 'name',
  /** column name */
  Order = 'order',
  /** column name */
  Phone = 'phone',
  /** column name */
  PostCode = 'post_code',
  /** column name */
  ProviderNo = 'provider_no',
  /** column name */
  Street = 'street',
  /** column name */
  Type = 'type',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  Website = 'website'
}

/** input type for updating data in table "third_parties" */
export type Third_Parties_Set_Input = {
  city?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  email?: Maybe<Scalars['String']>;
  health_code_identifier?: Maybe<Scalars['String']>;
  is_active?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  order?: Maybe<Scalars['Int']>;
  phone?: Maybe<Scalars['String']>;
  post_code?: Maybe<Scalars['String']>;
  provider_no?: Maybe<Scalars['String']>;
  street?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  website?: Maybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type Third_Parties_Stddev_Fields = {
  __typename?: 'third_parties_stddev_fields';
  order?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Third_Parties_Stddev_Pop_Fields = {
  __typename?: 'third_parties_stddev_pop_fields';
  order?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Third_Parties_Stddev_Samp_Fields = {
  __typename?: 'third_parties_stddev_samp_fields';
  order?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Third_Parties_Sum_Fields = {
  __typename?: 'third_parties_sum_fields';
  order?: Maybe<Scalars['Int']>;
};

/** update columns of table "third_parties" */
export enum Third_Parties_Update_Column {
  /** column name */
  City = 'city',
  /** column name */
  Country = 'country',
  /** column name */
  Email = 'email',
  /** column name */
  HealthCodeIdentifier = 'health_code_identifier',
  /** column name */
  IsActive = 'is_active',
  /** column name */
  Name = 'name',
  /** column name */
  Order = 'order',
  /** column name */
  Phone = 'phone',
  /** column name */
  PostCode = 'post_code',
  /** column name */
  ProviderNo = 'provider_no',
  /** column name */
  Street = 'street',
  /** column name */
  Type = 'type',
  /** column name */
  Website = 'website'
}

/** aggregate var_pop on columns */
export type Third_Parties_Var_Pop_Fields = {
  __typename?: 'third_parties_var_pop_fields';
  order?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Third_Parties_Var_Samp_Fields = {
  __typename?: 'third_parties_var_samp_fields';
  order?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Third_Parties_Variance_Fields = {
  __typename?: 'third_parties_variance_fields';
  order?: Maybe<Scalars['Float']>;
};


/** Boolean expression to compare columns of type "time". All fields are combined with logical 'AND'. */
export type Time_Comparison_Exp = {
  _eq?: Maybe<Scalars['time']>;
  _gt?: Maybe<Scalars['time']>;
  _gte?: Maybe<Scalars['time']>;
  _in?: Maybe<Array<Scalars['time']>>;
  _is_null?: Maybe<Scalars['Boolean']>;
  _lt?: Maybe<Scalars['time']>;
  _lte?: Maybe<Scalars['time']>;
  _neq?: Maybe<Scalars['time']>;
  _nin?: Maybe<Array<Scalars['time']>>;
};


/** Boolean expression to compare columns of type "timestamptz". All fields are combined with logical 'AND'. */
export type Timestamptz_Comparison_Exp = {
  _eq?: Maybe<Scalars['timestamptz']>;
  _gt?: Maybe<Scalars['timestamptz']>;
  _gte?: Maybe<Scalars['timestamptz']>;
  _in?: Maybe<Array<Scalars['timestamptz']>>;
  _is_null?: Maybe<Scalars['Boolean']>;
  _lt?: Maybe<Scalars['timestamptz']>;
  _lte?: Maybe<Scalars['timestamptz']>;
  _neq?: Maybe<Scalars['timestamptz']>;
  _nin?: Maybe<Array<Scalars['timestamptz']>>;
};


/** Boolean expression to compare columns of type "timetz". All fields are combined with logical 'AND'. */
export type Timetz_Comparison_Exp = {
  _eq?: Maybe<Scalars['timetz']>;
  _gt?: Maybe<Scalars['timetz']>;
  _gte?: Maybe<Scalars['timetz']>;
  _in?: Maybe<Array<Scalars['timetz']>>;
  _is_null?: Maybe<Scalars['Boolean']>;
  _lt?: Maybe<Scalars['timetz']>;
  _lte?: Maybe<Scalars['timetz']>;
  _neq?: Maybe<Scalars['timetz']>;
  _nin?: Maybe<Array<Scalars['timetz']>>;
};


/** Boolean expression to compare columns of type "uuid". All fields are combined with logical 'AND'. */
export type Uuid_Comparison_Exp = {
  _eq?: Maybe<Scalars['uuid']>;
  _gt?: Maybe<Scalars['uuid']>;
  _gte?: Maybe<Scalars['uuid']>;
  _in?: Maybe<Array<Scalars['uuid']>>;
  _is_null?: Maybe<Scalars['Boolean']>;
  _lt?: Maybe<Scalars['uuid']>;
  _lte?: Maybe<Scalars['uuid']>;
  _neq?: Maybe<Scalars['uuid']>;
  _nin?: Maybe<Array<Scalars['uuid']>>;
};

export type GetFeatureFlagsQueryVariables = Exact<{ [key: string]: never; }>;


export type GetFeatureFlagsQuery = (
  { __typename?: 'query_root' }
  & { feature_flags: Array<(
    { __typename?: 'feature_flags' }
    & Pick<Feature_Flags, 'id' | 'page_slug' | 'status' | 'fallback_slug'>
  )> }
);

export type NewFeatureFlagMutationVariables = Exact<{
  fallback_slug?: Maybe<Scalars['String']>;
  page_slug?: Maybe<Scalars['String']>;
}>;


export type NewFeatureFlagMutation = (
  { __typename?: 'mutation_root' }
  & { insert_feature_flags_one?: Maybe<(
    { __typename?: 'feature_flags' }
    & Pick<Feature_Flags, 'status' | 'page_slug' | 'id' | 'fallback_slug'>
  )> }
);

export type UpdateFeatureStatusMutationVariables = Exact<{
  id?: Maybe<Scalars['uuid']>;
  status?: Maybe<Scalars['Boolean']>;
}>;


export type UpdateFeatureStatusMutation = (
  { __typename?: 'mutation_root' }
  & { update_feature_flags_by_pk?: Maybe<(
    { __typename?: 'feature_flags' }
    & Pick<Feature_Flags, 'id' | 'status'>
  )> }
);

export type DisabledFeaturesQueryVariables = Exact<{ [key: string]: never; }>;


export type DisabledFeaturesQuery = (
  { __typename?: 'query_root' }
  & { feature_flags: Array<(
    { __typename?: 'feature_flags' }
    & Pick<Feature_Flags, 'page_slug' | 'fallback_slug'>
  )> }
);


export const GetFeatureFlagsDocument = gql`
    query getFeatureFlags {
  feature_flags {
    id
    page_slug
    status
    fallback_slug
  }
}
    `;

/**
 * __useGetFeatureFlagsQuery__
 *
 * To run a query within a React component, call `useGetFeatureFlagsQuery` and pass it any options that fit your needs.
 * When your component renders, `useGetFeatureFlagsQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useGetFeatureFlagsQuery({
 *   variables: {
 *   },
 * });
 */
export function useGetFeatureFlagsQuery(baseOptions?: Apollo.QueryHookOptions<GetFeatureFlagsQuery, GetFeatureFlagsQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<GetFeatureFlagsQuery, GetFeatureFlagsQueryVariables>(GetFeatureFlagsDocument, options);
      }
export function useGetFeatureFlagsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<GetFeatureFlagsQuery, GetFeatureFlagsQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<GetFeatureFlagsQuery, GetFeatureFlagsQueryVariables>(GetFeatureFlagsDocument, options);
        }
export type GetFeatureFlagsQueryHookResult = ReturnType<typeof useGetFeatureFlagsQuery>;
export type GetFeatureFlagsLazyQueryHookResult = ReturnType<typeof useGetFeatureFlagsLazyQuery>;
export type GetFeatureFlagsQueryResult = Apollo.QueryResult<GetFeatureFlagsQuery, GetFeatureFlagsQueryVariables>;
export const NewFeatureFlagDocument = gql`
    mutation newFeatureFlag($fallback_slug: String = "", $page_slug: String = "") {
  insert_feature_flags_one(
    object: {fallback_slug: $fallback_slug, page_slug: $page_slug, status: false}
  ) {
    status
    page_slug
    id
    fallback_slug
  }
}
    `;
export type NewFeatureFlagMutationFn = Apollo.MutationFunction<NewFeatureFlagMutation, NewFeatureFlagMutationVariables>;

/**
 * __useNewFeatureFlagMutation__
 *
 * To run a mutation, you first call `useNewFeatureFlagMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useNewFeatureFlagMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [newFeatureFlagMutation, { data, loading, error }] = useNewFeatureFlagMutation({
 *   variables: {
 *      fallback_slug: // value for 'fallback_slug'
 *      page_slug: // value for 'page_slug'
 *   },
 * });
 */
export function useNewFeatureFlagMutation(baseOptions?: Apollo.MutationHookOptions<NewFeatureFlagMutation, NewFeatureFlagMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<NewFeatureFlagMutation, NewFeatureFlagMutationVariables>(NewFeatureFlagDocument, options);
      }
export type NewFeatureFlagMutationHookResult = ReturnType<typeof useNewFeatureFlagMutation>;
export type NewFeatureFlagMutationResult = Apollo.MutationResult<NewFeatureFlagMutation>;
export type NewFeatureFlagMutationOptions = Apollo.BaseMutationOptions<NewFeatureFlagMutation, NewFeatureFlagMutationVariables>;
export const UpdateFeatureStatusDocument = gql`
    mutation UpdateFeatureStatus($id: uuid = "", $status: Boolean = false) {
  update_feature_flags_by_pk(pk_columns: {id: $id}, _set: {status: $status}) {
    id
    status
  }
}
    `;
export type UpdateFeatureStatusMutationFn = Apollo.MutationFunction<UpdateFeatureStatusMutation, UpdateFeatureStatusMutationVariables>;

/**
 * __useUpdateFeatureStatusMutation__
 *
 * To run a mutation, you first call `useUpdateFeatureStatusMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateFeatureStatusMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateFeatureStatusMutation, { data, loading, error }] = useUpdateFeatureStatusMutation({
 *   variables: {
 *      id: // value for 'id'
 *      status: // value for 'status'
 *   },
 * });
 */
export function useUpdateFeatureStatusMutation(baseOptions?: Apollo.MutationHookOptions<UpdateFeatureStatusMutation, UpdateFeatureStatusMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateFeatureStatusMutation, UpdateFeatureStatusMutationVariables>(UpdateFeatureStatusDocument, options);
      }
export type UpdateFeatureStatusMutationHookResult = ReturnType<typeof useUpdateFeatureStatusMutation>;
export type UpdateFeatureStatusMutationResult = Apollo.MutationResult<UpdateFeatureStatusMutation>;
export type UpdateFeatureStatusMutationOptions = Apollo.BaseMutationOptions<UpdateFeatureStatusMutation, UpdateFeatureStatusMutationVariables>;
export const DisabledFeaturesDocument = gql`
    query disabledFeatures {
  feature_flags(where: {status: {_eq: false}}) {
    page_slug
    fallback_slug
  }
}
    `;

/**
 * __useDisabledFeaturesQuery__
 *
 * To run a query within a React component, call `useDisabledFeaturesQuery` and pass it any options that fit your needs.
 * When your component renders, `useDisabledFeaturesQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useDisabledFeaturesQuery({
 *   variables: {
 *   },
 * });
 */
export function useDisabledFeaturesQuery(baseOptions?: Apollo.QueryHookOptions<DisabledFeaturesQuery, DisabledFeaturesQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<DisabledFeaturesQuery, DisabledFeaturesQueryVariables>(DisabledFeaturesDocument, options);
      }
export function useDisabledFeaturesLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<DisabledFeaturesQuery, DisabledFeaturesQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<DisabledFeaturesQuery, DisabledFeaturesQueryVariables>(DisabledFeaturesDocument, options);
        }
export type DisabledFeaturesQueryHookResult = ReturnType<typeof useDisabledFeaturesQuery>;
export type DisabledFeaturesLazyQueryHookResult = ReturnType<typeof useDisabledFeaturesLazyQuery>;
export type DisabledFeaturesQueryResult = Apollo.QueryResult<DisabledFeaturesQuery, DisabledFeaturesQueryVariables>;