query getActivityTypes {
  findManyActivityType(orderBy: { order: asc }) {
    id
    name
    action
    badge
    order
  }
}

query activityUserList($isDeleted: Int) {
  findManyUser(
    where: { deleted: { equals: $isDeleted } }
    orderBy: { full_name: asc }
  ) {
    id
    name: full_name
    avatarURL: image
  }
}

query findManyActivityData(
  $endDate: DateTime
  $startDate: DateTime
  $activityType: [String]
  $status: [activity_status]
  $userId: [Int]
  $search: String
  $skip: Int
  $limit: Int
  $activeColumns: [String]
  $orderValue: OrderType
  $filterOption: FilterOption
) {
  findManyActivityData(
    where: {
      endDate: $endDate
      startDate: $startDate
      activityType: $activityType
      status: $status
      userId: $userId
      search: $search
      activeColumns: $activeColumns
      orderValue: $orderValue
      filterOption: $filterOption
    }
    skip: $skip
    take: $limit
  ) {
    retrieveActivityCount {
      reopened
      pending
      working
      awaiting
      done
    }
    count
    activityData {
      id
      dueDate: due_start_date
      dueEndDate: due_end_date
      lead_id
      contact_id
      freeBusy: available
      addTime: created_at
      doneTime: finished_at
      duration
      assigned: AssignedUser {
        id
        full_name
        image
      }
      creator: User {
        id
        full_name
      }
      type: ActivityType {
        id
        name
        badge
      }
      subject
      note
      status
      client: CmContact {
        id: ID
        firstName: Fname
        lastName: Lname
        email: Email
        phone: Phone
        street: MailingStreet
        city: MailingCity
        postal: MailingPostal
        country: MailingCountry
        mobile: Mobile
        createdDate: CreatedDate
        source: MarketingSourceData {
          name
        }
        salutation: Salutation
        gender
        DOB
        status: is_active
        label: CmContactLabel {
          id
          CmLabel {
            id
            name
            color
          }
        }
        clientTotalActivities
      }
      lead: CmLead {
        firstName: Fname
        lastName: Lname
        email: Email
        phone: Phone
        location_id
        lastUpdated: LastUpdated
        Location {
          id
          name
        }
        Contact {
          User {
            full_name
            image
          }
        }
        PipelineStage {
          id
          name
          pipeline_id
          Pipeline {
            name
          }
        }
        leadActivitesToDo
        emailMessagesCount
        leadLastEmailSend
        leadLastEmailReceived
        leadNextActivityDate
        createdDate: CreatedDate
        wonTime
        owner: User {
          full_name
          image
        }
        leadStatus: EnumStatus
        leadSource: MarketingSource {
          id
          name
        }
        leadClosedOn: ConvertDate
        leadDoneActivities
        firstActivityTime
        leadLastActivityDate
        leadLastActivityDays
        leadTotalActivities
        leadLostId
        leadLostTime
        leadLostReason
        wonBy {
          full_name
          image
        }
        leadStage
      }
    }
  }
}

query findFirstActivityUserState {
  findFirstActivityUserState {
    id
    company_id
    user_id
    columns
    user_filter
    user_group_filter
    custom_filter
    ActivityUserFilter {
      name
      data
      columns
      shared
    }
  }
}

mutation upsertOneActivityUserState(
  $userId: Int!
  $companyId: Int!
  $update: ActivityUserStateUpdateInput!
  $create: ActivityUserStateCreateInput!
) {
  upsertOneActivityUserState(
    where: { company_id_user_id: { user_id: $userId, company_id: $companyId } }
    update: $update
    create: $create
  ) {
    id
  }
}

query userGroupForActivity {
  userGroup: findManyUserGroup {
    id
    group_name
    _count {
      UserGroupMember
    }
    UserGroupMember {
      User {
        id
        full_name
      }
    }
  }
}

query filterOptionForActivity($userId: Int!) {
  filterOption: findManyActivityUserFilter(
    where: {
      OR: [{ user_id: { equals: $userId } }, { shared: { equals: true } }]
    }
  ) {
    id
    user_id
    User {
      full_name
    }
    name
    data
    columns
    shared
    updated_at
  }
}

mutation deleteActivityUserFilter($id: Int) {
  deleteOneActivityUserFilter(where: { id: $id }) {
    id
  }
}

query findManyLeads($searchTerm: String) {
  findManyCmLead(
    where: {
      OR: [
        { Fname: { contains: $searchTerm } }
        { Lname: { contains: $searchTerm } }
      ]
    }
    take: 10
  ) {
    id: ID
    Fname
    Lname
  }
}

query findManyContacts($searchTerm: String) {
  findManyCmContact(
    where: {
      OR: [
        { Fname: { contains: $searchTerm } }
        { Lname: { contains: $searchTerm } }
      ]
    }
    take: 10
  ) {
    id: ID
    Fname
    Lname
  }
}

mutation createActivityFilter(
  $data: String
  $columns: String
  $name: String!
  $shared: Boolean!
) {
  createOneActivityUserFilter(
    data: {
      data: $data
      columns: $columns
      name: $name
      shared: $shared
      User: {}
      Company: {}
    }
  ) {
    id
    user_id
  }
}

mutation updateActivityFilter(
  $id: Int!
  $data: String
  $columns: String
  $name: String!
  $shared: Boolean!
) {
  updateOneActivityUserFilter(
    where: { id: $id }
    data: {
      data: { set: $data }
      columns: { set: $columns }
      name: { set: $name }
      shared: { set: $shared }
    }
  ) {
    id
    user_id
  }
}

query findContactName($contactID: Int!) {
  findFirstCmContact(where: { ID: { equals: $contactID } }) {
    id: ID
    Fname
    Lname
  }
}

query findLeadName($leadID: Int!) {
  findFirstCmLead(where: { ID: { equals: $leadID } }) {
    id: ID
    Fname
    Lname
  }
}

mutation deleteManyActivity($ids: [Int]!) {
  deleteManyActivity(ids: $ids) {
    affected_rows
  }
}

query retrievePipeline {
  findManyPipeline(where: {
    status: {equals: 1}
  },
  orderBy: {
    name: asc
  }) {
    id
    name
  }
}

query retrieveSalutationAndStage {
  findManyUserSalutation(orderBy: {
    name: asc
  }) {
    id
    name
  }
  findManyPipelineStage(orderBy: {
    stage_order: asc
  }) {
    id
    pipeline_id
    name
  }
}

query activityCount($status: activity_status!) {
  aggregateActivity(where: { status: { not: { equals: $status } } }) {
    _count {
      id
    }
  }
}

mutation markActivityDone($ids:[Int]!){
  markActivityDone(ids: $ids) {
    affected_rows
  }
}