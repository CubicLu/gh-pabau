query getFolderDocuments(
  $contactId: Int!
  $folderId: Int!
  $skip: Int = 0
  $take: Int = 25
) {
  findManyContactAttachment(
    where: {
      contact_id: { equals: $contactId }
      attachment_type: { equals: "document" }
      photo_type: { notIn: "consent,treatment" }
      album_id: { equals: $folderId }
    }
    orderBy: { date: desc }
    skip: $skip
    take: $take
  ) {
    id
    date
    url: linkref
    attachment_title
    attachment_size
  }
}

query getFolderAllDocuments($contactId: Int!, $folderId: Int!) {
  findManyContactAttachment(
    where: {
      contact_id: { equals: $contactId }
      attachment_type: { equals: "document" }
      photo_type: { notIn: "consent,treatment" }
      album_id: { equals: $folderId }
    }
    orderBy: { date: desc }
  ) {
    id
    origin: linkref
    date
    tags
  }
}

query countFolderDocuments($contactId: Int!, $folderId: Int!) {
  aggregateContactAttachment(
    where: {
      contact_id: { equals: $contactId }
      attachment_type: { equals: "document" }
      photo_type: { notIn: "consent,treatment" }
      album_id: { equals: $folderId }
    }
  ) {
    count {
      _all
    }
  }
}

query getFolder($folderId: Int!, $contactId: Int!) {
  findFirstPhotoAlbum(
    where: {
      id: { equals: $folderId }
      contact_id: { equals: $contactId }
      album_type: { equals: "documents" }
    }
  ) {
    id
    name: album_name
    contact_id
    documentCount: _count {
      documentList: Photos
    }
  }
}

query getFolders($contactId: Int!) {
  findManyPhotoAlbum(
    where: {
      contact_id: { equals: $contactId }
      album_type: { equals: "documents" }
    }
  ) {
    id
    name: album_name
    modified_date
    creation_date
    documentCount: _count {
      documentList: Photos
    }
  }
}

query getAttachmentById($id: Int!) {
  data: findFirstContactAttachment(where: { id: { equals: $id } }) {
    id
    name: attachment_title
    shared: connect_public
    created_date: date
    url: linkref
    contact_id
    Contact {
      Fname
      Lname
    }
    Practitioner {
      id
      full_name
    }
  }
}

mutation createOneDocumentFolder(
  $name: String!
  $company: Int!
  $contact: Int!
  $creationDate: DateTime!
  $modificationdate: DateTime!
) {
  createOnePhotoAlbum(
    data: {
      album_name: $name
      album_type: "documents"
      Company: { connect: { id: $company } }
      Contact: { connect: { ID: $contact } }
      creation_date: $creationDate
      modified_date: $modificationdate
    }
  ) {
    id
  }
}
