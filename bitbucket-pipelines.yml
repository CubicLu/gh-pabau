# Bitbucket Pipeline definition
image: node:14-buster

options:
  max-time: 45 # max time in minutes for each step

definitions:
  caches:
    nodemodules: node_modules/
    yarncustom: /usr/local/share/.cache/yarn
    cypress: '/root/.cache/Cypress'
  services:
    docker:
      memory: 3000

pipelines:
  pull-requests:
    '**':
      - step:
          name: PR pipeline
          size: 2x
          caches:
            - nodemodules
            - yarncustom
          script:
            - /bin/bash -c 'yarn audit --no-progress --non-interactive; [[ $? -lt 16 ]] && exit 0 || exit 1'

            # Get an oauth access token using the client credentials, parsing out the token with jq.
            - apt-get update && apt-get install -y curl jq
            - >
              export access_token=$(curl -s -X POST -u "${BITBUCKET_CLIENT_ID}:${BITBUCKET_CLIENT_SECRET}" \
                https://bitbucket.org/site/oauth2/access_token \
                -d grant_type=client_credentials -d scopes="pullrequest"| jq --raw-output '.access_token')

            # Configure git to use the oauth token.
            - >
              curl -sS -H "Authorization: Bearer ${access_token}" "https://api.bitbucket.org/2.0/repositories/${BITBUCKET_REPO_OWNER}/${BITBUCKET_REPO_SLUG}/pullrequests/${BITBUCKET_PR_ID}"
            - >
              export PR_AUTHOR=$(curl -sS -H "Authorization: Bearer ${access_token}" "https://api.bitbucket.org/2.0/repositories/${BITBUCKET_REPO_OWNER}/${BITBUCKET_REPO_SLUG}/pullrequests/${BITBUCKET_PR_ID}" | jq -r '.author.display_name')

            # get the commit message for this commit
            - export LAST_COMMIT_LOG=$(git log HEAD -1 | tail -n +4 | perl -p -e 's/[\r\n]//' | awk '{$1=$1;print}')
            - echo "${LAST_COMMIT_LOG}"

            - touch /tmp/bot_message.txt
            - yarn install --frozen-lockfile --prefer-offline

            # TODO: move these to eslint so that `yarn lint` picks up these errors instead
            - npm i -g typescript
            - tsc --noEmit -p apps/backend/
            # - tsc --noEmit -p apps/connect/
            - tsc --noEmit -p apps/connect-e2e/
            - tsc --noEmit -p apps/mgmt/
            - tsc --noEmit -p apps/mgmt-e2e/
            - tsc --noEmit -p apps/ui-e2e/
            - tsc --noEmit -p apps/web/
            - tsc --noEmit -p apps/web-e2e/
            - tsc --noEmit -p libs/ui/tsconfig.lib.json
            - tsc --noEmit -p libs/yup/tsconfig.lib.json

            - NODE_OPTIONS=--max_old_space_size=3072 yarn affected --base=origin/master --target=lint --with-deps --parallel --maxParallel=2
            - NODE_OPTIONS=--max_old_space_size=3072 yarn affected --base=origin/master --target=test --parallel --maxParallel=2
            - NODE_OPTIONS=--max_old_space_size=3072 yarn affected --base=origin/master --target=export
            - NODE_OPTIONS=--max_old_space_size=3072 yarn affected --base=origin/master --target=deploy
            - cat /tmp/bot_message.txt

            - npm i -g ts-node && ts-node tools/cicd/PrintChangedUrls.ts "origin/master" "$(cat /tmp/bot_url_web.txt || echo '')" "$(cat /tmp/bot_url_ui.txt || echo '')" >> /tmp/bot_message.txt
            - |
              printf ":shallow_pan_of_food: *<https://bitbucket.org/pabau/monorepo/pull-requests/${BITBUCKET_PR_ID}|PR ${BITBUCKET_PR_ID}> published by ${PR_AUTHOR}*\n\n${LAST_COMMIT_LOG}\n\n" > /tmp/bot_message2.txt
            - cat /tmp/bot_message.txt >> /tmp/bot_message2.txt
            - cat /tmp/bot_message2.txt

            # Post to Slack
            - |
              jq --arg var "$(cat /tmp/bot_message2.txt | head -c 2900)" '.blocks[0].text.text = $var' tools/cicd/slack_notification.json | curl -0 "${SLACK_HOOK_URL}" \
              -H "Expect:" \
              -H 'Content-Type: application/json; charset=utf-8' \
              --data-binary @-

  branches:
    master:
      - step:
          name: yarn audit
          max-time: 10
          script:
            - set || true
            - git log --merges -n 1 --pretty=oneline
            # TODO: set -lt back to 4 when nrwl install postcss >=8.2.10
            - /bin/bash -c 'yarn audit --no-progress --non-interactive; [[ $? -lt 16 ]] && exit 0 || exit 1'
            - yarn bin || true

      - step:
          name: misc checks
          max-time: 15
          caches:
            - node
          script:
            - yarn bin || true
            - CYPRESS_SKIP_BINARY_INSTALL=1 yarn install --frozen-lockfile --prefer-offline
            - yarn bin || true
            - yarn lint:tsc
            - yarn lint:ls || true
            - yarn lint:workspace || true
