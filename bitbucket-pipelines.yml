# Bitbucket Pipeline definition
image: node:14-buster

options:
  max-time: 45 # max time in minutes for each step

definitions:
  caches:
    nodemodules: node_modules/
    yarncustom: /usr/local/share/.cache/yarn
    cypress: '/root/.cache/Cypress'
  services:
    docker:
      memory: 3000

pipelines:
  pull-requests:
    '**':
      - step:
          name: yarn audit
          runs-on:
            - 'self.hosted'
          max-time: 10
          caches:
            - node
          script:
            - set || true
            - git log --merges -n 1 --pretty=oneline
            # TODO: set -lt back to 4 when nrwl install postcss >=8.2.10
            - /bin/bash -c 'yarn audit --no-progress --non-interactive; [[ $? -lt 8 ]] && exit 0 || exit 1'
            - NODE_OPTIONS=--max_old_space_size=3333 CYPRESS_CACHE_FOLDER=./dist/cypress CYPRESS_SKIP_BINARY_INSTALL=1 yarn install --ignore-scripts --frozen-lockfile --prefer-offline
            - ls -al || true
            - yarn bin || true
          artifacts:
            - node_modules/**

      - parallel:
          - step:
              name: misc checks
              runs-on:
                - 'self.hosted'
              max-time: 15
              script:
                - openssl version || true
                - ls -al || true
                - yarn bin || true
                - yarn bin || true
                - yarn lint:tsc --with-deps --base=origin/master
                - yarn lint:ls || true
                - yarn lint:workspace || true

          - step:
              name: lint
              runs-on:
                - 'self.hosted'
              max-time: 20
              script:
                - NODE_OPTIONS=--max_old_space_size=3333 yarn affected:lint --base=origin/master --with-deps

          - step:
              name: unit tests
              runs-on:
                - 'self.hosted'
              max-time: 25
              script:
                - NODE_OPTIONS=--max_old_space_size=3333 yarn affected:test --base=origin/master --skip-nx-cache
          #              - NODE_OPTIONS=--max_old_space_size=3333 yarn affected:test --base=HEAD~1 --parallel --maxParallel=1 --skip-nx-cache
          #              - NODE_OPTIONS=--max_old_space_size=2222 yarn affected:test --base=HEAD~1 --parallel --maxParallel=2 --skip-nx-cache
          #              - NODE_OPTIONS=--max_old_space_size=1555 yarn affected:test --base=HEAD~1 --parallel --maxParallel=3 --skip-nx-cache

          - step:
              name: build
              runs-on:
                - 'self.hosted'
              max-time: 30
              script:
                - yarn prisma generate
                - NODE_OPTIONS=--max_old_space_size=3333 yarn affected:export --base=origin/master --prod
              artifacts:
                - dist/**

      # - parallel:

      #   - step:
      #       size: 2x
      #       name: e2e
      #       caches:
      #         - cypress
      #       script:
      #         - apt update -y && apt install -y libgtk2.0-0 libgtk-3-0 libgbm-dev libnotify-dev libgconf-2-4 libnss3 libxss1 libasound2 libxtst6 xauth xvfb
      #         - yarn cypress install || true
      #         - yarn affected:e2e --base=HEAD~1 || true

      #   - step:
      #       size: 2x
      #       name: build
      #       script:
      #         - NODE_OPTIONS=--max_old_space_size=2750 yarn affected --base=HEAD~1 --target=build --prod
      #         - NODE_OPTIONS=--max_old_space_size=2750 yarn affected --base=HEAD~1 --target=build-storybook --prod
      #         - NODE_OPTIONS=--max_old_space_size=2750 yarn affected --base=HEAD~1 --target=export --prod
      #       artifacts:
      #         - node_modules/.cache/**
      #         - dist/**

      - step:
          name: deploy previews
          runs-on:
            - 'self.hosted'
          max-time: 20
          deployment: production-serverless
          script:
            - ls -al . || true
            - ls -al node_modules/ || true
            - ls -al dist || true
            - ls -al dist/apps || true
            - cat /tmp/bot_message.txt || true
            - apt-get update -y && apt-get install -y curl jq time

            # get the commit message for this merge
            - export LAST_COMMIT_LOG=$(git log HEAD -1 | tail -n +4 | perl -p -e 's/[\r\n]//' | awk '{$1=$1;print}')
            - echo "${LAST_COMMIT_LOG}"
            - if [ "${LAST_COMMIT_LOG}" == "[skip ci] bumping version (patch)" ]; then (echo yes && export LAST_COMMIT_LOG=$(git log HEAD~1 -1 | tail -n +4)); fi
            - echo "${LAST_COMMIT_LOG}"

            - NODE_OPTIONS=--max_old_space_size=2750 /usr/bin/time -v yarn affected --base=origin/master --head=HEAD --target=deploy --prod

            # Configure git to use the oauth token.
            - |
              curl -sS -H "Authorization: Bearer ${access_token}" "https://api.bitbucket.org/2.0/repositories/${BITBUCKET_REPO_OWNER}/${BITBUCKET_REPO_SLUG}/pullrequests/${BITBUCKET_PR_ID}"
              export PR_AUTHOR=$(curl -sS -H "Authorization: Bearer ${access_token}" "https://api.bitbucket.org/2.0/repositories/${BITBUCKET_REPO_OWNER}/${BITBUCKET_REPO_SLUG}/pullrequests/${BITBUCKET_PR_ID}" | jq -r '.author.display_name')
              export COMMIT_AUTHOR=$(git log -1 --pretty=format:'%an')

            - |
              printf ":shallow_pan_of_food::shallow_pan_of_food: *New PR Preview*\n## <https://bitbucket.org/pabau/monorepo/pull-requests/${BITBUCKET_PR_ID}|PR ${BITBUCKET_PR_ID}> published by ${COMMIT_AUTHOR}\n${LAST_COMMIT_LOG}\n\n" > /tmp/bot_message2.txt
              npm i -g ts-node && ts-node tools/cicd/PrintChangedUrls.ts "origin/master" "$(cat /tmp/bot_url_web.txt || echo '')" "$(cat /tmp/bot_url_ui.txt || echo '')" >> /tmp/bot_message2.txt
              cat /tmp/bot_message.txt >> /tmp/bot_message2.txt || true
              printf "\n" >> /tmp/bot_message2.txt

            - cat /tmp/bot_message2.txt
            - mkdir -p dist && cp -f /tmp/bot_message2.txt dist/ || true

          artifacts:
            - dist/bot_message2.txt

      - step:
          name: announce to slack
          runs-on:
            - 'self.hosted'
          max-time: 5
          script:
            - cat dist/bot_message2.txt || true
            - cat dist/bot_message.txt || true
            - apt-get update -y && apt-get install -y curl jq time

            # Post to Slack
            - |
              jq --arg var "$(cat dist/bot_message2.txt | head -c 2900)$(cat dist/bot_message.txt | head -c 2900)" '.blocks[0].text.text = $var' tools/cicd/slack_notification.json | curl -0 "${SLACK_HOOK_URL}" \
              -H "Expect:" \
              -H 'Content-Type: application/json; charset=utf-8' \
              --data-binary @-

  branches:
    master:
      - step:
          name: yarn audit
          runs-on:
            - 'self.hosted'
          max-time: 10
          caches:
            - node
          script:
            - set || true
            - git log --merges -n 1 --pretty=oneline
            # TODO: set -lt back to 4 when nrwl install postcss >=8.2.10
            - /bin/bash -c 'yarn audit --no-progress --non-interactive; [[ $? -lt 8 ]] && exit 0 || exit 1'
            - NODE_OPTIONS=--max_old_space_size=3333 CYPRESS_CACHE_FOLDER=./dist/cypress CYPRESS_SKIP_BINARY_INSTALL=1 yarn install --ignore-scripts --frozen-lockfile --prefer-offline
            - ls -al || true
            - yarn bin || true
          artifacts:
            - node_modules/**

      - parallel:
          - step:
              name: misc checks
              runs-on:
                - 'self.hosted'
              max-time: 15
              script:
                - openssl version || true
                - ls -al || true
                - yarn bin || true
                - yarn bin || true
                - yarn lint:tsc --with-deps --base=HEAD~1
                - yarn lint:ls || true
                - yarn lint:workspace || true

          - step:
              name: lint
              runs-on:
                - 'self.hosted'
              max-time: 20
              script:
                - NODE_OPTIONS=--max_old_space_size=3333 yarn affected:lint --base=HEAD~1 --with-deps

          - step:
              name: unit tests
              runs-on:
                - 'self.hosted'
              max-time: 25
              script:
                - NODE_OPTIONS=--max_old_space_size=3333 yarn affected:test --base=HEAD~1 --skip-nx-cache
          #              - NODE_OPTIONS=--max_old_space_size=3333 yarn affected:test --base=HEAD~1 --parallel --maxParallel=1 --skip-nx-cache
          #              - NODE_OPTIONS=--max_old_space_size=2222 yarn affected:test --base=HEAD~1 --parallel --maxParallel=2 --skip-nx-cache
          #              - NODE_OPTIONS=--max_old_space_size=1555 yarn affected:test --base=HEAD~1 --parallel --maxParallel=3 --skip-nx-cache

          - step:
              name: build
              runs-on:
                - 'self.hosted'
              max-time: 30
              script:
                - yarn prisma generate
                - NODE_OPTIONS=--max_old_space_size=3333 yarn affected:export --base=HEAD~1 --prod
              artifacts:
                - dist/**

      # - parallel:

      #   - step:
      #       size: 2x
      #       name: e2e
      #       caches:
      #         - cypress
      #       script:
      #         - apt update -y && apt install -y libgtk2.0-0 libgtk-3-0 libgbm-dev libnotify-dev libgconf-2-4 libnss3 libxss1 libasound2 libxtst6 xauth xvfb
      #         - yarn cypress install || true
      #         - yarn affected:e2e --base=HEAD~1 || true

      #   - step:
      #       size: 2x
      #       name: build
      #       script:
      #         - NODE_OPTIONS=--max_old_space_size=2750 yarn affected --base=HEAD~1 --target=build --prod
      #         - NODE_OPTIONS=--max_old_space_size=2750 yarn affected --base=HEAD~1 --target=build-storybook --prod
      #         - NODE_OPTIONS=--max_old_space_size=2750 yarn affected --base=HEAD~1 --target=export --prod
      #       artifacts:
      #         - node_modules/.cache/**
      #         - dist/**

      - parallel:
          - step:
              name: deploy dockers
              runs-on:
                - 'self.hosted'
              max-time: 20
              deployment: production-dockers
              services:
                - docker
              script:
                - apt-get update -y && apt-get install -y curl jq time
                - yarn affected --base=HEAD~1 --target=deploy-docker --prod
                - mkdir -p dist && cp -f /tmp/bot_message.txt dist/ || true
              artifacts:
                - dist/bot_message.txt

          - step:
              name: deploy previews
              runs-on:
                - 'self.hosted'
              max-time: 20
              deployment: production-serverless
              script:
                - ls -al . || true
                - ls -al node_modules/ || true
                - ls -al dist || true
                - ls -al dist/apps || true
                - cat /tmp/bot_message.txt || true
                - apt-get update -y && apt-get install -y curl jq time

                # get the commit message for this merge
                - export LAST_COMMIT_LOG=$(git log HEAD -1 | tail -n +4 | perl -p -e 's/[\r\n]//' | awk '{$1=$1;print}')
                - echo "${LAST_COMMIT_LOG}"
                - if [ "${LAST_COMMIT_LOG}" == "[skip ci] bumping version (patch)" ]; then (echo yes && export LAST_COMMIT_LOG=$(git log HEAD~1 -1 | tail -n +4)); fi
                - echo "${LAST_COMMIT_LOG}"

                # Get an oauth access token using the client credentials, parsing out the token with jq.
                - git remote set-url origin "${BITBUCKET_GIT_SSH_ORIGIN}"

                # bump the package.json version by 0.0.1
                - yarn version --message "[skip ci] bumping version (patch)" --patch --non-interactive --no-progress
                - HUSKY=0 git push && HUSKY=0 git push --tags
                - export PACKAGE_JSON_VERSION=$(jq -r .version < package.json)

                - NODE_OPTIONS=--max_old_space_size=2750 /usr/bin/time -v yarn affected --base=HEAD~2 --head=HEAD~1 --target=deploy --prod
                - export COMMIT_AUTHOR=$(git log -1 --pretty=format:'%an')

                - |
                  printf "*New Version Staged for Production*\n# v${PACKAGE_JSON_VERSION} created by ${COMMIT_AUTHOR}\n${LAST_COMMIT_LOG}\n\n" > /tmp/bot_message2.txt
                  npm i -g ts-node && ts-node tools/cicd/PrintChangedUrls.ts "HEAD~2" "$(cat /tmp/bot_url_web.txt || echo '')" "$(cat /tmp/bot_url_ui.txt || echo '')" >> /tmp/bot_message2.txt
                  cat /tmp/bot_message.txt >> /tmp/bot_message2.txt || true
                  printf "\n" >> /tmp/bot_message2.txt

                - cat /tmp/bot_message2.txt
                - mkdir -p dist && cp -f /tmp/bot_message2.txt dist/ || true

              artifacts:
                - dist/bot_message2.txt

      - step:
          name: announce to slack
          runs-on:
            - 'self.hosted'
          max-time: 5
          script:
            - cat dist/bot_message2.txt || true
            - cat dist/bot_message.txt || true
            - apt-get update -y && apt-get install -y curl jq time

            # Post to Slack
            - |
              jq --arg var "$(cat dist/bot_message2.txt | head -c 2900)$(cat dist/bot_message.txt | head -c 2900)" '.blocks[0].text.text = $var' tools/cicd/slack_notification.json | curl -0 "${SLACK_HOOK_URL}" \
              -H "Expect:" \
              -H 'Content-Type: application/json; charset=utf-8' \
              --data-binary @-
